{
  "version": 3,
  "sources": ["../node_modules/events/events.js", "../node_modules/source-map-js/lib/base64.js", "../node_modules/source-map-js/lib/base64-vlq.js", "../node_modules/source-map-js/lib/util.js", "../node_modules/source-map-js/lib/array-set.js", "../node_modules/source-map-js/lib/mapping-list.js", "../node_modules/source-map-js/lib/source-map-generator.js", "../node_modules/esotope-hammerhead/esotope.js", "../node_modules/set-cookie-parser/lib/set-cookie.js", "../node_modules/mime-db/db.json", "../node_modules/mime-db/index.js", "../src/rewrite/html.js", "../node_modules/parse5/dist/common/unicode.js", "../node_modules/parse5/dist/common/error-codes.js", "../node_modules/parse5/dist/tokenizer/preprocessor.js", "../node_modules/parse5/dist/common/token.js", "../node_modules/entities/lib/esm/generated/generated/decode-data-html.ts", "../node_modules/entities/lib/esm/generated/generated/decode-data-xml.ts", "../node_modules/entities/lib/esm/decode_codepoint.ts", "../node_modules/entities/lib/esm/decode.ts", "../node_modules/parse5/dist/common/html.js", "../node_modules/parse5/dist/tokenizer/index.js", "../node_modules/parse5/dist/parser/open-element-stack.js", "../node_modules/parse5/dist/parser/formatting-element-list.js", "../node_modules/parse5/dist/tree-adapters/default.js", "../node_modules/parse5/dist/common/doctype.js", "../node_modules/parse5/dist/common/foreign-content.js", "../node_modules/parse5/dist/parser/index.js", "../node_modules/entities/lib/esm/escape.ts", "../node_modules/parse5/dist/serializer/index.js", "../node_modules/parse5/dist/index.js", "../node_modules/css-tree/lib/tokenizer/types.js", "../node_modules/css-tree/lib/tokenizer/char-code-definitions.js", "../node_modules/css-tree/lib/tokenizer/utils.js", "../node_modules/css-tree/lib/tokenizer/names.js", "../node_modules/css-tree/lib/tokenizer/adopt-buffer.js", "../node_modules/css-tree/lib/tokenizer/OffsetToLocation.js", "../node_modules/css-tree/lib/tokenizer/TokenStream.js", "../node_modules/css-tree/lib/tokenizer/index.js", "../node_modules/css-tree/lib/utils/List.js", "../node_modules/css-tree/lib/utils/create-custom-error.js", "../node_modules/css-tree/lib/parser/SyntaxError.js", "../node_modules/css-tree/lib/parser/sequence.js", "../node_modules/css-tree/lib/parser/create.js", "../node_modules/css-tree/lib/generator/sourceMap.js", "../node_modules/css-tree/lib/generator/token-before.js", "../node_modules/css-tree/lib/generator/create.js", "../node_modules/css-tree/lib/convertor/create.js", "../node_modules/css-tree/lib/walker/create.js", "../node_modules/css-tree/lib/definition-syntax/generate.js", "../node_modules/css-tree/lib/lexer/error.js", "../node_modules/css-tree/lib/utils/names.js", "../node_modules/css-tree/lib/lexer/generic-const.js", "../node_modules/css-tree/lib/lexer/generic-an-plus-b.js", "../node_modules/css-tree/lib/lexer/generic-urange.js", "../node_modules/css-tree/lib/lexer/generic.js", "../node_modules/css-tree/lib/lexer/units.js", "../node_modules/css-tree/lib/definition-syntax/SyntaxError.js", "../node_modules/css-tree/lib/definition-syntax/tokenizer.js", "../node_modules/css-tree/lib/definition-syntax/parse.js", "../node_modules/css-tree/lib/definition-syntax/walk.js", "../node_modules/css-tree/lib/lexer/prepare-tokens.js", "../node_modules/css-tree/lib/lexer/match-graph.js", "../node_modules/css-tree/lib/lexer/match.js", "../node_modules/css-tree/lib/lexer/trace.js", "../node_modules/css-tree/lib/lexer/search.js", "../node_modules/css-tree/lib/lexer/structure.js", "../node_modules/css-tree/lib/lexer/Lexer.js", "../node_modules/css-tree/lib/syntax/config/mix.js", "../node_modules/css-tree/lib/syntax/create.js", "../node_modules/css-tree/dist/data.js", "../node_modules/css-tree/lib/syntax/node/index.js", "../node_modules/css-tree/lib/syntax/node/AnPlusB.js", "../node_modules/css-tree/lib/syntax/node/Atrule.js", "../node_modules/css-tree/lib/syntax/node/AtrulePrelude.js", "../node_modules/css-tree/lib/syntax/node/AttributeSelector.js", "../node_modules/css-tree/lib/syntax/node/Block.js", "../node_modules/css-tree/lib/syntax/node/Brackets.js", "../node_modules/css-tree/lib/syntax/node/CDC.js", "../node_modules/css-tree/lib/syntax/node/CDO.js", "../node_modules/css-tree/lib/syntax/node/ClassSelector.js", "../node_modules/css-tree/lib/syntax/node/Combinator.js", "../node_modules/css-tree/lib/syntax/node/Comment.js", "../node_modules/css-tree/lib/syntax/node/Declaration.js", "../node_modules/css-tree/lib/syntax/node/DeclarationList.js", "../node_modules/css-tree/lib/syntax/node/Dimension.js", "../node_modules/css-tree/lib/syntax/node/Function.js", "../node_modules/css-tree/lib/syntax/node/Hash.js", "../node_modules/css-tree/lib/syntax/node/Identifier.js", "../node_modules/css-tree/lib/syntax/node/IdSelector.js", "../node_modules/css-tree/lib/syntax/node/MediaFeature.js", "../node_modules/css-tree/lib/syntax/node/MediaQuery.js", "../node_modules/css-tree/lib/syntax/node/MediaQueryList.js", "../node_modules/css-tree/lib/syntax/node/NestingSelector.js", "../node_modules/css-tree/lib/syntax/node/Nth.js", "../node_modules/css-tree/lib/syntax/node/Number.js", "../node_modules/css-tree/lib/syntax/node/Operator.js", "../node_modules/css-tree/lib/syntax/node/Parentheses.js", "../node_modules/css-tree/lib/syntax/node/Percentage.js", "../node_modules/css-tree/lib/syntax/node/PseudoClassSelector.js", "../node_modules/css-tree/lib/syntax/node/PseudoElementSelector.js", "../node_modules/css-tree/lib/syntax/node/Ratio.js", "../node_modules/css-tree/lib/syntax/node/Raw.js", "../node_modules/css-tree/lib/syntax/node/Rule.js", "../node_modules/css-tree/lib/syntax/node/Selector.js", "../node_modules/css-tree/lib/syntax/node/SelectorList.js", "../node_modules/css-tree/lib/syntax/node/String.js", "../node_modules/css-tree/lib/utils/string.js", "../node_modules/css-tree/lib/syntax/node/StyleSheet.js", "../node_modules/css-tree/lib/syntax/node/TypeSelector.js", "../node_modules/css-tree/lib/syntax/node/UnicodeRange.js", "../node_modules/css-tree/lib/syntax/node/Url.js", "../node_modules/css-tree/lib/utils/url.js", "../node_modules/css-tree/lib/syntax/node/Value.js", "../node_modules/css-tree/lib/syntax/node/WhiteSpace.js", "../node_modules/css-tree/lib/syntax/config/lexer.js", "../node_modules/css-tree/lib/syntax/scope/index.js", "../node_modules/css-tree/lib/syntax/scope/default.js", "../node_modules/css-tree/lib/syntax/scope/atrulePrelude.js", "../node_modules/css-tree/lib/syntax/scope/selector.js", "../node_modules/css-tree/lib/syntax/function/expression.js", "../node_modules/css-tree/lib/syntax/function/var.js", "../node_modules/css-tree/lib/syntax/scope/value.js", "../node_modules/css-tree/lib/syntax/atrule/font-face.js", "../node_modules/css-tree/lib/syntax/atrule/import.js", "../node_modules/css-tree/lib/syntax/atrule/media.js", "../node_modules/css-tree/lib/syntax/atrule/nest.js", "../node_modules/css-tree/lib/syntax/atrule/page.js", "../node_modules/css-tree/lib/syntax/atrule/supports.js", "../node_modules/css-tree/lib/syntax/atrule/index.js", "../node_modules/css-tree/lib/syntax/pseudo/index.js", "../node_modules/css-tree/lib/syntax/node/index-parse.js", "../node_modules/css-tree/lib/syntax/config/parser.js", "../node_modules/css-tree/lib/syntax/config/walker.js", "../node_modules/css-tree/lib/syntax/index.js", "../node_modules/css-tree/lib/index.js", "../src/rewrite/css.js", "../node_modules/meriyah/dist/meriyah.esm.mjs", "../src/rewrite/js.js", "../src/rewrite/index.js", "../src/rewrite/codecs.js", "../src/rewrite/mime.js", "../src/rewrite/cookie.js", "../src/rewrite/rewrite.html.js", "../src/rewrite/rewrite.css.js", "../src/rewrite/rewrite.script.js", "../node_modules/idb/build/wrap-idb-value.js", "../node_modules/idb/build/index.js", "../node_modules/@tomphttp/bare-client/src/snapshot.ts", "../node_modules/@tomphttp/bare-client/src/BareTypes.ts", "../node_modules/@tomphttp/bare-client/src/Client.ts", "../node_modules/@tomphttp/bare-client/src/md5.ts", "../node_modules/@tomphttp/bare-client/src/splitHeaderUtil.ts", "../node_modules/@tomphttp/bare-client/src/V3.ts", "../node_modules/@tomphttp/bare-client/src/webSocket.ts", "../node_modules/@tomphttp/bare-client/src/BareClient.ts", "../node_modules/@tomphttp/bare-client/src/index.ts"],
  "sourcesContent": ["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\nvar MAX_CACHED_INPUTS = 32;\n\n/**\n * Takes some function `f(input) -> result` and returns a memoized version of\n * `f`.\n *\n * We keep at most `MAX_CACHED_INPUTS` memoized results of `f` alive. The\n * memoization is a dumb-simple, linear least-recently-used cache.\n */\nfunction lruMemoize(f) {\n  var cache = [];\n\n  return function(input) {\n    for (var i = 0; i < cache.length; i++) {\n      if (cache[i].input === input) {\n        var temp = cache[0];\n        cache[0] = cache[i];\n        cache[i] = temp;\n        return cache[0].result;\n      }\n    }\n\n    var result = f(input);\n\n    cache.unshift({\n      input,\n      result,\n    });\n\n    if (cache.length > MAX_CACHED_INPUTS) {\n      cache.pop();\n    }\n\n    return result;\n  };\n}\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nvar normalize = lruMemoize(function normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n  // Split the path into parts between `/` characters. This is much faster than\n  // using `.split(/\\/+/g)`.\n  var parts = [];\n  var start = 0;\n  var i = 0;\n  while (true) {\n    start = i;\n    i = path.indexOf(\"/\", start);\n    if (i === -1) {\n      parts.push(path.slice(start));\n      break;\n    } else {\n      parts.push(path.slice(start, i));\n      while (i < path.length && path[i] === \"/\") {\n        i++;\n      }\n    }\n  }\n\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n});\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\nfunction compareByOriginalPositionsNoSource(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositionsNoSource = compareByOriginalPositionsNoSource;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction compareByGeneratedPositionsDeflatedNoLine(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflatedNoLine = compareByGeneratedPositionsDeflatedNoLine;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   \u201Csources\u201D entry.  This value is prepended to the individual\n    //   entries in the \u201Csource\u201D field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   \u201CsourceRoot\u201D, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n", "// -------------------------------------------------------------\r\n// WARNING: this file is used by both the client and the server.\r\n// Do not use any browser or node-specific API!\r\n// -------------------------------------------------------------\r\n\r\n/*\r\n Copyright (C) 2014 Ivan Nikulin <ifaaan@gmail.com>\r\n Copyright (C) 2012-2014 Yusuke Suzuki <utatane.tea@gmail.com>\r\n Copyright (C) 2012-2013 Michael Ficarra <escodegen.copyright@michael.ficarra.me>\r\n Copyright (C) 2012-2013 Mathias Bynens <mathias@qiwi.be>\r\n Copyright (C) 2013 Irakli Gozalishvili <rfobic@gmail.com>\r\n Copyright (C) 2012 Robert Gust-Bardon <donate@robert.gust-bardon.org>\r\n Copyright (C) 2012 John Freeman <jfreeman08@gmail.com>\r\n Copyright (C) 2011-2012 Ariya Hidayat <ariya.hidayat@gmail.com>\r\n Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\r\n Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\r\n Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\r\n\r\n Redistribution and use in source and binary forms, with or without\r\n modification, are permitted provided that the following conditions are met:\r\n\r\n * Redistributions of source code must retain the above copyright\r\n notice, this list of conditions and the following disclaimer.\r\n * Redistributions in binary form must reproduce the above copyright\r\n notice, this list of conditions and the following disclaimer in the\r\n documentation and/or other materials provided with the distribution.\r\n\r\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\r\n DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n'use strict';\r\n\r\nvar isArray,\r\n    json,\r\n    renumber,\r\n    hexadecimal,\r\n    quotes,\r\n    escapeless,\r\n    parentheses,\r\n    semicolons,\r\n    safeConcatenation,\r\n    directive,\r\n    extra,\r\n    parse;\r\n\r\nvar Syntax = {\r\n    AssignmentExpression:     'AssignmentExpression',\r\n    AssignmentPattern:        'AssignmentPattern',\r\n    ArrayExpression:          'ArrayExpression',\r\n    ArrayPattern:             'ArrayPattern',\r\n    ArrowFunctionExpression:  'ArrowFunctionExpression',\r\n    AwaitExpression:          'AwaitExpression',\r\n    BlockStatement:           'BlockStatement',\r\n    BinaryExpression:         'BinaryExpression',\r\n    BreakStatement:           'BreakStatement',\r\n    CallExpression:           'CallExpression',\r\n    CatchClause:              'CatchClause',\r\n    ClassBody:                'ClassBody',\r\n    ClassDeclaration:         'ClassDeclaration',\r\n    ClassExpression:          'ClassExpression',\r\n    ComprehensionBlock:       'ComprehensionBlock',\r\n    ComprehensionExpression:  'ComprehensionExpression',\r\n    ConditionalExpression:    'ConditionalExpression',\r\n    ContinueStatement:        'ContinueStatement',\r\n    DirectiveStatement:       'DirectiveStatement',\r\n    DoWhileStatement:         'DoWhileStatement',\r\n    DebuggerStatement:        'DebuggerStatement',\r\n    EmptyStatement:           'EmptyStatement',\r\n    ExportAllDeclaration:     'ExportAllDeclaration',\r\n    ExportBatchSpecifier:     'ExportBatchSpecifier',\r\n    ExportDeclaration:        'ExportDeclaration',\r\n    ExportNamedDeclaration:   'ExportNamedDeclaration',\r\n    ExportSpecifier:          'ExportSpecifier',\r\n    ExpressionStatement:      'ExpressionStatement',\r\n    ForStatement:             'ForStatement',\r\n    ForInStatement:           'ForInStatement',\r\n    ForOfStatement:           'ForOfStatement',\r\n    FunctionDeclaration:      'FunctionDeclaration',\r\n    FunctionExpression:       'FunctionExpression',\r\n    GeneratorExpression:      'GeneratorExpression',\r\n    Identifier:               'Identifier',\r\n    IfStatement:              'IfStatement',\r\n    ImportExpression:         'ImportExpression',\r\n    ImportSpecifier:          'ImportSpecifier',\r\n    ImportDeclaration:        'ImportDeclaration',\r\n    ChainExpression:          'ChainExpression',\r\n    Literal:                  'Literal',\r\n    LabeledStatement:         'LabeledStatement',\r\n    LogicalExpression:        'LogicalExpression',\r\n    MemberExpression:         'MemberExpression',\r\n    MetaProperty:             'MetaProperty',\r\n    MethodDefinition:         'MethodDefinition',\r\n    ModuleDeclaration:        'ModuleDeclaration',\r\n    NewExpression:            'NewExpression',\r\n    ObjectExpression:         'ObjectExpression',\r\n    ObjectPattern:            'ObjectPattern',\r\n    PrivateIdentifier:        'PrivateIdentifier',\r\n    Program:                  'Program',\r\n    Property:                 'Property',\r\n    PropertyDefinition:       'PropertyDefinition',\r\n    RestElement:              'RestElement',\r\n    ReturnStatement:          'ReturnStatement',\r\n    SequenceExpression:       'SequenceExpression',\r\n    SpreadElement:            'SpreadElement',\r\n    Super:                    'Super',\r\n    SwitchStatement:          'SwitchStatement',\r\n    SwitchCase:               'SwitchCase',\r\n    TaggedTemplateExpression: 'TaggedTemplateExpression',\r\n    TemplateElement:          'TemplateElement',\r\n    TemplateLiteral:          'TemplateLiteral',\r\n    ThisExpression:           'ThisExpression',\r\n    ThrowStatement:           'ThrowStatement',\r\n    TryStatement:             'TryStatement',\r\n    UnaryExpression:          'UnaryExpression',\r\n    UpdateExpression:         'UpdateExpression',\r\n    VariableDeclaration:      'VariableDeclaration',\r\n    VariableDeclarator:       'VariableDeclarator',\r\n    WhileStatement:           'WhileStatement',\r\n    WithStatement:            'WithStatement',\r\n    YieldExpression:          'YieldExpression'\r\n};\r\n\r\nexports.Syntax = Syntax;\r\n\r\nvar Precedence = {\r\n    Sequence:         0,\r\n    Yield:            1,\r\n    Assignment:       1,\r\n    Conditional:      2,\r\n    ArrowFunction:    2,\r\n    Coalesce:         3,\r\n    LogicalOR:        3,\r\n    LogicalAND:       4,\r\n    BitwiseOR:        5,\r\n    BitwiseXOR:       6,\r\n    BitwiseAND:       7,\r\n    Equality:         8,\r\n    Relational:       9,\r\n    BitwiseSHIFT:     10,\r\n    Additive:         11,\r\n    Multiplicative:   12,\r\n    Unary:            13,\r\n    Exponentiation:   14,\r\n    Postfix:          14,\r\n    Await:            14,\r\n    Call:             15,\r\n    New:              16,\r\n    TaggedTemplate:   17,\r\n    OptionalChaining: 17,\r\n    Member:           18,\r\n    Primary:          19\r\n};\r\n\r\nvar BinaryPrecedence = {\r\n    '||':         Precedence.LogicalOR,\r\n    '&&':         Precedence.LogicalAND,\r\n    '|':          Precedence.BitwiseOR,\r\n    '^':          Precedence.BitwiseXOR,\r\n    '&':          Precedence.BitwiseAND,\r\n    '==':         Precedence.Equality,\r\n    '!=':         Precedence.Equality,\r\n    '===':        Precedence.Equality,\r\n    '!==':        Precedence.Equality,\r\n    'is':         Precedence.Equality,\r\n    'isnt':       Precedence.Equality,\r\n    '<':          Precedence.Relational,\r\n    '>':          Precedence.Relational,\r\n    '<=':         Precedence.Relational,\r\n    '>=':         Precedence.Relational,\r\n    'in':         Precedence.Relational,\r\n    'instanceof': Precedence.Relational,\r\n    '<<':         Precedence.BitwiseSHIFT,\r\n    '>>':         Precedence.BitwiseSHIFT,\r\n    '>>>':        Precedence.BitwiseSHIFT,\r\n    '+':          Precedence.Additive,\r\n    '-':          Precedence.Additive,\r\n    '*':          Precedence.Multiplicative,\r\n    '%':          Precedence.Multiplicative,\r\n    '/':          Precedence.Multiplicative,\r\n    '??':         Precedence.Coalesce,\r\n    '**':         Precedence.Exponentiation\r\n};\r\n\r\nfunction getDefaultOptions () {\r\n    // default options\r\n    return {\r\n        indent:    null,\r\n        base:      null,\r\n        parse:     null,\r\n        format:    {\r\n            indent:            {\r\n                style: '    ',\r\n                base:  0\r\n            },\r\n            newline:           '\\n',\r\n            space:             ' ',\r\n            json:              false,\r\n            renumber:          false,\r\n            hexadecimal:       false,\r\n            quotes:            'single',\r\n            escapeless:        false,\r\n            compact:           false,\r\n            parentheses:       true,\r\n            semicolons:        true,\r\n            safeConcatenation: false\r\n        },\r\n        directive: false,\r\n        raw:       true,\r\n        verbatim:  null\r\n    };\r\n}\r\n\r\n//-------------------------------------------------===------------------------------------------------------\r\n//                                            Lexical utils\r\n//-------------------------------------------------===------------------------------------------------------\r\n\r\n//Const\r\nvar NON_ASCII_WHITESPACES = [\r\n    0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005,\r\n    0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000,\r\n    0xFEFF\r\n];\r\n\r\n//Regular expressions\r\nvar NON_ASCII_IDENTIFIER_CHARACTERS_REGEXP = new RegExp(\r\n    '[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376' +\r\n    '\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-' +\r\n    '\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA' +\r\n    '\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-' +\r\n    '\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0\\u08A2-\\u08AC\\u08E4-\\u08FE\\u0900-' +\r\n    '\\u0963\\u0966-\\u096F\\u0971-\\u0977\\u0979-\\u097F\\u0981-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-' +\r\n    '\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-' +\r\n    '\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38' +\r\n    '\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83' +\r\n    '\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9' +\r\n    '\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-' +\r\n    '\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-' +\r\n    '\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E' +\r\n    '\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-' +\r\n    '\\u0BEF\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D-\\u0C44\\u0C46-' +\r\n    '\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C82\\u0C83\\u0C85-\\u0C8C\\u0C8E-' +\r\n    '\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE' +\r\n    '\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D02\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44' +\r\n    '\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-' +\r\n    '\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E01-\\u0E3A' +\r\n    '\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-' +\r\n    '\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9' +\r\n    '\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84' +\r\n    '\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-' +\r\n    '\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5' +\r\n    '\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-' +\r\n    '\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F0\\u1700-\\u170C\\u170E-' +\r\n    '\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD' +\r\n    '\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1920-\\u192B' +\r\n    '\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E' +\r\n    '\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-' +\r\n    '\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1D00-\\u1DE6\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-' +\r\n    '\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-' +\r\n    '\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F' +\r\n    '\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115' +\r\n    '\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188' +\r\n    '\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-' +\r\n    '\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-' +\r\n    '\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A' +\r\n    '\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5' +\r\n    '\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA697' +\r\n    '\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA827\\uA840-\\uA873' +\r\n    '\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-' +\r\n    '\\uA9D9\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7B\\uAA80-\\uAAC2\\uAADB-\\uAADD\\uAAE0-' +\r\n    '\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABEA\\uABEC' +\r\n    '\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-' +\r\n    '\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D' +\r\n    '\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE26\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74' +\r\n    '\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-' +\r\n    '\\uFFD7\\uFFDA-\\uFFDC]'\r\n);\r\n\r\n\r\n//Methods\r\nfunction isIdentifierCh (cp) {\r\n    if (cp < 0x80) {\r\n        return cp >= 97 && cp <= 122 ||      // a..z\r\n               cp >= 65 && cp <= 90 ||       // A..Z\r\n               cp >= 48 && cp <= 57 ||       // 0..9\r\n               cp === 36 || cp === 95 ||     // $ (dollar) and _ (underscore)\r\n               cp === 92;                    // \\ (backslash)\r\n    }\r\n\r\n    var ch = String.fromCharCode(cp);\r\n\r\n    return NON_ASCII_IDENTIFIER_CHARACTERS_REGEXP.test(ch);\r\n}\r\n\r\nfunction isLineTerminator (cp) {\r\n    return cp === 0x0A || cp === 0x0D || cp === 0x2028 || cp === 0x2029;\r\n}\r\n\r\nfunction isWhitespace (cp) {\r\n    return cp === 0x20 || cp === 0x09 || isLineTerminator(cp) || cp === 0x0B || cp === 0x0C || cp === 0xA0 ||\r\n           (cp >= 0x1680 && NON_ASCII_WHITESPACES.indexOf(cp) >= 0);\r\n}\r\n\r\nfunction isDecimalDigit (cp) {\r\n    return cp >= 48 && cp <= 57;\r\n}\r\n\r\nfunction stringRepeat (str, num) {\r\n    var result = '';\r\n\r\n    for (num |= 0; num > 0; num >>>= 1, str += str) {\r\n        if (num & 1) {\r\n            result += str;\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nisArray = Array.isArray;\r\nif (!isArray) {\r\n    isArray = function isArray (array) {\r\n        return Object.prototype.toString.call(array) === '[object Array]';\r\n    };\r\n}\r\n\r\n\r\nfunction updateDeeply (target, override) {\r\n    var key, val;\r\n\r\n    function isHashObject (target) {\r\n        return typeof target === 'object' && target instanceof Object && !(target instanceof RegExp);\r\n    }\r\n\r\n    for (key in override) {\r\n        if (override.hasOwnProperty(key)) {\r\n            val = override[key];\r\n            if (isHashObject(val)) {\r\n                if (isHashObject(target[key])) {\r\n                    updateDeeply(target[key], val);\r\n                }\r\n                else {\r\n                    target[key] = updateDeeply({}, val);\r\n                }\r\n            }\r\n            else {\r\n                target[key] = val;\r\n            }\r\n        }\r\n    }\r\n    return target;\r\n}\r\n\r\nfunction generateNumber (value) {\r\n    var result, point, temp, exponent, pos;\r\n\r\n    if (value === 1 / 0) {\r\n        return json ? 'null' : renumber ? '1e400' : '1e+400';\r\n    }\r\n\r\n    result = '' + value;\r\n    if (!renumber || result.length < 3) {\r\n        return result;\r\n    }\r\n\r\n    point = result.indexOf('.');\r\n    //NOTE: 0x30 == '0'\r\n    if (!json && result.charCodeAt(0) === 0x30 && point === 1) {\r\n        point  = 0;\r\n        result = result.slice(1);\r\n    }\r\n    temp     = result;\r\n    result   = result.replace('e+', 'e');\r\n    exponent = 0;\r\n    if ((pos = temp.indexOf('e')) > 0) {\r\n        exponent = +temp.slice(pos + 1);\r\n        temp     = temp.slice(0, pos);\r\n    }\r\n    if (point >= 0) {\r\n        exponent -= temp.length - point - 1;\r\n        temp = +(temp.slice(0, point) + temp.slice(point + 1)) + '';\r\n    }\r\n    pos = 0;\r\n\r\n    //NOTE: 0x30 == '0'\r\n    while (temp.charCodeAt(temp.length + pos - 1) === 0x30) {\r\n        --pos;\r\n    }\r\n    if (pos !== 0) {\r\n        exponent -= pos;\r\n        temp = temp.slice(0, pos);\r\n    }\r\n    if (exponent !== 0) {\r\n        temp += 'e' + exponent;\r\n    }\r\n    if ((temp.length < result.length ||\r\n         (hexadecimal && value > 1e12 && Math.floor(value) === value &&\r\n          (temp = '0x' + value.toString(16)).length\r\n          < result.length)) &&\r\n        +temp === value) {\r\n        result = temp;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n// Generate valid RegExp expression.\r\n// This function is based on https://github.com/Constellation/iv Engine\r\n\r\nfunction escapeRegExpCharacter (ch, previousIsBackslash) {\r\n    // not handling '\\' and handling \\u2028 or \\u2029 to unicode escape sequence\r\n    if ((ch & ~1) === 0x2028) {\r\n        return (previousIsBackslash ? 'u' : '\\\\u') + ((ch === 0x2028) ? '2028' : '2029');\r\n    }\r\n    else if (ch === 10 || ch === 13) {  // \\n, \\r\r\n        return (previousIsBackslash ? '' : '\\\\') + ((ch === 10) ? 'n' : 'r');\r\n    }\r\n    return String.fromCharCode(ch);\r\n}\r\n\r\nfunction generateRegExp (reg) {\r\n    var match, result, flags, i, iz, ch, characterInBrack, previousIsBackslash;\r\n\r\n    result = reg.toString();\r\n\r\n    if (reg.source) {\r\n        // extract flag from toString result\r\n        match = result.match(/\\/([^/]*)$/);\r\n        if (!match) {\r\n            return result;\r\n        }\r\n\r\n        flags  = match[1];\r\n        result = '';\r\n\r\n        characterInBrack    = false;\r\n        previousIsBackslash = false;\r\n        for (i = 0, iz = reg.source.length; i < iz; ++i) {\r\n            ch = reg.source.charCodeAt(i);\r\n\r\n            if (!previousIsBackslash) {\r\n                if (characterInBrack) {\r\n                    if (ch === 93) {  // ]\r\n                        characterInBrack = false;\r\n                    }\r\n                }\r\n                else {\r\n                    if (ch === 47) {  // /\r\n                        result += '\\\\';\r\n                    }\r\n                    else if (ch === 91) {  // [\r\n                        characterInBrack = true;\r\n                    }\r\n                }\r\n                result += escapeRegExpCharacter(ch, previousIsBackslash);\r\n                previousIsBackslash = ch === 92;  // \\\r\n            }\r\n            else {\r\n                // if new RegExp(\"\\\\\\n') is provided, create /\\n/\r\n                result += escapeRegExpCharacter(ch, previousIsBackslash);\r\n                // prevent like /\\\\[/]/\r\n                previousIsBackslash = false;\r\n            }\r\n        }\r\n\r\n        return '/' + result + '/' + flags;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction escapeAllowedCharacter (code, next) {\r\n    var hex, result = '\\\\';\r\n\r\n    switch (code) {\r\n        case 0x08:          // \\b\r\n            result += 'b';\r\n            break;\r\n        case 0x0C:          // \\f\r\n            result += 'f';\r\n            break;\r\n        case 0x09:          // \\t\r\n            result += 't';\r\n            break;\r\n        default:\r\n            hex = code.toString(16).toUpperCase();\r\n            if (json || code > 0xFF) {\r\n                result += 'u' + '0000'.slice(hex.length) + hex;\r\n            }\r\n\r\n            else if (code === 0x0000 && !isDecimalDigit(next)) {\r\n                result += '0';\r\n            }\r\n\r\n            else if (code === 0x000B) {     // \\v\r\n                result += 'x0B';\r\n            }\r\n\r\n            else {\r\n                result += 'x' + '00'.slice(hex.length) + hex;\r\n            }\r\n            break;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction escapeDisallowedCharacter (code) {\r\n    var result = '\\\\';\r\n    switch (code) {\r\n        case 0x5C       // \\\r\n        :\r\n            result += '\\\\';\r\n            break;\r\n        case 0x0A       // \\n\r\n        :\r\n            result += 'n';\r\n            break;\r\n        case 0x0D       // \\r\r\n        :\r\n            result += 'r';\r\n            break;\r\n        case 0x2028:\r\n            result += 'u2028';\r\n            break;\r\n        case 0x2029:\r\n            result += 'u2029';\r\n            break;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction escapeDirective (str) {\r\n    var i, iz, code, quote;\r\n\r\n    quote = quotes === 'double' ? '\"' : '\\'';\r\n    for (i = 0, iz = str.length; i < iz; ++i) {\r\n        code = str.charCodeAt(i);\r\n        if (code === 0x27) {            // '\r\n            quote = '\"';\r\n            break;\r\n        }\r\n        else if (code === 0x22) {     // \"\r\n            quote = '\\'';\r\n            break;\r\n        }\r\n        else if (code === 0x5C) {     // \\\r\n            ++i;\r\n        }\r\n    }\r\n\r\n    return quote + str + quote;\r\n}\r\n\r\nfunction escapeString (str) {\r\n    var result = '', i, len, code, singleQuotes = 0, doubleQuotes = 0, single, quote;\r\n    //TODO http://jsperf.com/character-counting/8\r\n    for (i = 0, len = str.length; i < len; ++i) {\r\n        code = str.charCodeAt(i);\r\n        if (code === 0x27) {           // '\r\n            ++singleQuotes;\r\n        }\r\n        else if (code === 0x22) { // \"\r\n            ++doubleQuotes;\r\n        }\r\n        else if (code === 0x2F && json) { // /\r\n            result += '\\\\';\r\n        }\r\n        else if (isLineTerminator(code) || code === 0x5C) { // \\\r\n            result += escapeDisallowedCharacter(code);\r\n            continue;\r\n        }\r\n        else if ((json && code < 0x20) ||                                     // SP\r\n                 !(json || escapeless || (code >= 0x20 && code <= 0x7E))) {   // SP, ~\r\n            result += escapeAllowedCharacter(code, str.charCodeAt(i + 1));\r\n            continue;\r\n        }\r\n        result += String.fromCharCode(code);\r\n    }\r\n\r\n    single = !(quotes === 'double' || (quotes === 'auto' && doubleQuotes < singleQuotes));\r\n    quote  = single ? '\\'' : '\"';\r\n\r\n    if (!(single ? singleQuotes : doubleQuotes)) {\r\n        return quote + result + quote;\r\n    }\r\n\r\n    str    = result;\r\n    result = quote;\r\n\r\n    for (i = 0, len = str.length; i < len; ++i) {\r\n        code = str.charCodeAt(i);\r\n        if ((code === 0x27 && single) || (code === 0x22 && !single)) {    // ', \"\r\n            result += '\\\\';\r\n        }\r\n        result += String.fromCharCode(code);\r\n    }\r\n\r\n    return result + quote;\r\n}\r\n\r\n\r\nfunction join (l, r) {\r\n    if (!l.length)\r\n        return r;\r\n\r\n    if (!r.length)\r\n        return l;\r\n\r\n    var lCp = l.charCodeAt(l.length - 1),\r\n        rCp = r.charCodeAt(0);\r\n\r\n    if (isIdentifierCh(lCp) && isIdentifierCh(rCp) ||\r\n        lCp === rCp && (lCp === 0x2B || lCp === 0x2D) ||   // + +, - -\r\n        lCp === 0x2F && rCp === 0x69) {                    // /re/ instanceof foo\r\n        return l + _.space + r;\r\n    }\r\n\r\n    else if (isWhitespace(lCp) || isWhitespace(rCp))\r\n        return l + r;\r\n\r\n    return l + _.optSpace + r;\r\n}\r\n\r\nfunction shiftIndent () {\r\n    var prevIndent = _.indent;\r\n\r\n    _.indent += _.indentUnit;\r\n    return prevIndent;\r\n}\r\n\r\nfunction adoptionPrefix ($stmt) {\r\n    if ($stmt.type === Syntax.BlockStatement)\r\n        return _.optSpace;\r\n\r\n    if ($stmt.type === Syntax.EmptyStatement)\r\n        return '';\r\n\r\n    return _.newline + _.indent + _.indentUnit;\r\n}\r\n\r\nfunction adoptionSuffix ($stmt) {\r\n    if ($stmt.type === Syntax.BlockStatement)\r\n        return _.optSpace;\r\n\r\n    return _.newline + _.indent;\r\n}\r\n\r\n//Subentities generators\r\nfunction generateVerbatim ($expr, settings) {\r\n    var verbatim     = $expr[extra.verbatim],\r\n        strVerbatim  = typeof verbatim === 'string',\r\n        precedence   = !strVerbatim &&\r\n                       verbatim.precedence !== void 0 ? verbatim.precedence : Precedence.Sequence,\r\n        parenthesize = precedence < settings.precedence,\r\n        content      = strVerbatim ? verbatim : verbatim.content,\r\n        chunks       = content.split(/\\r\\n|\\n/),\r\n        chunkCount   = chunks.length;\r\n\r\n    if (parenthesize)\r\n        _.js += '(';\r\n\r\n    _.js += chunks[0];\r\n\r\n    for (var i = 1; i < chunkCount; i++)\r\n        _.js += _.newline + _.indent + chunks[i];\r\n\r\n    if (parenthesize)\r\n        _.js += ')';\r\n}\r\n\r\nfunction generateFunctionParams ($node) {\r\n    var $params                     = $node.params,\r\n        paramCount                  = $params.length,\r\n        lastParamIdx                = paramCount - 1,\r\n        arrowFuncWithoutParentheses = $node.type === Syntax.ArrowFunctionExpression && paramCount === 1 &&\r\n                                      $params[0].type === Syntax.Identifier;\r\n\r\n    //NOTE: arg => { } case\r\n    if (arrowFuncWithoutParentheses)\r\n        _.js += $params[0].name;\r\n\r\n    else {\r\n        _.js += '(';\r\n\r\n        for (var i = 0; i < paramCount; ++i) {\r\n            var $param = $params[i];\r\n\r\n            if ($params[i].type === Syntax.Identifier)\r\n                _.js += $param.name;\r\n\r\n            else\r\n                ExprGen[$param.type]($param, Preset.e4);\r\n\r\n            if (i !== lastParamIdx)\r\n                _.js += ',' + _.optSpace;\r\n        }\r\n\r\n        _.js += ')';\r\n    }\r\n}\r\n\r\nfunction generateFunctionBody ($node) {\r\n    var $body = $node.body;\r\n\r\n    generateFunctionParams($node);\r\n\r\n    if ($node.type === Syntax.ArrowFunctionExpression)\r\n        _.js += _.optSpace + '=>';\r\n\r\n    if ($node.expression) {\r\n        _.js += _.optSpace;\r\n\r\n        var exprJs = exprToJs($body, Preset.e4);\r\n\r\n        if (exprJs.charAt(0) === '{')\r\n            exprJs = '(' + exprJs + ')';\r\n\r\n        _.js += exprJs;\r\n    }\r\n\r\n    else {\r\n        _.js += adoptionPrefix($body);\r\n        StmtGen[$body.type]($body, Preset.s8);\r\n    }\r\n}\r\n\r\n\r\n//-------------------------------------------------===------------------------------------------------------\r\n//                                Syntactic entities generation presets\r\n//-------------------------------------------------===------------------------------------------------------\r\n\r\nvar Preset = {\r\n    e1: function (allowIn) {\r\n        return {\r\n            precedence:              Precedence.Assignment,\r\n            allowIn:                 allowIn,\r\n            allowCall:               true,\r\n            allowUnparenthesizedNew: true\r\n        };\r\n    },\r\n\r\n    e2: function (allowIn) {\r\n        return {\r\n            precedence:              Precedence.LogicalOR,\r\n            allowIn:                 allowIn,\r\n            allowCall:               true,\r\n            allowUnparenthesizedNew: true\r\n        };\r\n    },\r\n\r\n    e3: {\r\n        precedence:              Precedence.Call,\r\n        allowIn:                 true,\r\n        allowCall:               true,\r\n        allowUnparenthesizedNew: false\r\n    },\r\n\r\n    e4: {\r\n        precedence:              Precedence.Assignment,\r\n        allowIn:                 true,\r\n        allowCall:               true,\r\n        allowUnparenthesizedNew: true\r\n    },\r\n\r\n    e5: {\r\n        precedence:              Precedence.Sequence,\r\n        allowIn:                 true,\r\n        allowCall:               true,\r\n        allowUnparenthesizedNew: true\r\n    },\r\n\r\n    e6: function (allowUnparenthesizedNew) {\r\n        return {\r\n            precedence:              Precedence.New,\r\n            allowIn:                 true,\r\n            allowCall:               false,\r\n            allowUnparenthesizedNew: allowUnparenthesizedNew\r\n        };\r\n    },\r\n\r\n    e7: {\r\n        precedence:              Precedence.Unary,\r\n        allowIn:                 true,\r\n        allowCall:               true,\r\n        allowUnparenthesizedNew: true\r\n    },\r\n\r\n    e8: {\r\n        precedence:              Precedence.Postfix,\r\n        allowIn:                 true,\r\n        allowCall:               true,\r\n        allowUnparenthesizedNew: true\r\n    },\r\n\r\n    e9: {\r\n        precedence:              void 0,\r\n        allowIn:                 true,\r\n        allowCall:               true,\r\n        allowUnparenthesizedNew: true\r\n    },\r\n\r\n    e10: {\r\n        precedence:              Precedence.Call,\r\n        allowIn:                 true,\r\n        allowCall:               true,\r\n        allowUnparenthesizedNew: true\r\n    },\r\n\r\n    e11: function (allowCall) {\r\n        return {\r\n            precedence:              Precedence.Call,\r\n            allowIn:                 true,\r\n            allowCall:               allowCall,\r\n            allowUnparenthesizedNew: false\r\n        };\r\n    },\r\n\r\n    e12: {\r\n        precedence:              Precedence.Primary,\r\n        allowIn:                 false,\r\n        allowCall:               false,\r\n        allowUnparenthesizedNew: true\r\n    },\r\n\r\n    e13: {\r\n        precedence:              Precedence.Primary,\r\n        allowIn:                 true,\r\n        allowCall:               true,\r\n        allowUnparenthesizedNew: true\r\n    },\r\n\r\n\r\n    e14: {\r\n        precedence:              Precedence.Sequence,\r\n        allowIn:                 false,\r\n        allowCall:               true,\r\n        allowUnparenthesizedNew: true\r\n    },\r\n\r\n\r\n    e15: function (allowCall) {\r\n        return {\r\n            precedence:              Precedence.Sequence,\r\n            allowIn:                 true,\r\n            allowCall:               allowCall,\r\n            allowUnparenthesizedNew: true\r\n        };\r\n    },\r\n\r\n    e16: function (precedence, allowIn) {\r\n        return {\r\n            precedence:              precedence,\r\n            allowIn:                 allowIn,\r\n            allowCall:               true,\r\n            allowUnparenthesizedNew: true\r\n        };\r\n    },\r\n\r\n    e17: function (allowIn) {\r\n        return {\r\n            precedence:              Precedence.Call,\r\n            allowIn:                 allowIn,\r\n            allowCall:               true,\r\n            allowUnparenthesizedNew: true\r\n        }\r\n    },\r\n\r\n    e18: function (allowIn) {\r\n        return {\r\n            precedence:              Precedence.Assignment,\r\n            allowIn:                 allowIn,\r\n            allowCall:               true,\r\n            allowUnparenthesizedNew: true\r\n        }\r\n    },\r\n\r\n    e19: {\r\n        precedence:        Precedence.Sequence,\r\n        allowIn:           true,\r\n        allowCall:         true,\r\n        semicolonOptional: false\r\n    },\r\n\r\n    e20: {\r\n        precedence: Precedence.Await,\r\n        allowCall:  true\r\n    },\r\n\r\n    s1: function (functionBody, semicolonOptional) {\r\n        return {\r\n            allowIn:           true,\r\n            functionBody:      false,\r\n            directiveContext:  functionBody,\r\n            semicolonOptional: semicolonOptional\r\n        };\r\n    },\r\n\r\n    s2: {\r\n        allowIn:           true,\r\n        functionBody:      false,\r\n        directiveContext:  false,\r\n        semicolonOptional: true\r\n    },\r\n\r\n    s3: function (allowIn) {\r\n        return {\r\n            allowIn:           allowIn,\r\n            functionBody:      false,\r\n            directiveContext:  false,\r\n            semicolonOptional: false\r\n        };\r\n    },\r\n\r\n    s4: function (semicolonOptional) {\r\n        return {\r\n            allowIn:           true,\r\n            functionBody:      false,\r\n            directiveContext:  false,\r\n            semicolonOptional: semicolonOptional\r\n        };\r\n    },\r\n\r\n    s5: function (semicolonOptional) {\r\n        return {\r\n            allowIn:           true,\r\n            functionBody:      false,\r\n            directiveContext:  true,\r\n            semicolonOptional: semicolonOptional,\r\n        };\r\n    },\r\n\r\n    s6: {\r\n        allowIn:           false,\r\n        functionBody:      false,\r\n        directiveContext:  false,\r\n        semicolonOptional: false\r\n    },\r\n\r\n    s7: {\r\n        allowIn:           true,\r\n        functionBody:      false,\r\n        directiveContext:  false,\r\n        semicolonOptional: false\r\n    },\r\n\r\n    s8: {\r\n        allowIn:           true,\r\n        functionBody:      true,\r\n        directiveContext:  false,\r\n        semicolonOptional: false\r\n    }\r\n};\r\n\r\n\r\n//-------------------------------------------------===-------------------------------------------------------\r\n//                                             Expressions\r\n//-------------------------------------------------===-------------------------------------------------------\r\n\r\n//Regular expressions\r\nvar FLOATING_OR_OCTAL_REGEXP  = /[.eExX]|^0[0-9]+/,\r\n    LAST_DECIMAL_DIGIT_REGEXP = /[0-9]$/;\r\n\r\n\r\n//Common expression generators\r\nfunction isLogicalExpression(node) {\r\n    if (!node)\r\n        return false;\r\n\r\n    return node.type === Syntax.LogicalExpression;\r\n}\r\n\r\nfunction needParensForLogicalExpression (node, parent) {\r\n    switch (node.operator) {\r\n        case \"||\":\r\n            if (!isLogicalExpression(parent)) return false;\r\n            return parent.operator === \"??\" || parent.operator === \"&&\";\r\n\r\n        case \"&&\":\r\n            return isLogicalExpression(parent, {\r\n                operator: \"??\"\r\n            });\r\n\r\n        case \"??\":\r\n            return isLogicalExpression(parent) && parent.operator !== \"??\";\r\n    }\r\n}\r\n\r\nfunction generateLogicalOrBinaryExpression ($expr, settings, $parent) {\r\n    var op                 = $expr.operator,\r\n        precedence         = BinaryPrecedence[$expr.operator],\r\n        parenthesize       = precedence < settings.precedence,\r\n        allowIn            = settings.allowIn || parenthesize,\r\n        operandGenSettings = Preset.e16(precedence, allowIn),\r\n        exprJs             = exprToJs($expr.left, operandGenSettings, $expr);\r\n\r\n    parenthesize |= op === 'in' && !allowIn;\r\n\r\n    var needParens = needParensForLogicalExpression($expr, $parent);\r\n\r\n    if (parenthesize || needParens)\r\n        _.js += '(';\r\n\r\n    // 0x2F = '/'\r\n    if (exprJs.charCodeAt(exprJs.length - 1) === 0x2F && isIdentifierCh(op.charCodeAt(0)))\r\n        exprJs = exprJs + _.space + op;\r\n\r\n    else\r\n        exprJs = join(exprJs, op);\r\n\r\n    operandGenSettings.precedence++;\r\n\r\n    var rightJs = exprToJs($expr.right, operandGenSettings, $expr);\r\n\r\n    //NOTE: If '/' concats with '/' or `<` concats with `!--`, it is interpreted as comment start\r\n    if (op === '/' && rightJs.charAt(0) === '/' || op.slice(-1) === '<' && rightJs.slice(0, 3) === '!--')\r\n        exprJs += _.space + rightJs;\r\n\r\n    else\r\n        exprJs = join(exprJs, rightJs);\r\n\r\n    _.js += exprJs;\r\n\r\n    if (parenthesize || needParens)\r\n        _.js += ')';\r\n}\r\n\r\nfunction generateArrayPatternOrExpression ($expr) {\r\n    var $elems    = $expr.elements,\r\n        elemCount = $elems.length;\r\n\r\n    if (elemCount) {\r\n        var lastElemIdx = elemCount - 1,\r\n            multiline   = elemCount > 1,\r\n            prevIndent  = shiftIndent(),\r\n            itemPrefix  = _.newline + _.indent;\r\n\r\n        _.js += '[';\r\n\r\n        for (var i = 0; i < elemCount; i++) {\r\n            var $elem = $elems[i];\r\n\r\n            if (multiline)\r\n                _.js += itemPrefix;\r\n\r\n            if ($elem)\r\n                ExprGen[$elem.type]($elem, Preset.e4);\r\n\r\n            if (i !== lastElemIdx || !$elem)\r\n                _.js += ',';\r\n        }\r\n\r\n        _.indent = prevIndent;\r\n\r\n        if (multiline)\r\n            _.js += _.newline + _.indent;\r\n\r\n        _.js += ']';\r\n    }\r\n\r\n    else\r\n        _.js += '[]';\r\n}\r\n\r\nfunction generateGeneratorOrComprehensionExpression ($expr) {\r\n    //NOTE: GeneratorExpression should be parenthesized with (...), ComprehensionExpression with [...]\r\n    var $blocks     = $expr.blocks,\r\n        $filter     = $expr.filter,\r\n        isGenerator = $expr.type === Syntax.GeneratorExpression,\r\n        exprJs      = isGenerator ? '(' : '[',\r\n        bodyJs      = exprToJs($expr.body, Preset.e4);\r\n\r\n    if ($blocks) {\r\n        var prevIndent = shiftIndent(),\r\n            blockCount = $blocks.length;\r\n\r\n        for (var i = 0; i < blockCount; ++i) {\r\n            var blockJs = exprToJs($blocks[i], Preset.e5);\r\n\r\n            exprJs = i > 0 ? join(exprJs, blockJs) : (exprJs + blockJs);\r\n        }\r\n\r\n        _.indent = prevIndent;\r\n    }\r\n\r\n    if ($filter) {\r\n        var filterJs = exprToJs($filter, Preset.e5);\r\n\r\n        exprJs = join(exprJs, 'if' + _.optSpace);\r\n        exprJs = join(exprJs, '(' + filterJs + ')');\r\n    }\r\n\r\n    exprJs = join(exprJs, bodyJs);\r\n    exprJs += isGenerator ? ')' : ']';\r\n\r\n    _.js += exprJs;\r\n}\r\n\r\n\r\n//Expression raw generator dictionary\r\nvar ExprRawGen = {\r\n    SequenceExpression: function generateSequenceExpression ($expr, settings) {\r\n        var $children       = $expr.expressions,\r\n            childrenCount   = $children.length,\r\n            lastChildIdx    = childrenCount - 1,\r\n            parenthesize    = Precedence.Sequence < settings.precedence,\r\n            exprGenSettings = Preset.e1(settings.allowIn || parenthesize);\r\n\r\n        if (parenthesize)\r\n            _.js += '(';\r\n\r\n        for (var i = 0; i < childrenCount; i++) {\r\n            var $child = $children[i];\r\n\r\n            ExprGen[$child.type]($child, exprGenSettings);\r\n\r\n            if (i !== lastChildIdx)\r\n                _.js += ',' + _.optSpace;\r\n        }\r\n\r\n        if (parenthesize)\r\n            _.js += ')';\r\n    },\r\n\r\n    AssignmentExpression: function generateAssignmentExpression ($expr, settings) {\r\n        var $left        = $expr.left,\r\n            $right       = $expr.right,\r\n            parenthesize = Precedence.Assignment < settings.precedence,\r\n            allowIn      = settings.allowIn || parenthesize;\r\n\r\n        if (parenthesize)\r\n            _.js += '(';\r\n\r\n        ExprGen[$left.type]($left, Preset.e17(allowIn));\r\n        _.js += _.optSpace + $expr.operator + _.optSpace;\r\n        ExprGen[$right.type]($right, Preset.e18(allowIn));\r\n\r\n        if (parenthesize)\r\n            _.js += ')';\r\n    },\r\n\r\n    AssignmentPattern: function generateAssignmentPattern ($node) {\r\n        var $fakeAssign = {\r\n            left:     $node.left,\r\n            right:    $node.right,\r\n            operator: '='\r\n        };\r\n\r\n        ExprGen.AssignmentExpression($fakeAssign, Preset.e4);\r\n    },\r\n\r\n    ArrowFunctionExpression: function generateArrowFunctionExpression ($expr, settings) {\r\n        var parenthesize = Precedence.ArrowFunction < settings.precedence;\r\n\r\n        if (parenthesize)\r\n            _.js += '(';\r\n\r\n        if ($expr.async)\r\n            _.js += 'async ';\r\n\r\n        generateFunctionBody($expr);\r\n\r\n        if (parenthesize)\r\n            _.js += ')';\r\n    },\r\n\r\n    AwaitExpression: function generateAwaitExpression ($expr, settings) {\r\n        var parenthesize = Precedence.Await < settings.precedence;\r\n\r\n        if (parenthesize)\r\n            _.js += '(';\r\n\r\n        _.js += $expr.all ? 'await* ' : 'await ';\r\n\r\n        ExprGen[$expr.argument.type]($expr.argument, Preset.e20);\r\n\r\n        if (parenthesize)\r\n            _.js += ')';\r\n    },\r\n\r\n    ConditionalExpression: function generateConditionalExpression ($expr, settings) {\r\n        var $test             = $expr.test,\r\n            $conseq           = $expr.consequent,\r\n            $alt              = $expr.alternate,\r\n            parenthesize      = Precedence.Conditional < settings.precedence,\r\n            allowIn           = settings.allowIn || parenthesize,\r\n            testGenSettings   = Preset.e2(allowIn),\r\n            branchGenSettings = Preset.e1(allowIn);\r\n\r\n        if (parenthesize)\r\n            _.js += '(';\r\n\r\n        ExprGen[$test.type]($test, testGenSettings);\r\n        _.js += _.optSpace + '?' + _.optSpace;\r\n        ExprGen[$conseq.type]($conseq, branchGenSettings);\r\n        _.js += _.optSpace + ':' + _.optSpace;\r\n        ExprGen[$alt.type]($alt, branchGenSettings);\r\n\r\n        if (parenthesize)\r\n            _.js += ')';\r\n    },\r\n\r\n    LogicalExpression: generateLogicalOrBinaryExpression,\r\n\r\n    BinaryExpression: generateLogicalOrBinaryExpression,\r\n\r\n    CallExpression: function generateCallExpression ($expr, settings) {\r\n        var $callee      = $expr.callee,\r\n            $args        = $expr['arguments'],\r\n            argCount     = $args.length,\r\n            lastArgIdx   = argCount - 1,\r\n            parenthesize = !settings.allowCall || Precedence.Call < settings.precedence;\r\n\r\n        if (parenthesize)\r\n            _.js += '(';\r\n\r\n        ExprGen[$callee.type]($callee, Preset.e3);\r\n\r\n        if ($expr.optional)\r\n            _.js += '?.';\r\n\r\n        _.js += '(';\r\n\r\n        for (var i = 0; i < argCount; ++i) {\r\n            var $arg = $args[i];\r\n\r\n            ExprGen[$arg.type]($arg, Preset.e4);\r\n\r\n            if (i !== lastArgIdx)\r\n                _.js += ',' + _.optSpace;\r\n        }\r\n\r\n        _.js += ')';\r\n\r\n        if (parenthesize)\r\n            _.js += ')';\r\n    },\r\n\r\n    NewExpression: function generateNewExpression ($expr, settings) {\r\n        var $args        = $expr['arguments'],\r\n            parenthesize = Precedence.New < settings.precedence,\r\n            argCount     = $args.length,\r\n            lastArgIdx   = argCount - 1,\r\n            withCall     = !settings.allowUnparenthesizedNew || parentheses || argCount > 0,\r\n            calleeJs     = exprToJs($expr.callee, Preset.e6(!withCall));\r\n\r\n        if (parenthesize)\r\n            _.js += '(';\r\n\r\n        _.js += join('new', calleeJs);\r\n\r\n        if (withCall) {\r\n            _.js += '(';\r\n\r\n            for (var i = 0; i < argCount; ++i) {\r\n                var $arg = $args[i];\r\n\r\n                ExprGen[$arg.type]($arg, Preset.e4);\r\n\r\n                if (i !== lastArgIdx)\r\n                    _.js += ',' + _.optSpace;\r\n            }\r\n\r\n            _.js += ')';\r\n        }\r\n\r\n        if (parenthesize)\r\n            _.js += ')';\r\n    },\r\n\r\n    MemberExpression: function generateMemberExpression ($expr, settings) {\r\n        var $obj         = $expr.object,\r\n            $prop        = $expr.property,\r\n            parenthesize = Precedence.Member < settings.precedence,\r\n            isNumObj     = !$expr.computed && $obj.type === Syntax.Literal && typeof $obj.value === 'number';\r\n\r\n        if (parenthesize)\r\n            _.js += '(';\r\n\r\n        if (isNumObj) {\r\n\r\n            //NOTE: When the following conditions are all true:\r\n            //   1. No floating point\r\n            //   2. Don't have exponents\r\n            //   3. The last character is a decimal digit\r\n            //   4. Not hexadecimal OR octal number literal\r\n            // then we should add a floating point.\r\n\r\n            var numJs     = exprToJs($obj, Preset.e11(settings.allowCall)),\r\n                withPoint = LAST_DECIMAL_DIGIT_REGEXP.test(numJs) && !FLOATING_OR_OCTAL_REGEXP.test(numJs);\r\n\r\n            _.js += withPoint ? (numJs + '.') : numJs;\r\n        }\r\n\r\n        else\r\n            ExprGen[$obj.type]($obj, Preset.e11(settings.allowCall));\r\n\r\n        if ($expr.computed) {\r\n            if ($expr.optional)\r\n                _.js += '?.';\r\n\r\n            _.js += '[';\r\n            ExprGen[$prop.type]($prop, Preset.e15(settings.allowCall));\r\n            _.js += ']';\r\n        }\r\n\r\n        else\r\n            _.js += ($expr.optional ? '?.' : '.') + $prop.name;\r\n\r\n        if (parenthesize)\r\n            _.js += ')';\r\n    },\r\n\r\n    UnaryExpression: function generateUnaryExpression ($expr, settings) {\r\n        var parenthesize = Precedence.Unary < settings.precedence,\r\n            op           = $expr.operator,\r\n            argJs        = exprToJs($expr.argument, Preset.e7);\r\n\r\n        if (parenthesize)\r\n            _.js += '(';\r\n\r\n        //NOTE: delete, void, typeof\r\n        // get `typeof []`, not `typeof[]`\r\n        if (_.optSpace === '' || op.length > 2)\r\n            _.js += join(op, argJs);\r\n\r\n        else {\r\n            _.js += op;\r\n\r\n            //NOTE: Prevent inserting spaces between operator and argument if it is unnecessary\r\n            // like, `!cond`\r\n            var leftCp  = op.charCodeAt(op.length - 1),\r\n                rightCp = argJs.charCodeAt(0);\r\n\r\n            // 0x2B = '+', 0x2D =  '-'\r\n            if (leftCp === rightCp && (leftCp === 0x2B || leftCp === 0x2D) ||\r\n                isIdentifierCh(leftCp) && isIdentifierCh(rightCp)) {\r\n                _.js += _.space;\r\n            }\r\n\r\n            _.js += argJs;\r\n        }\r\n\r\n        if (parenthesize)\r\n            _.js += ')';\r\n    },\r\n\r\n    YieldExpression: function generateYieldExpression ($expr, settings) {\r\n        var $arg         = $expr.argument,\r\n            js           = $expr.delegate ? 'yield*' : 'yield',\r\n            parenthesize = Precedence.Yield < settings.precedence;\r\n\r\n        if (parenthesize)\r\n            _.js += '(';\r\n\r\n        if ($arg) {\r\n            var argJs = exprToJs($arg, Preset.e4);\r\n\r\n            js = join(js, argJs);\r\n        }\r\n\r\n        _.js += js;\r\n\r\n        if (parenthesize)\r\n            _.js += ')';\r\n    },\r\n\r\n    UpdateExpression: function generateUpdateExpression ($expr, settings) {\r\n        var $arg         = $expr.argument,\r\n            $op          = $expr.operator,\r\n            prefix       = $expr.prefix,\r\n            precedence   = prefix ? Precedence.Unary : Precedence.Postfix,\r\n            parenthesize = precedence < settings.precedence;\r\n\r\n        if (parenthesize)\r\n            _.js += '(';\r\n\r\n        if (prefix) {\r\n            _.js += $op;\r\n            ExprGen[$arg.type]($arg, Preset.e8);\r\n\r\n        }\r\n\r\n        else {\r\n            ExprGen[$arg.type]($arg, Preset.e8);\r\n            _.js += $op;\r\n        }\r\n\r\n        if (parenthesize)\r\n            _.js += ')';\r\n    },\r\n\r\n    FunctionExpression: function generateFunctionExpression ($expr) {\r\n        var isGenerator = !!$expr.generator;\r\n\r\n        if ($expr.async)\r\n            _.js += 'async ';\r\n\r\n        _.js += isGenerator ? 'function*' : 'function';\r\n\r\n        if ($expr.id) {\r\n            _.js += isGenerator ? _.optSpace : _.space;\r\n            _.js += $expr.id.name;\r\n        }\r\n        else\r\n            _.js += _.optSpace;\r\n\r\n        generateFunctionBody($expr);\r\n    },\r\n\r\n    ExportBatchSpecifier: function generateExportBatchSpecifier () {\r\n        _.js += '*';\r\n    },\r\n\r\n    ArrayPattern: generateArrayPatternOrExpression,\r\n\r\n    ArrayExpression: generateArrayPatternOrExpression,\r\n\r\n    ClassExpression: function generateClassExpression ($expr) {\r\n        var $id    = $expr.id,\r\n            $super = $expr.superClass,\r\n            $body  = $expr.body,\r\n            exprJs = 'class';\r\n\r\n        if ($id) {\r\n            var idJs = exprToJs($id, Preset.e9);\r\n\r\n            exprJs = join(exprJs, idJs);\r\n        }\r\n\r\n        if ($super) {\r\n            var superJs = exprToJs($super, Preset.e4);\r\n\r\n            superJs = join('extends', superJs);\r\n            exprJs  = join(exprJs, superJs);\r\n        }\r\n\r\n        _.js += exprJs + _.optSpace;\r\n        StmtGen[$body.type]($body, Preset.s2);\r\n    },\r\n\r\n    MetaProperty: function generateMetaProperty ($expr, settings) {\r\n        var $meta        = $expr.meta,\r\n            $property    = $expr.property,\r\n            parenthesize = Precedence.Member < settings.precedence;\r\n\r\n        if (parenthesize)\r\n            _.js += '(';\r\n\r\n        _.js += (typeof $meta === \"string\" ? $meta : $meta.name) +\r\n            '.' + (typeof $property === \"string\" ? $property : $property.name);\r\n\r\n        if (parenthesize)\r\n            _.js += ')';\r\n    },\r\n\r\n    MethodDefinition: function generateMethodDefinition ($expr) {\r\n        var exprJs = $expr['static'] ? 'static' + _.optSpace : '',\r\n            keyJs  = exprToJs($expr.key, Preset.e5);\r\n\r\n        if ($expr.computed)\r\n            keyJs = '[' + keyJs + ']';\r\n\r\n        if ($expr.kind === 'get' || $expr.kind === 'set') {\r\n            keyJs = join($expr.kind, keyJs);\r\n            _.js += join(exprJs, keyJs);\r\n        }\r\n\r\n        else {\r\n            if ($expr.value.generator)\r\n                _.js += exprJs + '*' + keyJs;\r\n            else if ($expr.value.async)\r\n                _.js += exprJs + 'async ' + keyJs;\r\n            else\r\n                _.js += join(exprJs, keyJs);\r\n        }\r\n\r\n        generateFunctionBody($expr.value);\r\n    },\r\n\r\n    Property: function generateProperty ($expr) {\r\n        var $val  = $expr.value,\r\n            $kind = $expr.kind,\r\n            keyJs = exprToJs($expr.key, Preset.e4);\r\n\r\n        if ($expr.computed)\r\n            keyJs = '[' + keyJs + ']';\r\n\r\n        if ($kind === 'get' || $kind === 'set') {\r\n            _.js += $kind + _.space + keyJs;\r\n            generateFunctionBody($val);\r\n        }\r\n\r\n        else {\r\n            if ($expr.shorthand)\r\n                _.js += keyJs;\r\n\r\n            else if ($expr.method) {\r\n                if ($val.generator)\r\n                    keyJs = '*' + keyJs;\r\n                else if ($val.async)\r\n                    keyJs = 'async ' + keyJs;\r\n\r\n                _.js += keyJs;\r\n                generateFunctionBody($val)\r\n            }\r\n\r\n            else {\r\n                _.js += keyJs + ':' + _.optSpace;\r\n                ExprGen[$val.type]($val, Preset.e4);\r\n            }\r\n        }\r\n    },\r\n\r\n    PropertyDefinition: function generatePropertyDefinition ($expr) {\r\n        var $val   = $expr.value,\r\n            exprJs = $expr['static'] ? 'static' + _.optSpace : '',\r\n            keyJs  = exprToJs($expr.key, Preset.e4);\r\n\r\n        if ($expr.computed)\r\n            keyJs = '[' + keyJs + ']';\r\n\r\n        _.js += exprJs + keyJs + '=' + _.optSpace;\r\n\r\n        ExprGen[$val.type]($val, Preset.e4);\r\n\r\n        if (semicolons || !settings.semicolonOptional)\r\n            _.js += ';';\r\n    },\r\n\r\n    ObjectExpression: function generateObjectExpression ($expr) {\r\n        var $props    = $expr.properties,\r\n            propCount = $props.length;\r\n\r\n        if (propCount) {\r\n            var lastPropIdx = propCount - 1,\r\n                prevIndent  = shiftIndent();\r\n\r\n            _.js += '{';\r\n\r\n            for (var i = 0; i < propCount; i++) {\r\n                var $prop    = $props[i],\r\n                    propType = $prop.type || Syntax.Property;\r\n\r\n                _.js += _.newline + _.indent;\r\n                ExprGen[propType]($prop, Preset.e5);\r\n\r\n                if (i !== lastPropIdx)\r\n                    _.js += ',';\r\n            }\r\n\r\n            _.indent = prevIndent;\r\n            _.js += _.newline + _.indent + '}';\r\n        }\r\n\r\n        else\r\n            _.js += '{}';\r\n    },\r\n\r\n    ObjectPattern: function generateObjectPattern ($expr) {\r\n        var $props    = $expr.properties,\r\n            propCount = $props.length;\r\n\r\n        if (propCount) {\r\n            var lastPropIdx = propCount - 1,\r\n                multiline   = false;\r\n\r\n            if (propCount === 1)\r\n                multiline = $props[0].value.type !== Syntax.Identifier;\r\n\r\n            else {\r\n                for (var i = 0; i < propCount; i++) {\r\n                    if (!$props[i].shorthand) {\r\n                        multiline = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            _.js += multiline ? ('{' + _.newline) : '{';\r\n\r\n            var prevIndent = shiftIndent(),\r\n                propSuffix = ',' + (multiline ? _.newline : _.optSpace);\r\n\r\n            for (var i = 0; i < propCount; i++) {\r\n                var $prop = $props[i];\r\n\r\n                if (multiline)\r\n                    _.js += _.indent;\r\n\r\n                ExprGen[$prop.type]($prop, Preset.e5);\r\n\r\n                if (i !== lastPropIdx)\r\n                    _.js += propSuffix;\r\n            }\r\n\r\n            _.indent = prevIndent;\r\n            _.js += multiline ? (_.newline + _.indent + '}') : '}';\r\n        }\r\n        else\r\n            _.js += '{}';\r\n    },\r\n\r\n    ThisExpression: function generateThisExpression () {\r\n        _.js += 'this';\r\n    },\r\n\r\n    Identifier: function generateIdentifier ($expr, precedence, flag) {\r\n        _.js += $expr.name;\r\n    },\r\n\r\n    PrivateIdentifier: function generatePrivateIdentifier ($expr, precedence, flag) {\r\n        _.js += '#' + $expr.name;\r\n    },\r\n\r\n    ImportExpression: function generateImportExpression ($expr, settings) {\r\n        var parenthesize = Precedence.Call < settings.precedence;\r\n        var $source      = $expr.source;\r\n\r\n        if (parenthesize)\r\n            _.js += '(';\r\n\r\n        _.js += 'import(';\r\n\r\n        ExprGen[$source.type]($source, Preset.e4);\r\n\r\n        _.js += ')';\r\n\r\n        if (parenthesize)\r\n            _.js += ')';\r\n    },\r\n\r\n    ImportSpecifier: function generateImportSpecifier ($expr) {\r\n        _.js += $expr.imported.name;\r\n\r\n        if ($expr.local)\r\n            _.js += _.space + 'as' + _.space + $expr.local.name;\r\n    },\r\n\r\n    ExportSpecifier: function generateImportOrExportSpecifier ($expr) {\r\n        _.js += $expr.local.name;\r\n\r\n        if ($expr.exported)\r\n            _.js += _.space + 'as' + _.space + $expr.exported.name;\r\n    },\r\n\r\n    ChainExpression: function generateChainExpression ($expr, settings) {\r\n        var parenthesize = Precedence.OptionalChaining < settings.precedence;\r\n        var $expression  = $expr.expression;\r\n\r\n        settings = settings || {};\r\n\r\n        var newSettings  = {\r\n            precedence: Precedence.OptionalChaining,\r\n            allowIn:    settings.allowIn ,\r\n            allowCall:  settings.allowCall,\r\n\r\n            allowUnparenthesizedNew: settings.allowUnparenthesizedNew\r\n        }\r\n\r\n        if (parenthesize) {\r\n            newSettings.allowCall = true;\r\n            _.js += '(';\r\n        }\r\n\r\n        ExprGen[$expression.type]($expression, newSettings);\r\n\r\n        if (parenthesize)\r\n            _.js += ')';\r\n    },\r\n\r\n    Literal: function generateLiteral ($expr) {\r\n        if (extra.raw && $expr.raw !== void 0)\r\n            _.js += $expr.raw;\r\n\r\n        else if ($expr.value === null)\r\n            _.js += 'null';\r\n\r\n        else {\r\n            var valueType = typeof $expr.value;\r\n\r\n            if (valueType === 'string')\r\n                _.js += escapeString($expr.value);\r\n\r\n            else if (valueType === 'number')\r\n                _.js += generateNumber($expr.value);\r\n\r\n            else if (valueType === 'boolean')\r\n                _.js += $expr.value ? 'true' : 'false';\r\n\r\n            else\r\n                _.js += generateRegExp($expr.value);\r\n        }\r\n    },\r\n\r\n    GeneratorExpression: generateGeneratorOrComprehensionExpression,\r\n\r\n    ComprehensionExpression: generateGeneratorOrComprehensionExpression,\r\n\r\n    ComprehensionBlock: function generateComprehensionBlock ($expr) {\r\n        var $left   = $expr.left,\r\n            leftJs  = void 0,\r\n            rightJs = exprToJs($expr.right, Preset.e5);\r\n\r\n        if ($left.type === Syntax.VariableDeclaration)\r\n            leftJs = $left.kind + _.space + stmtToJs($left.declarations[0], Preset.s6);\r\n\r\n        else\r\n            leftJs = exprToJs($left, Preset.e10);\r\n\r\n        leftJs = join(leftJs, $expr.of ? 'of' : 'in');\r\n\r\n        _.js += 'for' + _.optSpace + '(' + join(leftJs, rightJs) + ')';\r\n    },\r\n\r\n    RestElement: function generateRestElement ($node) {\r\n        _.js += '...' + $node.argument.name;\r\n    },\r\n\r\n    SpreadElement: function generateSpreadElement ($expr) {\r\n        var $arg = $expr.argument;\r\n\r\n        _.js += '...';\r\n        ExprGen[$arg.type]($arg, Preset.e4);\r\n    },\r\n\r\n    TaggedTemplateExpression: function generateTaggedTemplateExpression ($expr, settings) {\r\n        var $tag         = $expr.tag,\r\n            $quasi       = $expr.quasi,\r\n            parenthesize = Precedence.TaggedTemplate < settings.precedence;\r\n\r\n        if (parenthesize)\r\n            _.js += '(';\r\n\r\n        ExprGen[$tag.type]($tag, Preset.e11(settings.allowCall));\r\n        ExprGen[$quasi.type]($quasi, Preset.e12);\r\n\r\n        if (parenthesize)\r\n            _.js += ')';\r\n    },\r\n\r\n    TemplateElement: function generateTemplateElement ($expr) {\r\n        //NOTE: Don't use \"cooked\". Since tagged template can use raw template\r\n        // representation. So if we do so, it breaks the script semantics.\r\n        _.js += $expr.value.raw;\r\n    },\r\n\r\n    TemplateLiteral: function generateTemplateLiteral ($expr) {\r\n        var $quasis      = $expr.quasis,\r\n            $childExprs  = $expr.expressions,\r\n            quasiCount   = $quasis.length,\r\n            lastQuasiIdx = quasiCount - 1;\r\n\r\n        _.js += '`';\r\n\r\n        for (var i = 0; i < quasiCount; ++i) {\r\n            var $quasi = $quasis[i];\r\n\r\n            ExprGen[$quasi.type]($quasi, Preset.e13);\r\n\r\n            if (i !== lastQuasiIdx) {\r\n                var $childExpr = $childExprs[i];\r\n\r\n                _.js += '${' + _.optSpace;\r\n                ExprGen[$childExpr.type]($childExpr, Preset.e5);\r\n                _.js += _.optSpace + '}';\r\n            }\r\n        }\r\n\r\n        _.js += '`';\r\n    },\r\n\r\n    Super: function generateSuper () {\r\n        _.js += 'super';\r\n    }\r\n};\r\n\r\n\r\n//-------------------------------------------------===------------------------------------------------------\r\n//                                              Statements\r\n//-------------------------------------------------===------------------------------------------------------\r\n\r\n\r\n//Regular expressions\r\nvar EXPR_STMT_UNALLOWED_EXPR_REGEXP = /^{|^class(?:\\s|{)|^(async )?function(?:\\s|\\*|\\()/;\r\n\r\n\r\n//Common statement generators\r\nfunction generateTryStatementHandlers (stmtJs, $finalizer, handlers) {\r\n    var handlerCount   = handlers.length,\r\n        lastHandlerIdx = handlerCount - 1;\r\n\r\n    for (var i = 0; i < handlerCount; ++i) {\r\n        var handlerJs = stmtToJs(handlers[i], Preset.s7);\r\n\r\n        stmtJs = join(stmtJs, handlerJs);\r\n\r\n        if ($finalizer || i !== lastHandlerIdx)\r\n            stmtJs += adoptionSuffix(handlers[i].body);\r\n    }\r\n\r\n    return stmtJs;\r\n}\r\n\r\nfunction generateForStatementIterator ($op, $stmt, settings) {\r\n    var $body                 = $stmt.body,\r\n        $left                 = $stmt.left,\r\n        bodySemicolonOptional = !semicolons && settings.semicolonOptional,\r\n        prevIndent1           = shiftIndent(),\r\n        awaitStr              = $stmt.await ? ' await' : '',\r\n        stmtJs                = 'for' + awaitStr + _.optSpace + '(';\r\n\r\n    if ($left.type === Syntax.VariableDeclaration) {\r\n        var prevIndent2 = shiftIndent();\r\n\r\n        stmtJs += $left.kind + _.space + stmtToJs($left.declarations[0], Preset.s6);\r\n        _.indent = prevIndent2;\r\n    }\r\n\r\n    else\r\n        stmtJs += exprToJs($left, Preset.e10);\r\n\r\n    stmtJs = join(stmtJs, $op);\r\n\r\n    var rightJs = exprToJs($stmt.right, Preset.e4);\r\n\r\n    stmtJs = join(stmtJs, rightJs) + ')';\r\n\r\n    _.indent = prevIndent1;\r\n\r\n    _.js += stmtJs + adoptionPrefix($body);\r\n    StmtGen[$body.type]($body, Preset.s4(bodySemicolonOptional));\r\n}\r\n\r\n\r\n//Statement generator dictionary\r\nvar StmtRawGen = {\r\n    BlockStatement: function generateBlockStatement ($stmt, settings) {\r\n        var $body      = $stmt.body,\r\n            len        = $body.length,\r\n            lastIdx    = len - 1,\r\n            prevIndent = shiftIndent();\r\n\r\n        _.js += '{' + _.newline;\r\n\r\n        for (var i = 0; i < len; i++) {\r\n            var $item = $body[i];\r\n\r\n            _.js += _.indent;\r\n            StmtGen[$item.type]($item, Preset.s1(settings.functionBody, i === lastIdx));\r\n            _.js += _.newline;\r\n        }\r\n\r\n        _.indent = prevIndent;\r\n        _.js += _.indent + '}';\r\n    },\r\n\r\n    BreakStatement: function generateBreakStatement ($stmt, settings) {\r\n        if ($stmt.label)\r\n            _.js += 'break ' + $stmt.label.name;\r\n\r\n        else\r\n            _.js += 'break';\r\n\r\n        if (semicolons || !settings.semicolonOptional)\r\n            _.js += ';';\r\n    },\r\n\r\n    ContinueStatement: function generateContinueStatement ($stmt, settings) {\r\n        if ($stmt.label)\r\n            _.js += 'continue ' + $stmt.label.name;\r\n\r\n        else\r\n            _.js += 'continue';\r\n\r\n        if (semicolons || !settings.semicolonOptional)\r\n            _.js += ';';\r\n    },\r\n\r\n    ClassBody: function generateClassBody ($stmt) {\r\n        var $body       = $stmt.body,\r\n            itemCount   = $body.length,\r\n            lastItemIdx = itemCount - 1,\r\n            prevIndent  = shiftIndent();\r\n\r\n        _.js += '{' + _.newline;\r\n\r\n        for (var i = 0; i < itemCount; i++) {\r\n            var $item    = $body[i],\r\n                itemType = $item.type || Syntax.Property;\r\n\r\n            _.js += _.indent;\r\n            ExprGen[itemType]($item, Preset.e5);\r\n\r\n            if (i !== lastItemIdx)\r\n                _.js += _.newline;\r\n        }\r\n\r\n        _.indent = prevIndent;\r\n        _.js += _.newline + _.indent + '}';\r\n    },\r\n\r\n    ClassDeclaration: function generateClassDeclaration ($stmt) {\r\n        var $body  = $stmt.body,\r\n            $super = $stmt.superClass,\r\n            js     = 'class ' + $stmt.id.name;\r\n\r\n        if ($super) {\r\n            var superJs = exprToJs($super, Preset.e4);\r\n\r\n            js += _.space + join('extends', superJs);\r\n        }\r\n\r\n        _.js += js + _.optSpace;\r\n        StmtGen[$body.type]($body, Preset.s2);\r\n    },\r\n\r\n    DirectiveStatement: function generateDirectiveStatement ($stmt, settings) {\r\n        if (extra.raw && $stmt.raw)\r\n            _.js += $stmt.raw;\r\n\r\n        else\r\n            _.js += escapeDirective($stmt.directive);\r\n\r\n        if (semicolons || !settings.semicolonOptional)\r\n            _.js += ';';\r\n    },\r\n\r\n    DoWhileStatement: function generateDoWhileStatement ($stmt, settings) {\r\n        var $body  = $stmt.body,\r\n            $test  = $stmt.test,\r\n            bodyJs = adoptionPrefix($body) +\r\n                     stmtToJs($body, Preset.s7) +\r\n                     adoptionSuffix($body);\r\n\r\n        //NOTE: Because `do 42 while (cond)` is Syntax Error. We need semicolon.\r\n        var stmtJs = join('do', bodyJs);\r\n\r\n        _.js += join(stmtJs, 'while' + _.optSpace + '(');\r\n        ExprGen[$test.type]($test, Preset.e5);\r\n        _.js += ')';\r\n\r\n        if (semicolons || !settings.semicolonOptional)\r\n            _.js += ';';\r\n    },\r\n\r\n    CatchClause: function generateCatchClause ($stmt) {\r\n        var $param     = $stmt.param,\r\n            $guard     = $stmt.guard,\r\n            $body      = $stmt.body,\r\n            prevIndent = shiftIndent();\r\n\r\n        _.js += 'catch' + _.optSpace;\r\n\r\n        if ($param) {\r\n           _.js += '(';\r\n           ExprGen[$param.type]($param, Preset.e5);\r\n        }\r\n\r\n        if ($guard) {\r\n            _.js += ' if ';\r\n            ExprGen[$guard.type]($guard, Preset.e5);\r\n        }\r\n\r\n        _.indent = prevIndent;\r\n        if ($param) {\r\n           _.js += ')';\r\n        }\r\n\r\n        _.js += adoptionPrefix($body);\r\n        StmtGen[$body.type]($body, Preset.s7);\r\n    },\r\n\r\n    DebuggerStatement: function generateDebuggerStatement ($stmt, settings) {\r\n        _.js += 'debugger';\r\n\r\n        if (semicolons || !settings.semicolonOptional)\r\n            _.js += ';';\r\n    },\r\n\r\n    EmptyStatement: function generateEmptyStatement () {\r\n        _.js += ';';\r\n    },\r\n\r\n    ExportAllDeclaration: function ($stmt, settings) {\r\n        StmtRawGen.ExportDeclaration($stmt, settings, true);\r\n    },\r\n\r\n    ExportDeclaration: function generateExportDeclaration ($stmt, settings, exportAll) {\r\n        var $specs        = $stmt.specifiers,\r\n            $decl         = $stmt.declaration,\r\n            withSemicolon = semicolons || !settings.semicolonOptional;\r\n\r\n        // export default AssignmentExpression[In] ;\r\n        if ($stmt['default']) {\r\n            var declJs = exprToJs($decl, Preset.e4);\r\n\r\n            _.js += join('export default', declJs);\r\n\r\n            if (withSemicolon)\r\n                _.js += ';';\r\n        }\r\n\r\n        // export * FromClause ;\r\n        // export ExportClause[NoReference] FromClause ;\r\n        // export ExportClause ;\r\n        else if ($specs || exportAll) {\r\n            var stmtJs = 'export';\r\n\r\n            if (exportAll)\r\n                stmtJs += _.optSpace + '*';\r\n\r\n            else if ($specs.length === 0)\r\n                stmtJs += _.optSpace + '{' + _.optSpace + '}';\r\n\r\n            else if ($specs[0].type === Syntax.ExportBatchSpecifier) {\r\n                var specJs = exprToJs($specs[0], Preset.e5);\r\n\r\n                stmtJs = join(stmtJs, specJs);\r\n            }\r\n\r\n            else {\r\n                var prevIndent  = shiftIndent(),\r\n                    specCount   = $specs.length,\r\n                    lastSpecIdx = specCount - 1;\r\n\r\n                stmtJs += _.optSpace + '{';\r\n\r\n                for (var i = 0; i < specCount; ++i) {\r\n                    stmtJs += _.newline + _.indent;\r\n                    stmtJs += exprToJs($specs[i], Preset.e5);\r\n\r\n                    if (i !== lastSpecIdx)\r\n                        stmtJs += ',';\r\n                }\r\n\r\n                _.indent = prevIndent;\r\n                stmtJs += _.newline + _.indent + '}';\r\n            }\r\n\r\n            if ($stmt.source) {\r\n                _.js += join(stmtJs, 'from' + _.optSpace);\r\n                ExprGen.Literal($stmt.source);\r\n            }\r\n\r\n            else\r\n                _.js += stmtJs;\r\n\r\n            if (withSemicolon)\r\n                _.js += ';';\r\n        }\r\n\r\n        // export VariableStatement\r\n        // export Declaration[Default]\r\n        else if ($decl) {\r\n            var declJs = stmtToJs($decl, Preset.s4(!withSemicolon));\r\n\r\n            _.js += join('export', declJs);\r\n        }\r\n    },\r\n\r\n    ExportNamedDeclaration: function ($stmt, settings) {\r\n        StmtRawGen.ExportDeclaration($stmt, settings);\r\n    },\r\n\r\n    ExpressionStatement: function generateExpressionStatement ($stmt, settings) {\r\n        var exprJs       = exprToJs($stmt.expression, Preset.e5),\r\n            parenthesize = EXPR_STMT_UNALLOWED_EXPR_REGEXP.test(exprJs) ||\r\n                           (directive &&\r\n                            settings.directiveContext &&\r\n                            $stmt.expression.type === Syntax.Literal &&\r\n                            typeof $stmt.expression.value === 'string');\r\n\r\n        //NOTE: '{', 'function', 'class' are not allowed in expression statement.\r\n        // Therefore, they should be parenthesized.\r\n        if (parenthesize)\r\n            _.js += '(' + exprJs + ')';\r\n\r\n        else\r\n            _.js += exprJs;\r\n\r\n        if (semicolons || !settings.semicolonOptional)\r\n            _.js += ';';\r\n    },\r\n\r\n    ImportDeclaration: function generateImportDeclaration ($stmt, settings) {\r\n        var $specs    = $stmt.specifiers,\r\n            stmtJs    = 'import',\r\n            specCount = $specs.length;\r\n\r\n        //NOTE: If no ImportClause is present,\r\n        // this should be `import ModuleSpecifier` so skip `from`\r\n        // ModuleSpecifier is StringLiteral.\r\n        if (specCount) {\r\n            var hasBinding    = !!$specs[0]['default'],\r\n                firstNamedIdx = hasBinding ? 1 : 0,\r\n                lastSpecIdx   = specCount - 1;\r\n\r\n            // ImportedBinding\r\n            if (hasBinding)\r\n                stmtJs = join(stmtJs, $specs[0].id.name);\r\n\r\n            // NamedImports\r\n            if (firstNamedIdx < specCount) {\r\n                if (hasBinding)\r\n                    stmtJs += ',';\r\n\r\n                stmtJs += _.optSpace + '{';\r\n\r\n                // import { ... } from \"...\";\r\n                if (firstNamedIdx === lastSpecIdx)\r\n                    stmtJs += _.optSpace + exprToJs($specs[firstNamedIdx], Preset.e5) + _.optSpace;\r\n\r\n                else {\r\n                    var prevIndent = shiftIndent();\r\n\r\n                    // import {\r\n                    //    ...,\r\n                    //    ...,\r\n                    // } from \"...\";\r\n                    for (var i = firstNamedIdx; i < specCount; i++) {\r\n                        stmtJs += _.newline + _.indent + exprToJs($specs[i], Preset.e5);\r\n\r\n                        if (i !== lastSpecIdx)\r\n                            stmtJs += ',';\r\n                    }\r\n\r\n                    _.indent = prevIndent;\r\n                    stmtJs += _.newline + _.indent;\r\n                }\r\n\r\n                stmtJs += '}' + _.optSpace;\r\n            }\r\n\r\n            stmtJs = join(stmtJs, 'from')\r\n        }\r\n\r\n        _.js += stmtJs + _.optSpace;\r\n        ExprGen.Literal($stmt.source);\r\n\r\n        if (semicolons || !settings.semicolonOptional)\r\n            _.js += ';';\r\n    },\r\n\r\n    VariableDeclarator: function generateVariableDeclarator ($stmt, settings) {\r\n        var $id         = $stmt.id,\r\n            $init       = $stmt.init,\r\n            genSettings = Preset.e1(settings.allowIn);\r\n\r\n        if ($init) {\r\n            ExprGen[$id.type]($id, genSettings);\r\n            _.js += _.optSpace + '=' + _.optSpace;\r\n            ExprGen[$init.type]($init, genSettings, $stmt);\r\n        }\r\n\r\n        else {\r\n            if ($id.type === Syntax.Identifier)\r\n                _.js += $id.name;\r\n\r\n            else\r\n                ExprGen[$id.type]($id, genSettings);\r\n        }\r\n    },\r\n\r\n    VariableDeclaration: function generateVariableDeclaration ($stmt, settings) {\r\n        var $decls          = $stmt.declarations,\r\n            len             = $decls.length,\r\n            prevIndent      = len > 1 ? shiftIndent() : _.indent,\r\n            declGenSettings = Preset.s3(settings.allowIn);\r\n\r\n        _.js += $stmt.kind;\r\n\r\n        for (var i = 0; i < len; i++) {\r\n            var $decl = $decls[i];\r\n\r\n            _.js += i === 0 ? _.space : (',' + _.optSpace);\r\n            StmtGen[$decl.type]($decl, declGenSettings);\r\n        }\r\n\r\n        if (semicolons || !settings.semicolonOptional)\r\n            _.js += ';';\r\n\r\n        _.indent = prevIndent;\r\n    },\r\n\r\n    ThrowStatement: function generateThrowStatement ($stmt, settings) {\r\n        var argJs = exprToJs($stmt.argument, Preset.e5);\r\n\r\n        _.js += join('throw', argJs);\r\n\r\n        if (semicolons || !settings.semicolonOptional)\r\n            _.js += ';';\r\n    },\r\n\r\n    TryStatement: function generateTryStatement ($stmt) {\r\n        var $block     = $stmt.block,\r\n            $finalizer = $stmt.finalizer,\r\n            stmtJs     = 'try' +\r\n                         adoptionPrefix($block) +\r\n                         stmtToJs($block, Preset.s7) +\r\n                         adoptionSuffix($block);\r\n\r\n        var $handlers = $stmt.handlers || $stmt.guardedHandlers;\r\n\r\n        if ($handlers)\r\n            stmtJs = generateTryStatementHandlers(stmtJs, $finalizer, $handlers);\r\n\r\n        if ($stmt.handler) {\r\n            $handlers = isArray($stmt.handler) ? $stmt.handler : [$stmt.handler];\r\n            stmtJs    = generateTryStatementHandlers(stmtJs, $finalizer, $handlers);\r\n        }\r\n\r\n        if ($finalizer) {\r\n            stmtJs = join(stmtJs, 'finally' + adoptionPrefix($finalizer));\r\n            stmtJs += stmtToJs($finalizer, Preset.s7);\r\n        }\r\n\r\n        _.js += stmtJs;\r\n    },\r\n\r\n    SwitchStatement: function generateSwitchStatement ($stmt) {\r\n        var $cases     = $stmt.cases,\r\n            $discr     = $stmt.discriminant,\r\n            prevIndent = shiftIndent();\r\n\r\n        _.js += 'switch' + _.optSpace + '(';\r\n        ExprGen[$discr.type]($discr, Preset.e5);\r\n        _.js += ')' + _.optSpace + '{' + _.newline;\r\n        _.indent = prevIndent;\r\n\r\n        if ($cases) {\r\n            var caseCount   = $cases.length,\r\n                lastCaseIdx = caseCount - 1;\r\n\r\n            for (var i = 0; i < caseCount; i++) {\r\n                var $case = $cases[i];\r\n\r\n                _.js += _.indent;\r\n                StmtGen[$case.type]($case, Preset.s4(i === lastCaseIdx));\r\n                _.js += _.newline;\r\n            }\r\n        }\r\n\r\n        _.js += _.indent + '}';\r\n    },\r\n\r\n    SwitchCase: function generateSwitchCase ($stmt, settings) {\r\n        var $conseqs                = $stmt.consequent,\r\n            $firstConseq            = $conseqs[0],\r\n            $test                   = $stmt.test,\r\n            i                       = 0,\r\n            conseqSemicolonOptional = !semicolons && settings.semicolonOptional,\r\n            conseqCount             = $conseqs.length,\r\n            lastConseqIdx           = conseqCount - 1,\r\n            prevIndent              = shiftIndent();\r\n\r\n        if ($test) {\r\n            var testJs = exprToJs($test, Preset.e5);\r\n\r\n            _.js += join('case', testJs) + ':';\r\n        }\r\n\r\n        else\r\n            _.js += 'default:';\r\n\r\n\r\n        if (conseqCount && $firstConseq.type === Syntax.BlockStatement) {\r\n            i++;\r\n            _.js += adoptionPrefix($firstConseq);\r\n            StmtGen[$firstConseq.type]($firstConseq, Preset.s7);\r\n        }\r\n\r\n        for (; i < conseqCount; i++) {\r\n            var $conseq           = $conseqs[i],\r\n                semicolonOptional = i === lastConseqIdx && conseqSemicolonOptional;\r\n\r\n            _.js += _.newline + _.indent;\r\n            StmtGen[$conseq.type]($conseq, Preset.s4(semicolonOptional));\r\n        }\r\n\r\n        _.indent = prevIndent;\r\n    },\r\n\r\n    IfStatement: function generateIfStatement ($stmt, settings) {\r\n        var $conseq           = $stmt.consequent,\r\n            $test             = $stmt.test,\r\n            prevIndent        = shiftIndent(),\r\n            semicolonOptional = !semicolons && settings.semicolonOptional;\r\n\r\n        _.js += 'if' + _.optSpace + '(';\r\n        ExprGen[$test.type]($test, Preset.e5);\r\n        _.js += ')';\r\n        _.indent = prevIndent;\r\n        _.js += adoptionPrefix($conseq);\r\n\r\n        if ($stmt.alternate) {\r\n            var conseq = stmtToJs($conseq, Preset.s7) + adoptionSuffix($conseq),\r\n                alt    = stmtToJs($stmt.alternate, Preset.s4(semicolonOptional));\r\n\r\n            if ($stmt.alternate.type === Syntax.IfStatement)\r\n                alt = 'else ' + alt;\r\n\r\n            else\r\n                alt = join('else', adoptionPrefix($stmt.alternate) + alt);\r\n\r\n            _.js += join(conseq, alt);\r\n        }\r\n\r\n        else\r\n            StmtGen[$conseq.type]($conseq, Preset.s4(semicolonOptional));\r\n    },\r\n\r\n    ForStatement: function generateForStatement ($stmt, settings) {\r\n        var $init                 = $stmt.init,\r\n            $test                 = $stmt.test,\r\n            $body                 = $stmt.body,\r\n            $update               = $stmt.update,\r\n            bodySemicolonOptional = !semicolons && settings.semicolonOptional,\r\n            prevIndent            = shiftIndent();\r\n\r\n        _.js += 'for' + _.optSpace + '(';\r\n\r\n        if ($init) {\r\n            if ($init.type === Syntax.VariableDeclaration)\r\n                StmtGen[$init.type]($init, Preset.s6);\r\n\r\n            else {\r\n                ExprGen[$init.type]($init, Preset.e14);\r\n                _.js += ';';\r\n            }\r\n        }\r\n\r\n        else\r\n            _.js += ';';\r\n\r\n        if ($test) {\r\n            _.js += _.optSpace;\r\n            ExprGen[$test.type]($test, Preset.e5);\r\n        }\r\n\r\n        _.js += ';';\r\n\r\n        if ($update) {\r\n            _.js += _.optSpace;\r\n            ExprGen[$update.type]($update, Preset.e5);\r\n        }\r\n\r\n        _.js += ')';\r\n        _.indent = prevIndent;\r\n        _.js += adoptionPrefix($body);\r\n        StmtGen[$body.type]($body, Preset.s4(bodySemicolonOptional));\r\n    },\r\n\r\n    ForInStatement: function generateForInStatement ($stmt, settings) {\r\n        generateForStatementIterator('in', $stmt, settings);\r\n    },\r\n\r\n    ForOfStatement: function generateForOfStatement ($stmt, settings) {\r\n        generateForStatementIterator('of', $stmt, settings);\r\n    },\r\n\r\n    LabeledStatement: function generateLabeledStatement ($stmt, settings) {\r\n        var $body                 = $stmt.body,\r\n            bodySemicolonOptional = !semicolons && settings.semicolonOptional,\r\n            prevIndent            = _.indent;\r\n\r\n        _.js += $stmt.label.name + ':' + adoptionPrefix($body);\r\n\r\n        if ($body.type !== Syntax.BlockStatement)\r\n            prevIndent = shiftIndent();\r\n\r\n        StmtGen[$body.type]($body, Preset.s4(bodySemicolonOptional));\r\n        _.indent       = prevIndent;\r\n    },\r\n\r\n    ModuleDeclaration: function generateModuleDeclaration ($stmt, settings) {\r\n        _.js += 'module' + _.space + $stmt.id.name + _.space + 'from' + _.optSpace;\r\n\r\n        ExprGen.Literal($stmt.source);\r\n\r\n        if (semicolons || !settings.semicolonOptional)\r\n            _.js += ';';\r\n    },\r\n\r\n    Program: function generateProgram ($stmt) {\r\n        var $body   = $stmt.body,\r\n            len     = $body.length,\r\n            lastIdx = len - 1;\r\n\r\n        if (safeConcatenation && len > 0)\r\n            _.js += '\\n';\r\n\r\n        for (var i = 0; i < len; i++) {\r\n            var $item = $body[i];\r\n\r\n            _.js += _.indent;\r\n            StmtGen[$item.type]($item, Preset.s5(!safeConcatenation && i === lastIdx));\r\n\r\n            if (i !== lastIdx)\r\n                _.js += _.newline;\r\n        }\r\n    },\r\n\r\n    FunctionDeclaration: function generateFunctionDeclaration ($stmt) {\r\n        var isGenerator = !!$stmt.generator;\r\n\r\n        if ($stmt.async)\r\n            _.js += 'async ';\r\n\r\n        _.js += isGenerator ? ('function*' + _.optSpace) : ('function' + _.space );\r\n        _.js += $stmt.id.name;\r\n        generateFunctionBody($stmt);\r\n    },\r\n\r\n    ReturnStatement: function generateReturnStatement ($stmt, settings) {\r\n        var $arg = $stmt.argument;\r\n\r\n        if ($arg) {\r\n            var argJs = exprToJs($arg, Preset.e5);\r\n\r\n            _.js += join('return', argJs);\r\n        }\r\n\r\n        else\r\n            _.js += 'return';\r\n\r\n        if (semicolons || !settings.semicolonOptional)\r\n            _.js += ';';\r\n    },\r\n\r\n    WhileStatement: function generateWhileStatement ($stmt, settings) {\r\n        var $body                 = $stmt.body,\r\n            $test                 = $stmt.test,\r\n            bodySemicolonOptional = !semicolons && settings.semicolonOptional,\r\n            prevIndent            = shiftIndent();\r\n\r\n        _.js += 'while' + _.optSpace + '(';\r\n        ExprGen[$test.type]($test, Preset.e5);\r\n        _.js += ')';\r\n        _.indent = prevIndent;\r\n\r\n        _.js += adoptionPrefix($body);\r\n        StmtGen[$body.type]($body, Preset.s4(bodySemicolonOptional));\r\n    },\r\n\r\n    WithStatement: function generateWithStatement ($stmt, settings) {\r\n        var $body                 = $stmt.body,\r\n            $obj                  = $stmt.object,\r\n            bodySemicolonOptional = !semicolons && settings.semicolonOptional,\r\n            prevIndent            = shiftIndent();\r\n\r\n        _.js += 'with' + _.optSpace + '(';\r\n        ExprGen[$obj.type]($obj, Preset.e5);\r\n        _.js += ')';\r\n        _.indent = prevIndent;\r\n        _.js += adoptionPrefix($body);\r\n        StmtGen[$body.type]($body, Preset.s4(bodySemicolonOptional));\r\n    }\r\n};\r\n\r\nfunction generateStatement ($stmt, option) {\r\n    StmtGen[$stmt.type]($stmt, option);\r\n}\r\n\r\n//CodeGen\r\n//-----------------------------------------------------------------------------------\r\nfunction exprToJs ($expr, settings, $parent) {\r\n    var savedJs = _.js;\r\n    _.js        = '';\r\n\r\n    ExprGen[$expr.type]($expr, settings, $parent);\r\n\r\n    var src = _.js;\r\n    _.js    = savedJs;\r\n\r\n    return src;\r\n}\r\n\r\nfunction stmtToJs ($stmt, settings) {\r\n    var savedJs = _.js;\r\n    _.js        = '';\r\n\r\n    StmtGen[$stmt.type]($stmt, settings);\r\n\r\n    var src = _.js;\r\n    _.js    = savedJs;\r\n\r\n    return src;\r\n}\r\n\r\nfunction run ($node) {\r\n    _.js = '';\r\n\r\n    if (StmtGen[$node.type])\r\n        StmtGen[$node.type]($node, Preset.s7);\r\n\r\n    else\r\n        ExprGen[$node.type]($node, Preset.e19);\r\n\r\n    return _.js;\r\n}\r\n\r\nfunction wrapExprGen (gen) {\r\n    return function ($expr, settings) {\r\n        if (extra.verbatim && $expr.hasOwnProperty(extra.verbatim))\r\n            generateVerbatim($expr, settings);\r\n\r\n        else\r\n            gen($expr, settings);\r\n    }\r\n}\r\n\r\nfunction createExprGenWithExtras () {\r\n    var gens = {};\r\n\r\n    for (var key in ExprRawGen) {\r\n        if (ExprRawGen.hasOwnProperty(key))\r\n            gens[key] = wrapExprGen(ExprRawGen[key]);\r\n    }\r\n\r\n    return gens;\r\n}\r\n\r\n\r\n//Strings\r\nvar _ = {\r\n    js:         '',\r\n    newline:    '\\n',\r\n    optSpace:   ' ',\r\n    space:      ' ',\r\n    indentUnit: '    ',\r\n    indent:     ''\r\n};\r\n\r\n\r\n//Generators\r\nvar ExprGen = void 0,\r\n    StmtGen = StmtRawGen;\r\n\r\n\r\nexports.generate = function ($node, options) {\r\n    var defaultOptions = getDefaultOptions(), result, pair;\r\n\r\n    if (options != null) {\r\n        //NOTE: Obsolete options\r\n        //\r\n        //   `options.indent`\r\n        //   `options.base`\r\n        //\r\n        // Instead of them, we can use `option.format.indent`.\r\n        if (typeof options.indent === 'string') {\r\n            defaultOptions.format.indent.style = options.indent;\r\n        }\r\n        if (typeof options.base === 'number') {\r\n            defaultOptions.format.indent.base = options.base;\r\n        }\r\n        options      = updateDeeply(defaultOptions, options);\r\n        _.indentUnit = options.format.indent.style;\r\n        if (typeof options.base === 'string') {\r\n            _.indent = options.base;\r\n        }\r\n        else {\r\n            _.indent = stringRepeat(_.indentUnit, options.format.indent.base);\r\n        }\r\n    }\r\n    else {\r\n        options      = defaultOptions;\r\n        _.indentUnit = options.format.indent.style;\r\n        _.indent     = stringRepeat(_.indentUnit, options.format.indent.base);\r\n    }\r\n    json        = options.format.json;\r\n    renumber    = options.format.renumber;\r\n    hexadecimal = json ? false : options.format.hexadecimal;\r\n    quotes      = json ? 'double' : options.format.quotes;\r\n    escapeless  = options.format.escapeless;\r\n\r\n    _.newline  = options.format.newline;\r\n    _.optSpace = options.format.space;\r\n\r\n    if (options.format.compact)\r\n        _.newline = _.optSpace = _.indentUnit = _.indent = '';\r\n\r\n    _.space           = _.optSpace ? _.optSpace : ' ';\r\n    parentheses       = options.format.parentheses;\r\n    semicolons        = options.format.semicolons;\r\n    safeConcatenation = options.format.safeConcatenation;\r\n    directive         = options.directive;\r\n    parse             = json ? null : options.parse;\r\n    extra             = options;\r\n\r\n    if (extra.verbatim)\r\n        ExprGen = createExprGenWithExtras();\r\n\r\n    else\r\n        ExprGen = ExprRawGen;\r\n\r\n    return run($node);\r\n};\r\n", "\"use strict\";\n\nvar defaultParseOptions = {\n  decodeValues: true,\n  map: false,\n  silent: false,\n};\n\nfunction isNonEmptyString(str) {\n  return typeof str === \"string\" && !!str.trim();\n}\n\nfunction parseString(setCookieValue, options) {\n  var parts = setCookieValue.split(\";\").filter(isNonEmptyString);\n\n  var nameValuePairStr = parts.shift();\n  var parsed = parseNameValuePair(nameValuePairStr);\n  var name = parsed.name;\n  var value = parsed.value;\n\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  try {\n    value = options.decodeValues ? decodeURIComponent(value) : value; // decode cookie value\n  } catch (e) {\n    console.error(\n      \"set-cookie-parser encountered an error while decoding a cookie with value '\" +\n        value +\n        \"'. Set options.decodeValues to false to disable this feature.\",\n      e\n    );\n  }\n\n  var cookie = {\n    name: name,\n    value: value,\n  };\n\n  parts.forEach(function (part) {\n    var sides = part.split(\"=\");\n    var key = sides.shift().trimLeft().toLowerCase();\n    var value = sides.join(\"=\");\n    if (key === \"expires\") {\n      cookie.expires = new Date(value);\n    } else if (key === \"max-age\") {\n      cookie.maxAge = parseInt(value, 10);\n    } else if (key === \"secure\") {\n      cookie.secure = true;\n    } else if (key === \"httponly\") {\n      cookie.httpOnly = true;\n    } else if (key === \"samesite\") {\n      cookie.sameSite = value;\n    } else {\n      cookie[key] = value;\n    }\n  });\n\n  return cookie;\n}\n\nfunction parseNameValuePair(nameValuePairStr) {\n  // Parses name-value-pair according to rfc6265bis draft\n\n  var name = \"\";\n  var value = \"\";\n  var nameValueArr = nameValuePairStr.split(\"=\");\n  if (nameValueArr.length > 1) {\n    name = nameValueArr.shift();\n    value = nameValueArr.join(\"=\"); // everything after the first =, joined by a \"=\" if there was more than one part\n  } else {\n    value = nameValuePairStr;\n  }\n\n  return { name: name, value: value };\n}\n\nfunction parse(input, options) {\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  if (!input) {\n    if (!options.map) {\n      return [];\n    } else {\n      return {};\n    }\n  }\n\n  if (input.headers) {\n    if (typeof input.headers.getSetCookie === \"function\") {\n      // for fetch responses - they combine headers of the same type in the headers array,\n      // but getSetCookie returns an uncombined array\n      input = input.headers.getSetCookie();\n    } else if (input.headers[\"set-cookie\"]) {\n      // fast-path for node.js (which automatically normalizes header names to lower-case\n      input = input.headers[\"set-cookie\"];\n    } else {\n      // slow-path for other environments - see #25\n      var sch =\n        input.headers[\n          Object.keys(input.headers).find(function (key) {\n            return key.toLowerCase() === \"set-cookie\";\n          })\n        ];\n      // warn if called on a request-like object with a cookie header rather than a set-cookie header - see #34, 36\n      if (!sch && input.headers.cookie && !options.silent) {\n        console.warn(\n          \"Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.\"\n        );\n      }\n      input = sch;\n    }\n  }\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  if (!options.map) {\n    return input.filter(isNonEmptyString).map(function (str) {\n      return parseString(str, options);\n    });\n  } else {\n    var cookies = {};\n    return input.filter(isNonEmptyString).reduce(function (cookies, str) {\n      var cookie = parseString(str, options);\n      cookies[cookie.name] = cookie;\n      return cookies;\n    }, cookies);\n  }\n}\n\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n\n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/\nfunction splitCookiesString(cookiesString) {\n  if (Array.isArray(cookiesString)) {\n    return cookiesString;\n  }\n  if (typeof cookiesString !== \"string\") {\n    return [];\n  }\n\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        // ',' is a cookie separator if we have later first '=', not ';' or ','\n        lastComma = pos;\n        pos += 1;\n\n        skipWhitespace();\n        nextStart = pos;\n\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n\n        // currently special character\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          // we found cookies separator\n          cookiesSeparatorFound = true;\n          // pos is inside the next cookie, so back up and return it.\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          // in param ',' or param separator ';',\n          // we continue from that comma\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n\n  return cookiesStrings;\n}\n\nmodule.exports = parse;\nmodule.exports.parse = parse;\nmodule.exports.parseString = parseString;\nmodule.exports.splitCookiesString = splitCookiesString;\n", "{\n  \"application/1d-interleaved-parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"application/3gpdash-qoe-report+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/3gpp-ims+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/3gpphal+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/3gpphalforms+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/a2l\": {\n    \"source\": \"iana\"\n  },\n  \"application/ace+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/activemessage\": {\n    \"source\": \"iana\"\n  },\n  \"application/activity+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-costmap+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-costmapfilter+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-directory+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-endpointcost+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-endpointcostparams+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-endpointprop+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-endpointpropparams+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-error+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-networkmap+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-networkmapfilter+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-updatestreamcontrol+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-updatestreamparams+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/aml\": {\n    \"source\": \"iana\"\n  },\n  \"application/andrew-inset\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ez\"]\n  },\n  \"application/applefile\": {\n    \"source\": \"iana\"\n  },\n  \"application/applixware\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"aw\"]\n  },\n  \"application/at+jwt\": {\n    \"source\": \"iana\"\n  },\n  \"application/atf\": {\n    \"source\": \"iana\"\n  },\n  \"application/atfx\": {\n    \"source\": \"iana\"\n  },\n  \"application/atom+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"atom\"]\n  },\n  \"application/atomcat+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"atomcat\"]\n  },\n  \"application/atomdeleted+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"atomdeleted\"]\n  },\n  \"application/atomicmail\": {\n    \"source\": \"iana\"\n  },\n  \"application/atomsvc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"atomsvc\"]\n  },\n  \"application/atsc-dwd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"dwd\"]\n  },\n  \"application/atsc-dynamic-event-message\": {\n    \"source\": \"iana\"\n  },\n  \"application/atsc-held+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"held\"]\n  },\n  \"application/atsc-rdt+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/atsc-rsat+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rsat\"]\n  },\n  \"application/atxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/auth-policy+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/bacnet-xdd+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/batch-smtp\": {\n    \"source\": \"iana\"\n  },\n  \"application/bdoc\": {\n    \"compressible\": false,\n    \"extensions\": [\"bdoc\"]\n  },\n  \"application/beep+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/calendar+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/calendar+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xcs\"]\n  },\n  \"application/call-completion\": {\n    \"source\": \"iana\"\n  },\n  \"application/cals-1840\": {\n    \"source\": \"iana\"\n  },\n  \"application/captive+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/cbor-seq\": {\n    \"source\": \"iana\"\n  },\n  \"application/cccex\": {\n    \"source\": \"iana\"\n  },\n  \"application/ccmp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/ccxml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ccxml\"]\n  },\n  \"application/cdfx+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"cdfx\"]\n  },\n  \"application/cdmi-capability\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdmia\"]\n  },\n  \"application/cdmi-container\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdmic\"]\n  },\n  \"application/cdmi-domain\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdmid\"]\n  },\n  \"application/cdmi-object\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdmio\"]\n  },\n  \"application/cdmi-queue\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdmiq\"]\n  },\n  \"application/cdni\": {\n    \"source\": \"iana\"\n  },\n  \"application/cea\": {\n    \"source\": \"iana\"\n  },\n  \"application/cea-2018+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cellml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cfw\": {\n    \"source\": \"iana\"\n  },\n  \"application/city+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/clr\": {\n    \"source\": \"iana\"\n  },\n  \"application/clue+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/clue_info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cms\": {\n    \"source\": \"iana\"\n  },\n  \"application/cnrp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/coap-group+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/coap-payload\": {\n    \"source\": \"iana\"\n  },\n  \"application/commonground\": {\n    \"source\": \"iana\"\n  },\n  \"application/conference-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cose\": {\n    \"source\": \"iana\"\n  },\n  \"application/cose-key\": {\n    \"source\": \"iana\"\n  },\n  \"application/cose-key-set\": {\n    \"source\": \"iana\"\n  },\n  \"application/cpl+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"cpl\"]\n  },\n  \"application/csrattrs\": {\n    \"source\": \"iana\"\n  },\n  \"application/csta+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cstadata+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/csvm+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cu-seeme\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cu\"]\n  },\n  \"application/cwt\": {\n    \"source\": \"iana\"\n  },\n  \"application/cybercash\": {\n    \"source\": \"iana\"\n  },\n  \"application/dart\": {\n    \"compressible\": true\n  },\n  \"application/dash+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mpd\"]\n  },\n  \"application/dash-patch+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mpp\"]\n  },\n  \"application/dashdelta\": {\n    \"source\": \"iana\"\n  },\n  \"application/davmount+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"davmount\"]\n  },\n  \"application/dca-rft\": {\n    \"source\": \"iana\"\n  },\n  \"application/dcd\": {\n    \"source\": \"iana\"\n  },\n  \"application/dec-dx\": {\n    \"source\": \"iana\"\n  },\n  \"application/dialog-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/dicom\": {\n    \"source\": \"iana\"\n  },\n  \"application/dicom+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/dicom+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/dii\": {\n    \"source\": \"iana\"\n  },\n  \"application/dit\": {\n    \"source\": \"iana\"\n  },\n  \"application/dns\": {\n    \"source\": \"iana\"\n  },\n  \"application/dns+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/dns-message\": {\n    \"source\": \"iana\"\n  },\n  \"application/docbook+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"dbk\"]\n  },\n  \"application/dots+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/dskpp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/dssc+der\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dssc\"]\n  },\n  \"application/dssc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xdssc\"]\n  },\n  \"application/dvcs\": {\n    \"source\": \"iana\"\n  },\n  \"application/ecmascript\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"es\",\"ecma\"]\n  },\n  \"application/edi-consent\": {\n    \"source\": \"iana\"\n  },\n  \"application/edi-x12\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/edifact\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/efi\": {\n    \"source\": \"iana\"\n  },\n  \"application/elm+json\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/elm+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.cap+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.comment+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.control+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.deviceinfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.ecall.msd\": {\n    \"source\": \"iana\"\n  },\n  \"application/emergencycalldata.providerinfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.serviceinfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.subscriberinfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.veds+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emma+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"emma\"]\n  },\n  \"application/emotionml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"emotionml\"]\n  },\n  \"application/encaprtp\": {\n    \"source\": \"iana\"\n  },\n  \"application/epp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/epub+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"epub\"]\n  },\n  \"application/eshop\": {\n    \"source\": \"iana\"\n  },\n  \"application/exi\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"exi\"]\n  },\n  \"application/expect-ct-report+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/express\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"exp\"]\n  },\n  \"application/fastinfoset\": {\n    \"source\": \"iana\"\n  },\n  \"application/fastsoap\": {\n    \"source\": \"iana\"\n  },\n  \"application/fdt+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"fdt\"]\n  },\n  \"application/fhir+json\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/fhir+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/fido.trusted-apps+json\": {\n    \"compressible\": true\n  },\n  \"application/fits\": {\n    \"source\": \"iana\"\n  },\n  \"application/flexfec\": {\n    \"source\": \"iana\"\n  },\n  \"application/font-sfnt\": {\n    \"source\": \"iana\"\n  },\n  \"application/font-tdpfr\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pfr\"]\n  },\n  \"application/font-woff\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/framework-attributes+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/geo+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"geojson\"]\n  },\n  \"application/geo+json-seq\": {\n    \"source\": \"iana\"\n  },\n  \"application/geopackage+sqlite3\": {\n    \"source\": \"iana\"\n  },\n  \"application/geoxacml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/gltf-buffer\": {\n    \"source\": \"iana\"\n  },\n  \"application/gml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"gml\"]\n  },\n  \"application/gpx+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"gpx\"]\n  },\n  \"application/gxf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gxf\"]\n  },\n  \"application/gzip\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"gz\"]\n  },\n  \"application/h224\": {\n    \"source\": \"iana\"\n  },\n  \"application/held+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/hjson\": {\n    \"extensions\": [\"hjson\"]\n  },\n  \"application/http\": {\n    \"source\": \"iana\"\n  },\n  \"application/hyperstudio\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"stk\"]\n  },\n  \"application/ibe-key-request+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/ibe-pkg-reply+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/ibe-pp-data\": {\n    \"source\": \"iana\"\n  },\n  \"application/iges\": {\n    \"source\": \"iana\"\n  },\n  \"application/im-iscomposing+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/index\": {\n    \"source\": \"iana\"\n  },\n  \"application/index.cmd\": {\n    \"source\": \"iana\"\n  },\n  \"application/index.obj\": {\n    \"source\": \"iana\"\n  },\n  \"application/index.response\": {\n    \"source\": \"iana\"\n  },\n  \"application/index.vnd\": {\n    \"source\": \"iana\"\n  },\n  \"application/inkml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ink\",\"inkml\"]\n  },\n  \"application/iotp\": {\n    \"source\": \"iana\"\n  },\n  \"application/ipfix\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ipfix\"]\n  },\n  \"application/ipp\": {\n    \"source\": \"iana\"\n  },\n  \"application/isup\": {\n    \"source\": \"iana\"\n  },\n  \"application/its+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"its\"]\n  },\n  \"application/java-archive\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"jar\",\"war\",\"ear\"]\n  },\n  \"application/java-serialized-object\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"ser\"]\n  },\n  \"application/java-vm\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"class\"]\n  },\n  \"application/javascript\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"js\",\"mjs\"]\n  },\n  \"application/jf2feed+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/jose\": {\n    \"source\": \"iana\"\n  },\n  \"application/jose+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/jrd+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/jscalendar+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/json\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"json\",\"map\"]\n  },\n  \"application/json-patch+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/json-seq\": {\n    \"source\": \"iana\"\n  },\n  \"application/json5\": {\n    \"extensions\": [\"json5\"]\n  },\n  \"application/jsonml+json\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"jsonml\"]\n  },\n  \"application/jwk+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/jwk-set+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/jwt\": {\n    \"source\": \"iana\"\n  },\n  \"application/kpml-request+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/kpml-response+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/ld+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"jsonld\"]\n  },\n  \"application/lgr+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"lgr\"]\n  },\n  \"application/link-format\": {\n    \"source\": \"iana\"\n  },\n  \"application/load-control+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/lost+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"lostxml\"]\n  },\n  \"application/lostsync+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/lpf+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/lxf\": {\n    \"source\": \"iana\"\n  },\n  \"application/mac-binhex40\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hqx\"]\n  },\n  \"application/mac-compactpro\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cpt\"]\n  },\n  \"application/macwriteii\": {\n    \"source\": \"iana\"\n  },\n  \"application/mads+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mads\"]\n  },\n  \"application/manifest+json\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"webmanifest\"]\n  },\n  \"application/marc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mrc\"]\n  },\n  \"application/marcxml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mrcx\"]\n  },\n  \"application/mathematica\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ma\",\"nb\",\"mb\"]\n  },\n  \"application/mathml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mathml\"]\n  },\n  \"application/mathml-content+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mathml-presentation+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-associated-procedure-description+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-deregister+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-envelope+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-msk+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-msk-response+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-protection-description+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-reception-report+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-register+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-register-response+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-schedule+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-user-service-description+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbox\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mbox\"]\n  },\n  \"application/media-policy-dataset+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mpf\"]\n  },\n  \"application/media_control+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mediaservercontrol+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mscml\"]\n  },\n  \"application/merge-patch+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/metalink+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"metalink\"]\n  },\n  \"application/metalink4+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"meta4\"]\n  },\n  \"application/mets+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mets\"]\n  },\n  \"application/mf4\": {\n    \"source\": \"iana\"\n  },\n  \"application/mikey\": {\n    \"source\": \"iana\"\n  },\n  \"application/mipc\": {\n    \"source\": \"iana\"\n  },\n  \"application/missing-blocks+cbor-seq\": {\n    \"source\": \"iana\"\n  },\n  \"application/mmt-aei+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"maei\"]\n  },\n  \"application/mmt-usd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"musd\"]\n  },\n  \"application/mods+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mods\"]\n  },\n  \"application/moss-keys\": {\n    \"source\": \"iana\"\n  },\n  \"application/moss-signature\": {\n    \"source\": \"iana\"\n  },\n  \"application/mosskey-data\": {\n    \"source\": \"iana\"\n  },\n  \"application/mosskey-request\": {\n    \"source\": \"iana\"\n  },\n  \"application/mp21\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"m21\",\"mp21\"]\n  },\n  \"application/mp4\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mp4s\",\"m4p\"]\n  },\n  \"application/mpeg4-generic\": {\n    \"source\": \"iana\"\n  },\n  \"application/mpeg4-iod\": {\n    \"source\": \"iana\"\n  },\n  \"application/mpeg4-iod-xmt\": {\n    \"source\": \"iana\"\n  },\n  \"application/mrb-consumer+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mrb-publish+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/msc-ivr+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/msc-mixer+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/msword\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"doc\",\"dot\"]\n  },\n  \"application/mud+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/multipart-core\": {\n    \"source\": \"iana\"\n  },\n  \"application/mxf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mxf\"]\n  },\n  \"application/n-quads\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nq\"]\n  },\n  \"application/n-triples\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nt\"]\n  },\n  \"application/nasdata\": {\n    \"source\": \"iana\"\n  },\n  \"application/news-checkgroups\": {\n    \"source\": \"iana\",\n    \"charset\": \"US-ASCII\"\n  },\n  \"application/news-groupinfo\": {\n    \"source\": \"iana\",\n    \"charset\": \"US-ASCII\"\n  },\n  \"application/news-transmission\": {\n    \"source\": \"iana\"\n  },\n  \"application/nlsml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/node\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cjs\"]\n  },\n  \"application/nss\": {\n    \"source\": \"iana\"\n  },\n  \"application/oauth-authz-req+jwt\": {\n    \"source\": \"iana\"\n  },\n  \"application/oblivious-dns-message\": {\n    \"source\": \"iana\"\n  },\n  \"application/ocsp-request\": {\n    \"source\": \"iana\"\n  },\n  \"application/ocsp-response\": {\n    \"source\": \"iana\"\n  },\n  \"application/octet-stream\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"bin\",\"dms\",\"lrf\",\"mar\",\"so\",\"dist\",\"distz\",\"pkg\",\"bpk\",\"dump\",\"elc\",\"deploy\",\"exe\",\"dll\",\"deb\",\"dmg\",\"iso\",\"img\",\"msi\",\"msp\",\"msm\",\"buffer\"]\n  },\n  \"application/oda\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oda\"]\n  },\n  \"application/odm+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/odx\": {\n    \"source\": \"iana\"\n  },\n  \"application/oebps-package+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"opf\"]\n  },\n  \"application/ogg\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"ogx\"]\n  },\n  \"application/omdoc+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"omdoc\"]\n  },\n  \"application/onenote\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"onetoc\",\"onetoc2\",\"onetmp\",\"onepkg\"]\n  },\n  \"application/opc-nodeset+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/oscore\": {\n    \"source\": \"iana\"\n  },\n  \"application/oxps\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oxps\"]\n  },\n  \"application/p21\": {\n    \"source\": \"iana\"\n  },\n  \"application/p21+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/p2p-overlay+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"relo\"]\n  },\n  \"application/parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"application/passport\": {\n    \"source\": \"iana\"\n  },\n  \"application/patch-ops-error+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xer\"]\n  },\n  \"application/pdf\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"pdf\"]\n  },\n  \"application/pdx\": {\n    \"source\": \"iana\"\n  },\n  \"application/pem-certificate-chain\": {\n    \"source\": \"iana\"\n  },\n  \"application/pgp-encrypted\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"pgp\"]\n  },\n  \"application/pgp-keys\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"asc\"]\n  },\n  \"application/pgp-signature\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"asc\",\"sig\"]\n  },\n  \"application/pics-rules\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"prf\"]\n  },\n  \"application/pidf+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/pidf-diff+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/pkcs10\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"p10\"]\n  },\n  \"application/pkcs12\": {\n    \"source\": \"iana\"\n  },\n  \"application/pkcs7-mime\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"p7m\",\"p7c\"]\n  },\n  \"application/pkcs7-signature\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"p7s\"]\n  },\n  \"application/pkcs8\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"p8\"]\n  },\n  \"application/pkcs8-encrypted\": {\n    \"source\": \"iana\"\n  },\n  \"application/pkix-attr-cert\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ac\"]\n  },\n  \"application/pkix-cert\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cer\"]\n  },\n  \"application/pkix-crl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"crl\"]\n  },\n  \"application/pkix-pkipath\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pkipath\"]\n  },\n  \"application/pkixcmp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pki\"]\n  },\n  \"application/pls+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"pls\"]\n  },\n  \"application/poc-settings+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/postscript\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ai\",\"eps\",\"ps\"]\n  },\n  \"application/ppsp-tracker+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/problem+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/problem+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/provenance+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"provx\"]\n  },\n  \"application/prs.alvestrand.titrax-sheet\": {\n    \"source\": \"iana\"\n  },\n  \"application/prs.cww\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cww\"]\n  },\n  \"application/prs.cyn\": {\n    \"source\": \"iana\",\n    \"charset\": \"7-BIT\"\n  },\n  \"application/prs.hpub+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/prs.nprend\": {\n    \"source\": \"iana\"\n  },\n  \"application/prs.plucker\": {\n    \"source\": \"iana\"\n  },\n  \"application/prs.rdf-xml-crypt\": {\n    \"source\": \"iana\"\n  },\n  \"application/prs.xsf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/pskc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"pskcxml\"]\n  },\n  \"application/pvd+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/qsig\": {\n    \"source\": \"iana\"\n  },\n  \"application/raml+yaml\": {\n    \"compressible\": true,\n    \"extensions\": [\"raml\"]\n  },\n  \"application/raptorfec\": {\n    \"source\": \"iana\"\n  },\n  \"application/rdap+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/rdf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rdf\",\"owl\"]\n  },\n  \"application/reginfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rif\"]\n  },\n  \"application/relax-ng-compact-syntax\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rnc\"]\n  },\n  \"application/remote-printing\": {\n    \"source\": \"iana\"\n  },\n  \"application/reputon+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/resource-lists+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rl\"]\n  },\n  \"application/resource-lists-diff+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rld\"]\n  },\n  \"application/rfc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/riscos\": {\n    \"source\": \"iana\"\n  },\n  \"application/rlmi+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/rls-services+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rs\"]\n  },\n  \"application/route-apd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rapd\"]\n  },\n  \"application/route-s-tsid+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"sls\"]\n  },\n  \"application/route-usd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rusd\"]\n  },\n  \"application/rpki-ghostbusters\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gbr\"]\n  },\n  \"application/rpki-manifest\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mft\"]\n  },\n  \"application/rpki-publication\": {\n    \"source\": \"iana\"\n  },\n  \"application/rpki-roa\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"roa\"]\n  },\n  \"application/rpki-updown\": {\n    \"source\": \"iana\"\n  },\n  \"application/rsd+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"rsd\"]\n  },\n  \"application/rss+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"rss\"]\n  },\n  \"application/rtf\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rtf\"]\n  },\n  \"application/rtploopback\": {\n    \"source\": \"iana\"\n  },\n  \"application/rtx\": {\n    \"source\": \"iana\"\n  },\n  \"application/samlassertion+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/samlmetadata+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sarif+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sarif-external-properties+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sbe\": {\n    \"source\": \"iana\"\n  },\n  \"application/sbml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"sbml\"]\n  },\n  \"application/scaip+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/scim+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/scvp-cv-request\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"scq\"]\n  },\n  \"application/scvp-cv-response\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"scs\"]\n  },\n  \"application/scvp-vp-request\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"spq\"]\n  },\n  \"application/scvp-vp-response\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"spp\"]\n  },\n  \"application/sdp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sdp\"]\n  },\n  \"application/secevent+jwt\": {\n    \"source\": \"iana\"\n  },\n  \"application/senml+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/senml+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/senml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"senmlx\"]\n  },\n  \"application/senml-etch+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/senml-etch+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/senml-exi\": {\n    \"source\": \"iana\"\n  },\n  \"application/sensml+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/sensml+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sensml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"sensmlx\"]\n  },\n  \"application/sensml-exi\": {\n    \"source\": \"iana\"\n  },\n  \"application/sep+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sep-exi\": {\n    \"source\": \"iana\"\n  },\n  \"application/session-info\": {\n    \"source\": \"iana\"\n  },\n  \"application/set-payment\": {\n    \"source\": \"iana\"\n  },\n  \"application/set-payment-initiation\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"setpay\"]\n  },\n  \"application/set-registration\": {\n    \"source\": \"iana\"\n  },\n  \"application/set-registration-initiation\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"setreg\"]\n  },\n  \"application/sgml\": {\n    \"source\": \"iana\"\n  },\n  \"application/sgml-open-catalog\": {\n    \"source\": \"iana\"\n  },\n  \"application/shf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"shf\"]\n  },\n  \"application/sieve\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"siv\",\"sieve\"]\n  },\n  \"application/simple-filter+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/simple-message-summary\": {\n    \"source\": \"iana\"\n  },\n  \"application/simplesymbolcontainer\": {\n    \"source\": \"iana\"\n  },\n  \"application/sipc\": {\n    \"source\": \"iana\"\n  },\n  \"application/slate\": {\n    \"source\": \"iana\"\n  },\n  \"application/smil\": {\n    \"source\": \"iana\"\n  },\n  \"application/smil+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"smi\",\"smil\"]\n  },\n  \"application/smpte336m\": {\n    \"source\": \"iana\"\n  },\n  \"application/soap+fastinfoset\": {\n    \"source\": \"iana\"\n  },\n  \"application/soap+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sparql-query\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rq\"]\n  },\n  \"application/sparql-results+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"srx\"]\n  },\n  \"application/spdx+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/spirits-event+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sql\": {\n    \"source\": \"iana\"\n  },\n  \"application/srgs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gram\"]\n  },\n  \"application/srgs+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"grxml\"]\n  },\n  \"application/sru+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"sru\"]\n  },\n  \"application/ssdl+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"ssdl\"]\n  },\n  \"application/ssml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ssml\"]\n  },\n  \"application/stix+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/swid+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"swidtag\"]\n  },\n  \"application/tamp-apex-update\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-apex-update-confirm\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-community-update\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-community-update-confirm\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-error\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-sequence-adjust\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-sequence-adjust-confirm\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-status-query\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-status-response\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-update\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-update-confirm\": {\n    \"source\": \"iana\"\n  },\n  \"application/tar\": {\n    \"compressible\": true\n  },\n  \"application/taxii+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/td+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/tei+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"tei\",\"teicorpus\"]\n  },\n  \"application/tetra_isi\": {\n    \"source\": \"iana\"\n  },\n  \"application/thraud+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"tfi\"]\n  },\n  \"application/timestamp-query\": {\n    \"source\": \"iana\"\n  },\n  \"application/timestamp-reply\": {\n    \"source\": \"iana\"\n  },\n  \"application/timestamped-data\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tsd\"]\n  },\n  \"application/tlsrpt+gzip\": {\n    \"source\": \"iana\"\n  },\n  \"application/tlsrpt+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/tnauthlist\": {\n    \"source\": \"iana\"\n  },\n  \"application/token-introspection+jwt\": {\n    \"source\": \"iana\"\n  },\n  \"application/toml\": {\n    \"compressible\": true,\n    \"extensions\": [\"toml\"]\n  },\n  \"application/trickle-ice-sdpfrag\": {\n    \"source\": \"iana\"\n  },\n  \"application/trig\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"trig\"]\n  },\n  \"application/ttml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ttml\"]\n  },\n  \"application/tve-trigger\": {\n    \"source\": \"iana\"\n  },\n  \"application/tzif\": {\n    \"source\": \"iana\"\n  },\n  \"application/tzif-leap\": {\n    \"source\": \"iana\"\n  },\n  \"application/ubjson\": {\n    \"compressible\": false,\n    \"extensions\": [\"ubj\"]\n  },\n  \"application/ulpfec\": {\n    \"source\": \"iana\"\n  },\n  \"application/urc-grpsheet+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/urc-ressheet+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rsheet\"]\n  },\n  \"application/urc-targetdesc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"td\"]\n  },\n  \"application/urc-uisocketdesc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vcard+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vcard+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vemmi\": {\n    \"source\": \"iana\"\n  },\n  \"application/vividence.scriptfile\": {\n    \"source\": \"apache\"\n  },\n  \"application/vnd.1000minds.decision-model+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"1km\"]\n  },\n  \"application/vnd.3gpp-prose+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp-prose-pc3ch+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp-v2x-local-service-information\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.5gnas\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.access-transfer-events+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.bsf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.gmop+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.gtpc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.interworking-data\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.lpp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.mc-signalling-ear\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.mcdata-affiliation-command+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcdata-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcdata-payload\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.mcdata-service-config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcdata-signalling\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.mcdata-ue-config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcdata-user-profile+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-affiliation-command+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-floor-request+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-location-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-mbms-usage-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-service-config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-signed+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-ue-config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-ue-init-config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-user-profile+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-affiliation-command+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-affiliation-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-location-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-mbms-usage-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-service-config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-transmission-request+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-ue-config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-user-profile+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mid-call+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.ngap\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.pfcp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.pic-bw-large\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"plb\"]\n  },\n  \"application/vnd.3gpp.pic-bw-small\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"psb\"]\n  },\n  \"application/vnd.3gpp.pic-bw-var\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pvb\"]\n  },\n  \"application/vnd.3gpp.s1ap\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.sms\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.sms+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.srvcc-ext+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.srvcc-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.state-and-event-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.ussd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp2.bcmcsinfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp2.sms\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp2.tcap\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tcap\"]\n  },\n  \"application/vnd.3lightssoftware.imagescal\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3m.post-it-notes\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pwn\"]\n  },\n  \"application/vnd.accpac.simply.aso\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"aso\"]\n  },\n  \"application/vnd.accpac.simply.imp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"imp\"]\n  },\n  \"application/vnd.acucobol\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"acu\"]\n  },\n  \"application/vnd.acucorp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"atc\",\"acutc\"]\n  },\n  \"application/vnd.adobe.air-application-installer-package+zip\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"air\"]\n  },\n  \"application/vnd.adobe.flash.movie\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.adobe.formscentral.fcdt\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fcdt\"]\n  },\n  \"application/vnd.adobe.fxp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fxp\",\"fxpl\"]\n  },\n  \"application/vnd.adobe.partial-upload\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.adobe.xdp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xdp\"]\n  },\n  \"application/vnd.adobe.xfdf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xfdf\"]\n  },\n  \"application/vnd.aether.imp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.afplinedata\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.afplinedata-pagedef\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.cmoca-cmresource\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.foca-charset\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.foca-codedfont\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.foca-codepage\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.modca\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.modca-cmtable\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.modca-formdef\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.modca-mediummap\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.modca-objectcontainer\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.modca-overlay\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.modca-pagesegment\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.age\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"age\"]\n  },\n  \"application/vnd.ah-barcode\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ahead.space\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ahead\"]\n  },\n  \"application/vnd.airzip.filesecure.azf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"azf\"]\n  },\n  \"application/vnd.airzip.filesecure.azs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"azs\"]\n  },\n  \"application/vnd.amadeus+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.amazon.ebook\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"azw\"]\n  },\n  \"application/vnd.amazon.mobi8-ebook\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.americandynamics.acc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"acc\"]\n  },\n  \"application/vnd.amiga.ami\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ami\"]\n  },\n  \"application/vnd.amundsen.maze+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.android.ota\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.android.package-archive\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"apk\"]\n  },\n  \"application/vnd.anki\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.anser-web-certificate-issue-initiation\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cii\"]\n  },\n  \"application/vnd.anser-web-funds-transfer-initiation\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"fti\"]\n  },\n  \"application/vnd.antix.game-component\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"atx\"]\n  },\n  \"application/vnd.apache.arrow.file\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.apache.arrow.stream\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.apache.thrift.binary\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.apache.thrift.compact\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.apache.thrift.json\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.api+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.aplextor.warrp+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.apothekende.reservation+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.apple.installer+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mpkg\"]\n  },\n  \"application/vnd.apple.keynote\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"key\"]\n  },\n  \"application/vnd.apple.mpegurl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"m3u8\"]\n  },\n  \"application/vnd.apple.numbers\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"numbers\"]\n  },\n  \"application/vnd.apple.pages\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pages\"]\n  },\n  \"application/vnd.apple.pkpass\": {\n    \"compressible\": false,\n    \"extensions\": [\"pkpass\"]\n  },\n  \"application/vnd.arastra.swi\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.aristanetworks.swi\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"swi\"]\n  },\n  \"application/vnd.artisan+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.artsquare\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.astraea-software.iota\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"iota\"]\n  },\n  \"application/vnd.audiograph\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"aep\"]\n  },\n  \"application/vnd.autopackage\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.avalon+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.avistar+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.balsamiq.bmml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"bmml\"]\n  },\n  \"application/vnd.balsamiq.bmpr\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.banana-accounting\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.bbf.usp.error\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.bbf.usp.msg\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.bbf.usp.msg+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.bekitzur-stech+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.bint.med-content\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.biopax.rdf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.blink-idb-value-wrapper\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.blueice.multipass\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mpm\"]\n  },\n  \"application/vnd.bluetooth.ep.oob\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.bluetooth.le.oob\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.bmi\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"bmi\"]\n  },\n  \"application/vnd.bpf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.bpf3\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.businessobjects\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rep\"]\n  },\n  \"application/vnd.byu.uapi+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.cab-jscript\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.canon-cpdl\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.canon-lips\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.capasystems-pg+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.cendio.thinlinc.clientconf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.century-systems.tcp_stream\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.chemdraw+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"cdxml\"]\n  },\n  \"application/vnd.chess-pgn\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.chipnuts.karaoke-mmd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mmd\"]\n  },\n  \"application/vnd.ciedi\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cinderella\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdy\"]\n  },\n  \"application/vnd.cirpack.isdn-ext\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.citationstyles.style+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"csl\"]\n  },\n  \"application/vnd.claymore\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cla\"]\n  },\n  \"application/vnd.cloanto.rp9\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rp9\"]\n  },\n  \"application/vnd.clonk.c4group\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"c4g\",\"c4d\",\"c4f\",\"c4p\",\"c4u\"]\n  },\n  \"application/vnd.cluetrust.cartomobile-config\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"c11amc\"]\n  },\n  \"application/vnd.cluetrust.cartomobile-config-pkg\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"c11amz\"]\n  },\n  \"application/vnd.coffeescript\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collabio.xodocuments.document\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collabio.xodocuments.document-template\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collabio.xodocuments.presentation\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collabio.xodocuments.presentation-template\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collabio.xodocuments.spreadsheet\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collabio.xodocuments.spreadsheet-template\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collection+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.collection.doc+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.collection.next+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.comicbook+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.comicbook-rar\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.commerce-battelle\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.commonspace\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"csp\"]\n  },\n  \"application/vnd.contact.cmsg\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdbcmsg\"]\n  },\n  \"application/vnd.coreos.ignition+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.cosmocaller\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cmc\"]\n  },\n  \"application/vnd.crick.clicker\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"clkx\"]\n  },\n  \"application/vnd.crick.clicker.keyboard\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"clkk\"]\n  },\n  \"application/vnd.crick.clicker.palette\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"clkp\"]\n  },\n  \"application/vnd.crick.clicker.template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"clkt\"]\n  },\n  \"application/vnd.crick.clicker.wordbank\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"clkw\"]\n  },\n  \"application/vnd.criticaltools.wbs+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"wbs\"]\n  },\n  \"application/vnd.cryptii.pipe+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.crypto-shade-file\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cryptomator.encrypted\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cryptomator.vault\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ctc-posml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pml\"]\n  },\n  \"application/vnd.ctct.ws+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.cups-pdf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cups-postscript\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cups-ppd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ppd\"]\n  },\n  \"application/vnd.cups-raster\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cups-raw\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.curl\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.curl.car\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"car\"]\n  },\n  \"application/vnd.curl.pcurl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pcurl\"]\n  },\n  \"application/vnd.cyan.dean.root+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.cybank\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cyclonedx+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.cyclonedx+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.d2l.coursepackage1p0+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.d3m-dataset\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.d3m-problem\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dart\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"dart\"]\n  },\n  \"application/vnd.data-vision.rdz\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rdz\"]\n  },\n  \"application/vnd.datapackage+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dataresource+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dbf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dbf\"]\n  },\n  \"application/vnd.debian.binary-package\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dece.data\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvf\",\"uvvf\",\"uvd\",\"uvvd\"]\n  },\n  \"application/vnd.dece.ttml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"uvt\",\"uvvt\"]\n  },\n  \"application/vnd.dece.unspecified\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvx\",\"uvvx\"]\n  },\n  \"application/vnd.dece.zip\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvz\",\"uvvz\"]\n  },\n  \"application/vnd.denovo.fcselayout-link\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fe_launch\"]\n  },\n  \"application/vnd.desmume.movie\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dir-bi.plate-dl-nosuffix\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dm.delegation+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dna\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dna\"]\n  },\n  \"application/vnd.document+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dolby.mlp\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mlp\"]\n  },\n  \"application/vnd.dolby.mobile.1\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dolby.mobile.2\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.doremir.scorecloud-binary-document\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dpgraph\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dpg\"]\n  },\n  \"application/vnd.dreamfactory\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dfac\"]\n  },\n  \"application/vnd.drive+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ds-keypoint\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"kpxx\"]\n  },\n  \"application/vnd.dtg.local\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dtg.local.flash\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dtg.local.html\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ait\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ait\"]\n  },\n  \"application/vnd.dvb.dvbisl+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.dvbj\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.esgcontainer\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ipdcdftnotifaccess\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ipdcesgaccess\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ipdcesgaccess2\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ipdcesgpdd\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ipdcroaming\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.iptv.alfec-base\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.iptv.alfec-enhancement\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.notif-aggregate-root+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.notif-container+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.notif-generic+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.notif-ia-msglist+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.notif-ia-registration-request+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.notif-ia-registration-response+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.notif-init+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.pfr\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.service\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"svc\"]\n  },\n  \"application/vnd.dxr\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dynageo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"geo\"]\n  },\n  \"application/vnd.dzr\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.easykaraoke.cdgdownload\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecdis-update\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecip.rlp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.eclipse.ditto+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ecowin.chart\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mag\"]\n  },\n  \"application/vnd.ecowin.filerequest\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecowin.fileupdate\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecowin.series\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecowin.seriesrequest\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecowin.seriesupdate\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.efi.img\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.efi.iso\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.emclient.accessrequest+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.enliven\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nml\"]\n  },\n  \"application/vnd.enphase.envoy\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.eprints.data+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.epson.esf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"esf\"]\n  },\n  \"application/vnd.epson.msf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"msf\"]\n  },\n  \"application/vnd.epson.quickanime\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"qam\"]\n  },\n  \"application/vnd.epson.salt\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"slt\"]\n  },\n  \"application/vnd.epson.ssf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ssf\"]\n  },\n  \"application/vnd.ericsson.quickcall\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.espass-espass+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.eszigno3+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"es3\",\"et3\"]\n  },\n  \"application/vnd.etsi.aoc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.asic-e+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.etsi.asic-s+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.etsi.cug+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvcommand+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvdiscovery+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvprofile+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvsad-bc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvsad-cod+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvsad-npvr+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvservice+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvsync+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvueprofile+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.mcid+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.mheg5\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.overload-control-policy-dataset+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.pstn+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.sci+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.simservs+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.timestamp-token\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.tsl+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.tsl.der\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.eu.kasparian.car+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.eudora.data\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.evolv.ecig.profile\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.evolv.ecig.settings\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.evolv.ecig.theme\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.exstream-empower+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.exstream-package\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ezpix-album\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ez2\"]\n  },\n  \"application/vnd.ezpix-package\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ez3\"]\n  },\n  \"application/vnd.f-secure.mobile\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.familysearch.gedcom+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.fastcopy-disk-image\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fdf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fdf\"]\n  },\n  \"application/vnd.fdsn.mseed\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mseed\"]\n  },\n  \"application/vnd.fdsn.seed\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"seed\",\"dataless\"]\n  },\n  \"application/vnd.ffsns\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ficlab.flb+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.filmit.zfc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fints\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.firemonkeys.cloudcell\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.flographit\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gph\"]\n  },\n  \"application/vnd.fluxtime.clip\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ftc\"]\n  },\n  \"application/vnd.font-fontforge-sfd\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.framemaker\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fm\",\"frame\",\"maker\",\"book\"]\n  },\n  \"application/vnd.frogans.fnc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fnc\"]\n  },\n  \"application/vnd.frogans.ltf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ltf\"]\n  },\n  \"application/vnd.fsc.weblaunch\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fsc\"]\n  },\n  \"application/vnd.fujifilm.fb.docuworks\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fujifilm.fb.docuworks.binder\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fujifilm.fb.docuworks.container\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fujifilm.fb.jfi+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.fujitsu.oasys\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oas\"]\n  },\n  \"application/vnd.fujitsu.oasys2\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oa2\"]\n  },\n  \"application/vnd.fujitsu.oasys3\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oa3\"]\n  },\n  \"application/vnd.fujitsu.oasysgp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fg5\"]\n  },\n  \"application/vnd.fujitsu.oasysprs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"bh2\"]\n  },\n  \"application/vnd.fujixerox.art-ex\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fujixerox.art4\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fujixerox.ddd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ddd\"]\n  },\n  \"application/vnd.fujixerox.docuworks\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xdw\"]\n  },\n  \"application/vnd.fujixerox.docuworks.binder\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xbd\"]\n  },\n  \"application/vnd.fujixerox.docuworks.container\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fujixerox.hbpl\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fut-misnet\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.futoin+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.futoin+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.fuzzysheet\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fzs\"]\n  },\n  \"application/vnd.genomatix.tuxedo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"txd\"]\n  },\n  \"application/vnd.gentics.grd+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.geo+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.geocube+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.geogebra.file\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ggb\"]\n  },\n  \"application/vnd.geogebra.slides\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.geogebra.tool\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ggt\"]\n  },\n  \"application/vnd.geometry-explorer\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gex\",\"gre\"]\n  },\n  \"application/vnd.geonext\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gxt\"]\n  },\n  \"application/vnd.geoplan\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"g2w\"]\n  },\n  \"application/vnd.geospace\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"g3w\"]\n  },\n  \"application/vnd.gerber\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.globalplatform.card-content-mgt\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.globalplatform.card-content-mgt-response\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.gmx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gmx\"]\n  },\n  \"application/vnd.google-apps.document\": {\n    \"compressible\": false,\n    \"extensions\": [\"gdoc\"]\n  },\n  \"application/vnd.google-apps.presentation\": {\n    \"compressible\": false,\n    \"extensions\": [\"gslides\"]\n  },\n  \"application/vnd.google-apps.spreadsheet\": {\n    \"compressible\": false,\n    \"extensions\": [\"gsheet\"]\n  },\n  \"application/vnd.google-earth.kml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"kml\"]\n  },\n  \"application/vnd.google-earth.kmz\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"kmz\"]\n  },\n  \"application/vnd.gov.sk.e-form+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.gov.sk.e-form+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.gov.sk.xmldatacontainer+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.grafeq\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gqf\",\"gqs\"]\n  },\n  \"application/vnd.gridmp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.groove-account\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gac\"]\n  },\n  \"application/vnd.groove-help\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ghf\"]\n  },\n  \"application/vnd.groove-identity-message\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gim\"]\n  },\n  \"application/vnd.groove-injector\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"grv\"]\n  },\n  \"application/vnd.groove-tool-message\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gtm\"]\n  },\n  \"application/vnd.groove-tool-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tpl\"]\n  },\n  \"application/vnd.groove-vcard\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vcg\"]\n  },\n  \"application/vnd.hal+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.hal+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"hal\"]\n  },\n  \"application/vnd.handheld-entertainment+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"zmm\"]\n  },\n  \"application/vnd.hbci\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hbci\"]\n  },\n  \"application/vnd.hc+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.hcl-bireports\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.hdt\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.heroku+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.hhe.lesson-player\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"les\"]\n  },\n  \"application/vnd.hl7cda+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/vnd.hl7v2+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/vnd.hp-hpgl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hpgl\"]\n  },\n  \"application/vnd.hp-hpid\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hpid\"]\n  },\n  \"application/vnd.hp-hps\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hps\"]\n  },\n  \"application/vnd.hp-jlyt\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jlt\"]\n  },\n  \"application/vnd.hp-pcl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pcl\"]\n  },\n  \"application/vnd.hp-pclxl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pclxl\"]\n  },\n  \"application/vnd.httphone\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.hydrostatix.sof-data\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sfd-hdstx\"]\n  },\n  \"application/vnd.hyper+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.hyper-item+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.hyperdrive+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.hzn-3d-crossword\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ibm.afplinedata\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ibm.electronic-media\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ibm.minipay\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mpy\"]\n  },\n  \"application/vnd.ibm.modcap\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"afp\",\"listafp\",\"list3820\"]\n  },\n  \"application/vnd.ibm.rights-management\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"irm\"]\n  },\n  \"application/vnd.ibm.secure-container\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sc\"]\n  },\n  \"application/vnd.iccprofile\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"icc\",\"icm\"]\n  },\n  \"application/vnd.ieee.1905\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.igloader\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"igl\"]\n  },\n  \"application/vnd.imagemeter.folder+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.imagemeter.image+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.immervision-ivp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ivp\"]\n  },\n  \"application/vnd.immervision-ivu\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ivu\"]\n  },\n  \"application/vnd.ims.imsccv1p1\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ims.imsccv1p2\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ims.imsccv1p3\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ims.lis.v2.result+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ims.lti.v2.toolconsumerprofile+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ims.lti.v2.toolproxy+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ims.lti.v2.toolproxy.id+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ims.lti.v2.toolsettings+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ims.lti.v2.toolsettings.simple+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.informedcontrol.rms+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.informix-visionary\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.infotech.project\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.infotech.project+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.innopath.wamp.notification\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.insors.igm\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"igm\"]\n  },\n  \"application/vnd.intercon.formnet\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xpw\",\"xpx\"]\n  },\n  \"application/vnd.intergeo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"i2g\"]\n  },\n  \"application/vnd.intertrust.digibox\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.intertrust.nncp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.intu.qbo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"qbo\"]\n  },\n  \"application/vnd.intu.qfx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"qfx\"]\n  },\n  \"application/vnd.iptc.g2.catalogitem+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.iptc.g2.conceptitem+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.iptc.g2.knowledgeitem+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.iptc.g2.newsitem+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.iptc.g2.newsmessage+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.iptc.g2.packageitem+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.iptc.g2.planningitem+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ipunplugged.rcprofile\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rcprofile\"]\n  },\n  \"application/vnd.irepository.package+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"irp\"]\n  },\n  \"application/vnd.is-xpr\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xpr\"]\n  },\n  \"application/vnd.isac.fcs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fcs\"]\n  },\n  \"application/vnd.iso11783-10+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.jam\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jam\"]\n  },\n  \"application/vnd.japannet-directory-service\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-jpnstore-wakeup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-payment-wakeup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-registration\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-registration-wakeup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-setstore-wakeup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-verification\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-verification-wakeup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.jcp.javame.midlet-rms\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rms\"]\n  },\n  \"application/vnd.jisp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jisp\"]\n  },\n  \"application/vnd.joost.joda-archive\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"joda\"]\n  },\n  \"application/vnd.jsk.isdn-ngn\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.kahootz\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ktz\",\"ktr\"]\n  },\n  \"application/vnd.kde.karbon\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"karbon\"]\n  },\n  \"application/vnd.kde.kchart\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"chrt\"]\n  },\n  \"application/vnd.kde.kformula\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kfo\"]\n  },\n  \"application/vnd.kde.kivio\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"flw\"]\n  },\n  \"application/vnd.kde.kontour\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kon\"]\n  },\n  \"application/vnd.kde.kpresenter\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kpr\",\"kpt\"]\n  },\n  \"application/vnd.kde.kspread\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ksp\"]\n  },\n  \"application/vnd.kde.kword\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kwd\",\"kwt\"]\n  },\n  \"application/vnd.kenameaapp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"htke\"]\n  },\n  \"application/vnd.kidspiration\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kia\"]\n  },\n  \"application/vnd.kinar\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kne\",\"knp\"]\n  },\n  \"application/vnd.koan\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"skp\",\"skd\",\"skt\",\"skm\"]\n  },\n  \"application/vnd.kodak-descriptor\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sse\"]\n  },\n  \"application/vnd.las\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.las.las+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.las.las+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"lasxml\"]\n  },\n  \"application/vnd.laszip\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.leap+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.liberty-request+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.llamagraphics.life-balance.desktop\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"lbd\"]\n  },\n  \"application/vnd.llamagraphics.life-balance.exchange+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"lbe\"]\n  },\n  \"application/vnd.logipipe.circuit+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.loom\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.lotus-1-2-3\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"123\"]\n  },\n  \"application/vnd.lotus-approach\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"apr\"]\n  },\n  \"application/vnd.lotus-freelance\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pre\"]\n  },\n  \"application/vnd.lotus-notes\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nsf\"]\n  },\n  \"application/vnd.lotus-organizer\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"org\"]\n  },\n  \"application/vnd.lotus-screencam\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"scm\"]\n  },\n  \"application/vnd.lotus-wordpro\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"lwp\"]\n  },\n  \"application/vnd.macports.portpkg\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"portpkg\"]\n  },\n  \"application/vnd.mapbox-vector-tile\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mvt\"]\n  },\n  \"application/vnd.marlin.drm.actiontoken+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.marlin.drm.conftoken+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.marlin.drm.license+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.marlin.drm.mdcf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mason+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.maxar.archive.3tz+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.maxmind.maxmind-db\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mcd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mcd\"]\n  },\n  \"application/vnd.medcalcdata\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mc1\"]\n  },\n  \"application/vnd.mediastation.cdkey\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdkey\"]\n  },\n  \"application/vnd.meridian-slingshot\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mfer\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mwf\"]\n  },\n  \"application/vnd.mfmp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mfm\"]\n  },\n  \"application/vnd.micro+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.micrografx.flo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"flo\"]\n  },\n  \"application/vnd.micrografx.igx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"igx\"]\n  },\n  \"application/vnd.microsoft.portable-executable\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.microsoft.windows.thumbnail-cache\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.miele+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.mif\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mif\"]\n  },\n  \"application/vnd.minisoft-hp3000-save\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mitsubishi.misty-guard.trustweb\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mobius.daf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"daf\"]\n  },\n  \"application/vnd.mobius.dis\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dis\"]\n  },\n  \"application/vnd.mobius.mbk\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mbk\"]\n  },\n  \"application/vnd.mobius.mqy\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mqy\"]\n  },\n  \"application/vnd.mobius.msl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"msl\"]\n  },\n  \"application/vnd.mobius.plc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"plc\"]\n  },\n  \"application/vnd.mobius.txf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"txf\"]\n  },\n  \"application/vnd.mophun.application\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mpn\"]\n  },\n  \"application/vnd.mophun.certificate\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mpc\"]\n  },\n  \"application/vnd.motorola.flexsuite\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.adsi\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.fis\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.gotap\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.kmr\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.ttc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.wem\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.iprm\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mozilla.xul+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xul\"]\n  },\n  \"application/vnd.ms-3mfdocument\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-artgalry\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cil\"]\n  },\n  \"application/vnd.ms-asf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-cab-compressed\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cab\"]\n  },\n  \"application/vnd.ms-color.iccprofile\": {\n    \"source\": \"apache\"\n  },\n  \"application/vnd.ms-excel\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"xls\",\"xlm\",\"xla\",\"xlc\",\"xlt\",\"xlw\"]\n  },\n  \"application/vnd.ms-excel.addin.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xlam\"]\n  },\n  \"application/vnd.ms-excel.sheet.binary.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xlsb\"]\n  },\n  \"application/vnd.ms-excel.sheet.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xlsm\"]\n  },\n  \"application/vnd.ms-excel.template.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xltm\"]\n  },\n  \"application/vnd.ms-fontobject\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"eot\"]\n  },\n  \"application/vnd.ms-htmlhelp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"chm\"]\n  },\n  \"application/vnd.ms-ims\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ims\"]\n  },\n  \"application/vnd.ms-lrm\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"lrm\"]\n  },\n  \"application/vnd.ms-office.activex+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ms-officetheme\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"thmx\"]\n  },\n  \"application/vnd.ms-opentype\": {\n    \"source\": \"apache\",\n    \"compressible\": true\n  },\n  \"application/vnd.ms-outlook\": {\n    \"compressible\": false,\n    \"extensions\": [\"msg\"]\n  },\n  \"application/vnd.ms-package.obfuscated-opentype\": {\n    \"source\": \"apache\"\n  },\n  \"application/vnd.ms-pki.seccat\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cat\"]\n  },\n  \"application/vnd.ms-pki.stl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"stl\"]\n  },\n  \"application/vnd.ms-playready.initiator+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ms-powerpoint\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"ppt\",\"pps\",\"pot\"]\n  },\n  \"application/vnd.ms-powerpoint.addin.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ppam\"]\n  },\n  \"application/vnd.ms-powerpoint.presentation.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pptm\"]\n  },\n  \"application/vnd.ms-powerpoint.slide.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sldm\"]\n  },\n  \"application/vnd.ms-powerpoint.slideshow.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ppsm\"]\n  },\n  \"application/vnd.ms-powerpoint.template.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"potm\"]\n  },\n  \"application/vnd.ms-printdevicecapabilities+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ms-printing.printticket+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true\n  },\n  \"application/vnd.ms-printschematicket+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ms-project\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mpp\",\"mpt\"]\n  },\n  \"application/vnd.ms-tnef\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-windows.devicepairing\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-windows.nwprinting.oob\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-windows.printerpairing\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-windows.wsd.oob\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-wmdrm.lic-chlg-req\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-wmdrm.lic-resp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-wmdrm.meter-chlg-req\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-wmdrm.meter-resp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-word.document.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"docm\"]\n  },\n  \"application/vnd.ms-word.template.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dotm\"]\n  },\n  \"application/vnd.ms-works\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wps\",\"wks\",\"wcm\",\"wdb\"]\n  },\n  \"application/vnd.ms-wpl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wpl\"]\n  },\n  \"application/vnd.ms-xpsdocument\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"xps\"]\n  },\n  \"application/vnd.msa-disk-image\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mseq\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mseq\"]\n  },\n  \"application/vnd.msign\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.multiad.creator\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.multiad.creator.cif\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.music-niff\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.musician\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mus\"]\n  },\n  \"application/vnd.muvee.style\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"msty\"]\n  },\n  \"application/vnd.mynfc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"taglet\"]\n  },\n  \"application/vnd.nacamar.ybrid+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ncd.control\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ncd.reference\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nearst.inv+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.nebumind.line\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nervana\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.netfpx\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.neurolanguage.nlu\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nlu\"]\n  },\n  \"application/vnd.nimn\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nintendo.nitro.rom\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nintendo.snes.rom\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nitf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ntf\",\"nitf\"]\n  },\n  \"application/vnd.noblenet-directory\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nnd\"]\n  },\n  \"application/vnd.noblenet-sealer\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nns\"]\n  },\n  \"application/vnd.noblenet-web\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nnw\"]\n  },\n  \"application/vnd.nokia.catalogs\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.conml+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.conml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.nokia.iptv.config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.nokia.isds-radio-presets\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.landmark+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.landmark+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.nokia.landmarkcollection+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.nokia.n-gage.ac+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ac\"]\n  },\n  \"application/vnd.nokia.n-gage.data\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ngdat\"]\n  },\n  \"application/vnd.nokia.n-gage.symbian.install\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"n-gage\"]\n  },\n  \"application/vnd.nokia.ncd\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.pcd+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.pcd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.nokia.radio-preset\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rpst\"]\n  },\n  \"application/vnd.nokia.radio-presets\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rpss\"]\n  },\n  \"application/vnd.novadigm.edm\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"edm\"]\n  },\n  \"application/vnd.novadigm.edx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"edx\"]\n  },\n  \"application/vnd.novadigm.ext\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ext\"]\n  },\n  \"application/vnd.ntt-local.content-share\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ntt-local.file-transfer\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ntt-local.ogw_remote-access\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ntt-local.sip-ta_remote\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ntt-local.sip-ta_tcp_stream\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oasis.opendocument.chart\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odc\"]\n  },\n  \"application/vnd.oasis.opendocument.chart-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"otc\"]\n  },\n  \"application/vnd.oasis.opendocument.database\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odb\"]\n  },\n  \"application/vnd.oasis.opendocument.formula\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odf\"]\n  },\n  \"application/vnd.oasis.opendocument.formula-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odft\"]\n  },\n  \"application/vnd.oasis.opendocument.graphics\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"odg\"]\n  },\n  \"application/vnd.oasis.opendocument.graphics-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"otg\"]\n  },\n  \"application/vnd.oasis.opendocument.image\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odi\"]\n  },\n  \"application/vnd.oasis.opendocument.image-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oti\"]\n  },\n  \"application/vnd.oasis.opendocument.presentation\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"odp\"]\n  },\n  \"application/vnd.oasis.opendocument.presentation-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"otp\"]\n  },\n  \"application/vnd.oasis.opendocument.spreadsheet\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"ods\"]\n  },\n  \"application/vnd.oasis.opendocument.spreadsheet-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ots\"]\n  },\n  \"application/vnd.oasis.opendocument.text\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"odt\"]\n  },\n  \"application/vnd.oasis.opendocument.text-master\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odm\"]\n  },\n  \"application/vnd.oasis.opendocument.text-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ott\"]\n  },\n  \"application/vnd.oasis.opendocument.text-web\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oth\"]\n  },\n  \"application/vnd.obn\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ocf+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oci.image.manifest.v1+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oftn.l10n+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.contentaccessdownload+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.contentaccessstreaming+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.cspg-hexbinary\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oipf.dae.svg+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.dae.xhtml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.mippvcontrolmessage+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.pae.gem\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oipf.spdiscovery+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.spdlist+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.ueprofile+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.userprofile+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.olpc-sugar\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xo\"]\n  },\n  \"application/vnd.oma-scws-config\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma-scws-http-request\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma-scws-http-response\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.associated-procedure-parameter+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.bcast.drm-trigger+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.bcast.imd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.bcast.ltkm\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.notification+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.bcast.provisioningtrigger\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.sgboot\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.sgdd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.bcast.sgdu\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.simple-symbol-container\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.smartcard-trigger+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.bcast.sprov+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.bcast.stkm\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.cab-address-book+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.cab-feature-handler+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.cab-pcc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.cab-subs-invite+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.cab-user-prefs+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.dcd\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.dcdc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.dd2+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"dd2\"]\n  },\n  \"application/vnd.oma.drm.risd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.group-usage-list+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.lwm2m+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.lwm2m+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.lwm2m+tlv\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.pal+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.poc.detailed-progress-report+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.poc.final-report+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.poc.groups+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.poc.invocation-descriptor+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.poc.optimized-progress-report+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.push\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.scidm.messages+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.xcap-directory+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.omads-email+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/vnd.omads-file+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/vnd.omads-folder+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/vnd.omaloc-supl-init\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.onepager\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.onepagertamp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.onepagertamx\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.onepagertat\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.onepagertatp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.onepagertatx\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openblox.game+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"obgx\"]\n  },\n  \"application/vnd.openblox.game-binary\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openeye.oeb\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openofficeorg.extension\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"oxt\"]\n  },\n  \"application/vnd.openstreetmap.data+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"osm\"]\n  },\n  \"application/vnd.opentimestamps.ots\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.custom-properties+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.customxmlproperties+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.drawing+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.chart+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.extended-properties+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.comments+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.presentation\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"pptx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slide\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sldx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slide+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slideshow\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ppsx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.tags+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"potx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"xlsx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xltx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.theme+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.themeoverride+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.vmldrawing\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"docx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dotx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-package.core-properties+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-package.relationships+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oracle.resource+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.orange.indata\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.osa.netdeploy\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.osgeo.mapguide.package\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mgp\"]\n  },\n  \"application/vnd.osgi.bundle\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.osgi.dp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dp\"]\n  },\n  \"application/vnd.osgi.subsystem\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"esa\"]\n  },\n  \"application/vnd.otps.ct-kip+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oxli.countgraph\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.pagerduty+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.palm\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pdb\",\"pqa\",\"oprc\"]\n  },\n  \"application/vnd.panoply\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.paos.xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.patentdive\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.patientecommsdoc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.pawaafile\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"paw\"]\n  },\n  \"application/vnd.pcos\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.pg.format\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"str\"]\n  },\n  \"application/vnd.pg.osasli\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ei6\"]\n  },\n  \"application/vnd.piaccess.application-licence\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.picsel\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"efif\"]\n  },\n  \"application/vnd.pmi.widget\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wg\"]\n  },\n  \"application/vnd.poc.group-advertisement+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.pocketlearn\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"plf\"]\n  },\n  \"application/vnd.powerbuilder6\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pbd\"]\n  },\n  \"application/vnd.powerbuilder6-s\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.powerbuilder7\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.powerbuilder7-s\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.powerbuilder75\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.powerbuilder75-s\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.preminet\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.previewsystems.box\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"box\"]\n  },\n  \"application/vnd.proteus.magazine\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mgz\"]\n  },\n  \"application/vnd.psfs\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.publishare-delta-tree\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"qps\"]\n  },\n  \"application/vnd.pvi.ptid1\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ptid\"]\n  },\n  \"application/vnd.pwg-multiplexed\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.pwg-xhtml-print+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.qualcomm.brew-app-res\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.quarantainenet\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.quark.quarkxpress\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"qxd\",\"qxt\",\"qwd\",\"qwt\",\"qxl\",\"qxb\"]\n  },\n  \"application/vnd.quobject-quoxdocument\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.radisys.moml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-audit+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-audit-conf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-audit-conn+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-audit-dialog+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-audit-stream+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-conf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-dialog+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-dialog-base+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-dialog-fax-detect+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-dialog-fax-sendrecv+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-dialog-group+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-dialog-speech+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-dialog-transform+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.rainstor.data\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.rapid\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.rar\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rar\"]\n  },\n  \"application/vnd.realvnc.bed\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"bed\"]\n  },\n  \"application/vnd.recordare.musicxml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mxl\"]\n  },\n  \"application/vnd.recordare.musicxml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"musicxml\"]\n  },\n  \"application/vnd.renlearn.rlprint\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.resilient.logic\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.restful+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.rig.cryptonote\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cryptonote\"]\n  },\n  \"application/vnd.rim.cod\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cod\"]\n  },\n  \"application/vnd.rn-realmedia\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"rm\"]\n  },\n  \"application/vnd.rn-realmedia-vbr\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"rmvb\"]\n  },\n  \"application/vnd.route66.link66+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"link66\"]\n  },\n  \"application/vnd.rs-274x\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ruckus.download\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.s3sms\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sailingtracker.track\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"st\"]\n  },\n  \"application/vnd.sar\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sbm.cid\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sbm.mid2\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.scribus\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.3df\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.csf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.doc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.eml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.mht\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.net\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.ppt\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.tiff\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.xls\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealedmedia.softseal.html\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealedmedia.softseal.pdf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.seemail\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"see\"]\n  },\n  \"application/vnd.seis+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.sema\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sema\"]\n  },\n  \"application/vnd.semd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"semd\"]\n  },\n  \"application/vnd.semf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"semf\"]\n  },\n  \"application/vnd.shade-save-file\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.shana.informed.formdata\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ifm\"]\n  },\n  \"application/vnd.shana.informed.formtemplate\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"itp\"]\n  },\n  \"application/vnd.shana.informed.interchange\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"iif\"]\n  },\n  \"application/vnd.shana.informed.package\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ipk\"]\n  },\n  \"application/vnd.shootproof+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.shopkick+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.shp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.shx\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sigrok.session\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.simtech-mindmapper\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"twd\",\"twds\"]\n  },\n  \"application/vnd.siren+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.smaf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mmf\"]\n  },\n  \"application/vnd.smart.notebook\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.smart.teacher\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"teacher\"]\n  },\n  \"application/vnd.snesdev-page-table\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.software602.filler.form+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"fo\"]\n  },\n  \"application/vnd.software602.filler.form-xml-zip\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.solent.sdkm+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"sdkm\",\"sdkd\"]\n  },\n  \"application/vnd.spotfire.dxp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dxp\"]\n  },\n  \"application/vnd.spotfire.sfs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sfs\"]\n  },\n  \"application/vnd.sqlite3\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sss-cod\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sss-dtf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sss-ntf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.stardivision.calc\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sdc\"]\n  },\n  \"application/vnd.stardivision.draw\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sda\"]\n  },\n  \"application/vnd.stardivision.impress\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sdd\"]\n  },\n  \"application/vnd.stardivision.math\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"smf\"]\n  },\n  \"application/vnd.stardivision.writer\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sdw\",\"vor\"]\n  },\n  \"application/vnd.stardivision.writer-global\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sgl\"]\n  },\n  \"application/vnd.stepmania.package\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"smzip\"]\n  },\n  \"application/vnd.stepmania.stepchart\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sm\"]\n  },\n  \"application/vnd.street-stream\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sun.wadl+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"wadl\"]\n  },\n  \"application/vnd.sun.xml.calc\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxc\"]\n  },\n  \"application/vnd.sun.xml.calc.template\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"stc\"]\n  },\n  \"application/vnd.sun.xml.draw\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxd\"]\n  },\n  \"application/vnd.sun.xml.draw.template\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"std\"]\n  },\n  \"application/vnd.sun.xml.impress\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxi\"]\n  },\n  \"application/vnd.sun.xml.impress.template\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sti\"]\n  },\n  \"application/vnd.sun.xml.math\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxm\"]\n  },\n  \"application/vnd.sun.xml.writer\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxw\"]\n  },\n  \"application/vnd.sun.xml.writer.global\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxg\"]\n  },\n  \"application/vnd.sun.xml.writer.template\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"stw\"]\n  },\n  \"application/vnd.sus-calendar\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sus\",\"susp\"]\n  },\n  \"application/vnd.svd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"svd\"]\n  },\n  \"application/vnd.swiftview-ics\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sycle+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.syft+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.symbian.install\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sis\",\"sisx\"]\n  },\n  \"application/vnd.syncml+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"xsm\"]\n  },\n  \"application/vnd.syncml.dm+wbxml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"extensions\": [\"bdm\"]\n  },\n  \"application/vnd.syncml.dm+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"xdm\"]\n  },\n  \"application/vnd.syncml.dm.notification\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.syncml.dmddf+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.syncml.dmddf+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"ddf\"]\n  },\n  \"application/vnd.syncml.dmtnds+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.syncml.dmtnds+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/vnd.syncml.ds.notification\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.tableschema+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.tao.intent-module-archive\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tao\"]\n  },\n  \"application/vnd.tcpdump.pcap\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pcap\",\"cap\",\"dmp\"]\n  },\n  \"application/vnd.think-cell.ppttc+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.tmd.mediaflex.api+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.tml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.tmobile-livetv\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tmo\"]\n  },\n  \"application/vnd.tri.onesource\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.trid.tpt\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tpt\"]\n  },\n  \"application/vnd.triscape.mxs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mxs\"]\n  },\n  \"application/vnd.trueapp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tra\"]\n  },\n  \"application/vnd.truedoc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ubisoft.webplayer\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ufdl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ufd\",\"ufdl\"]\n  },\n  \"application/vnd.uiq.theme\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"utz\"]\n  },\n  \"application/vnd.umajin\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"umj\"]\n  },\n  \"application/vnd.unity\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"unityweb\"]\n  },\n  \"application/vnd.uoml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"uoml\"]\n  },\n  \"application/vnd.uplanet.alert\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.alert-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.bearer-choice\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.bearer-choice-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.cacheop\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.cacheop-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.channel\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.channel-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.list\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.list-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.listcmd\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.listcmd-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.signal\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uri-map\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.valve.source.material\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.vcx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vcx\"]\n  },\n  \"application/vnd.vd-study\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.vectorworks\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.vel+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.verimatrix.vcas\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.veritone.aion+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.veryant.thin\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ves.encrypted\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.vidsoft.vidconference\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.visio\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vsd\",\"vst\",\"vss\",\"vsw\"]\n  },\n  \"application/vnd.visionary\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vis\"]\n  },\n  \"application/vnd.vividence.scriptfile\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.vsf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vsf\"]\n  },\n  \"application/vnd.wap.sic\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wap.slc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wap.wbxml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"extensions\": [\"wbxml\"]\n  },\n  \"application/vnd.wap.wmlc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wmlc\"]\n  },\n  \"application/vnd.wap.wmlscriptc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wmlsc\"]\n  },\n  \"application/vnd.webturbo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wtb\"]\n  },\n  \"application/vnd.wfa.dpp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wfa.p2p\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wfa.wsc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.windows.devicepairing\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wmc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wmf.bootstrap\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wolfram.mathematica\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wolfram.mathematica.package\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wolfram.player\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nbp\"]\n  },\n  \"application/vnd.wordperfect\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wpd\"]\n  },\n  \"application/vnd.wqd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wqd\"]\n  },\n  \"application/vnd.wrq-hp3000-labelled\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wt.stf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"stf\"]\n  },\n  \"application/vnd.wv.csp+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wv.csp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.wv.ssp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.xacml+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.xara\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xar\"]\n  },\n  \"application/vnd.xfdl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xfdl\"]\n  },\n  \"application/vnd.xfdl.webform\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.xmi+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.xmpie.cpkg\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.xmpie.dpkg\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.xmpie.plan\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.xmpie.ppkg\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.xmpie.xlim\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.yamaha.hv-dic\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hvd\"]\n  },\n  \"application/vnd.yamaha.hv-script\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hvs\"]\n  },\n  \"application/vnd.yamaha.hv-voice\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hvp\"]\n  },\n  \"application/vnd.yamaha.openscoreformat\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"osf\"]\n  },\n  \"application/vnd.yamaha.openscoreformat.osfpvg+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"osfpvg\"]\n  },\n  \"application/vnd.yamaha.remote-setup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.yamaha.smaf-audio\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"saf\"]\n  },\n  \"application/vnd.yamaha.smaf-phrase\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"spf\"]\n  },\n  \"application/vnd.yamaha.through-ngn\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.yamaha.tunnel-udpencap\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.yaoweme\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.yellowriver-custom-menu\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cmp\"]\n  },\n  \"application/vnd.youtube.yt\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.zul\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"zir\",\"zirz\"]\n  },\n  \"application/vnd.zzazz.deck+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"zaz\"]\n  },\n  \"application/voicexml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"vxml\"]\n  },\n  \"application/voucher-cms+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vq-rtcpxr\": {\n    \"source\": \"iana\"\n  },\n  \"application/wasm\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"wasm\"]\n  },\n  \"application/watcherinfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"wif\"]\n  },\n  \"application/webpush-options+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/whoispp-query\": {\n    \"source\": \"iana\"\n  },\n  \"application/whoispp-response\": {\n    \"source\": \"iana\"\n  },\n  \"application/widget\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wgt\"]\n  },\n  \"application/winhlp\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"hlp\"]\n  },\n  \"application/wita\": {\n    \"source\": \"iana\"\n  },\n  \"application/wordperfect5.1\": {\n    \"source\": \"iana\"\n  },\n  \"application/wsdl+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"wsdl\"]\n  },\n  \"application/wspolicy+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"wspolicy\"]\n  },\n  \"application/x-7z-compressed\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"7z\"]\n  },\n  \"application/x-abiword\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"abw\"]\n  },\n  \"application/x-ace-compressed\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ace\"]\n  },\n  \"application/x-amf\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-apple-diskimage\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"dmg\"]\n  },\n  \"application/x-arj\": {\n    \"compressible\": false,\n    \"extensions\": [\"arj\"]\n  },\n  \"application/x-authorware-bin\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"aab\",\"x32\",\"u32\",\"vox\"]\n  },\n  \"application/x-authorware-map\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"aam\"]\n  },\n  \"application/x-authorware-seg\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"aas\"]\n  },\n  \"application/x-bcpio\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"bcpio\"]\n  },\n  \"application/x-bdoc\": {\n    \"compressible\": false,\n    \"extensions\": [\"bdoc\"]\n  },\n  \"application/x-bittorrent\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"torrent\"]\n  },\n  \"application/x-blorb\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"blb\",\"blorb\"]\n  },\n  \"application/x-bzip\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"bz\"]\n  },\n  \"application/x-bzip2\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"bz2\",\"boz\"]\n  },\n  \"application/x-cbr\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cbr\",\"cba\",\"cbt\",\"cbz\",\"cb7\"]\n  },\n  \"application/x-cdlink\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"vcd\"]\n  },\n  \"application/x-cfs-compressed\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cfs\"]\n  },\n  \"application/x-chat\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"chat\"]\n  },\n  \"application/x-chess-pgn\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pgn\"]\n  },\n  \"application/x-chrome-extension\": {\n    \"extensions\": [\"crx\"]\n  },\n  \"application/x-cocoa\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"cco\"]\n  },\n  \"application/x-compress\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-conference\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"nsc\"]\n  },\n  \"application/x-cpio\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cpio\"]\n  },\n  \"application/x-csh\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"csh\"]\n  },\n  \"application/x-deb\": {\n    \"compressible\": false\n  },\n  \"application/x-debian-package\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"deb\",\"udeb\"]\n  },\n  \"application/x-dgc-compressed\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"dgc\"]\n  },\n  \"application/x-director\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"dir\",\"dcr\",\"dxr\",\"cst\",\"cct\",\"cxt\",\"w3d\",\"fgd\",\"swa\"]\n  },\n  \"application/x-doom\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wad\"]\n  },\n  \"application/x-dtbncx+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"ncx\"]\n  },\n  \"application/x-dtbook+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"dtb\"]\n  },\n  \"application/x-dtbresource+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"res\"]\n  },\n  \"application/x-dvi\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"dvi\"]\n  },\n  \"application/x-envoy\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"evy\"]\n  },\n  \"application/x-eva\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"eva\"]\n  },\n  \"application/x-font-bdf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"bdf\"]\n  },\n  \"application/x-font-dos\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-font-framemaker\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-font-ghostscript\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gsf\"]\n  },\n  \"application/x-font-libgrx\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-font-linux-psf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"psf\"]\n  },\n  \"application/x-font-pcf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pcf\"]\n  },\n  \"application/x-font-snf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"snf\"]\n  },\n  \"application/x-font-speedo\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-font-sunos-news\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-font-type1\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pfa\",\"pfb\",\"pfm\",\"afm\"]\n  },\n  \"application/x-font-vfont\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-freearc\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"arc\"]\n  },\n  \"application/x-futuresplash\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"spl\"]\n  },\n  \"application/x-gca-compressed\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gca\"]\n  },\n  \"application/x-glulx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ulx\"]\n  },\n  \"application/x-gnumeric\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gnumeric\"]\n  },\n  \"application/x-gramps-xml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gramps\"]\n  },\n  \"application/x-gtar\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gtar\"]\n  },\n  \"application/x-gzip\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-hdf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"hdf\"]\n  },\n  \"application/x-httpd-php\": {\n    \"compressible\": true,\n    \"extensions\": [\"php\"]\n  },\n  \"application/x-install-instructions\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"install\"]\n  },\n  \"application/x-iso9660-image\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"iso\"]\n  },\n  \"application/x-iwork-keynote-sffkey\": {\n    \"extensions\": [\"key\"]\n  },\n  \"application/x-iwork-numbers-sffnumbers\": {\n    \"extensions\": [\"numbers\"]\n  },\n  \"application/x-iwork-pages-sffpages\": {\n    \"extensions\": [\"pages\"]\n  },\n  \"application/x-java-archive-diff\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"jardiff\"]\n  },\n  \"application/x-java-jnlp-file\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"jnlp\"]\n  },\n  \"application/x-javascript\": {\n    \"compressible\": true\n  },\n  \"application/x-keepass2\": {\n    \"extensions\": [\"kdbx\"]\n  },\n  \"application/x-latex\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"latex\"]\n  },\n  \"application/x-lua-bytecode\": {\n    \"extensions\": [\"luac\"]\n  },\n  \"application/x-lzh-compressed\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"lzh\",\"lha\"]\n  },\n  \"application/x-makeself\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"run\"]\n  },\n  \"application/x-mie\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mie\"]\n  },\n  \"application/x-mobipocket-ebook\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"prc\",\"mobi\"]\n  },\n  \"application/x-mpegurl\": {\n    \"compressible\": false\n  },\n  \"application/x-ms-application\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"application\"]\n  },\n  \"application/x-ms-shortcut\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"lnk\"]\n  },\n  \"application/x-ms-wmd\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wmd\"]\n  },\n  \"application/x-ms-wmz\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wmz\"]\n  },\n  \"application/x-ms-xbap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xbap\"]\n  },\n  \"application/x-msaccess\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mdb\"]\n  },\n  \"application/x-msbinder\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"obd\"]\n  },\n  \"application/x-mscardfile\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"crd\"]\n  },\n  \"application/x-msclip\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"clp\"]\n  },\n  \"application/x-msdos-program\": {\n    \"extensions\": [\"exe\"]\n  },\n  \"application/x-msdownload\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"exe\",\"dll\",\"com\",\"bat\",\"msi\"]\n  },\n  \"application/x-msmediaview\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mvb\",\"m13\",\"m14\"]\n  },\n  \"application/x-msmetafile\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wmf\",\"wmz\",\"emf\",\"emz\"]\n  },\n  \"application/x-msmoney\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mny\"]\n  },\n  \"application/x-mspublisher\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pub\"]\n  },\n  \"application/x-msschedule\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"scd\"]\n  },\n  \"application/x-msterminal\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"trm\"]\n  },\n  \"application/x-mswrite\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wri\"]\n  },\n  \"application/x-netcdf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"nc\",\"cdf\"]\n  },\n  \"application/x-ns-proxy-autoconfig\": {\n    \"compressible\": true,\n    \"extensions\": [\"pac\"]\n  },\n  \"application/x-nzb\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"nzb\"]\n  },\n  \"application/x-perl\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"pl\",\"pm\"]\n  },\n  \"application/x-pilot\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"prc\",\"pdb\"]\n  },\n  \"application/x-pkcs12\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"p12\",\"pfx\"]\n  },\n  \"application/x-pkcs7-certificates\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"p7b\",\"spc\"]\n  },\n  \"application/x-pkcs7-certreqresp\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"p7r\"]\n  },\n  \"application/x-pki-message\": {\n    \"source\": \"iana\"\n  },\n  \"application/x-rar-compressed\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"rar\"]\n  },\n  \"application/x-redhat-package-manager\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"rpm\"]\n  },\n  \"application/x-research-info-systems\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ris\"]\n  },\n  \"application/x-sea\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"sea\"]\n  },\n  \"application/x-sh\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"sh\"]\n  },\n  \"application/x-shar\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"shar\"]\n  },\n  \"application/x-shockwave-flash\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"swf\"]\n  },\n  \"application/x-silverlight-app\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xap\"]\n  },\n  \"application/x-sql\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sql\"]\n  },\n  \"application/x-stuffit\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"sit\"]\n  },\n  \"application/x-stuffitx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sitx\"]\n  },\n  \"application/x-subrip\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"srt\"]\n  },\n  \"application/x-sv4cpio\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sv4cpio\"]\n  },\n  \"application/x-sv4crc\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sv4crc\"]\n  },\n  \"application/x-t3vm-image\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"t3\"]\n  },\n  \"application/x-tads\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gam\"]\n  },\n  \"application/x-tar\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"tar\"]\n  },\n  \"application/x-tcl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"tcl\",\"tk\"]\n  },\n  \"application/x-tex\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"tex\"]\n  },\n  \"application/x-tex-tfm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"tfm\"]\n  },\n  \"application/x-texinfo\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"texinfo\",\"texi\"]\n  },\n  \"application/x-tgif\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"obj\"]\n  },\n  \"application/x-ustar\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ustar\"]\n  },\n  \"application/x-virtualbox-hdd\": {\n    \"compressible\": true,\n    \"extensions\": [\"hdd\"]\n  },\n  \"application/x-virtualbox-ova\": {\n    \"compressible\": true,\n    \"extensions\": [\"ova\"]\n  },\n  \"application/x-virtualbox-ovf\": {\n    \"compressible\": true,\n    \"extensions\": [\"ovf\"]\n  },\n  \"application/x-virtualbox-vbox\": {\n    \"compressible\": true,\n    \"extensions\": [\"vbox\"]\n  },\n  \"application/x-virtualbox-vbox-extpack\": {\n    \"compressible\": false,\n    \"extensions\": [\"vbox-extpack\"]\n  },\n  \"application/x-virtualbox-vdi\": {\n    \"compressible\": true,\n    \"extensions\": [\"vdi\"]\n  },\n  \"application/x-virtualbox-vhd\": {\n    \"compressible\": true,\n    \"extensions\": [\"vhd\"]\n  },\n  \"application/x-virtualbox-vmdk\": {\n    \"compressible\": true,\n    \"extensions\": [\"vmdk\"]\n  },\n  \"application/x-wais-source\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"src\"]\n  },\n  \"application/x-web-app-manifest+json\": {\n    \"compressible\": true,\n    \"extensions\": [\"webapp\"]\n  },\n  \"application/x-www-form-urlencoded\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/x-x509-ca-cert\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"der\",\"crt\",\"pem\"]\n  },\n  \"application/x-x509-ca-ra-cert\": {\n    \"source\": \"iana\"\n  },\n  \"application/x-x509-next-ca-cert\": {\n    \"source\": \"iana\"\n  },\n  \"application/x-xfig\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"fig\"]\n  },\n  \"application/x-xliff+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"xlf\"]\n  },\n  \"application/x-xpinstall\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"xpi\"]\n  },\n  \"application/x-xz\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xz\"]\n  },\n  \"application/x-zmachine\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"z1\",\"z2\",\"z3\",\"z4\",\"z5\",\"z6\",\"z7\",\"z8\"]\n  },\n  \"application/x400-bp\": {\n    \"source\": \"iana\"\n  },\n  \"application/xacml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/xaml+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"xaml\"]\n  },\n  \"application/xcap-att+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xav\"]\n  },\n  \"application/xcap-caps+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xca\"]\n  },\n  \"application/xcap-diff+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xdf\"]\n  },\n  \"application/xcap-el+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xel\"]\n  },\n  \"application/xcap-error+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/xcap-ns+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xns\"]\n  },\n  \"application/xcon-conference-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/xcon-conference-info-diff+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/xenc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xenc\"]\n  },\n  \"application/xhtml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xhtml\",\"xht\"]\n  },\n  \"application/xhtml-voice+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true\n  },\n  \"application/xliff+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xlf\"]\n  },\n  \"application/xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xml\",\"xsl\",\"xsd\",\"rng\"]\n  },\n  \"application/xml-dtd\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"dtd\"]\n  },\n  \"application/xml-external-parsed-entity\": {\n    \"source\": \"iana\"\n  },\n  \"application/xml-patch+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/xmpp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/xop+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xop\"]\n  },\n  \"application/xproc+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"xpl\"]\n  },\n  \"application/xslt+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xsl\",\"xslt\"]\n  },\n  \"application/xspf+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"xspf\"]\n  },\n  \"application/xv+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mxml\",\"xhvml\",\"xvml\",\"xvm\"]\n  },\n  \"application/yang\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"yang\"]\n  },\n  \"application/yang-data+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/yang-data+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/yang-patch+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/yang-patch+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/yin+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"yin\"]\n  },\n  \"application/zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"zip\"]\n  },\n  \"application/zlib\": {\n    \"source\": \"iana\"\n  },\n  \"application/zstd\": {\n    \"source\": \"iana\"\n  },\n  \"audio/1d-interleaved-parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"audio/32kadpcm\": {\n    \"source\": \"iana\"\n  },\n  \"audio/3gpp\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"3gpp\"]\n  },\n  \"audio/3gpp2\": {\n    \"source\": \"iana\"\n  },\n  \"audio/aac\": {\n    \"source\": \"iana\"\n  },\n  \"audio/ac3\": {\n    \"source\": \"iana\"\n  },\n  \"audio/adpcm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"adp\"]\n  },\n  \"audio/amr\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"amr\"]\n  },\n  \"audio/amr-wb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/amr-wb+\": {\n    \"source\": \"iana\"\n  },\n  \"audio/aptx\": {\n    \"source\": \"iana\"\n  },\n  \"audio/asc\": {\n    \"source\": \"iana\"\n  },\n  \"audio/atrac-advanced-lossless\": {\n    \"source\": \"iana\"\n  },\n  \"audio/atrac-x\": {\n    \"source\": \"iana\"\n  },\n  \"audio/atrac3\": {\n    \"source\": \"iana\"\n  },\n  \"audio/basic\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"au\",\"snd\"]\n  },\n  \"audio/bv16\": {\n    \"source\": \"iana\"\n  },\n  \"audio/bv32\": {\n    \"source\": \"iana\"\n  },\n  \"audio/clearmode\": {\n    \"source\": \"iana\"\n  },\n  \"audio/cn\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dat12\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dls\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dsr-es201108\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dsr-es202050\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dsr-es202211\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dsr-es202212\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dv\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dvi4\": {\n    \"source\": \"iana\"\n  },\n  \"audio/eac3\": {\n    \"source\": \"iana\"\n  },\n  \"audio/encaprtp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrc\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrc-qcp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrc0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrc1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcb0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcb1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcnw\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcnw0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcnw1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcwb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcwb0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcwb1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evs\": {\n    \"source\": \"iana\"\n  },\n  \"audio/flexfec\": {\n    \"source\": \"iana\"\n  },\n  \"audio/fwdred\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g711-0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g719\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g722\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g7221\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g723\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g726-16\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g726-24\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g726-32\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g726-40\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g728\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g729\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g7291\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g729d\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g729e\": {\n    \"source\": \"iana\"\n  },\n  \"audio/gsm\": {\n    \"source\": \"iana\"\n  },\n  \"audio/gsm-efr\": {\n    \"source\": \"iana\"\n  },\n  \"audio/gsm-hr-08\": {\n    \"source\": \"iana\"\n  },\n  \"audio/ilbc\": {\n    \"source\": \"iana\"\n  },\n  \"audio/ip-mr_v2.5\": {\n    \"source\": \"iana\"\n  },\n  \"audio/isac\": {\n    \"source\": \"apache\"\n  },\n  \"audio/l16\": {\n    \"source\": \"iana\"\n  },\n  \"audio/l20\": {\n    \"source\": \"iana\"\n  },\n  \"audio/l24\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"audio/l8\": {\n    \"source\": \"iana\"\n  },\n  \"audio/lpc\": {\n    \"source\": \"iana\"\n  },\n  \"audio/melp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/melp1200\": {\n    \"source\": \"iana\"\n  },\n  \"audio/melp2400\": {\n    \"source\": \"iana\"\n  },\n  \"audio/melp600\": {\n    \"source\": \"iana\"\n  },\n  \"audio/mhas\": {\n    \"source\": \"iana\"\n  },\n  \"audio/midi\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mid\",\"midi\",\"kar\",\"rmi\"]\n  },\n  \"audio/mobile-xmf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mxmf\"]\n  },\n  \"audio/mp3\": {\n    \"compressible\": false,\n    \"extensions\": [\"mp3\"]\n  },\n  \"audio/mp4\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"m4a\",\"mp4a\"]\n  },\n  \"audio/mp4a-latm\": {\n    \"source\": \"iana\"\n  },\n  \"audio/mpa\": {\n    \"source\": \"iana\"\n  },\n  \"audio/mpa-robust\": {\n    \"source\": \"iana\"\n  },\n  \"audio/mpeg\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"mpga\",\"mp2\",\"mp2a\",\"mp3\",\"m2a\",\"m3a\"]\n  },\n  \"audio/mpeg4-generic\": {\n    \"source\": \"iana\"\n  },\n  \"audio/musepack\": {\n    \"source\": \"apache\"\n  },\n  \"audio/ogg\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"oga\",\"ogg\",\"spx\",\"opus\"]\n  },\n  \"audio/opus\": {\n    \"source\": \"iana\"\n  },\n  \"audio/parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"audio/pcma\": {\n    \"source\": \"iana\"\n  },\n  \"audio/pcma-wb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/pcmu\": {\n    \"source\": \"iana\"\n  },\n  \"audio/pcmu-wb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/prs.sid\": {\n    \"source\": \"iana\"\n  },\n  \"audio/qcelp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/raptorfec\": {\n    \"source\": \"iana\"\n  },\n  \"audio/red\": {\n    \"source\": \"iana\"\n  },\n  \"audio/rtp-enc-aescm128\": {\n    \"source\": \"iana\"\n  },\n  \"audio/rtp-midi\": {\n    \"source\": \"iana\"\n  },\n  \"audio/rtploopback\": {\n    \"source\": \"iana\"\n  },\n  \"audio/rtx\": {\n    \"source\": \"iana\"\n  },\n  \"audio/s3m\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"s3m\"]\n  },\n  \"audio/scip\": {\n    \"source\": \"iana\"\n  },\n  \"audio/silk\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sil\"]\n  },\n  \"audio/smv\": {\n    \"source\": \"iana\"\n  },\n  \"audio/smv-qcp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/smv0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/sofa\": {\n    \"source\": \"iana\"\n  },\n  \"audio/sp-midi\": {\n    \"source\": \"iana\"\n  },\n  \"audio/speex\": {\n    \"source\": \"iana\"\n  },\n  \"audio/t140c\": {\n    \"source\": \"iana\"\n  },\n  \"audio/t38\": {\n    \"source\": \"iana\"\n  },\n  \"audio/telephone-event\": {\n    \"source\": \"iana\"\n  },\n  \"audio/tetra_acelp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/tetra_acelp_bb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/tone\": {\n    \"source\": \"iana\"\n  },\n  \"audio/tsvcis\": {\n    \"source\": \"iana\"\n  },\n  \"audio/uemclip\": {\n    \"source\": \"iana\"\n  },\n  \"audio/ulpfec\": {\n    \"source\": \"iana\"\n  },\n  \"audio/usac\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vdvi\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vmr-wb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.3gpp.iufp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.4sb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.audiokoz\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.celp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.cisco.nse\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.cmles.radio-events\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.cns.anp1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.cns.inf1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dece.audio\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uva\",\"uvva\"]\n  },\n  \"audio/vnd.digital-winds\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"eol\"]\n  },\n  \"audio/vnd.dlna.adts\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.heaac.1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.heaac.2\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.mlp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.mps\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.pl2\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.pl2x\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.pl2z\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.pulse.1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dra\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dra\"]\n  },\n  \"audio/vnd.dts\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dts\"]\n  },\n  \"audio/vnd.dts.hd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dtshd\"]\n  },\n  \"audio/vnd.dts.uhd\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dvb.file\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.everad.plj\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.hns.audio\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.lucent.voice\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"lvp\"]\n  },\n  \"audio/vnd.ms-playready.media.pya\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pya\"]\n  },\n  \"audio/vnd.nokia.mobile-xmf\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.nortel.vbk\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.nuera.ecelp4800\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ecelp4800\"]\n  },\n  \"audio/vnd.nuera.ecelp7470\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ecelp7470\"]\n  },\n  \"audio/vnd.nuera.ecelp9600\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ecelp9600\"]\n  },\n  \"audio/vnd.octel.sbc\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.presonus.multitrack\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.qcelp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.rhetorex.32kadpcm\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.rip\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rip\"]\n  },\n  \"audio/vnd.rn-realaudio\": {\n    \"compressible\": false\n  },\n  \"audio/vnd.sealedmedia.softseal.mpeg\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.vmx.cvsd\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.wave\": {\n    \"compressible\": false\n  },\n  \"audio/vorbis\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"audio/vorbis-config\": {\n    \"source\": \"iana\"\n  },\n  \"audio/wav\": {\n    \"compressible\": false,\n    \"extensions\": [\"wav\"]\n  },\n  \"audio/wave\": {\n    \"compressible\": false,\n    \"extensions\": [\"wav\"]\n  },\n  \"audio/webm\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"weba\"]\n  },\n  \"audio/x-aac\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"aac\"]\n  },\n  \"audio/x-aiff\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"aif\",\"aiff\",\"aifc\"]\n  },\n  \"audio/x-caf\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"caf\"]\n  },\n  \"audio/x-flac\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"flac\"]\n  },\n  \"audio/x-m4a\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"m4a\"]\n  },\n  \"audio/x-matroska\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mka\"]\n  },\n  \"audio/x-mpegurl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"m3u\"]\n  },\n  \"audio/x-ms-wax\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wax\"]\n  },\n  \"audio/x-ms-wma\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wma\"]\n  },\n  \"audio/x-pn-realaudio\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ram\",\"ra\"]\n  },\n  \"audio/x-pn-realaudio-plugin\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"rmp\"]\n  },\n  \"audio/x-realaudio\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"ra\"]\n  },\n  \"audio/x-tta\": {\n    \"source\": \"apache\"\n  },\n  \"audio/x-wav\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wav\"]\n  },\n  \"audio/xm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xm\"]\n  },\n  \"chemical/x-cdx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cdx\"]\n  },\n  \"chemical/x-cif\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cif\"]\n  },\n  \"chemical/x-cmdf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cmdf\"]\n  },\n  \"chemical/x-cml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cml\"]\n  },\n  \"chemical/x-csml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"csml\"]\n  },\n  \"chemical/x-pdb\": {\n    \"source\": \"apache\"\n  },\n  \"chemical/x-xyz\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xyz\"]\n  },\n  \"font/collection\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ttc\"]\n  },\n  \"font/otf\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"otf\"]\n  },\n  \"font/sfnt\": {\n    \"source\": \"iana\"\n  },\n  \"font/ttf\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ttf\"]\n  },\n  \"font/woff\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"woff\"]\n  },\n  \"font/woff2\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"woff2\"]\n  },\n  \"image/aces\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"exr\"]\n  },\n  \"image/apng\": {\n    \"compressible\": false,\n    \"extensions\": [\"apng\"]\n  },\n  \"image/avci\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"avci\"]\n  },\n  \"image/avcs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"avcs\"]\n  },\n  \"image/avif\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"avif\"]\n  },\n  \"image/bmp\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"bmp\"]\n  },\n  \"image/cgm\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cgm\"]\n  },\n  \"image/dicom-rle\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"drle\"]\n  },\n  \"image/emf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"emf\"]\n  },\n  \"image/fits\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fits\"]\n  },\n  \"image/g3fax\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"g3\"]\n  },\n  \"image/gif\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"gif\"]\n  },\n  \"image/heic\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"heic\"]\n  },\n  \"image/heic-sequence\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"heics\"]\n  },\n  \"image/heif\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"heif\"]\n  },\n  \"image/heif-sequence\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"heifs\"]\n  },\n  \"image/hej2k\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hej2\"]\n  },\n  \"image/hsj2\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hsj2\"]\n  },\n  \"image/ief\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ief\"]\n  },\n  \"image/jls\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jls\"]\n  },\n  \"image/jp2\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"jp2\",\"jpg2\"]\n  },\n  \"image/jpeg\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"jpeg\",\"jpg\",\"jpe\"]\n  },\n  \"image/jph\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jph\"]\n  },\n  \"image/jphc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jhc\"]\n  },\n  \"image/jpm\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"jpm\"]\n  },\n  \"image/jpx\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"jpx\",\"jpf\"]\n  },\n  \"image/jxr\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxr\"]\n  },\n  \"image/jxra\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxra\"]\n  },\n  \"image/jxrs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxrs\"]\n  },\n  \"image/jxs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxs\"]\n  },\n  \"image/jxsc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxsc\"]\n  },\n  \"image/jxsi\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxsi\"]\n  },\n  \"image/jxss\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxss\"]\n  },\n  \"image/ktx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ktx\"]\n  },\n  \"image/ktx2\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ktx2\"]\n  },\n  \"image/naplps\": {\n    \"source\": \"iana\"\n  },\n  \"image/pjpeg\": {\n    \"compressible\": false\n  },\n  \"image/png\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"png\"]\n  },\n  \"image/prs.btif\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"btif\"]\n  },\n  \"image/prs.pti\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pti\"]\n  },\n  \"image/pwg-raster\": {\n    \"source\": \"iana\"\n  },\n  \"image/sgi\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sgi\"]\n  },\n  \"image/svg+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"svg\",\"svgz\"]\n  },\n  \"image/t38\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"t38\"]\n  },\n  \"image/tiff\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"tif\",\"tiff\"]\n  },\n  \"image/tiff-fx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tfx\"]\n  },\n  \"image/vnd.adobe.photoshop\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"psd\"]\n  },\n  \"image/vnd.airzip.accelerator.azv\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"azv\"]\n  },\n  \"image/vnd.cns.inf2\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.dece.graphic\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvi\",\"uvvi\",\"uvg\",\"uvvg\"]\n  },\n  \"image/vnd.djvu\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"djvu\",\"djv\"]\n  },\n  \"image/vnd.dvb.subtitle\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sub\"]\n  },\n  \"image/vnd.dwg\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dwg\"]\n  },\n  \"image/vnd.dxf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dxf\"]\n  },\n  \"image/vnd.fastbidsheet\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fbs\"]\n  },\n  \"image/vnd.fpx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fpx\"]\n  },\n  \"image/vnd.fst\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fst\"]\n  },\n  \"image/vnd.fujixerox.edmics-mmr\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mmr\"]\n  },\n  \"image/vnd.fujixerox.edmics-rlc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rlc\"]\n  },\n  \"image/vnd.globalgraphics.pgb\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.microsoft.icon\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ico\"]\n  },\n  \"image/vnd.mix\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.mozilla.apng\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.ms-dds\": {\n    \"compressible\": true,\n    \"extensions\": [\"dds\"]\n  },\n  \"image/vnd.ms-modi\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mdi\"]\n  },\n  \"image/vnd.ms-photo\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wdp\"]\n  },\n  \"image/vnd.net-fpx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"npx\"]\n  },\n  \"image/vnd.pco.b16\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"b16\"]\n  },\n  \"image/vnd.radiance\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.sealed.png\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.sealedmedia.softseal.gif\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.sealedmedia.softseal.jpg\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.svf\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.tencent.tap\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tap\"]\n  },\n  \"image/vnd.valve.source.texture\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vtf\"]\n  },\n  \"image/vnd.wap.wbmp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wbmp\"]\n  },\n  \"image/vnd.xiff\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xif\"]\n  },\n  \"image/vnd.zbrush.pcx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pcx\"]\n  },\n  \"image/webp\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"webp\"]\n  },\n  \"image/wmf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wmf\"]\n  },\n  \"image/x-3ds\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"3ds\"]\n  },\n  \"image/x-cmu-raster\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ras\"]\n  },\n  \"image/x-cmx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cmx\"]\n  },\n  \"image/x-freehand\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"fh\",\"fhc\",\"fh4\",\"fh5\",\"fh7\"]\n  },\n  \"image/x-icon\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"ico\"]\n  },\n  \"image/x-jng\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"jng\"]\n  },\n  \"image/x-mrsid-image\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sid\"]\n  },\n  \"image/x-ms-bmp\": {\n    \"source\": \"nginx\",\n    \"compressible\": true,\n    \"extensions\": [\"bmp\"]\n  },\n  \"image/x-pcx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pcx\"]\n  },\n  \"image/x-pict\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pic\",\"pct\"]\n  },\n  \"image/x-portable-anymap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pnm\"]\n  },\n  \"image/x-portable-bitmap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pbm\"]\n  },\n  \"image/x-portable-graymap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pgm\"]\n  },\n  \"image/x-portable-pixmap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ppm\"]\n  },\n  \"image/x-rgb\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"rgb\"]\n  },\n  \"image/x-tga\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"tga\"]\n  },\n  \"image/x-xbitmap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xbm\"]\n  },\n  \"image/x-xcf\": {\n    \"compressible\": false\n  },\n  \"image/x-xpixmap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xpm\"]\n  },\n  \"image/x-xwindowdump\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xwd\"]\n  },\n  \"message/cpim\": {\n    \"source\": \"iana\"\n  },\n  \"message/delivery-status\": {\n    \"source\": \"iana\"\n  },\n  \"message/disposition-notification\": {\n    \"source\": \"iana\",\n    \"extensions\": [\n      \"disposition-notification\"\n    ]\n  },\n  \"message/external-body\": {\n    \"source\": \"iana\"\n  },\n  \"message/feedback-report\": {\n    \"source\": \"iana\"\n  },\n  \"message/global\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"u8msg\"]\n  },\n  \"message/global-delivery-status\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"u8dsn\"]\n  },\n  \"message/global-disposition-notification\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"u8mdn\"]\n  },\n  \"message/global-headers\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"u8hdr\"]\n  },\n  \"message/http\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"message/imdn+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"message/news\": {\n    \"source\": \"iana\"\n  },\n  \"message/partial\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"message/rfc822\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"eml\",\"mime\"]\n  },\n  \"message/s-http\": {\n    \"source\": \"iana\"\n  },\n  \"message/sip\": {\n    \"source\": \"iana\"\n  },\n  \"message/sipfrag\": {\n    \"source\": \"iana\"\n  },\n  \"message/tracking-status\": {\n    \"source\": \"iana\"\n  },\n  \"message/vnd.si.simp\": {\n    \"source\": \"iana\"\n  },\n  \"message/vnd.wfa.wsc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wsc\"]\n  },\n  \"model/3mf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"3mf\"]\n  },\n  \"model/e57\": {\n    \"source\": \"iana\"\n  },\n  \"model/gltf+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"gltf\"]\n  },\n  \"model/gltf-binary\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"glb\"]\n  },\n  \"model/iges\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"igs\",\"iges\"]\n  },\n  \"model/mesh\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"msh\",\"mesh\",\"silo\"]\n  },\n  \"model/mtl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mtl\"]\n  },\n  \"model/obj\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"obj\"]\n  },\n  \"model/step\": {\n    \"source\": \"iana\"\n  },\n  \"model/step+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"stpx\"]\n  },\n  \"model/step+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"stpz\"]\n  },\n  \"model/step-xml+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"stpxz\"]\n  },\n  \"model/stl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"stl\"]\n  },\n  \"model/vnd.collada+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"dae\"]\n  },\n  \"model/vnd.dwf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dwf\"]\n  },\n  \"model/vnd.flatland.3dml\": {\n    \"source\": \"iana\"\n  },\n  \"model/vnd.gdl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gdl\"]\n  },\n  \"model/vnd.gs-gdl\": {\n    \"source\": \"apache\"\n  },\n  \"model/vnd.gs.gdl\": {\n    \"source\": \"iana\"\n  },\n  \"model/vnd.gtw\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gtw\"]\n  },\n  \"model/vnd.moml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"model/vnd.mts\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mts\"]\n  },\n  \"model/vnd.opengex\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ogex\"]\n  },\n  \"model/vnd.parasolid.transmit.binary\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"x_b\"]\n  },\n  \"model/vnd.parasolid.transmit.text\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"x_t\"]\n  },\n  \"model/vnd.pytha.pyox\": {\n    \"source\": \"iana\"\n  },\n  \"model/vnd.rosette.annotated-data-model\": {\n    \"source\": \"iana\"\n  },\n  \"model/vnd.sap.vds\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vds\"]\n  },\n  \"model/vnd.usdz+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"usdz\"]\n  },\n  \"model/vnd.valve.source.compiled-map\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"bsp\"]\n  },\n  \"model/vnd.vtu\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vtu\"]\n  },\n  \"model/vrml\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"wrl\",\"vrml\"]\n  },\n  \"model/x3d+binary\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"x3db\",\"x3dbz\"]\n  },\n  \"model/x3d+fastinfoset\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"x3db\"]\n  },\n  \"model/x3d+vrml\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"x3dv\",\"x3dvz\"]\n  },\n  \"model/x3d+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"x3d\",\"x3dz\"]\n  },\n  \"model/x3d-vrml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"x3dv\"]\n  },\n  \"multipart/alternative\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"multipart/appledouble\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/byteranges\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/digest\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/encrypted\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"multipart/form-data\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"multipart/header-set\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/mixed\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/multilingual\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/parallel\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/related\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"multipart/report\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/signed\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"multipart/vnd.bint.med-plus\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/voice-message\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/x-mixed-replace\": {\n    \"source\": \"iana\"\n  },\n  \"text/1d-interleaved-parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"text/cache-manifest\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"appcache\",\"manifest\"]\n  },\n  \"text/calendar\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ics\",\"ifb\"]\n  },\n  \"text/calender\": {\n    \"compressible\": true\n  },\n  \"text/cmd\": {\n    \"compressible\": true\n  },\n  \"text/coffeescript\": {\n    \"extensions\": [\"coffee\",\"litcoffee\"]\n  },\n  \"text/cql\": {\n    \"source\": \"iana\"\n  },\n  \"text/cql-expression\": {\n    \"source\": \"iana\"\n  },\n  \"text/cql-identifier\": {\n    \"source\": \"iana\"\n  },\n  \"text/css\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"css\"]\n  },\n  \"text/csv\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"csv\"]\n  },\n  \"text/csv-schema\": {\n    \"source\": \"iana\"\n  },\n  \"text/directory\": {\n    \"source\": \"iana\"\n  },\n  \"text/dns\": {\n    \"source\": \"iana\"\n  },\n  \"text/ecmascript\": {\n    \"source\": \"iana\"\n  },\n  \"text/encaprtp\": {\n    \"source\": \"iana\"\n  },\n  \"text/enriched\": {\n    \"source\": \"iana\"\n  },\n  \"text/fhirpath\": {\n    \"source\": \"iana\"\n  },\n  \"text/flexfec\": {\n    \"source\": \"iana\"\n  },\n  \"text/fwdred\": {\n    \"source\": \"iana\"\n  },\n  \"text/gff3\": {\n    \"source\": \"iana\"\n  },\n  \"text/grammar-ref-list\": {\n    \"source\": \"iana\"\n  },\n  \"text/html\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"html\",\"htm\",\"shtml\"]\n  },\n  \"text/jade\": {\n    \"extensions\": [\"jade\"]\n  },\n  \"text/javascript\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"text/jcr-cnd\": {\n    \"source\": \"iana\"\n  },\n  \"text/jsx\": {\n    \"compressible\": true,\n    \"extensions\": [\"jsx\"]\n  },\n  \"text/less\": {\n    \"compressible\": true,\n    \"extensions\": [\"less\"]\n  },\n  \"text/markdown\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"markdown\",\"md\"]\n  },\n  \"text/mathml\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"mml\"]\n  },\n  \"text/mdx\": {\n    \"compressible\": true,\n    \"extensions\": [\"mdx\"]\n  },\n  \"text/mizar\": {\n    \"source\": \"iana\"\n  },\n  \"text/n3\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"n3\"]\n  },\n  \"text/parameters\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\"\n  },\n  \"text/parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"text/plain\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"txt\",\"text\",\"conf\",\"def\",\"list\",\"log\",\"in\",\"ini\"]\n  },\n  \"text/provenance-notation\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\"\n  },\n  \"text/prs.fallenstein.rst\": {\n    \"source\": \"iana\"\n  },\n  \"text/prs.lines.tag\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dsc\"]\n  },\n  \"text/prs.prop.logic\": {\n    \"source\": \"iana\"\n  },\n  \"text/raptorfec\": {\n    \"source\": \"iana\"\n  },\n  \"text/red\": {\n    \"source\": \"iana\"\n  },\n  \"text/rfc822-headers\": {\n    \"source\": \"iana\"\n  },\n  \"text/richtext\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rtx\"]\n  },\n  \"text/rtf\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rtf\"]\n  },\n  \"text/rtp-enc-aescm128\": {\n    \"source\": \"iana\"\n  },\n  \"text/rtploopback\": {\n    \"source\": \"iana\"\n  },\n  \"text/rtx\": {\n    \"source\": \"iana\"\n  },\n  \"text/sgml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sgml\",\"sgm\"]\n  },\n  \"text/shaclc\": {\n    \"source\": \"iana\"\n  },\n  \"text/shex\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"shex\"]\n  },\n  \"text/slim\": {\n    \"extensions\": [\"slim\",\"slm\"]\n  },\n  \"text/spdx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"spdx\"]\n  },\n  \"text/strings\": {\n    \"source\": \"iana\"\n  },\n  \"text/stylus\": {\n    \"extensions\": [\"stylus\",\"styl\"]\n  },\n  \"text/t140\": {\n    \"source\": \"iana\"\n  },\n  \"text/tab-separated-values\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"tsv\"]\n  },\n  \"text/troff\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"t\",\"tr\",\"roff\",\"man\",\"me\",\"ms\"]\n  },\n  \"text/turtle\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"extensions\": [\"ttl\"]\n  },\n  \"text/ulpfec\": {\n    \"source\": \"iana\"\n  },\n  \"text/uri-list\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"uri\",\"uris\",\"urls\"]\n  },\n  \"text/vcard\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"vcard\"]\n  },\n  \"text/vnd.a\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.abc\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.ascii-art\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.curl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"curl\"]\n  },\n  \"text/vnd.curl.dcurl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"dcurl\"]\n  },\n  \"text/vnd.curl.mcurl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mcurl\"]\n  },\n  \"text/vnd.curl.scurl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"scurl\"]\n  },\n  \"text/vnd.debian.copyright\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\"\n  },\n  \"text/vnd.dmclientscript\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.dvb.subtitle\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sub\"]\n  },\n  \"text/vnd.esmertec.theme-descriptor\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\"\n  },\n  \"text/vnd.familysearch.gedcom\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ged\"]\n  },\n  \"text/vnd.ficlab.flt\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.fly\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fly\"]\n  },\n  \"text/vnd.fmi.flexstor\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"flx\"]\n  },\n  \"text/vnd.gml\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.graphviz\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gv\"]\n  },\n  \"text/vnd.hans\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.hgl\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.in3d.3dml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"3dml\"]\n  },\n  \"text/vnd.in3d.spot\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"spot\"]\n  },\n  \"text/vnd.iptc.newsml\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.iptc.nitf\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.latex-z\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.motorola.reflex\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.ms-mediapackage\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.net2phone.commcenter.command\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.radisys.msml-basic-layout\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.senx.warpscript\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.si.uricatalogue\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.sosi\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.sun.j2me.app-descriptor\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"extensions\": [\"jad\"]\n  },\n  \"text/vnd.trolltech.linguist\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\"\n  },\n  \"text/vnd.wap.si\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.wap.sl\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.wap.wml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wml\"]\n  },\n  \"text/vnd.wap.wmlscript\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wmls\"]\n  },\n  \"text/vtt\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"vtt\"]\n  },\n  \"text/x-asm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"s\",\"asm\"]\n  },\n  \"text/x-c\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"c\",\"cc\",\"cxx\",\"cpp\",\"h\",\"hh\",\"dic\"]\n  },\n  \"text/x-component\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"htc\"]\n  },\n  \"text/x-fortran\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"f\",\"for\",\"f77\",\"f90\"]\n  },\n  \"text/x-gwt-rpc\": {\n    \"compressible\": true\n  },\n  \"text/x-handlebars-template\": {\n    \"extensions\": [\"hbs\"]\n  },\n  \"text/x-java-source\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"java\"]\n  },\n  \"text/x-jquery-tmpl\": {\n    \"compressible\": true\n  },\n  \"text/x-lua\": {\n    \"extensions\": [\"lua\"]\n  },\n  \"text/x-markdown\": {\n    \"compressible\": true,\n    \"extensions\": [\"mkd\"]\n  },\n  \"text/x-nfo\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"nfo\"]\n  },\n  \"text/x-opml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"opml\"]\n  },\n  \"text/x-org\": {\n    \"compressible\": true,\n    \"extensions\": [\"org\"]\n  },\n  \"text/x-pascal\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"p\",\"pas\"]\n  },\n  \"text/x-processing\": {\n    \"compressible\": true,\n    \"extensions\": [\"pde\"]\n  },\n  \"text/x-sass\": {\n    \"extensions\": [\"sass\"]\n  },\n  \"text/x-scss\": {\n    \"extensions\": [\"scss\"]\n  },\n  \"text/x-setext\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"etx\"]\n  },\n  \"text/x-sfv\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sfv\"]\n  },\n  \"text/x-suse-ymp\": {\n    \"compressible\": true,\n    \"extensions\": [\"ymp\"]\n  },\n  \"text/x-uuencode\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"uu\"]\n  },\n  \"text/x-vcalendar\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"vcs\"]\n  },\n  \"text/x-vcard\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"vcf\"]\n  },\n  \"text/xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xml\"]\n  },\n  \"text/xml-external-parsed-entity\": {\n    \"source\": \"iana\"\n  },\n  \"text/yaml\": {\n    \"compressible\": true,\n    \"extensions\": [\"yaml\",\"yml\"]\n  },\n  \"video/1d-interleaved-parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"video/3gpp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"3gp\",\"3gpp\"]\n  },\n  \"video/3gpp-tt\": {\n    \"source\": \"iana\"\n  },\n  \"video/3gpp2\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"3g2\"]\n  },\n  \"video/av1\": {\n    \"source\": \"iana\"\n  },\n  \"video/bmpeg\": {\n    \"source\": \"iana\"\n  },\n  \"video/bt656\": {\n    \"source\": \"iana\"\n  },\n  \"video/celb\": {\n    \"source\": \"iana\"\n  },\n  \"video/dv\": {\n    \"source\": \"iana\"\n  },\n  \"video/encaprtp\": {\n    \"source\": \"iana\"\n  },\n  \"video/ffv1\": {\n    \"source\": \"iana\"\n  },\n  \"video/flexfec\": {\n    \"source\": \"iana\"\n  },\n  \"video/h261\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"h261\"]\n  },\n  \"video/h263\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"h263\"]\n  },\n  \"video/h263-1998\": {\n    \"source\": \"iana\"\n  },\n  \"video/h263-2000\": {\n    \"source\": \"iana\"\n  },\n  \"video/h264\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"h264\"]\n  },\n  \"video/h264-rcdo\": {\n    \"source\": \"iana\"\n  },\n  \"video/h264-svc\": {\n    \"source\": \"iana\"\n  },\n  \"video/h265\": {\n    \"source\": \"iana\"\n  },\n  \"video/iso.segment\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"m4s\"]\n  },\n  \"video/jpeg\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jpgv\"]\n  },\n  \"video/jpeg2000\": {\n    \"source\": \"iana\"\n  },\n  \"video/jpm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"jpm\",\"jpgm\"]\n  },\n  \"video/jxsv\": {\n    \"source\": \"iana\"\n  },\n  \"video/mj2\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mj2\",\"mjp2\"]\n  },\n  \"video/mp1s\": {\n    \"source\": \"iana\"\n  },\n  \"video/mp2p\": {\n    \"source\": \"iana\"\n  },\n  \"video/mp2t\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ts\"]\n  },\n  \"video/mp4\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"mp4\",\"mp4v\",\"mpg4\"]\n  },\n  \"video/mp4v-es\": {\n    \"source\": \"iana\"\n  },\n  \"video/mpeg\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"mpeg\",\"mpg\",\"mpe\",\"m1v\",\"m2v\"]\n  },\n  \"video/mpeg4-generic\": {\n    \"source\": \"iana\"\n  },\n  \"video/mpv\": {\n    \"source\": \"iana\"\n  },\n  \"video/nv\": {\n    \"source\": \"iana\"\n  },\n  \"video/ogg\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"ogv\"]\n  },\n  \"video/parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"video/pointer\": {\n    \"source\": \"iana\"\n  },\n  \"video/quicktime\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"qt\",\"mov\"]\n  },\n  \"video/raptorfec\": {\n    \"source\": \"iana\"\n  },\n  \"video/raw\": {\n    \"source\": \"iana\"\n  },\n  \"video/rtp-enc-aescm128\": {\n    \"source\": \"iana\"\n  },\n  \"video/rtploopback\": {\n    \"source\": \"iana\"\n  },\n  \"video/rtx\": {\n    \"source\": \"iana\"\n  },\n  \"video/scip\": {\n    \"source\": \"iana\"\n  },\n  \"video/smpte291\": {\n    \"source\": \"iana\"\n  },\n  \"video/smpte292m\": {\n    \"source\": \"iana\"\n  },\n  \"video/ulpfec\": {\n    \"source\": \"iana\"\n  },\n  \"video/vc1\": {\n    \"source\": \"iana\"\n  },\n  \"video/vc2\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.cctv\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.dece.hd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvh\",\"uvvh\"]\n  },\n  \"video/vnd.dece.mobile\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvm\",\"uvvm\"]\n  },\n  \"video/vnd.dece.mp4\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.dece.pd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvp\",\"uvvp\"]\n  },\n  \"video/vnd.dece.sd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvs\",\"uvvs\"]\n  },\n  \"video/vnd.dece.video\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvv\",\"uvvv\"]\n  },\n  \"video/vnd.directv.mpeg\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.directv.mpeg-tts\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.dlna.mpeg-tts\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.dvb.file\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dvb\"]\n  },\n  \"video/vnd.fvt\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fvt\"]\n  },\n  \"video/vnd.hns.video\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.iptvforum.1dparityfec-1010\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.iptvforum.1dparityfec-2005\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.iptvforum.2dparityfec-1010\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.iptvforum.2dparityfec-2005\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.iptvforum.ttsavc\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.iptvforum.ttsmpeg2\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.motorola.video\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.motorola.videop\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.mpegurl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mxu\",\"m4u\"]\n  },\n  \"video/vnd.ms-playready.media.pyv\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pyv\"]\n  },\n  \"video/vnd.nokia.interleaved-multimedia\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.nokia.mp4vr\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.nokia.videovoip\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.objectvideo\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.radgamettools.bink\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.radgamettools.smacker\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.sealed.mpeg1\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.sealed.mpeg4\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.sealed.swf\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.sealedmedia.softseal.mov\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.uvvu.mp4\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvu\",\"uvvu\"]\n  },\n  \"video/vnd.vivo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"viv\"]\n  },\n  \"video/vnd.youtube.yt\": {\n    \"source\": \"iana\"\n  },\n  \"video/vp8\": {\n    \"source\": \"iana\"\n  },\n  \"video/vp9\": {\n    \"source\": \"iana\"\n  },\n  \"video/webm\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"webm\"]\n  },\n  \"video/x-f4v\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"f4v\"]\n  },\n  \"video/x-fli\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"fli\"]\n  },\n  \"video/x-flv\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"flv\"]\n  },\n  \"video/x-m4v\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"m4v\"]\n  },\n  \"video/x-matroska\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"mkv\",\"mk3d\",\"mks\"]\n  },\n  \"video/x-mng\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mng\"]\n  },\n  \"video/x-ms-asf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"asf\",\"asx\"]\n  },\n  \"video/x-ms-vob\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"vob\"]\n  },\n  \"video/x-ms-wm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wm\"]\n  },\n  \"video/x-ms-wmv\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"wmv\"]\n  },\n  \"video/x-ms-wmx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wmx\"]\n  },\n  \"video/x-ms-wvx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wvx\"]\n  },\n  \"video/x-msvideo\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"avi\"]\n  },\n  \"video/x-sgi-movie\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"movie\"]\n  },\n  \"video/x-smv\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"smv\"]\n  },\n  \"x-conference/x-cooltalk\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ice\"]\n  },\n  \"x-shader/x-fragment\": {\n    \"compressible\": true\n  },\n  \"x-shader/x-vertex\": {\n    \"compressible\": true\n  }\n}\n", "/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n", "import EventEmitter from 'events';\nimport { parse, parseFragment, serialize } from 'parse5';\n\n/**\n * @typedef {import('./index').default} Ultraviolet\n */\n\nclass HTML extends EventEmitter {\n    /**\n     *\n     * @param {Ultraviolet} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.rewriteUrl = ctx.rewriteUrl;\n        this.sourceUrl = ctx.sourceUrl;\n    }\n    rewrite(str, options = {}) {\n        if (!str) return str;\n        return this.recast(\n            str,\n            (node) => {\n                if (node.tagName) this.emit('element', node, 'rewrite');\n                if (node.attr) this.emit('attr', node, 'rewrite');\n                if (node.nodeName === '#text')\n                    this.emit('text', node, 'rewrite');\n            },\n            options\n        );\n    }\n    source(str, options = {}) {\n        if (!str) return str;\n        return this.recast(\n            str,\n            (node) => {\n                if (node.tagName) this.emit('element', node, 'source');\n                if (node.attr) this.emit('attr', node, 'source');\n                if (node.nodeName === '#text')\n                    this.emit('text', node, 'source');\n            },\n            options\n        );\n    }\n    recast(str, fn, options = {}) {\n        try {\n            const ast = (options.document ? parse : parseFragment)(\n                new String(str).toString()\n            );\n            this.iterate(ast, fn, options);\n            return serialize(ast);\n        } catch (e) {\n            return str;\n        }\n    }\n    iterate(ast, fn, fnOptions) {\n        if (!ast) return ast;\n\n        if (ast.tagName) {\n            const element = new P5Element(ast, false, fnOptions);\n            fn(element);\n            if (ast.attrs) {\n                for (const attr of ast.attrs) {\n                    if (!attr.skip)\n                        fn(new AttributeEvent(element, attr, fnOptions));\n                }\n            }\n        }\n\n        if (ast.childNodes) {\n            for (const child of ast.childNodes) {\n                if (!child.skip) this.iterate(child, fn, fnOptions);\n            }\n        }\n\n        if (ast.nodeName === '#text') {\n            fn(\n                new TextEvent(\n                    ast,\n                    new P5Element(ast.parentNode),\n                    false,\n                    fnOptions\n                )\n            );\n        }\n\n        return ast;\n    }\n    wrapSrcset(str, meta = this.ctx.meta) {\n        return str\n            .split(',')\n            .map((src) => {\n                const parts = src.trimStart().split(' ');\n                if (parts[0]) parts[0] = this.ctx.rewriteUrl(parts[0], meta);\n                return parts.join(' ');\n            })\n            .join(', ');\n    }\n    unwrapSrcset(str, meta = this.ctx.meta) {\n        return str\n            .split(',')\n            .map((src) => {\n                const parts = src.trimStart().split(' ');\n                if (parts[0]) parts[0] = this.ctx.sourceUrl(parts[0], meta);\n                return parts.join(' ');\n            })\n            .join(', ');\n    }\n    static parse = parse;\n    static parseFragment = parseFragment;\n    static serialize = serialize;\n}\n\nclass P5Element extends EventEmitter {\n    constructor(node, stream = false, options = {}) {\n        super();\n        this.stream = stream;\n        this.node = node;\n        this.options = options;\n    }\n    setAttribute(name, value) {\n        for (const attr of this.attrs) {\n            if (attr.name === name) {\n                attr.value = value;\n                return true;\n            }\n        }\n\n        this.attrs.push({\n            name,\n            value,\n        });\n    }\n    getAttribute(name) {\n        const attr = this.attrs.find((attr) => attr.name === name) || {};\n        return attr.value;\n    }\n    hasAttribute(name) {\n        return !!this.attrs.find((attr) => attr.name === name);\n    }\n    removeAttribute(name) {\n        const i = this.attrs.findIndex((attr) => attr.name === name);\n        if (typeof i !== 'undefined') this.attrs.splice(i, 1);\n    }\n    get tagName() {\n        return this.node.tagName;\n    }\n    set tagName(val) {\n        this.node.tagName = val;\n    }\n    get childNodes() {\n        return !this.stream ? this.node.childNodes : null;\n    }\n    get innerHTML() {\n        return !this.stream\n            ? serialize({\n                  nodeName: '#document-fragment',\n                  childNodes: this.childNodes,\n              })\n            : null;\n    }\n    set innerHTML(val) {\n        if (!this.stream) this.node.childNodes = parseFragment(val).childNodes;\n    }\n    get outerHTML() {\n        return !this.stream\n            ? serialize({\n                  nodeName: '#document-fragment',\n                  childNodes: [this],\n              })\n            : null;\n    }\n    set outerHTML(val) {\n        if (!this.stream)\n            this.parentNode.childNodes.splice(\n                this.parentNode.childNodes.findIndex(\n                    (node) => node === this.node\n                ),\n                1,\n                ...parseFragment(val).childNodes\n            );\n    }\n    get textContent() {\n        if (this.stream) return null;\n\n        let str = '';\n        this.iterate(this.node, (node) => {\n            if (node.nodeName === '#text') str += node.value;\n        });\n\n        return str;\n    }\n    set textContent(val) {\n        if (!this.stream)\n            this.node.childNodes = [\n                {\n                    nodeName: '#text',\n                    value: val,\n                    parentNode: this.node,\n                },\n            ];\n    }\n    get nodeName() {\n        return this.node.nodeName;\n    }\n    get parentNode() {\n        return this.node.parentNode\n            ? new P5Element(this.node.parentNode)\n            : null;\n    }\n    get attrs() {\n        return this.node.attrs;\n    }\n    get namespaceURI() {\n        return this.node.namespaceURI;\n    }\n}\n\nclass AttributeEvent {\n    constructor(node, attr, options = {}) {\n        this.attr = attr;\n        this.attrs = node.attrs;\n        this.node = node;\n        this.options = options;\n    }\n    delete() {\n        const i = this.attrs.findIndex((attr) => attr === this.attr);\n\n        this.attrs.splice(i, 1);\n\n        Object.defineProperty(this, 'deleted', {\n            get: () => true,\n        });\n\n        return true;\n    }\n    get name() {\n        return this.attr.name;\n    }\n\n    set name(val) {\n        this.attr.name = val;\n    }\n    get value() {\n        return this.attr.value;\n    }\n\n    set value(val) {\n        this.attr.value = val;\n    }\n    get deleted() {\n        return false;\n    }\n}\n\nclass TextEvent {\n    constructor(node, element, stream = false, options = {}) {\n        this.stream = stream;\n        this.node = node;\n        this.element = element;\n        this.options = options;\n    }\n    get nodeName() {\n        return this.node.nodeName;\n    }\n    get parentNode() {\n        return this.element;\n    }\n    get value() {\n        return this.stream ? this.node.text : this.node.value;\n    }\n    set value(val) {\n        if (this.stream) this.node.text = val;\n        else this.node.value = val;\n    }\n}\n\nexport default HTML;\n", "const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n//# sourceMappingURL=unicode.js.map", "export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR = ERR || (ERR = {}));\n//# sourceMappingURL=error-codes.js.map", "import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line, col, offset } = this;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n//# sourceMappingURL=preprocessor.js.map", "export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType = TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=token.js.map", null, null, null, null, "/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS = NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS = ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport function isNumberedHeader(tn) {\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\n}\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n//# sourceMappingURL=html.js.map", "import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, BinTrieFlags, determineBranch } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [0x80, 8364],\n    [0x82, 8218],\n    [0x83, 402],\n    [0x84, 8222],\n    [0x85, 8230],\n    [0x86, 8224],\n    [0x87, 8225],\n    [0x88, 710],\n    [0x89, 8240],\n    [0x8a, 352],\n    [0x8b, 8249],\n    [0x8c, 338],\n    [0x8e, 381],\n    [0x91, 8216],\n    [0x92, 8217],\n    [0x93, 8220],\n    [0x94, 8221],\n    [0x95, 8226],\n    [0x96, 8211],\n    [0x97, 8212],\n    [0x98, 732],\n    [0x99, 8482],\n    [0x9a, 353],\n    [0x9b, 8250],\n    [0x9c, 339],\n    [0x9e, 382],\n    [0x9f, 376],\n]);\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state, cp) {\n        this.state = state;\n        this._callState(cp);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n            else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\n            if (i < 0)\n                break;\n            excess += 1;\n            current = htmlDecodeTree[i];\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== $.SEMICOLON &&\n                    this._isCharacterReferenceInAttribute() &&\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [$.AMPERSAND];\n                    // Skip over the value.\n                    i += valueLength;\n                }\n                else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result =\n                        valueLength === 0\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\n                            : valueLength === 1\n                                ? [htmlDecodeTree[++i]]\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\n                    excess = 0;\n                    withoutSemicolon = cp !== $.SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n        }\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference(cp);\n                break;\n            }\n            case State.NAMED_CHARACTER_REFERENCE: {\n                this._stateNamedCharacterReference(cp);\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE: {\n                this._stateNumericCharacterReference(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE: {\n                this._stateDecimalCharacterReference(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\n                this._stateNumericCharacterReferenceEnd(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.DATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this.returnState = State.RCDATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === $.NUMBER_SIGN) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\n        }\n        else if (isAsciiAlphaNumeric(cp)) {\n            this.state = State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            // Stay in the state, try again.\n        }\n        else if (matchResult) {\n            for (let i = 0; i < matchResult.length; i++) {\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            }\n            this.state = this.returnState;\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state = State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        }\n        // Inlined decimal character reference start state\n        else if (isAsciiDigit(cp)) {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if (isAsciiHexDigit(cp)) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        }\n        else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        }\n        else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd(cp) {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (this.charRefCode > 1114111) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        }\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) {\n                this.charRefCode = replacement;\n            }\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState, cp);\n    }\n}\n//# sourceMappingURL=index.js.map", "import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [$.APPLET, NS.HTML],\n    [$.CAPTION, NS.HTML],\n    [$.HTML, NS.HTML],\n    [$.MARQUEE, NS.HTML],\n    [$.OBJECT, NS.HTML],\n    [$.TABLE, NS.HTML],\n    [$.TD, NS.HTML],\n    [$.TEMPLATE, NS.HTML],\n    [$.TH, NS.HTML],\n    [$.ANNOTATION_XML, NS.MATHML],\n    [$.MI, NS.MATHML],\n    [$.MN, NS.MATHML],\n    [$.MO, NS.MATHML],\n    [$.MS, NS.MATHML],\n    [$.MTEXT, NS.MATHML],\n    [$.DESC, NS.SVG],\n    [$.FOREIGN_OBJECT, NS.SVG],\n    [$.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n//# sourceMappingURL=open-element-stack.js.map", "//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType = EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n//# sourceMappingURL=formatting-element-list.js.map", "import { DOCUMENT_MODE } from '../common/html.js';\nfunction createTextNode(value) {\n    return {\n        nodeName: '#text',\n        value,\n        parentNode: null,\n    };\n}\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n//# sourceMappingURL=default.js.map", "import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n//# sourceMappingURL=doctype.js.map", "import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n//# sourceMappingURL=foreign-content.js.map", "import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map", null, "import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const html = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (!attr.namespace) {\n            html += attr.name;\n        }\n        else\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n//# sourceMappingURL=index.js.map", "import { Parser } from './parser/index.js';\nexport { defaultTreeAdapter } from './tree-adapters/default.js';\nexport { /** @internal */ Parser } from './parser/index.js';\nexport { serialize, serializeOuter } from './serializer/index.js';\nexport { ERR as ErrorCodes } from './common/error-codes.js';\n/** @internal */\nexport * as foreignContent from './common/foreign-content.js';\n/** @internal */\nexport * as html from './common/html.js';\n/** @internal */\nexport * as Token from './common/token.js';\n/** @internal */\nexport { Tokenizer, TokenizerMode } from './tokenizer/index.js';\n// Shorthands\n/**\n * Parses an HTML string.\n *\n * @param html Input HTML string.\n * @param options Parsing options.\n * @returns Document\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * console.log(document.childNodes[1].tagName); //> 'html'\n *```\n */\nexport function parse(html, options) {\n    return Parser.parse(html, options);\n}\nexport function parseFragment(fragmentContext, html, options) {\n    if (typeof fragmentContext === 'string') {\n        options = html;\n        html = fragmentContext;\n        fragmentContext = null;\n    }\n    const parser = Parser.getFragmentParser(fragmentContext, options);\n    parser.tokenizer.write(html, true);\n    return parser.getFragment();\n}\n//# sourceMappingURL=index.js.map", "// CSS Syntax Module Level 3\n// https://www.w3.org/TR/css-syntax-3/\nexport const EOF = 0;                 // <EOF-token>\nexport const Ident = 1;               // <ident-token>\nexport const Function = 2;            // <function-token>\nexport const AtKeyword = 3;           // <at-keyword-token>\nexport const Hash = 4;                // <hash-token>\nexport const String = 5;              // <string-token>\nexport const BadString = 6;           // <bad-string-token>\nexport const Url = 7;                 // <url-token>\nexport const BadUrl = 8;              // <bad-url-token>\nexport const Delim = 9;               // <delim-token>\nexport const Number = 10;             // <number-token>\nexport const Percentage = 11;         // <percentage-token>\nexport const Dimension = 12;          // <dimension-token>\nexport const WhiteSpace = 13;         // <whitespace-token>\nexport const CDO = 14;                // <CDO-token>\nexport const CDC = 15;                // <CDC-token>\nexport const Colon = 16;              // <colon-token>     :\nexport const Semicolon = 17;          // <semicolon-token> ;\nexport const Comma = 18;              // <comma-token>     ,\nexport const LeftSquareBracket = 19;  // <[-token>\nexport const RightSquareBracket = 20; // <]-token>\nexport const LeftParenthesis = 21;    // <(-token>\nexport const RightParenthesis = 22;   // <)-token>\nexport const LeftCurlyBracket = 23;   // <{-token>\nexport const RightCurlyBracket = 24;  // <}-token>\nexport const Comment = 25;\n", "const EOF = 0;\n\n// https://drafts.csswg.org/css-syntax-3/\n// \u00A7 4.2. Definitions\n\n// digit\n// A code point between U+0030 DIGIT ZERO (0) and U+0039 DIGIT NINE (9).\nexport function isDigit(code) {\n    return code >= 0x0030 && code <= 0x0039;\n}\n\n// hex digit\n// A digit, or a code point between U+0041 LATIN CAPITAL LETTER A (A) and U+0046 LATIN CAPITAL LETTER F (F),\n// or a code point between U+0061 LATIN SMALL LETTER A (a) and U+0066 LATIN SMALL LETTER F (f).\nexport function isHexDigit(code) {\n    return (\n        isDigit(code) || // 0 .. 9\n        (code >= 0x0041 && code <= 0x0046) || // A .. F\n        (code >= 0x0061 && code <= 0x0066)    // a .. f\n    );\n}\n\n// uppercase letter\n// A code point between U+0041 LATIN CAPITAL LETTER A (A) and U+005A LATIN CAPITAL LETTER Z (Z).\nexport function isUppercaseLetter(code) {\n    return code >= 0x0041 && code <= 0x005A;\n}\n\n// lowercase letter\n// A code point between U+0061 LATIN SMALL LETTER A (a) and U+007A LATIN SMALL LETTER Z (z).\nexport function isLowercaseLetter(code) {\n    return code >= 0x0061 && code <= 0x007A;\n}\n\n// letter\n// An uppercase letter or a lowercase letter.\nexport function isLetter(code) {\n    return isUppercaseLetter(code) || isLowercaseLetter(code);\n}\n\n// non-ASCII code point\n// A code point with a value equal to or greater than U+0080 <control>.\nexport function isNonAscii(code) {\n    return code >= 0x0080;\n}\n\n// name-start code point\n// A letter, a non-ASCII code point, or U+005F LOW LINE (_).\nexport function isNameStart(code) {\n    return isLetter(code) || isNonAscii(code) || code === 0x005F;\n}\n\n// name code point\n// A name-start code point, a digit, or U+002D HYPHEN-MINUS (-).\nexport function isName(code) {\n    return isNameStart(code) || isDigit(code) || code === 0x002D;\n}\n\n// non-printable code point\n// A code point between U+0000 NULL and U+0008 BACKSPACE, or U+000B LINE TABULATION,\n// or a code point between U+000E SHIFT OUT and U+001F INFORMATION SEPARATOR ONE, or U+007F DELETE.\nexport function isNonPrintable(code) {\n    return (\n        (code >= 0x0000 && code <= 0x0008) ||\n        (code === 0x000B) ||\n        (code >= 0x000E && code <= 0x001F) ||\n        (code === 0x007F)\n    );\n}\n\n// newline\n// U+000A LINE FEED. Note that U+000D CARRIAGE RETURN and U+000C FORM FEED are not included in this definition,\n// as they are converted to U+000A LINE FEED during preprocessing.\n// TODO: we doesn't do a preprocessing, so check a code point for U+000D CARRIAGE RETURN and U+000C FORM FEED\nexport function isNewline(code) {\n    return code === 0x000A || code === 0x000D || code === 0x000C;\n}\n\n// whitespace\n// A newline, U+0009 CHARACTER TABULATION, or U+0020 SPACE.\nexport function isWhiteSpace(code) {\n    return isNewline(code) || code === 0x0020 || code === 0x0009;\n}\n\n// \u00A7 4.3.8. Check if two code points are a valid escape\nexport function isValidEscape(first, second) {\n    // If the first code point is not U+005C REVERSE SOLIDUS (\\), return false.\n    if (first !== 0x005C) {\n        return false;\n    }\n\n    // Otherwise, if the second code point is a newline or EOF, return false.\n    if (isNewline(second) || second === EOF) {\n        return false;\n    }\n\n    // Otherwise, return true.\n    return true;\n}\n\n// \u00A7 4.3.9. Check if three code points would start an identifier\nexport function isIdentifierStart(first, second, third) {\n    // Look at the first code point:\n\n    // U+002D HYPHEN-MINUS\n    if (first === 0x002D) {\n        // If the second code point is a name-start code point or a U+002D HYPHEN-MINUS,\n        // or the second and third code points are a valid escape, return true. Otherwise, return false.\n        return (\n            isNameStart(second) ||\n            second === 0x002D ||\n            isValidEscape(second, third)\n        );\n    }\n\n    // name-start code point\n    if (isNameStart(first)) {\n        // Return true.\n        return true;\n    }\n\n    // U+005C REVERSE SOLIDUS (\\)\n    if (first === 0x005C) {\n        // If the first and second code points are a valid escape, return true. Otherwise, return false.\n        return isValidEscape(first, second);\n    }\n\n    // anything else\n    // Return false.\n    return false;\n}\n\n// \u00A7 4.3.10. Check if three code points would start a number\nexport function isNumberStart(first, second, third) {\n    // Look at the first code point:\n\n    // U+002B PLUS SIGN (+)\n    // U+002D HYPHEN-MINUS (-)\n    if (first === 0x002B || first === 0x002D) {\n        // If the second code point is a digit, return true.\n        if (isDigit(second)) {\n            return 2;\n        }\n\n        // Otherwise, if the second code point is a U+002E FULL STOP (.)\n        // and the third code point is a digit, return true.\n        // Otherwise, return false.\n        return second === 0x002E && isDigit(third) ? 3 : 0;\n    }\n\n    // U+002E FULL STOP (.)\n    if (first === 0x002E) {\n        // If the second code point is a digit, return true. Otherwise, return false.\n        return isDigit(second) ? 2 : 0;\n    }\n\n    // digit\n    if (isDigit(first)) {\n        // Return true.\n        return 1;\n    }\n\n    // anything else\n    // Return false.\n    return 0;\n}\n\n//\n// Misc\n//\n\n// detect BOM (https://en.wikipedia.org/wiki/Byte_order_mark)\nexport function isBOM(code) {\n    // UTF-16BE\n    if (code === 0xFEFF) {\n        return 1;\n    }\n\n    // UTF-16LE\n    if (code === 0xFFFE) {\n        return 1;\n    }\n\n    return 0;\n}\n\n// Fast code category\n// Only ASCII code points has a special meaning, that's why we define a maps for 0..127 codes only\nconst CATEGORY = new Array(0x80);\nexport const EofCategory = 0x80;\nexport const WhiteSpaceCategory = 0x82;\nexport const DigitCategory = 0x83;\nexport const NameStartCategory = 0x84;\nexport const NonPrintableCategory = 0x85;\n\nfor (let i = 0; i < CATEGORY.length; i++) {\n    CATEGORY[i] =\n        isWhiteSpace(i) && WhiteSpaceCategory ||\n        isDigit(i) && DigitCategory ||\n        isNameStart(i) && NameStartCategory ||\n        isNonPrintable(i) && NonPrintableCategory ||\n        i || EofCategory;\n}\n\nexport function charCodeCategory(code) {\n    return code < 0x80 ? CATEGORY[code] : NameStartCategory;\n}\n", "import {\n    isDigit,\n    isHexDigit,\n    isUppercaseLetter,\n    isName,\n    isWhiteSpace,\n    isValidEscape\n} from './char-code-definitions.js';\n\nfunction getCharCode(source, offset) {\n    return offset < source.length ? source.charCodeAt(offset) : 0;\n}\n\nexport function getNewlineLength(source, offset, code) {\n    if (code === 13 /* \\r */ && getCharCode(source, offset + 1) === 10 /* \\n */) {\n        return 2;\n    }\n\n    return 1;\n}\n\nexport function cmpChar(testStr, offset, referenceCode) {\n    let code = testStr.charCodeAt(offset);\n\n    // code.toLowerCase() for A..Z\n    if (isUppercaseLetter(code)) {\n        code = code | 32;\n    }\n\n    return code === referenceCode;\n}\n\nexport function cmpStr(testStr, start, end, referenceStr) {\n    if (end - start !== referenceStr.length) {\n        return false;\n    }\n\n    if (start < 0 || end > testStr.length) {\n        return false;\n    }\n\n    for (let i = start; i < end; i++) {\n        const referenceCode = referenceStr.charCodeAt(i - start);\n        let testCode = testStr.charCodeAt(i);\n\n        // testCode.toLowerCase() for A..Z\n        if (isUppercaseLetter(testCode)) {\n            testCode = testCode | 32;\n        }\n\n        if (testCode !== referenceCode) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport function findWhiteSpaceStart(source, offset) {\n    for (; offset >= 0; offset--) {\n        if (!isWhiteSpace(source.charCodeAt(offset))) {\n            break;\n        }\n    }\n\n    return offset + 1;\n}\n\nexport function findWhiteSpaceEnd(source, offset) {\n    for (; offset < source.length; offset++) {\n        if (!isWhiteSpace(source.charCodeAt(offset))) {\n            break;\n        }\n    }\n\n    return offset;\n}\n\nexport function findDecimalNumberEnd(source, offset) {\n    for (; offset < source.length; offset++) {\n        if (!isDigit(source.charCodeAt(offset))) {\n            break;\n        }\n    }\n\n    return offset;\n}\n\n// \u00A7 4.3.7. Consume an escaped code point\nexport function consumeEscaped(source, offset) {\n    // It assumes that the U+005C REVERSE SOLIDUS (\\) has already been consumed and\n    // that the next input code point has already been verified to be part of a valid escape.\n    offset += 2;\n\n    // hex digit\n    if (isHexDigit(getCharCode(source, offset - 1))) {\n        // Consume as many hex digits as possible, but no more than 5.\n        // Note that this means 1-6 hex digits have been consumed in total.\n        for (const maxOffset = Math.min(source.length, offset + 5); offset < maxOffset; offset++) {\n            if (!isHexDigit(getCharCode(source, offset))) {\n                break;\n            }\n        }\n\n        // If the next input code point is whitespace, consume it as well.\n        const code = getCharCode(source, offset);\n        if (isWhiteSpace(code)) {\n            offset += getNewlineLength(source, offset, code);\n        }\n    }\n\n    return offset;\n}\n\n// \u00A74.3.11. Consume a name\n// Note: This algorithm does not do the verification of the first few code points that are necessary\n// to ensure the returned code points would constitute an <ident-token>. If that is the intended use,\n// ensure that the stream starts with an identifier before calling this algorithm.\nexport function consumeName(source, offset) {\n    // Let result initially be an empty string.\n    // Repeatedly consume the next input code point from the stream:\n    for (; offset < source.length; offset++) {\n        const code = source.charCodeAt(offset);\n\n        // name code point\n        if (isName(code)) {\n            // Append the code point to result.\n            continue;\n        }\n\n        // the stream starts with a valid escape\n        if (isValidEscape(code, getCharCode(source, offset + 1))) {\n            // Consume an escaped code point. Append the returned code point to result.\n            offset = consumeEscaped(source, offset) - 1;\n            continue;\n        }\n\n        // anything else\n        // Reconsume the current input code point. Return result.\n        break;\n    }\n\n    return offset;\n}\n\n// \u00A74.3.12. Consume a number\nexport function consumeNumber(source, offset) {\n    let code = source.charCodeAt(offset);\n\n    // 2. If the next input code point is U+002B PLUS SIGN (+) or U+002D HYPHEN-MINUS (-),\n    // consume it and append it to repr.\n    if (code === 0x002B || code === 0x002D) {\n        code = source.charCodeAt(offset += 1);\n    }\n\n    // 3. While the next input code point is a digit, consume it and append it to repr.\n    if (isDigit(code)) {\n        offset = findDecimalNumberEnd(source, offset + 1);\n        code = source.charCodeAt(offset);\n    }\n\n    // 4. If the next 2 input code points are U+002E FULL STOP (.) followed by a digit, then:\n    if (code === 0x002E && isDigit(source.charCodeAt(offset + 1))) {\n        // 4.1 Consume them.\n        // 4.2 Append them to repr.\n        offset += 2;\n\n        // 4.3 Set type to \"number\".\n        // TODO\n\n        // 4.4 While the next input code point is a digit, consume it and append it to repr.\n\n        offset = findDecimalNumberEnd(source, offset);\n    }\n\n    // 5. If the next 2 or 3 input code points are U+0045 LATIN CAPITAL LETTER E (E)\n    // or U+0065 LATIN SMALL LETTER E (e), ... , followed by a digit, then:\n    if (cmpChar(source, offset, 101 /* e */)) {\n        let sign = 0;\n        code = source.charCodeAt(offset + 1);\n\n        // ... optionally followed by U+002D HYPHEN-MINUS (-) or U+002B PLUS SIGN (+) ...\n        if (code === 0x002D || code === 0x002B) {\n            sign = 1;\n            code = source.charCodeAt(offset + 2);\n        }\n\n        // ... followed by a digit\n        if (isDigit(code)) {\n            // 5.1 Consume them.\n            // 5.2 Append them to repr.\n\n            // 5.3 Set type to \"number\".\n            // TODO\n\n            // 5.4 While the next input code point is a digit, consume it and append it to repr.\n            offset = findDecimalNumberEnd(source, offset + 1 + sign + 1);\n        }\n    }\n\n    return offset;\n}\n\n// \u00A7 4.3.14. Consume the remnants of a bad url\n// ... its sole use is to consume enough of the input stream to reach a recovery point\n// where normal tokenizing can resume.\nexport function consumeBadUrlRemnants(source, offset) {\n    // Repeatedly consume the next input code point from the stream:\n    for (; offset < source.length; offset++) {\n        const code = source.charCodeAt(offset);\n\n        // U+0029 RIGHT PARENTHESIS ())\n        // EOF\n        if (code === 0x0029) {\n            // Return.\n            offset++;\n            break;\n        }\n\n        if (isValidEscape(code, getCharCode(source, offset + 1))) {\n            // Consume an escaped code point.\n            // Note: This allows an escaped right parenthesis (\"\\)\") to be encountered\n            // without ending the <bad-url-token>. This is otherwise identical to\n            // the \"anything else\" clause.\n            offset = consumeEscaped(source, offset);\n        }\n    }\n\n    return offset;\n}\n\n// \u00A7 4.3.7. Consume an escaped code point\n// Note: This algorithm assumes that escaped is valid without leading U+005C REVERSE SOLIDUS (\\)\nexport function decodeEscaped(escaped) {\n    // Single char escaped that's not a hex digit\n    if (escaped.length === 1 && !isHexDigit(escaped.charCodeAt(0))) {\n        return escaped[0];\n    }\n\n    // Interpret the hex digits as a hexadecimal number.\n    let code = parseInt(escaped, 16);\n\n    if (\n        (code === 0) ||                       // If this number is zero,\n        (code >= 0xD800 && code <= 0xDFFF) || // or is for a surrogate,\n        (code > 0x10FFFF)                     // or is greater than the maximum allowed code point\n    ) {\n        // ... return U+FFFD REPLACEMENT CHARACTER\n        code = 0xFFFD;\n    }\n\n    // Otherwise, return the code point with that value.\n    return String.fromCodePoint(code);\n}\n", "export default [\n    'EOF-token',\n    'ident-token',\n    'function-token',\n    'at-keyword-token',\n    'hash-token',\n    'string-token',\n    'bad-string-token',\n    'url-token',\n    'bad-url-token',\n    'delim-token',\n    'number-token',\n    'percentage-token',\n    'dimension-token',\n    'whitespace-token',\n    'CDO-token',\n    'CDC-token',\n    'colon-token',\n    'semicolon-token',\n    'comma-token',\n    '[-token',\n    ']-token',\n    '(-token',\n    ')-token',\n    '{-token',\n    '}-token'\n];\n", "const MIN_SIZE = 16 * 1024;\n\nexport function adoptBuffer(buffer = null, size) {\n    if (buffer === null || buffer.length < size) {\n        return new Uint32Array(Math.max(size + 1024, MIN_SIZE));\n    }\n\n    return buffer;\n};\n", "import { adoptBuffer } from './adopt-buffer.js';\nimport { isBOM } from './char-code-definitions.js';\n\nconst N = 10;\nconst F = 12;\nconst R = 13;\n\nfunction computeLinesAndColumns(host) {\n    const source = host.source;\n    const sourceLength = source.length;\n    const startOffset = source.length > 0 ? isBOM(source.charCodeAt(0)) : 0;\n    const lines = adoptBuffer(host.lines, sourceLength);\n    const columns = adoptBuffer(host.columns, sourceLength);\n    let line = host.startLine;\n    let column = host.startColumn;\n\n    for (let i = startOffset; i < sourceLength; i++) {\n        const code = source.charCodeAt(i);\n\n        lines[i] = line;\n        columns[i] = column++;\n\n        if (code === N || code === R || code === F) {\n            if (code === R && i + 1 < sourceLength && source.charCodeAt(i + 1) === N) {\n                i++;\n                lines[i] = line;\n                columns[i] = column;\n            }\n\n            line++;\n            column = 1;\n        }\n    }\n\n    lines[sourceLength] = line;\n    columns[sourceLength] = column;\n\n    host.lines = lines;\n    host.columns = columns;\n    host.computed = true;\n}\n\nexport class OffsetToLocation {\n    constructor() {\n        this.lines = null;\n        this.columns = null;\n        this.computed = false;\n    }\n    setSource(source, startOffset = 0, startLine = 1, startColumn = 1) {\n        this.source = source;\n        this.startOffset = startOffset;\n        this.startLine = startLine;\n        this.startColumn = startColumn;\n        this.computed = false;\n    }\n    getLocation(offset, filename) {\n        if (!this.computed) {\n            computeLinesAndColumns(this);\n        }\n\n        return {\n            source: filename,\n            offset: this.startOffset + offset,\n            line: this.lines[offset],\n            column: this.columns[offset]\n        };\n    }\n    getLocationRange(start, end, filename) {\n        if (!this.computed) {\n            computeLinesAndColumns(this);\n        }\n\n        return {\n            source: filename,\n            start: {\n                offset: this.startOffset + start,\n                line: this.lines[start],\n                column: this.columns[start]\n            },\n            end: {\n                offset: this.startOffset + end,\n                line: this.lines[end],\n                column: this.columns[end]\n            }\n        };\n    }\n};\n", "import { adoptBuffer } from './adopt-buffer.js';\nimport { cmpStr } from './utils.js';\nimport tokenNames from './names.js';\nimport {\n    WhiteSpace,\n    Comment,\n    Delim,\n    EOF,\n    Function as FunctionToken,\n    LeftParenthesis,\n    RightParenthesis,\n    LeftSquareBracket,\n    RightSquareBracket,\n    LeftCurlyBracket,\n    RightCurlyBracket\n} from './types.js';\n\nconst OFFSET_MASK = 0x00FFFFFF;\nconst TYPE_SHIFT = 24;\nconst balancePair = new Map([\n    [FunctionToken, RightParenthesis],\n    [LeftParenthesis, RightParenthesis],\n    [LeftSquareBracket, RightSquareBracket],\n    [LeftCurlyBracket, RightCurlyBracket]\n]);\n\nexport class TokenStream {\n    constructor(source, tokenize) {\n        this.setSource(source, tokenize);\n    }\n    reset() {\n        this.eof = false;\n        this.tokenIndex = -1;\n        this.tokenType = 0;\n        this.tokenStart = this.firstCharOffset;\n        this.tokenEnd = this.firstCharOffset;\n    }\n    setSource(source = '', tokenize = () => {}) {\n        source = String(source || '');\n\n        const sourceLength = source.length;\n        const offsetAndType = adoptBuffer(this.offsetAndType, source.length + 1); // +1 because of eof-token\n        const balance = adoptBuffer(this.balance, source.length + 1);\n        let tokenCount = 0;\n        let balanceCloseType = 0;\n        let balanceStart = 0;\n        let firstCharOffset = -1;\n\n        // capture buffers\n        this.offsetAndType = null;\n        this.balance = null;\n\n        tokenize(source, (type, start, end) => {\n            switch (type) {\n                default:\n                    balance[tokenCount] = sourceLength;\n                    break;\n\n                case balanceCloseType: {\n                    let balancePrev = balanceStart & OFFSET_MASK;\n                    balanceStart = balance[balancePrev];\n                    balanceCloseType = balanceStart >> TYPE_SHIFT;\n                    balance[tokenCount] = balancePrev;\n                    balance[balancePrev++] = tokenCount;\n                    for (; balancePrev < tokenCount; balancePrev++) {\n                        if (balance[balancePrev] === sourceLength) {\n                            balance[balancePrev] = tokenCount;\n                        }\n                    }\n                    break;\n                }\n\n                case LeftParenthesis:\n                case FunctionToken:\n                case LeftSquareBracket:\n                case LeftCurlyBracket:\n                    balance[tokenCount] = balanceStart;\n                    balanceCloseType = balancePair.get(type);\n                    balanceStart = (balanceCloseType << TYPE_SHIFT) | tokenCount;\n                    break;\n            }\n\n            offsetAndType[tokenCount++] = (type << TYPE_SHIFT) | end;\n            if (firstCharOffset === -1) {\n                firstCharOffset = start;\n            }\n        });\n\n        // finalize buffers\n        offsetAndType[tokenCount] = (EOF << TYPE_SHIFT) | sourceLength; // <EOF-token>\n        balance[tokenCount] = sourceLength;\n        balance[sourceLength] = sourceLength; // prevents false positive balance match with any token\n        while (balanceStart !== 0) {\n            const balancePrev = balanceStart & OFFSET_MASK;\n            balanceStart = balance[balancePrev];\n            balance[balancePrev] = sourceLength;\n        }\n\n        this.source = source;\n        this.firstCharOffset = firstCharOffset === -1 ? 0 : firstCharOffset;\n        this.tokenCount = tokenCount;\n        this.offsetAndType = offsetAndType;\n        this.balance = balance;\n\n        this.reset();\n        this.next();\n    }\n\n    lookupType(offset) {\n        offset += this.tokenIndex;\n\n        if (offset < this.tokenCount) {\n            return this.offsetAndType[offset] >> TYPE_SHIFT;\n        }\n\n        return EOF;\n    }\n    lookupOffset(offset) {\n        offset += this.tokenIndex;\n\n        if (offset < this.tokenCount) {\n            return this.offsetAndType[offset - 1] & OFFSET_MASK;\n        }\n\n        return this.source.length;\n    }\n    lookupValue(offset, referenceStr) {\n        offset += this.tokenIndex;\n\n        if (offset < this.tokenCount) {\n            return cmpStr(\n                this.source,\n                this.offsetAndType[offset - 1] & OFFSET_MASK,\n                this.offsetAndType[offset] & OFFSET_MASK,\n                referenceStr\n            );\n        }\n\n        return false;\n    }\n    getTokenStart(tokenIndex) {\n        if (tokenIndex === this.tokenIndex) {\n            return this.tokenStart;\n        }\n\n        if (tokenIndex > 0) {\n            return tokenIndex < this.tokenCount\n                ? this.offsetAndType[tokenIndex - 1] & OFFSET_MASK\n                : this.offsetAndType[this.tokenCount] & OFFSET_MASK;\n        }\n\n        return this.firstCharOffset;\n    }\n    substrToCursor(start) {\n        return this.source.substring(start, this.tokenStart);\n    }\n\n    isBalanceEdge(pos) {\n        return this.balance[this.tokenIndex] < pos;\n    }\n    isDelim(code, offset) {\n        if (offset) {\n            return (\n                this.lookupType(offset) === Delim &&\n                this.source.charCodeAt(this.lookupOffset(offset)) === code\n            );\n        }\n\n        return (\n            this.tokenType === Delim &&\n            this.source.charCodeAt(this.tokenStart) === code\n        );\n    }\n\n    skip(tokenCount) {\n        let next = this.tokenIndex + tokenCount;\n\n        if (next < this.tokenCount) {\n            this.tokenIndex = next;\n            this.tokenStart = this.offsetAndType[next - 1] & OFFSET_MASK;\n            next = this.offsetAndType[next];\n            this.tokenType = next >> TYPE_SHIFT;\n            this.tokenEnd = next & OFFSET_MASK;\n        } else {\n            this.tokenIndex = this.tokenCount;\n            this.next();\n        }\n    }\n    next() {\n        let next = this.tokenIndex + 1;\n\n        if (next < this.tokenCount) {\n            this.tokenIndex = next;\n            this.tokenStart = this.tokenEnd;\n            next = this.offsetAndType[next];\n            this.tokenType = next >> TYPE_SHIFT;\n            this.tokenEnd = next & OFFSET_MASK;\n        } else {\n            this.eof = true;\n            this.tokenIndex = this.tokenCount;\n            this.tokenType = EOF;\n            this.tokenStart = this.tokenEnd = this.source.length;\n        }\n    }\n    skipSC() {\n        while (this.tokenType === WhiteSpace || this.tokenType === Comment) {\n            this.next();\n        }\n    }\n    skipUntilBalanced(startToken, stopConsume) {\n        let cursor = startToken;\n        let balanceEnd;\n        let offset;\n\n        loop:\n        for (; cursor < this.tokenCount; cursor++) {\n            balanceEnd = this.balance[cursor];\n\n            // stop scanning on balance edge that points to offset before start token\n            if (balanceEnd < startToken) {\n                break loop;\n            }\n\n            offset = cursor > 0 ? this.offsetAndType[cursor - 1] & OFFSET_MASK : this.firstCharOffset;\n\n            // check stop condition\n            switch (stopConsume(this.source.charCodeAt(offset))) {\n                case 1: // just stop\n                    break loop;\n\n                case 2: // stop & included\n                    cursor++;\n                    break loop;\n\n                default:\n                    // fast forward to the end of balanced block\n                    if (this.balance[balanceEnd] === cursor) {\n                        cursor = balanceEnd;\n                    }\n            }\n        }\n\n        this.skip(cursor - this.tokenIndex);\n    }\n\n    forEachToken(fn) {\n        for (let i = 0, offset = this.firstCharOffset; i < this.tokenCount; i++) {\n            const start = offset;\n            const item = this.offsetAndType[i];\n            const end = item & OFFSET_MASK;\n            const type = item >> TYPE_SHIFT;\n\n            offset = end;\n\n            fn(type, start, end, i);\n        }\n    }\n    dump() {\n        const tokens = new Array(this.tokenCount);\n\n        this.forEachToken((type, start, end, index) => {\n            tokens[index] = {\n                idx: index,\n                type: tokenNames[type],\n                chunk: this.source.substring(start, end),\n                balance: this.balance[index]\n            };\n        });\n\n        return tokens;\n    }\n};\n", "import * as TYPE from './types.js';\nimport {\n    isNewline,\n    isName,\n    isValidEscape,\n    isNumberStart,\n    isIdentifierStart,\n    isBOM,\n    charCodeCategory,\n    WhiteSpaceCategory,\n    DigitCategory,\n    NameStartCategory,\n    NonPrintableCategory\n} from './char-code-definitions.js';\nimport {\n    cmpStr,\n    getNewlineLength,\n    findWhiteSpaceEnd,\n    consumeEscaped,\n    consumeName,\n    consumeNumber,\n    consumeBadUrlRemnants\n} from './utils.js';\n\nexport function tokenize(source, onToken) {\n    function getCharCode(offset) {\n        return offset < sourceLength ? source.charCodeAt(offset) : 0;\n    }\n\n    // \u00A7 4.3.3. Consume a numeric token\n    function consumeNumericToken() {\n        // Consume a number and let number be the result.\n        offset = consumeNumber(source, offset);\n\n        // If the next 3 input code points would start an identifier, then:\n        if (isIdentifierStart(getCharCode(offset), getCharCode(offset + 1), getCharCode(offset + 2))) {\n            // Create a <dimension-token> with the same value and type flag as number, and a unit set initially to the empty string.\n            // Consume a name. Set the <dimension-token>\u2019s unit to the returned value.\n            // Return the <dimension-token>.\n            type = TYPE.Dimension;\n            offset = consumeName(source, offset);\n            return;\n        }\n\n        // Otherwise, if the next input code point is U+0025 PERCENTAGE SIGN (%), consume it.\n        if (getCharCode(offset) === 0x0025) {\n            // Create a <percentage-token> with the same value as number, and return it.\n            type = TYPE.Percentage;\n            offset++;\n            return;\n        }\n\n        // Otherwise, create a <number-token> with the same value and type flag as number, and return it.\n        type = TYPE.Number;\n    }\n\n    // \u00A7 4.3.4. Consume an ident-like token\n    function consumeIdentLikeToken() {\n        const nameStartOffset = offset;\n\n        // Consume a name, and let string be the result.\n        offset = consumeName(source, offset);\n\n        // If string\u2019s value is an ASCII case-insensitive match for \"url\",\n        // and the next input code point is U+0028 LEFT PARENTHESIS ((), consume it.\n        if (cmpStr(source, nameStartOffset, offset, 'url') && getCharCode(offset) === 0x0028) {\n            // While the next two input code points are whitespace, consume the next input code point.\n            offset = findWhiteSpaceEnd(source, offset + 1);\n\n            // If the next one or two input code points are U+0022 QUOTATION MARK (\"), U+0027 APOSTROPHE ('),\n            // or whitespace followed by U+0022 QUOTATION MARK (\") or U+0027 APOSTROPHE ('),\n            // then create a <function-token> with its value set to string and return it.\n            if (getCharCode(offset) === 0x0022 ||\n                getCharCode(offset) === 0x0027) {\n                type = TYPE.Function;\n                offset = nameStartOffset + 4;\n                return;\n            }\n\n            // Otherwise, consume a url token, and return it.\n            consumeUrlToken();\n            return;\n        }\n\n        // Otherwise, if the next input code point is U+0028 LEFT PARENTHESIS ((), consume it.\n        // Create a <function-token> with its value set to string and return it.\n        if (getCharCode(offset) === 0x0028) {\n            type = TYPE.Function;\n            offset++;\n            return;\n        }\n\n        // Otherwise, create an <ident-token> with its value set to string and return it.\n        type = TYPE.Ident;\n    }\n\n    // \u00A7 4.3.5. Consume a string token\n    function consumeStringToken(endingCodePoint) {\n        // This algorithm may be called with an ending code point, which denotes the code point\n        // that ends the string. If an ending code point is not specified,\n        // the current input code point is used.\n        if (!endingCodePoint) {\n            endingCodePoint = getCharCode(offset++);\n        }\n\n        // Initially create a <string-token> with its value set to the empty string.\n        type = TYPE.String;\n\n        // Repeatedly consume the next input code point from the stream:\n        for (; offset < source.length; offset++) {\n            const code = source.charCodeAt(offset);\n\n            switch (charCodeCategory(code)) {\n                // ending code point\n                case endingCodePoint:\n                    // Return the <string-token>.\n                    offset++;\n                    return;\n\n                    // EOF\n                    // case EofCategory:\n                    // This is a parse error. Return the <string-token>.\n                    // return;\n\n                // newline\n                case WhiteSpaceCategory:\n                    if (isNewline(code)) {\n                        // This is a parse error. Reconsume the current input code point,\n                        // create a <bad-string-token>, and return it.\n                        offset += getNewlineLength(source, offset, code);\n                        type = TYPE.BadString;\n                        return;\n                    }\n                    break;\n\n                // U+005C REVERSE SOLIDUS (\\)\n                case 0x005C:\n                    // If the next input code point is EOF, do nothing.\n                    if (offset === source.length - 1) {\n                        break;\n                    }\n\n                    const nextCode = getCharCode(offset + 1);\n\n                    // Otherwise, if the next input code point is a newline, consume it.\n                    if (isNewline(nextCode)) {\n                        offset += getNewlineLength(source, offset + 1, nextCode);\n                    } else if (isValidEscape(code, nextCode)) {\n                        // Otherwise, (the stream starts with a valid escape) consume\n                        // an escaped code point and append the returned code point to\n                        // the <string-token>\u2019s value.\n                        offset = consumeEscaped(source, offset) - 1;\n                    }\n                    break;\n\n                // anything else\n                // Append the current input code point to the <string-token>\u2019s value.\n            }\n        }\n    }\n\n    // \u00A7 4.3.6. Consume a url token\n    // Note: This algorithm assumes that the initial \"url(\" has already been consumed.\n    // This algorithm also assumes that it\u2019s being called to consume an \"unquoted\" value, like url(foo).\n    // A quoted value, like url(\"foo\"), is parsed as a <function-token>. Consume an ident-like token\n    // automatically handles this distinction; this algorithm shouldn\u2019t be called directly otherwise.\n    function consumeUrlToken() {\n        // Initially create a <url-token> with its value set to the empty string.\n        type = TYPE.Url;\n\n        // Consume as much whitespace as possible.\n        offset = findWhiteSpaceEnd(source, offset);\n\n        // Repeatedly consume the next input code point from the stream:\n        for (; offset < source.length; offset++) {\n            const code = source.charCodeAt(offset);\n\n            switch (charCodeCategory(code)) {\n                // U+0029 RIGHT PARENTHESIS ())\n                case 0x0029:\n                    // Return the <url-token>.\n                    offset++;\n                    return;\n\n                    // EOF\n                    // case EofCategory:\n                    // This is a parse error. Return the <url-token>.\n                    // return;\n\n                // whitespace\n                case WhiteSpaceCategory:\n                    // Consume as much whitespace as possible.\n                    offset = findWhiteSpaceEnd(source, offset);\n\n                    // If the next input code point is U+0029 RIGHT PARENTHESIS ()) or EOF,\n                    // consume it and return the <url-token>\n                    // (if EOF was encountered, this is a parse error);\n                    if (getCharCode(offset) === 0x0029 || offset >= source.length) {\n                        if (offset < source.length) {\n                            offset++;\n                        }\n                        return;\n                    }\n\n                    // otherwise, consume the remnants of a bad url, create a <bad-url-token>,\n                    // and return it.\n                    offset = consumeBadUrlRemnants(source, offset);\n                    type = TYPE.BadUrl;\n                    return;\n\n                // U+0022 QUOTATION MARK (\")\n                // U+0027 APOSTROPHE (')\n                // U+0028 LEFT PARENTHESIS (()\n                // non-printable code point\n                case 0x0022:\n                case 0x0027:\n                case 0x0028:\n                case NonPrintableCategory:\n                    // This is a parse error. Consume the remnants of a bad url,\n                    // create a <bad-url-token>, and return it.\n                    offset = consumeBadUrlRemnants(source, offset);\n                    type = TYPE.BadUrl;\n                    return;\n\n                // U+005C REVERSE SOLIDUS (\\)\n                case 0x005C:\n                    // If the stream starts with a valid escape, consume an escaped code point and\n                    // append the returned code point to the <url-token>\u2019s value.\n                    if (isValidEscape(code, getCharCode(offset + 1))) {\n                        offset = consumeEscaped(source, offset) - 1;\n                        break;\n                    }\n\n                    // Otherwise, this is a parse error. Consume the remnants of a bad url,\n                    // create a <bad-url-token>, and return it.\n                    offset = consumeBadUrlRemnants(source, offset);\n                    type = TYPE.BadUrl;\n                    return;\n\n                // anything else\n                // Append the current input code point to the <url-token>\u2019s value.\n            }\n        }\n    }\n\n    // ensure source is a string\n    source = String(source || '');\n\n    const sourceLength = source.length;\n    let start = isBOM(getCharCode(0));\n    let offset = start;\n    let type;\n\n    // https://drafts.csswg.org/css-syntax-3/#consume-token\n    // \u00A7 4.3.1. Consume a token\n    while (offset < sourceLength) {\n        const code = source.charCodeAt(offset);\n\n        switch (charCodeCategory(code)) {\n            // whitespace\n            case WhiteSpaceCategory:\n                // Consume as much whitespace as possible. Return a <whitespace-token>.\n                type = TYPE.WhiteSpace;\n                offset = findWhiteSpaceEnd(source, offset + 1);\n                break;\n\n            // U+0022 QUOTATION MARK (\")\n            case 0x0022:\n                // Consume a string token and return it.\n                consumeStringToken();\n                break;\n\n            // U+0023 NUMBER SIGN (#)\n            case 0x0023:\n                // If the next input code point is a name code point or the next two input code points are a valid escape, then:\n                if (isName(getCharCode(offset + 1)) || isValidEscape(getCharCode(offset + 1), getCharCode(offset + 2))) {\n                    // Create a <hash-token>.\n                    type = TYPE.Hash;\n\n                    // If the next 3 input code points would start an identifier, set the <hash-token>\u2019s type flag to \"id\".\n                    // if (isIdentifierStart(getCharCode(offset + 1), getCharCode(offset + 2), getCharCode(offset + 3))) {\n                    //     // TODO: set id flag\n                    // }\n\n                    // Consume a name, and set the <hash-token>\u2019s value to the returned string.\n                    offset = consumeName(source, offset + 1);\n\n                    // Return the <hash-token>.\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n\n                break;\n\n            // U+0027 APOSTROPHE (')\n            case 0x0027:\n                // Consume a string token and return it.\n                consumeStringToken();\n                break;\n\n            // U+0028 LEFT PARENTHESIS (()\n            case 0x0028:\n                // Return a <(-token>.\n                type = TYPE.LeftParenthesis;\n                offset++;\n                break;\n\n            // U+0029 RIGHT PARENTHESIS ())\n            case 0x0029:\n                // Return a <)-token>.\n                type = TYPE.RightParenthesis;\n                offset++;\n                break;\n\n            // U+002B PLUS SIGN (+)\n            case 0x002B:\n                // If the input stream starts with a number, ...\n                if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n                    // ... reconsume the current input code point, consume a numeric token, and return it.\n                    consumeNumericToken();\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n                break;\n\n            // U+002C COMMA (,)\n            case 0x002C:\n                // Return a <comma-token>.\n                type = TYPE.Comma;\n                offset++;\n                break;\n\n            // U+002D HYPHEN-MINUS (-)\n            case 0x002D:\n                // If the input stream starts with a number, reconsume the current input code point, consume a numeric token, and return it.\n                if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n                    consumeNumericToken();\n                } else {\n                    // Otherwise, if the next 2 input code points are U+002D HYPHEN-MINUS U+003E GREATER-THAN SIGN (->), consume them and return a <CDC-token>.\n                    if (getCharCode(offset + 1) === 0x002D &&\n                        getCharCode(offset + 2) === 0x003E) {\n                        type = TYPE.CDC;\n                        offset = offset + 3;\n                    } else {\n                        // Otherwise, if the input stream starts with an identifier, ...\n                        if (isIdentifierStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n                            // ... reconsume the current input code point, consume an ident-like token, and return it.\n                            consumeIdentLikeToken();\n                        } else {\n                            // Otherwise, return a <delim-token> with its value set to the current input code point.\n                            type = TYPE.Delim;\n                            offset++;\n                        }\n                    }\n                }\n                break;\n\n            // U+002E FULL STOP (.)\n            case 0x002E:\n                // If the input stream starts with a number, ...\n                if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n                    // ... reconsume the current input code point, consume a numeric token, and return it.\n                    consumeNumericToken();\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n\n                break;\n\n            // U+002F SOLIDUS (/)\n            case 0x002F:\n                // If the next two input code point are U+002F SOLIDUS (/) followed by a U+002A ASTERISK (*),\n                if (getCharCode(offset + 1) === 0x002A) {\n                    // ... consume them and all following code points up to and including the first U+002A ASTERISK (*)\n                    // followed by a U+002F SOLIDUS (/), or up to an EOF code point.\n                    type = TYPE.Comment;\n                    offset = source.indexOf('*/', offset + 2);\n                    offset = offset === -1 ? source.length : offset + 2;\n                } else {\n                    type = TYPE.Delim;\n                    offset++;\n                }\n                break;\n\n            // U+003A COLON (:)\n            case 0x003A:\n                // Return a <colon-token>.\n                type = TYPE.Colon;\n                offset++;\n                break;\n\n            // U+003B SEMICOLON (;)\n            case 0x003B:\n                // Return a <semicolon-token>.\n                type = TYPE.Semicolon;\n                offset++;\n                break;\n\n            // U+003C LESS-THAN SIGN (<)\n            case 0x003C:\n                // If the next 3 input code points are U+0021 EXCLAMATION MARK U+002D HYPHEN-MINUS U+002D HYPHEN-MINUS (!--), ...\n                if (getCharCode(offset + 1) === 0x0021 &&\n                    getCharCode(offset + 2) === 0x002D &&\n                    getCharCode(offset + 3) === 0x002D) {\n                    // ... consume them and return a <CDO-token>.\n                    type = TYPE.CDO;\n                    offset = offset + 4;\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n\n                break;\n\n            // U+0040 COMMERCIAL AT (@)\n            case 0x0040:\n                // If the next 3 input code points would start an identifier, ...\n                if (isIdentifierStart(getCharCode(offset + 1), getCharCode(offset + 2), getCharCode(offset + 3))) {\n                    // ... consume a name, create an <at-keyword-token> with its value set to the returned value, and return it.\n                    type = TYPE.AtKeyword;\n                    offset = consumeName(source, offset + 1);\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n\n                break;\n\n            // U+005B LEFT SQUARE BRACKET ([)\n            case 0x005B:\n                // Return a <[-token>.\n                type = TYPE.LeftSquareBracket;\n                offset++;\n                break;\n\n            // U+005C REVERSE SOLIDUS (\\)\n            case 0x005C:\n                // If the input stream starts with a valid escape, ...\n                if (isValidEscape(code, getCharCode(offset + 1))) {\n                    // ... reconsume the current input code point, consume an ident-like token, and return it.\n                    consumeIdentLikeToken();\n                } else {\n                    // Otherwise, this is a parse error. Return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n                break;\n\n            // U+005D RIGHT SQUARE BRACKET (])\n            case 0x005D:\n                // Return a <]-token>.\n                type = TYPE.RightSquareBracket;\n                offset++;\n                break;\n\n            // U+007B LEFT CURLY BRACKET ({)\n            case 0x007B:\n                // Return a <{-token>.\n                type = TYPE.LeftCurlyBracket;\n                offset++;\n                break;\n\n            // U+007D RIGHT CURLY BRACKET (})\n            case 0x007D:\n                // Return a <}-token>.\n                type = TYPE.RightCurlyBracket;\n                offset++;\n                break;\n\n            // digit\n            case DigitCategory:\n                // Reconsume the current input code point, consume a numeric token, and return it.\n                consumeNumericToken();\n                break;\n\n            // name-start code point\n            case NameStartCategory:\n                // Reconsume the current input code point, consume an ident-like token, and return it.\n                consumeIdentLikeToken();\n                break;\n\n                // EOF\n                // case EofCategory:\n                // Return an <EOF-token>.\n                // break;\n\n            // anything else\n            default:\n                // Return a <delim-token> with its value set to the current input code point.\n                type = TYPE.Delim;\n                offset++;\n        }\n\n        // put token to stream\n        onToken(type, start, start = offset);\n    }\n}\n\nexport * from './types.js';\nexport * as tokenTypes from './types.js';\nexport { default as tokenNames } from './names.js';\nexport * from './char-code-definitions.js';\nexport * from './utils.js';\nexport * from './OffsetToLocation.js';\nexport * from './TokenStream.js';\n", "//\n//                              list\n//                            \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n//             \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253C\u2500head \u2502\n//             \u2502              \u2502 tail\u2500\u253C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n//             \u2502              \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518              \u2502\n//             \u25BC                                    \u25BC\n//            item        item        item        item\n//          \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n//  null \u25C0\u2500\u2500\u253C\u2500prev \u2502\u25C0\u2500\u2500\u2500\u253C\u2500prev \u2502\u25C0\u2500\u2500\u2500\u253C\u2500prev \u2502\u25C0\u2500\u2500\u2500\u253C\u2500prev \u2502\n//          \u2502 next\u2500\u253C\u2500\u2500\u2500\u25B6\u2502 next\u2500\u253C\u2500\u2500\u2500\u25B6\u2502 next\u2500\u253C\u2500\u2500\u2500\u25B6\u2502 next\u2500\u253C\u2500\u2500\u25B6 null\n//          \u251C\u2500\u2500\u2500\u2500\u2500\u2500\u2524    \u251C\u2500\u2500\u2500\u2500\u2500\u2500\u2524    \u251C\u2500\u2500\u2500\u2500\u2500\u2500\u2524    \u251C\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n//          \u2502 data \u2502    \u2502 data \u2502    \u2502 data \u2502    \u2502 data \u2502\n//          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n//\n\nlet releasedCursors = null;\n\nexport class List {\n    static createItem(data) {\n        return {\n            prev: null,\n            next: null,\n            data\n        };\n    }\n\n    constructor() {\n        this.head = null;\n        this.tail = null;\n        this.cursor = null;\n    }\n    createItem(data) {\n        return List.createItem(data);\n    }\n\n    // cursor helpers\n    allocateCursor(prev, next) {\n        let cursor;\n\n        if (releasedCursors !== null) {\n            cursor = releasedCursors;\n            releasedCursors = releasedCursors.cursor;\n            cursor.prev = prev;\n            cursor.next = next;\n            cursor.cursor = this.cursor;\n        } else {\n            cursor = {\n                prev,\n                next,\n                cursor: this.cursor\n            };\n        }\n\n        this.cursor = cursor;\n\n        return cursor;\n    }\n    releaseCursor() {\n        const { cursor } = this;\n\n        this.cursor = cursor.cursor;\n        cursor.prev = null;\n        cursor.next = null;\n        cursor.cursor = releasedCursors;\n        releasedCursors = cursor;\n    }\n    updateCursors(prevOld, prevNew, nextOld, nextNew) {\n        let { cursor } = this;\n\n        while (cursor !== null) {\n            if (cursor.prev === prevOld) {\n                cursor.prev = prevNew;\n            }\n\n            if (cursor.next === nextOld) {\n                cursor.next = nextNew;\n            }\n\n            cursor = cursor.cursor;\n        }\n    }\n    *[Symbol.iterator]() {\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            yield cursor.data;\n        }\n    }\n\n    // getters\n    get size() {\n        let size = 0;\n\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            size++;\n        }\n\n        return size;\n    }\n    get isEmpty() {\n        return this.head === null;\n    }\n    get first() {\n        return this.head && this.head.data;\n    }\n    get last() {\n        return this.tail && this.tail.data;\n    }\n\n    // convertors\n    fromArray(array) {\n        let cursor = null;\n        this.head = null;\n\n        for (let data of array) {\n            const item = List.createItem(data);\n\n            if (cursor !== null) {\n                cursor.next = item;\n            } else {\n                this.head = item;\n            }\n\n            item.prev = cursor;\n            cursor = item;\n        }\n\n        this.tail = cursor;\n        return this;\n    }\n    toArray() {\n        return [...this];\n    }\n    toJSON() {\n        return [...this];\n    }\n\n    // array-like methods\n    forEach(fn, thisArg = this) {\n        // push cursor\n        const cursor = this.allocateCursor(null, this.head);\n\n        while (cursor.next !== null) {\n            const item = cursor.next;\n            cursor.next = item.next;\n            fn.call(thisArg, item.data, item, this);\n        }\n\n        // pop cursor\n        this.releaseCursor();\n    }\n    forEachRight(fn, thisArg = this) {\n        // push cursor\n        const cursor = this.allocateCursor(this.tail, null);\n\n        while (cursor.prev !== null) {\n            const item = cursor.prev;\n            cursor.prev = item.prev;\n            fn.call(thisArg, item.data, item, this);\n        }\n\n        // pop cursor\n        this.releaseCursor();\n    }\n    reduce(fn, initialValue, thisArg = this) {\n        // push cursor\n        let cursor = this.allocateCursor(null, this.head);\n        let acc = initialValue;\n        let item;\n\n        while (cursor.next !== null) {\n            item = cursor.next;\n            cursor.next = item.next;\n\n            acc = fn.call(thisArg, acc, item.data, item, this);\n        }\n\n        // pop cursor\n        this.releaseCursor();\n\n        return acc;\n    }\n    reduceRight(fn, initialValue, thisArg = this) {\n        // push cursor\n        let cursor = this.allocateCursor(this.tail, null);\n        let acc = initialValue;\n        let item;\n\n        while (cursor.prev !== null) {\n            item = cursor.prev;\n            cursor.prev = item.prev;\n\n            acc = fn.call(thisArg, acc, item.data, item, this);\n        }\n\n        // pop cursor\n        this.releaseCursor();\n\n        return acc;\n    }\n    some(fn, thisArg = this) {\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            if (fn.call(thisArg, cursor.data, cursor, this)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n    map(fn, thisArg = this) {\n        const result = new List();\n\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            result.appendData(fn.call(thisArg, cursor.data, cursor, this));\n        }\n\n        return result;\n    }\n    filter(fn, thisArg = this) {\n        const result = new List();\n\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            if (fn.call(thisArg, cursor.data, cursor, this)) {\n                result.appendData(cursor.data);\n            }\n        }\n\n        return result;\n    }\n\n    nextUntil(start, fn, thisArg = this) {\n        if (start === null) {\n            return;\n        }\n\n        // push cursor\n        const cursor = this.allocateCursor(null, start);\n\n        while (cursor.next !== null) {\n            const item = cursor.next;\n            cursor.next = item.next;\n            if (fn.call(thisArg, item.data, item, this)) {\n                break;\n            }\n        }\n\n        // pop cursor\n        this.releaseCursor();\n    }\n    prevUntil(start, fn, thisArg = this) {\n        if (start === null) {\n            return;\n        }\n\n        // push cursor\n        const cursor = this.allocateCursor(start, null);\n\n        while (cursor.prev !== null) {\n            const item = cursor.prev;\n            cursor.prev = item.prev;\n            if (fn.call(thisArg, item.data, item, this)) {\n                break;\n            }\n        }\n\n        // pop cursor\n        this.releaseCursor();\n    }\n\n    // mutation\n    clear() {\n        this.head = null;\n        this.tail = null;\n    }\n    copy() {\n        const result = new List();\n\n        for (let data of this) {\n            result.appendData(data);\n        }\n\n        return result;\n    }\n    prepend(item) {\n        //      head\n        //    ^\n        // item\n        this.updateCursors(null, item, this.head, item);\n\n        // insert to the beginning of the list\n        if (this.head !== null) {\n            // new item <- first item\n            this.head.prev = item;\n            // new item -> first item\n            item.next = this.head;\n        } else {\n            // if list has no head, then it also has no tail\n            // in this case tail points to the new item\n            this.tail = item;\n        }\n\n        // head always points to new item\n        this.head = item;\n        return this;\n    }\n    prependData(data) {\n        return this.prepend(List.createItem(data));\n    }\n    append(item) {\n        return this.insert(item);\n    }\n    appendData(data) {\n        return this.insert(List.createItem(data));\n    }\n    insert(item, before = null) {\n        if (before !== null) {\n            // prev   before\n            //      ^\n            //     item\n            this.updateCursors(before.prev, item, before, item);\n\n            if (before.prev === null) {\n                // insert to the beginning of list\n                if (this.head !== before) {\n                    throw new Error('before doesn\\'t belong to list');\n                }\n                // since head points to before therefore list doesn't empty\n                // no need to check tail\n                this.head = item;\n                before.prev = item;\n                item.next = before;\n                this.updateCursors(null, item);\n            } else {\n                // insert between two items\n                before.prev.next = item;\n                item.prev = before.prev;\n                before.prev = item;\n                item.next = before;\n            }\n        } else {\n            // tail\n            //      ^\n            //      item\n            this.updateCursors(this.tail, item, null, item);\n\n            // insert to the ending of the list\n            if (this.tail !== null) {\n                // last item -> new item\n                this.tail.next = item;\n                // last item <- new item\n                item.prev = this.tail;\n            } else {\n                // if list has no tail, then it also has no head\n                // in this case head points to new item\n                this.head = item;\n            }\n\n            // tail always points to new item\n            this.tail = item;\n        }\n\n        return this;\n    }\n    insertData(data, before) {\n        return this.insert(List.createItem(data), before);\n    }\n    remove(item) {\n        //      item\n        //       ^\n        // prev     next\n        this.updateCursors(item, item.prev, item, item.next);\n\n        if (item.prev !== null) {\n            item.prev.next = item.next;\n        } else {\n            if (this.head !== item) {\n                throw new Error('item doesn\\'t belong to list');\n            }\n\n            this.head = item.next;\n        }\n\n        if (item.next !== null) {\n            item.next.prev = item.prev;\n        } else {\n            if (this.tail !== item) {\n                throw new Error('item doesn\\'t belong to list');\n            }\n\n            this.tail = item.prev;\n        }\n\n        item.prev = null;\n        item.next = null;\n\n        return item;\n    }\n    push(data) {\n        this.insert(List.createItem(data));\n    }\n    pop() {\n        return this.tail !== null ? this.remove(this.tail) : null;\n    }\n    unshift(data) {\n        this.prepend(List.createItem(data));\n    }\n    shift() {\n        return this.head !== null ? this.remove(this.head) : null;\n    }\n    prependList(list) {\n        return this.insertList(list, this.head);\n    }\n    appendList(list) {\n        return this.insertList(list);\n    }\n    insertList(list, before) {\n        // ignore empty lists\n        if (list.head === null) {\n            return this;\n        }\n\n        if (before !== undefined && before !== null) {\n            this.updateCursors(before.prev, list.tail, before, list.head);\n\n            // insert in the middle of dist list\n            if (before.prev !== null) {\n                // before.prev <-> list.head\n                before.prev.next = list.head;\n                list.head.prev = before.prev;\n            } else {\n                this.head = list.head;\n            }\n\n            before.prev = list.tail;\n            list.tail.next = before;\n        } else {\n            this.updateCursors(this.tail, list.tail, null, list.head);\n\n            // insert to end of the list\n            if (this.tail !== null) {\n                // if destination list has a tail, then it also has a head,\n                // but head doesn't change\n                // dest tail -> source head\n                this.tail.next = list.head;\n                // dest tail <- source head\n                list.head.prev = this.tail;\n            } else {\n                // if list has no a tail, then it also has no a head\n                // in this case points head to new item\n                this.head = list.head;\n            }\n\n            // tail always start point to new item\n            this.tail = list.tail;\n        }\n\n        list.head = null;\n        list.tail = null;\n        return this;\n    }\n    replace(oldItem, newItemOrList) {\n        if ('head' in newItemOrList) {\n            this.insertList(newItemOrList, oldItem);\n        } else {\n            this.insert(newItemOrList, oldItem);\n        }\n\n        this.remove(oldItem);\n    }\n}\n", "export function createCustomError(name, message) {\n    // use Object.create(), because some VMs prevent setting line/column otherwise\n    // (iOS Safari 10 even throws an exception)\n    const error = Object.create(SyntaxError.prototype);\n    const errorStack = new Error();\n\n    return Object.assign(error, {\n        name,\n        message,\n        get stack() {\n            return (errorStack.stack || '').replace(/^(.+\\n){1,3}/, `${name}: ${message}\\n`);\n        }\n    });\n};\n", "import { createCustomError } from '../utils/create-custom-error.js';\n\nconst MAX_LINE_LENGTH = 100;\nconst OFFSET_CORRECTION = 60;\nconst TAB_REPLACEMENT = '    ';\n\nfunction sourceFragment({ source, line, column }, extraLines) {\n    function processLines(start, end) {\n        return lines\n            .slice(start, end)\n            .map((line, idx) =>\n                String(start + idx + 1).padStart(maxNumLength) + ' |' + line\n            ).join('\\n');\n    }\n\n    const lines = source.split(/\\r\\n?|\\n|\\f/);\n    const startLine = Math.max(1, line - extraLines) - 1;\n    const endLine = Math.min(line + extraLines, lines.length + 1);\n    const maxNumLength = Math.max(4, String(endLine).length) + 1;\n    let cutLeft = 0;\n\n    // column correction according to replaced tab before column\n    column += (TAB_REPLACEMENT.length - 1) * (lines[line - 1].substr(0, column - 1).match(/\\t/g) || []).length;\n\n    if (column > MAX_LINE_LENGTH) {\n        cutLeft = column - OFFSET_CORRECTION + 3;\n        column = OFFSET_CORRECTION - 2;\n    }\n\n    for (let i = startLine; i <= endLine; i++) {\n        if (i >= 0 && i < lines.length) {\n            lines[i] = lines[i].replace(/\\t/g, TAB_REPLACEMENT);\n            lines[i] =\n                (cutLeft > 0 && lines[i].length > cutLeft ? '\\u2026' : '') +\n                lines[i].substr(cutLeft, MAX_LINE_LENGTH - 2) +\n                (lines[i].length > cutLeft + MAX_LINE_LENGTH - 1 ? '\\u2026' : '');\n        }\n    }\n\n    return [\n        processLines(startLine, line),\n        new Array(column + maxNumLength + 2).join('-') + '^',\n        processLines(line, endLine)\n    ].filter(Boolean).join('\\n');\n}\n\nexport function SyntaxError(message, source, offset, line, column) {\n    const error = Object.assign(createCustomError('SyntaxError', message), {\n        source,\n        offset,\n        line,\n        column,\n        sourceFragment(extraLines) {\n            return sourceFragment({ source, line, column }, isNaN(extraLines) ? 0 : extraLines);\n        },\n        get formattedMessage() {\n            return (\n                `Parse error: ${message}\\n` +\n                sourceFragment({ source, line, column }, 2)\n            );\n        }\n    });\n\n    return error;\n}\n", "import { WhiteSpace, Comment } from '../tokenizer/index.js';\n\nexport function readSequence(recognizer) {\n    const children = this.createList();\n    let space = false;\n    const context = {\n        recognizer\n    };\n\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case Comment:\n                this.next();\n                continue;\n\n            case WhiteSpace:\n                space = true;\n                this.next();\n                continue;\n        }\n\n        let child = recognizer.getNode.call(this, context);\n\n        if (child === undefined) {\n            break;\n        }\n\n        if (space) {\n            if (recognizer.onWhiteSpace) {\n                recognizer.onWhiteSpace.call(this, child, children, context);\n            }\n            space = false;\n        }\n\n        children.push(child);\n    }\n\n    if (space && recognizer.onWhiteSpace) {\n        recognizer.onWhiteSpace.call(this, null, children, context);\n    }\n\n    return children;\n};\n", "import { List } from '../utils/List.js';\nimport { SyntaxError } from './SyntaxError.js';\nimport {\n    tokenize,\n    OffsetToLocation,\n    TokenStream,\n    tokenNames,\n\n    consumeNumber,\n    findWhiteSpaceStart,\n    cmpChar,\n    cmpStr,\n\n    WhiteSpace,\n    Comment,\n    Ident,\n    Function as FunctionToken,\n    Url,\n    Hash,\n    Percentage,\n    Number as NumberToken\n} from '../tokenizer/index.js';\nimport { readSequence } from './sequence.js';\n\nconst NOOP = () => {};\nconst EXCLAMATIONMARK = 0x0021;  // U+0021 EXCLAMATION MARK (!)\nconst NUMBERSIGN = 0x0023;       // U+0023 NUMBER SIGN (#)\nconst SEMICOLON = 0x003B;        // U+003B SEMICOLON (;)\nconst LEFTCURLYBRACKET = 0x007B; // U+007B LEFT CURLY BRACKET ({)\nconst NULL = 0;\n\nfunction createParseContext(name) {\n    return function() {\n        return this[name]();\n    };\n}\n\nfunction fetchParseValues(dict) {\n    const result = Object.create(null);\n\n    for (const name in dict) {\n        const item = dict[name];\n        const fn = item.parse || item;\n\n        if (fn) {\n            result[name] = fn;\n        }\n    }\n\n    return result;\n}\n\nfunction processConfig(config) {\n    const parseConfig = {\n        context: Object.create(null),\n        scope: Object.assign(Object.create(null), config.scope),\n        atrule: fetchParseValues(config.atrule),\n        pseudo: fetchParseValues(config.pseudo),\n        node: fetchParseValues(config.node)\n    };\n\n    for (const name in config.parseContext) {\n        switch (typeof config.parseContext[name]) {\n            case 'function':\n                parseConfig.context[name] = config.parseContext[name];\n                break;\n\n            case 'string':\n                parseConfig.context[name] = createParseContext(config.parseContext[name]);\n                break;\n        }\n    }\n\n    return {\n        config: parseConfig,\n        ...parseConfig,\n        ...parseConfig.node\n    };\n}\n\nexport function createParser(config) {\n    let source = '';\n    let filename = '<unknown>';\n    let needPositions = false;\n    let onParseError = NOOP;\n    let onParseErrorThrow = false;\n\n    const locationMap = new OffsetToLocation();\n    const parser = Object.assign(new TokenStream(), processConfig(config || {}), {\n        parseAtrulePrelude: true,\n        parseRulePrelude: true,\n        parseValue: true,\n        parseCustomProperty: false,\n\n        readSequence,\n\n        consumeUntilBalanceEnd: () => 0,\n        consumeUntilLeftCurlyBracket(code) {\n            return code === LEFTCURLYBRACKET ? 1 : 0;\n        },\n        consumeUntilLeftCurlyBracketOrSemicolon(code) {\n            return code === LEFTCURLYBRACKET || code === SEMICOLON ? 1 : 0;\n        },\n        consumeUntilExclamationMarkOrSemicolon(code) {\n            return code === EXCLAMATIONMARK || code === SEMICOLON ? 1 : 0;\n        },\n        consumeUntilSemicolonIncluded(code) {\n            return code === SEMICOLON ? 2 : 0;\n        },\n\n        createList() {\n            return new List();\n        },\n        createSingleNodeList(node) {\n            return new List().appendData(node);\n        },\n        getFirstListNode(list) {\n            return list && list.first;\n        },\n        getLastListNode(list) {\n            return list && list.last;\n        },\n\n        parseWithFallback(consumer, fallback) {\n            const startToken = this.tokenIndex;\n\n            try {\n                return consumer.call(this);\n            } catch (e) {\n                if (onParseErrorThrow) {\n                    throw e;\n                }\n\n                const fallbackNode = fallback.call(this, startToken);\n\n                onParseErrorThrow = true;\n                onParseError(e, fallbackNode);\n                onParseErrorThrow = false;\n\n                return fallbackNode;\n            }\n        },\n\n        lookupNonWSType(offset) {\n            let type;\n\n            do {\n                type = this.lookupType(offset++);\n                if (type !== WhiteSpace) {\n                    return type;\n                }\n            } while (type !== NULL);\n\n            return NULL;\n        },\n\n        charCodeAt(offset) {\n            return offset >= 0 && offset < source.length ? source.charCodeAt(offset) : 0;\n        },\n        substring(offsetStart, offsetEnd) {\n            return source.substring(offsetStart, offsetEnd);\n        },\n        substrToCursor(start) {\n            return this.source.substring(start, this.tokenStart);\n        },\n\n        cmpChar(offset, charCode) {\n            return cmpChar(source, offset, charCode);\n        },\n        cmpStr(offsetStart, offsetEnd, str) {\n            return cmpStr(source, offsetStart, offsetEnd, str);\n        },\n\n        consume(tokenType) {\n            const start = this.tokenStart;\n\n            this.eat(tokenType);\n\n            return this.substrToCursor(start);\n        },\n        consumeFunctionName() {\n            const name = source.substring(this.tokenStart, this.tokenEnd - 1);\n\n            this.eat(FunctionToken);\n\n            return name;\n        },\n        consumeNumber(type) {\n            const number = source.substring(this.tokenStart, consumeNumber(source, this.tokenStart));\n\n            this.eat(type);\n\n            return number;\n        },\n\n        eat(tokenType) {\n            if (this.tokenType !== tokenType) {\n                const tokenName = tokenNames[tokenType].slice(0, -6).replace(/-/g, ' ').replace(/^./, m => m.toUpperCase());\n                let message = `${/[[\\](){}]/.test(tokenName) ? `\"${tokenName}\"` : tokenName} is expected`;\n                let offset = this.tokenStart;\n\n                // tweak message and offset\n                switch (tokenType) {\n                    case Ident:\n                        // when identifier is expected but there is a function or url\n                        if (this.tokenType === FunctionToken || this.tokenType === Url) {\n                            offset = this.tokenEnd - 1;\n                            message = 'Identifier is expected but function found';\n                        } else {\n                            message = 'Identifier is expected';\n                        }\n                        break;\n\n                    case Hash:\n                        if (this.isDelim(NUMBERSIGN)) {\n                            this.next();\n                            offset++;\n                            message = 'Name is expected';\n                        }\n                        break;\n\n                    case Percentage:\n                        if (this.tokenType === NumberToken) {\n                            offset = this.tokenEnd;\n                            message = 'Percent sign is expected';\n                        }\n                        break;\n                }\n\n                this.error(message, offset);\n            }\n\n            this.next();\n        },\n        eatIdent(name) {\n            if (this.tokenType !== Ident || this.lookupValue(0, name) === false) {\n                this.error(`Identifier \"${name}\" is expected`);\n            }\n\n            this.next();\n        },\n        eatDelim(code) {\n            if (!this.isDelim(code)) {\n                this.error(`Delim \"${String.fromCharCode(code)}\" is expected`);\n            }\n\n            this.next();\n        },\n\n        getLocation(start, end) {\n            if (needPositions) {\n                return locationMap.getLocationRange(\n                    start,\n                    end,\n                    filename\n                );\n            }\n\n            return null;\n        },\n        getLocationFromList(list) {\n            if (needPositions) {\n                const head = this.getFirstListNode(list);\n                const tail = this.getLastListNode(list);\n                return locationMap.getLocationRange(\n                    head !== null ? head.loc.start.offset - locationMap.startOffset : this.tokenStart,\n                    tail !== null ? tail.loc.end.offset - locationMap.startOffset : this.tokenStart,\n                    filename\n                );\n            }\n\n            return null;\n        },\n\n        error(message, offset) {\n            const location = typeof offset !== 'undefined' && offset < source.length\n                ? locationMap.getLocation(offset)\n                : this.eof\n                    ? locationMap.getLocation(findWhiteSpaceStart(source, source.length - 1))\n                    : locationMap.getLocation(this.tokenStart);\n\n            throw new SyntaxError(\n                message || 'Unexpected input',\n                source,\n                location.offset,\n                location.line,\n                location.column\n            );\n        }\n    });\n\n    const parse = function(source_, options) {\n        source = source_;\n        options = options || {};\n\n        parser.setSource(source, tokenize);\n        locationMap.setSource(\n            source,\n            options.offset,\n            options.line,\n            options.column\n        );\n\n        filename = options.filename || '<unknown>';\n        needPositions = Boolean(options.positions);\n        onParseError = typeof options.onParseError === 'function' ? options.onParseError : NOOP;\n        onParseErrorThrow = false;\n\n        parser.parseAtrulePrelude = 'parseAtrulePrelude' in options ? Boolean(options.parseAtrulePrelude) : true;\n        parser.parseRulePrelude = 'parseRulePrelude' in options ? Boolean(options.parseRulePrelude) : true;\n        parser.parseValue = 'parseValue' in options ? Boolean(options.parseValue) : true;\n        parser.parseCustomProperty = 'parseCustomProperty' in options ? Boolean(options.parseCustomProperty) : false;\n\n        const { context = 'default', onComment } = options;\n\n        if (context in parser.context === false) {\n            throw new Error('Unknown context `' + context + '`');\n        }\n\n        if (typeof onComment === 'function') {\n            parser.forEachToken((type, start, end) => {\n                if (type === Comment) {\n                    const loc = parser.getLocation(start, end);\n                    const value = cmpStr(source, end - 2, end, '*/')\n                        ? source.slice(start + 2, end - 2)\n                        : source.slice(start + 2, end);\n\n                    onComment(value, loc);\n                }\n            });\n        }\n\n        const ast = parser.context[context].call(parser, options);\n\n        if (!parser.eof) {\n            parser.error();\n        }\n\n        return ast;\n    };\n\n    return Object.assign(parse, {\n        SyntaxError,\n        config: parser.config\n    });\n};\n", "import { SourceMapGenerator } from 'source-map-js/lib/source-map-generator.js';\n\nconst trackNodes = new Set(['Atrule', 'Selector', 'Declaration']);\n\nexport function generateSourceMap(handlers) {\n    const map = new SourceMapGenerator();\n    const generated = {\n        line: 1,\n        column: 0\n    };\n    const original = {\n        line: 0, // should be zero to add first mapping\n        column: 0\n    };\n    const activatedGenerated = {\n        line: 1,\n        column: 0\n    };\n    const activatedMapping = {\n        generated: activatedGenerated\n    };\n    let line = 1;\n    let column = 0;\n    let sourceMappingActive = false;\n\n    const origHandlersNode = handlers.node;\n    handlers.node = function(node) {\n        if (node.loc && node.loc.start && trackNodes.has(node.type)) {\n            const nodeLine = node.loc.start.line;\n            const nodeColumn = node.loc.start.column - 1;\n\n            if (original.line !== nodeLine ||\n                original.column !== nodeColumn) {\n                original.line = nodeLine;\n                original.column = nodeColumn;\n\n                generated.line = line;\n                generated.column = column;\n\n                if (sourceMappingActive) {\n                    sourceMappingActive = false;\n                    if (generated.line !== activatedGenerated.line ||\n                        generated.column !== activatedGenerated.column) {\n                        map.addMapping(activatedMapping);\n                    }\n                }\n\n                sourceMappingActive = true;\n                map.addMapping({\n                    source: node.loc.source,\n                    original,\n                    generated\n                });\n            }\n        }\n\n        origHandlersNode.call(this, node);\n\n        if (sourceMappingActive && trackNodes.has(node.type)) {\n            activatedGenerated.line = line;\n            activatedGenerated.column = column;\n        }\n    };\n\n    const origHandlersEmit = handlers.emit;\n    handlers.emit = function(value, type, auto) {\n        for (let i = 0; i < value.length; i++) {\n            if (value.charCodeAt(i) === 10) { // \\n\n                line++;\n                column = 0;\n            } else {\n                column++;\n            }\n        }\n\n        origHandlersEmit(value, type, auto);\n    };\n\n    const origHandlersResult = handlers.result;\n    handlers.result = function() {\n        if (sourceMappingActive) {\n            map.addMapping(activatedMapping);\n        }\n\n        return {\n            css: origHandlersResult(),\n            map\n        };\n    };\n\n    return handlers;\n};\n", "import {\n    WhiteSpace,\n    Delim,\n    Ident,\n    Function as FunctionToken,\n    Url,\n    BadUrl,\n    AtKeyword,\n    Hash,\n    Percentage,\n    Dimension,\n    Number as NumberToken,\n    String as StringToken,\n    Colon,\n    LeftParenthesis,\n    RightParenthesis,\n    CDC\n} from '../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\n\nconst code = (type, value) => {\n    if (type === Delim) {\n        type = value;\n    }\n\n    if (typeof type === 'string') {\n        const charCode = type.charCodeAt(0);\n        return charCode > 0x7F ? 0x8000 : charCode << 8;\n    }\n\n    return type;\n};\n\n// https://www.w3.org/TR/css-syntax-3/#serialization\n// The only requirement for serialization is that it must \"round-trip\" with parsing,\n// that is, parsing the stylesheet must produce the same data structures as parsing,\n// serializing, and parsing again, except for consecutive <whitespace-token>s,\n// which may be collapsed into a single token.\n\nconst specPairs = [\n    [Ident, Ident],\n    [Ident, FunctionToken],\n    [Ident, Url],\n    [Ident, BadUrl],\n    [Ident, '-'],\n    [Ident, NumberToken],\n    [Ident, Percentage],\n    [Ident, Dimension],\n    [Ident, CDC],\n    [Ident, LeftParenthesis],\n\n    [AtKeyword, Ident],\n    [AtKeyword, FunctionToken],\n    [AtKeyword, Url],\n    [AtKeyword, BadUrl],\n    [AtKeyword, '-'],\n    [AtKeyword, NumberToken],\n    [AtKeyword, Percentage],\n    [AtKeyword, Dimension],\n    [AtKeyword, CDC],\n\n    [Hash, Ident],\n    [Hash, FunctionToken],\n    [Hash, Url],\n    [Hash, BadUrl],\n    [Hash, '-'],\n    [Hash, NumberToken],\n    [Hash, Percentage],\n    [Hash, Dimension],\n    [Hash, CDC],\n\n    [Dimension, Ident],\n    [Dimension, FunctionToken],\n    [Dimension, Url],\n    [Dimension, BadUrl],\n    [Dimension, '-'],\n    [Dimension, NumberToken],\n    [Dimension, Percentage],\n    [Dimension, Dimension],\n    [Dimension, CDC],\n\n    ['#', Ident],\n    ['#', FunctionToken],\n    ['#', Url],\n    ['#', BadUrl],\n    ['#', '-'],\n    ['#', NumberToken],\n    ['#', Percentage],\n    ['#', Dimension],\n    ['#', CDC], // https://github.com/w3c/csswg-drafts/pull/6874\n\n    ['-', Ident],\n    ['-', FunctionToken],\n    ['-', Url],\n    ['-', BadUrl],\n    ['-', '-'],\n    ['-', NumberToken],\n    ['-', Percentage],\n    ['-', Dimension],\n    ['-', CDC], // https://github.com/w3c/csswg-drafts/pull/6874\n\n    [NumberToken, Ident],\n    [NumberToken, FunctionToken],\n    [NumberToken, Url],\n    [NumberToken, BadUrl],\n    [NumberToken, NumberToken],\n    [NumberToken, Percentage],\n    [NumberToken, Dimension],\n    [NumberToken, '%'],\n    [NumberToken, CDC], // https://github.com/w3c/csswg-drafts/pull/6874\n\n    ['@', Ident],\n    ['@', FunctionToken],\n    ['@', Url],\n    ['@', BadUrl],\n    ['@', '-'],\n    ['@', CDC], // https://github.com/w3c/csswg-drafts/pull/6874\n\n    ['.', NumberToken],\n    ['.', Percentage],\n    ['.', Dimension],\n\n    ['+', NumberToken],\n    ['+', Percentage],\n    ['+', Dimension],\n\n    ['/', '*']\n];\n// validate with scripts/generate-safe\nconst safePairs = specPairs.concat([\n    [Ident, Hash],\n\n    [Dimension, Hash],\n\n    [Hash, Hash],\n\n    [AtKeyword, LeftParenthesis],\n    [AtKeyword, StringToken],\n    [AtKeyword, Colon],\n\n    [Percentage, Percentage],\n    [Percentage, Dimension],\n    [Percentage, FunctionToken],\n    [Percentage, '-'],\n\n    [RightParenthesis, Ident],\n    [RightParenthesis, FunctionToken],\n    [RightParenthesis, Percentage],\n    [RightParenthesis, Dimension],\n    [RightParenthesis, Hash],\n    [RightParenthesis, '-']\n]);\n\nfunction createMap(pairs) {\n    const isWhiteSpaceRequired = new Set(\n        pairs.map(([prev, next]) => (code(prev) << 16 | code(next)))\n    );\n\n    return function(prevCode, type, value) {\n        const nextCode = code(type, value);\n        const nextCharCode = value.charCodeAt(0);\n        const emitWs =\n            (nextCharCode === HYPHENMINUS &&\n                type !== Ident &&\n                type !== FunctionToken &&\n                type !== CDC) ||\n            (nextCharCode === PLUSSIGN)\n                ? isWhiteSpaceRequired.has(prevCode << 16 | nextCharCode << 8)\n                : isWhiteSpaceRequired.has(prevCode << 16 | nextCode);\n\n        if (emitWs) {\n            this.emit(' ', WhiteSpace, true);\n        }\n\n        return nextCode;\n    };\n}\n\nexport const spec = createMap(specPairs);\nexport const safe = createMap(safePairs);\n", "import { tokenize, Delim, WhiteSpace } from '../tokenizer/index.js';\nimport { generateSourceMap } from './sourceMap.js';\nimport * as tokenBefore from './token-before.js';\n\nconst REVERSESOLIDUS = 0x005c; // U+005C REVERSE SOLIDUS (\\)\n\nfunction processChildren(node, delimeter) {\n    if (typeof delimeter === 'function') {\n        let prev = null;\n\n        node.children.forEach(node => {\n            if (prev !== null) {\n                delimeter.call(this, prev);\n            }\n\n            this.node(node);\n            prev = node;\n        });\n\n        return;\n    }\n\n    node.children.forEach(this.node, this);\n}\n\nfunction processChunk(chunk) {\n    tokenize(chunk, (type, start, end) => {\n        this.token(type, chunk.slice(start, end));\n    });\n}\n\nexport function createGenerator(config) {\n    const types = new Map();\n\n    for (let name in config.node) {\n        const item = config.node[name];\n        const fn = item.generate || item;\n\n        if (typeof fn === 'function') {\n            types.set(name, item.generate || item);\n        }\n    }\n\n    return function(node, options) {\n        let buffer = '';\n        let prevCode = 0;\n        let handlers = {\n            node(node) {\n                if (types.has(node.type)) {\n                    types.get(node.type).call(publicApi, node);\n                } else {\n                    throw new Error('Unknown node type: ' + node.type);\n                }\n            },\n            tokenBefore: tokenBefore.safe,\n            token(type, value) {\n                prevCode = this.tokenBefore(prevCode, type, value);\n\n                this.emit(value, type, false);\n\n                if (type === Delim && value.charCodeAt(0) === REVERSESOLIDUS) {\n                    this.emit('\\n', WhiteSpace, true);\n                }\n            },\n            emit(value) {\n                buffer += value;\n            },\n            result() {\n                return buffer;\n            }\n        };\n\n        if (options) {\n            if (typeof options.decorator === 'function') {\n                handlers = options.decorator(handlers);\n            }\n\n            if (options.sourceMap) {\n                handlers = generateSourceMap(handlers);\n            }\n\n            if (options.mode in tokenBefore) {\n                handlers.tokenBefore = tokenBefore[options.mode];\n            }\n        }\n\n        const publicApi = {\n            node: (node) => handlers.node(node),\n            children: processChildren,\n            token: (type, value) => handlers.token(type, value),\n            tokenize: processChunk\n        };\n\n        handlers.node(node);\n\n        return handlers.result();\n    };\n};\n", "import { List } from '../utils/List.js';\n\nexport function createConvertor(walk) {\n    return {\n        fromPlainObject(ast) {\n            walk(ast, {\n                enter(node) {\n                    if (node.children && node.children instanceof List === false) {\n                        node.children = new List().fromArray(node.children);\n                    }\n                }\n            });\n\n            return ast;\n        },\n        toPlainObject(ast) {\n            walk(ast, {\n                leave(node) {\n                    if (node.children && node.children instanceof List) {\n                        node.children = node.children.toArray();\n                    }\n                }\n            });\n\n            return ast;\n        }\n    };\n};\n", "const { hasOwnProperty } = Object.prototype;\nconst noop = function() {};\n\nfunction ensureFunction(value) {\n    return typeof value === 'function' ? value : noop;\n}\n\nfunction invokeForType(fn, type) {\n    return function(node, item, list) {\n        if (node.type === type) {\n            fn.call(this, node, item, list);\n        }\n    };\n}\n\nfunction getWalkersFromStructure(name, nodeType) {\n    const structure = nodeType.structure;\n    const walkers = [];\n\n    for (const key in structure) {\n        if (hasOwnProperty.call(structure, key) === false) {\n            continue;\n        }\n\n        let fieldTypes = structure[key];\n        const walker = {\n            name: key,\n            type: false,\n            nullable: false\n        };\n\n        if (!Array.isArray(fieldTypes)) {\n            fieldTypes = [fieldTypes];\n        }\n\n        for (const fieldType of fieldTypes) {\n            if (fieldType === null) {\n                walker.nullable = true;\n            } else if (typeof fieldType === 'string') {\n                walker.type = 'node';\n            } else if (Array.isArray(fieldType)) {\n                walker.type = 'list';\n            }\n        }\n\n        if (walker.type) {\n            walkers.push(walker);\n        }\n    }\n\n    if (walkers.length) {\n        return {\n            context: nodeType.walkContext,\n            fields: walkers\n        };\n    }\n\n    return null;\n}\n\nfunction getTypesFromConfig(config) {\n    const types = {};\n\n    for (const name in config.node) {\n        if (hasOwnProperty.call(config.node, name)) {\n            const nodeType = config.node[name];\n\n            if (!nodeType.structure) {\n                throw new Error('Missed `structure` field in `' + name + '` node type definition');\n            }\n\n            types[name] = getWalkersFromStructure(name, nodeType);\n        }\n    }\n\n    return types;\n}\n\nfunction createTypeIterator(config, reverse) {\n    const fields = config.fields.slice();\n    const contextName = config.context;\n    const useContext = typeof contextName === 'string';\n\n    if (reverse) {\n        fields.reverse();\n    }\n\n    return function(node, context, walk, walkReducer) {\n        let prevContextValue;\n\n        if (useContext) {\n            prevContextValue = context[contextName];\n            context[contextName] = node;\n        }\n\n        for (const field of fields) {\n            const ref = node[field.name];\n\n            if (!field.nullable || ref) {\n                if (field.type === 'list') {\n                    const breakWalk = reverse\n                        ? ref.reduceRight(walkReducer, false)\n                        : ref.reduce(walkReducer, false);\n\n                    if (breakWalk) {\n                        return true;\n                    }\n                } else if (walk(ref)) {\n                    return true;\n                }\n            }\n        }\n\n        if (useContext) {\n            context[contextName] = prevContextValue;\n        }\n    };\n}\n\nfunction createFastTraveralMap({\n    StyleSheet,\n    Atrule,\n    Rule,\n    Block,\n    DeclarationList\n}) {\n    return {\n        Atrule: {\n            StyleSheet,\n            Atrule,\n            Rule,\n            Block\n        },\n        Rule: {\n            StyleSheet,\n            Atrule,\n            Rule,\n            Block\n        },\n        Declaration: {\n            StyleSheet,\n            Atrule,\n            Rule,\n            Block,\n            DeclarationList\n        }\n    };\n}\n\nexport function createWalker(config) {\n    const types = getTypesFromConfig(config);\n    const iteratorsNatural = {};\n    const iteratorsReverse = {};\n    const breakWalk = Symbol('break-walk');\n    const skipNode = Symbol('skip-node');\n\n    for (const name in types) {\n        if (hasOwnProperty.call(types, name) && types[name] !== null) {\n            iteratorsNatural[name] = createTypeIterator(types[name], false);\n            iteratorsReverse[name] = createTypeIterator(types[name], true);\n        }\n    }\n\n    const fastTraversalIteratorsNatural = createFastTraveralMap(iteratorsNatural);\n    const fastTraversalIteratorsReverse = createFastTraveralMap(iteratorsReverse);\n\n    const walk = function(root, options) {\n        function walkNode(node, item, list) {\n            const enterRet = enter.call(context, node, item, list);\n\n            if (enterRet === breakWalk) {\n                return true;\n            }\n\n            if (enterRet === skipNode) {\n                return false;\n            }\n\n            if (iterators.hasOwnProperty(node.type)) {\n                if (iterators[node.type](node, context, walkNode, walkReducer)) {\n                    return true;\n                }\n            }\n\n            if (leave.call(context, node, item, list) === breakWalk) {\n                return true;\n            }\n\n            return false;\n        }\n\n        let enter = noop;\n        let leave = noop;\n        let iterators = iteratorsNatural;\n        let walkReducer = (ret, data, item, list) => ret || walkNode(data, item, list);\n        const context = {\n            break: breakWalk,\n            skip: skipNode,\n\n            root,\n            stylesheet: null,\n            atrule: null,\n            atrulePrelude: null,\n            rule: null,\n            selector: null,\n            block: null,\n            declaration: null,\n            function: null\n        };\n\n        if (typeof options === 'function') {\n            enter = options;\n        } else if (options) {\n            enter = ensureFunction(options.enter);\n            leave = ensureFunction(options.leave);\n\n            if (options.reverse) {\n                iterators = iteratorsReverse;\n            }\n\n            if (options.visit) {\n                if (fastTraversalIteratorsNatural.hasOwnProperty(options.visit)) {\n                    iterators = options.reverse\n                        ? fastTraversalIteratorsReverse[options.visit]\n                        : fastTraversalIteratorsNatural[options.visit];\n                } else if (!types.hasOwnProperty(options.visit)) {\n                    throw new Error('Bad value `' + options.visit + '` for `visit` option (should be: ' + Object.keys(types).sort().join(', ') + ')');\n                }\n\n                enter = invokeForType(enter, options.visit);\n                leave = invokeForType(leave, options.visit);\n            }\n        }\n\n        if (enter === noop && leave === noop) {\n            throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');\n        }\n\n        walkNode(root);\n    };\n\n    walk.break = breakWalk;\n    walk.skip = skipNode;\n\n    walk.find = function(ast, fn) {\n        let found = null;\n\n        walk(ast, function(node, item, list) {\n            if (fn.call(this, node, item, list)) {\n                found = node;\n                return breakWalk;\n            }\n        });\n\n        return found;\n    };\n\n    walk.findLast = function(ast, fn) {\n        let found = null;\n\n        walk(ast, {\n            reverse: true,\n            enter(node, item, list) {\n                if (fn.call(this, node, item, list)) {\n                    found = node;\n                    return breakWalk;\n                }\n            }\n        });\n\n        return found;\n    };\n\n    walk.findAll = function(ast, fn) {\n        const found = [];\n\n        walk(ast, function(node, item, list) {\n            if (fn.call(this, node, item, list)) {\n                found.push(node);\n            }\n        });\n\n        return found;\n    };\n\n    return walk;\n};\n", "function noop(value) {\n    return value;\n}\n\nfunction generateMultiplier(multiplier) {\n    const { min, max, comma } = multiplier;\n\n    if (min === 0 && max === 0) {\n        return comma ? '#?' : '*';\n    }\n\n    if (min === 0 && max === 1) {\n        return '?';\n    }\n\n    if (min === 1 && max === 0) {\n        return comma ? '#' : '+';\n    }\n\n    if (min === 1 && max === 1) {\n        return '';\n    }\n\n    return (\n        (comma ? '#' : '') +\n        (min === max\n            ? '{' + min + '}'\n            : '{' + min + ',' + (max !== 0 ? max : '') + '}'\n        )\n    );\n}\n\nfunction generateTypeOpts(node) {\n    switch (node.type) {\n        case 'Range':\n            return (\n                ' [' +\n                (node.min === null ? '-\u221E' : node.min) +\n                ',' +\n                (node.max === null ? '\u221E' : node.max) +\n                ']'\n            );\n\n        default:\n            throw new Error('Unknown node type `' + node.type + '`');\n    }\n}\n\nfunction generateSequence(node, decorate, forceBraces, compact) {\n    const combinator = node.combinator === ' ' || compact ? node.combinator : ' ' + node.combinator + ' ';\n    const result = node.terms\n        .map(term => internalGenerate(term, decorate, forceBraces, compact))\n        .join(combinator);\n\n    if (node.explicit || forceBraces) {\n        return (compact || result[0] === ',' ? '[' : '[ ') + result + (compact ? ']' : ' ]');\n    }\n\n    return result;\n}\n\nfunction internalGenerate(node, decorate, forceBraces, compact) {\n    let result;\n\n    switch (node.type) {\n        case 'Group':\n            result =\n                generateSequence(node, decorate, forceBraces, compact) +\n                (node.disallowEmpty ? '!' : '');\n            break;\n\n        case 'Multiplier':\n            // return since node is a composition\n            return (\n                internalGenerate(node.term, decorate, forceBraces, compact) +\n                decorate(generateMultiplier(node), node)\n            );\n\n        case 'Type':\n            result = '<' + node.name + (node.opts ? decorate(generateTypeOpts(node.opts), node.opts) : '') + '>';\n            break;\n\n        case 'Property':\n            result = '<\\'' + node.name + '\\'>';\n            break;\n\n        case 'Keyword':\n            result = node.name;\n            break;\n\n        case 'AtKeyword':\n            result = '@' + node.name;\n            break;\n\n        case 'Function':\n            result = node.name + '(';\n            break;\n\n        case 'String':\n        case 'Token':\n            result = node.value;\n            break;\n\n        case 'Comma':\n            result = ',';\n            break;\n\n        default:\n            throw new Error('Unknown node type `' + node.type + '`');\n    }\n\n    return decorate(result, node);\n}\n\nexport function generate(node, options) {\n    let decorate = noop;\n    let forceBraces = false;\n    let compact = false;\n\n    if (typeof options === 'function') {\n        decorate = options;\n    } else if (options) {\n        forceBraces = Boolean(options.forceBraces);\n        compact = Boolean(options.compact);\n        if (typeof options.decorate === 'function') {\n            decorate = options.decorate;\n        }\n    }\n\n    return internalGenerate(node, decorate, forceBraces, compact);\n};\n", "import { createCustomError } from '../utils/create-custom-error.js';\nimport { generate } from '../definition-syntax/generate.js';\n\nconst defaultLoc = { offset: 0, line: 1, column: 1 };\n\nfunction locateMismatch(matchResult, node) {\n    const tokens = matchResult.tokens;\n    const longestMatch = matchResult.longestMatch;\n    const mismatchNode = longestMatch < tokens.length ? tokens[longestMatch].node || null : null;\n    const badNode = mismatchNode !== node ? mismatchNode : null;\n    let mismatchOffset = 0;\n    let mismatchLength = 0;\n    let entries = 0;\n    let css = '';\n    let start;\n    let end;\n\n    for (let i = 0; i < tokens.length; i++) {\n        const token = tokens[i].value;\n\n        if (i === longestMatch) {\n            mismatchLength = token.length;\n            mismatchOffset = css.length;\n        }\n\n        if (badNode !== null && tokens[i].node === badNode) {\n            if (i <= longestMatch) {\n                entries++;\n            } else {\n                entries = 0;\n            }\n        }\n\n        css += token;\n    }\n\n    if (longestMatch === tokens.length || entries > 1) { // last\n        start = fromLoc(badNode || node, 'end') || buildLoc(defaultLoc, css);\n        end = buildLoc(start);\n    } else {\n        start = fromLoc(badNode, 'start') ||\n            buildLoc(fromLoc(node, 'start') || defaultLoc, css.slice(0, mismatchOffset));\n        end = fromLoc(badNode, 'end') ||\n            buildLoc(start, css.substr(mismatchOffset, mismatchLength));\n    }\n\n    return {\n        css,\n        mismatchOffset,\n        mismatchLength,\n        start,\n        end\n    };\n}\n\nfunction fromLoc(node, point) {\n    const value = node && node.loc && node.loc[point];\n\n    if (value) {\n        return 'line' in value ? buildLoc(value) : value;\n    }\n\n    return null;\n}\n\nfunction buildLoc({ offset, line, column }, extra) {\n    const loc = {\n        offset,\n        line,\n        column\n    };\n\n    if (extra) {\n        const lines = extra.split(/\\n|\\r\\n?|\\f/);\n\n        loc.offset += extra.length;\n        loc.line += lines.length - 1;\n        loc.column = lines.length === 1 ? loc.column + extra.length : lines.pop().length + 1;\n    }\n\n    return loc;\n}\n\nexport const SyntaxReferenceError = function(type, referenceName) {\n    const error = createCustomError(\n        'SyntaxReferenceError',\n        type + (referenceName ? ' `' + referenceName + '`' : '')\n    );\n\n    error.reference = referenceName;\n\n    return error;\n};\n\nexport const SyntaxMatchError = function(message, syntax, node, matchResult) {\n    const error = createCustomError('SyntaxMatchError', message);\n    const {\n        css,\n        mismatchOffset,\n        mismatchLength,\n        start,\n        end\n    } = locateMismatch(matchResult, node);\n\n    error.rawMessage = message;\n    error.syntax = syntax ? generate(syntax) : '<generic>';\n    error.css = css;\n    error.mismatchOffset = mismatchOffset;\n    error.mismatchLength = mismatchLength;\n    error.message = message + '\\n' +\n        '  syntax: ' + error.syntax + '\\n' +\n        '   value: ' + (css || '<empty string>') + '\\n' +\n        '  --------' + new Array(error.mismatchOffset + 1).join('-') + '^';\n\n    Object.assign(error, start);\n    error.loc = {\n        source: (node && node.loc && node.loc.source) || '<unknown>',\n        start,\n        end\n    };\n\n    return error;\n};\n", "const keywords = new Map();\nconst properties = new Map();\nconst HYPHENMINUS = 45; // '-'.charCodeAt()\n\nexport const keyword = getKeywordDescriptor;\nexport const property = getPropertyDescriptor;\nexport const vendorPrefix = getVendorPrefix;\nexport function isCustomProperty(str, offset) {\n    offset = offset || 0;\n\n    return str.length - offset >= 2 &&\n           str.charCodeAt(offset) === HYPHENMINUS &&\n           str.charCodeAt(offset + 1) === HYPHENMINUS;\n}\n\nfunction getVendorPrefix(str, offset) {\n    offset = offset || 0;\n\n    // verdor prefix should be at least 3 chars length\n    if (str.length - offset >= 3) {\n        // vendor prefix starts with hyper minus following non-hyper minus\n        if (str.charCodeAt(offset) === HYPHENMINUS &&\n            str.charCodeAt(offset + 1) !== HYPHENMINUS) {\n            // vendor prefix should contain a hyper minus at the ending\n            const secondDashIndex = str.indexOf('-', offset + 2);\n\n            if (secondDashIndex !== -1) {\n                return str.substring(offset, secondDashIndex + 1);\n            }\n        }\n    }\n\n    return '';\n}\n\nfunction getKeywordDescriptor(keyword) {\n    if (keywords.has(keyword)) {\n        return keywords.get(keyword);\n    }\n\n    const name = keyword.toLowerCase();\n    let descriptor = keywords.get(name);\n\n    if (descriptor === undefined) {\n        const custom = isCustomProperty(name, 0);\n        const vendor = !custom ? getVendorPrefix(name, 0) : '';\n        descriptor = Object.freeze({\n            basename: name.substr(vendor.length),\n            name,\n            prefix: vendor,\n            vendor,\n            custom\n        });\n    }\n\n    keywords.set(keyword, descriptor);\n\n    return descriptor;\n}\n\nfunction getPropertyDescriptor(property) {\n    if (properties.has(property)) {\n        return properties.get(property);\n    }\n\n    let name = property;\n    let hack = property[0];\n\n    if (hack === '/') {\n        hack = property[1] === '/' ? '//' : '/';\n    } else if (hack !== '_' &&\n               hack !== '*' &&\n               hack !== '$' &&\n               hack !== '#' &&\n               hack !== '+' &&\n               hack !== '&') {\n        hack = '';\n    }\n\n    const custom = isCustomProperty(name, hack.length);\n\n    // re-use result when possible (the same as for lower case)\n    if (!custom) {\n        name = name.toLowerCase();\n        if (properties.has(name)) {\n            const descriptor = properties.get(name);\n            properties.set(property, descriptor);\n            return descriptor;\n        }\n    }\n\n    const vendor = !custom ? getVendorPrefix(name, hack.length) : '';\n    const prefix = name.substr(0, hack.length + vendor.length);\n    const descriptor = Object.freeze({\n        basename: name.substr(prefix.length),\n        name: name.substr(hack.length),\n        hack,\n        vendor,\n        prefix,\n        custom\n    });\n\n    properties.set(property, descriptor);\n\n    return descriptor;\n}\n", "// https://drafts.csswg.org/css-cascade-5/\nexport const cssWideKeywords = [\n    'initial',\n    'inherit',\n    'unset',\n    'revert',\n    'revert-layer'\n];\n", "import {\n    isDigit,\n    cmpChar,\n    Delim,\n    WhiteSpace,\n    Comment,\n    Ident,\n    Number as NumberToken,\n    Dimension\n} from '../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\nconst N = 0x006E;           // U+006E LATIN SMALL LETTER N (n)\nconst DISALLOW_SIGN = true;\nconst ALLOW_SIGN = false;\n\nfunction isDelim(token, code) {\n    return token !== null && token.type === Delim && token.value.charCodeAt(0) === code;\n}\n\nfunction skipSC(token, offset, getNextToken) {\n    while (token !== null && (token.type === WhiteSpace || token.type === Comment)) {\n        token = getNextToken(++offset);\n    }\n\n    return offset;\n}\n\nfunction checkInteger(token, valueOffset, disallowSign, offset) {\n    if (!token) {\n        return 0;\n    }\n\n    const code = token.value.charCodeAt(valueOffset);\n\n    if (code === PLUSSIGN || code === HYPHENMINUS) {\n        if (disallowSign) {\n            // Number sign is not allowed\n            return 0;\n        }\n        valueOffset++;\n    }\n\n    for (; valueOffset < token.value.length; valueOffset++) {\n        if (!isDigit(token.value.charCodeAt(valueOffset))) {\n            // Integer is expected\n            return 0;\n        }\n    }\n\n    return offset + 1;\n}\n\n// ... <signed-integer>\n// ... ['+' | '-'] <signless-integer>\nfunction consumeB(token, offset_, getNextToken) {\n    let sign = false;\n    let offset = skipSC(token, offset_, getNextToken);\n\n    token = getNextToken(offset);\n\n    if (token === null) {\n        return offset_;\n    }\n\n    if (token.type !== NumberToken) {\n        if (isDelim(token, PLUSSIGN) || isDelim(token, HYPHENMINUS)) {\n            sign = true;\n            offset = skipSC(getNextToken(++offset), offset, getNextToken);\n            token = getNextToken(offset);\n\n            if (token === null || token.type !== NumberToken) {\n                return 0;\n            }\n        } else {\n            return offset_;\n        }\n    }\n\n    if (!sign) {\n        const code = token.value.charCodeAt(0);\n        if (code !== PLUSSIGN && code !== HYPHENMINUS) {\n            // Number sign is expected\n            return 0;\n        }\n    }\n\n    return checkInteger(token, sign ? 0 : 1, sign, offset);\n}\n\n// An+B microsyntax https://www.w3.org/TR/css-syntax-3/#anb\nexport default function anPlusB(token, getNextToken) {\n    /* eslint-disable brace-style*/\n    let offset = 0;\n\n    if (!token) {\n        return 0;\n    }\n\n    // <integer>\n    if (token.type === NumberToken) {\n        return checkInteger(token, 0, ALLOW_SIGN, offset); // b\n    }\n\n    // -n\n    // -n <signed-integer>\n    // -n ['+' | '-'] <signless-integer>\n    // -n- <signless-integer>\n    // <dashndashdigit-ident>\n    else if (token.type === Ident && token.value.charCodeAt(0) === HYPHENMINUS) {\n        // expect 1st char is N\n        if (!cmpChar(token.value, 1, N)) {\n            return 0;\n        }\n\n        switch (token.value.length) {\n            // -n\n            // -n <signed-integer>\n            // -n ['+' | '-'] <signless-integer>\n            case 2:\n                return consumeB(getNextToken(++offset), offset, getNextToken);\n\n            // -n- <signless-integer>\n            case 3:\n                if (token.value.charCodeAt(2) !== HYPHENMINUS) {\n                    return 0;\n                }\n\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\n                token = getNextToken(offset);\n\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\n\n            // <dashndashdigit-ident>\n            default:\n                if (token.value.charCodeAt(2) !== HYPHENMINUS) {\n                    return 0;\n                }\n\n                return checkInteger(token, 3, DISALLOW_SIGN, offset);\n        }\n    }\n\n    // '+'? n\n    // '+'? n <signed-integer>\n    // '+'? n ['+' | '-'] <signless-integer>\n    // '+'? n- <signless-integer>\n    // '+'? <ndashdigit-ident>\n    else if (token.type === Ident || (isDelim(token, PLUSSIGN) && getNextToken(offset + 1).type === Ident)) {\n        // just ignore a plus\n        if (token.type !== Ident) {\n            token = getNextToken(++offset);\n        }\n\n        if (token === null || !cmpChar(token.value, 0, N)) {\n            return 0;\n        }\n\n        switch (token.value.length) {\n            // '+'? n\n            // '+'? n <signed-integer>\n            // '+'? n ['+' | '-'] <signless-integer>\n            case 1:\n                return consumeB(getNextToken(++offset), offset, getNextToken);\n\n            // '+'? n- <signless-integer>\n            case 2:\n                if (token.value.charCodeAt(1) !== HYPHENMINUS) {\n                    return 0;\n                }\n\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\n                token = getNextToken(offset);\n\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\n\n            // '+'? <ndashdigit-ident>\n            default:\n                if (token.value.charCodeAt(1) !== HYPHENMINUS) {\n                    return 0;\n                }\n\n                return checkInteger(token, 2, DISALLOW_SIGN, offset);\n        }\n    }\n\n    // <ndashdigit-dimension>\n    // <ndash-dimension> <signless-integer>\n    // <n-dimension>\n    // <n-dimension> <signed-integer>\n    // <n-dimension> ['+' | '-'] <signless-integer>\n    else if (token.type === Dimension) {\n        let code = token.value.charCodeAt(0);\n        let sign = code === PLUSSIGN || code === HYPHENMINUS ? 1 : 0;\n        let i = sign;\n\n        for (; i < token.value.length; i++) {\n            if (!isDigit(token.value.charCodeAt(i))) {\n                break;\n            }\n        }\n\n        if (i === sign) {\n            // Integer is expected\n            return 0;\n        }\n\n        if (!cmpChar(token.value, i, N)) {\n            return 0;\n        }\n\n        // <n-dimension>\n        // <n-dimension> <signed-integer>\n        // <n-dimension> ['+' | '-'] <signless-integer>\n        if (i + 1 === token.value.length) {\n            return consumeB(getNextToken(++offset), offset, getNextToken);\n        } else {\n            if (token.value.charCodeAt(i + 1) !== HYPHENMINUS) {\n                return 0;\n            }\n\n            // <ndash-dimension> <signless-integer>\n            if (i + 2 === token.value.length) {\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\n                token = getNextToken(offset);\n\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\n            }\n            // <ndashdigit-dimension>\n            else {\n                return checkInteger(token, i + 2, DISALLOW_SIGN, offset);\n            }\n        }\n    }\n\n    return 0;\n};\n", "import {\n    isHexDigit,\n    cmpChar,\n    Ident,\n    Delim,\n    Number as NumberToken,\n    Dimension\n} from '../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;     // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D;  // U+002D HYPHEN-MINUS (-)\nconst QUESTIONMARK = 0x003F; // U+003F QUESTION MARK (?)\nconst U = 0x0075;            // U+0075 LATIN SMALL LETTER U (u)\n\nfunction isDelim(token, code) {\n    return token !== null && token.type === Delim && token.value.charCodeAt(0) === code;\n}\n\nfunction startsWith(token, code) {\n    return token.value.charCodeAt(0) === code;\n}\n\nfunction hexSequence(token, offset, allowDash) {\n    let hexlen = 0;\n\n    for (let pos = offset; pos < token.value.length; pos++) {\n        const code = token.value.charCodeAt(pos);\n\n        if (code === HYPHENMINUS && allowDash && hexlen !== 0) {\n            hexSequence(token, offset + hexlen + 1, false);\n            return 6; // dissallow following question marks\n        }\n\n        if (!isHexDigit(code)) {\n            return 0; // not a hex digit\n        }\n\n        if (++hexlen > 6) {\n            return 0; // too many hex digits\n        };\n    }\n\n    return hexlen;\n}\n\nfunction withQuestionMarkSequence(consumed, length, getNextToken) {\n    if (!consumed) {\n        return 0; // nothing consumed\n    }\n\n    while (isDelim(getNextToken(length), QUESTIONMARK)) {\n        if (++consumed > 6) {\n            return 0; // too many question marks\n        }\n\n        length++;\n    }\n\n    return length;\n}\n\n// https://drafts.csswg.org/css-syntax/#urange\n// Informally, the <urange> production has three forms:\n// U+0001\n//      Defines a range consisting of a single code point, in this case the code point \"1\".\n// U+0001-00ff\n//      Defines a range of codepoints between the first and the second value, in this case\n//      the range between \"1\" and \"ff\" (255 in decimal) inclusive.\n// U+00??\n//      Defines a range of codepoints where the \"?\" characters range over all hex digits,\n//      in this case defining the same as the value U+0000-00ff.\n// In each form, a maximum of 6 digits is allowed for each hexadecimal number (if you treat \"?\" as a hexadecimal digit).\n//\n// <urange> =\n//   u '+' <ident-token> '?'* |\n//   u <dimension-token> '?'* |\n//   u <number-token> '?'* |\n//   u <number-token> <dimension-token> |\n//   u <number-token> <number-token> |\n//   u '+' '?'+\nexport default function urange(token, getNextToken) {\n    let length = 0;\n\n    // should start with `u` or `U`\n    if (token === null || token.type !== Ident || !cmpChar(token.value, 0, U)) {\n        return 0;\n    }\n\n    token = getNextToken(++length);\n    if (token === null) {\n        return 0;\n    }\n\n    // u '+' <ident-token> '?'*\n    // u '+' '?'+\n    if (isDelim(token, PLUSSIGN)) {\n        token = getNextToken(++length);\n        if (token === null) {\n            return 0;\n        }\n\n        if (token.type === Ident) {\n            // u '+' <ident-token> '?'*\n            return withQuestionMarkSequence(hexSequence(token, 0, true), ++length, getNextToken);\n        }\n\n        if (isDelim(token, QUESTIONMARK)) {\n            // u '+' '?'+\n            return withQuestionMarkSequence(1, ++length, getNextToken);\n        }\n\n        // Hex digit or question mark is expected\n        return 0;\n    }\n\n    // u <number-token> '?'*\n    // u <number-token> <dimension-token>\n    // u <number-token> <number-token>\n    if (token.type === NumberToken) {\n        const consumedHexLength = hexSequence(token, 1, true);\n        if (consumedHexLength === 0) {\n            return 0;\n        }\n\n        token = getNextToken(++length);\n        if (token === null) {\n            // u <number-token> <eof>\n            return length;\n        }\n\n        if (token.type === Dimension || token.type === NumberToken) {\n            // u <number-token> <dimension-token>\n            // u <number-token> <number-token>\n            if (!startsWith(token, HYPHENMINUS) || !hexSequence(token, 1, false)) {\n                return 0;\n            }\n\n            return length + 1;\n        }\n\n        // u <number-token> '?'*\n        return withQuestionMarkSequence(consumedHexLength, length, getNextToken);\n    }\n\n    // u <dimension-token> '?'*\n    if (token.type === Dimension) {\n        return withQuestionMarkSequence(hexSequence(token, 1, true), ++length, getNextToken);\n    }\n\n    return 0;\n};\n", "import { cssWideKeywords } from './generic-const.js';\nimport anPlusB from './generic-an-plus-b.js';\nimport urange from './generic-urange.js';\nimport {\n    isIdentifierStart,\n    isHexDigit,\n    isDigit,\n    cmpStr,\n    consumeNumber,\n\n    Ident,\n    Function as FunctionToken,\n    AtKeyword,\n    Hash,\n    String as StringToken,\n    BadString,\n    Url,\n    BadUrl,\n    Delim,\n    Number as NumberToken,\n    Percentage,\n    Dimension,\n    WhiteSpace,\n    CDO,\n    CDC,\n    Colon,\n    Semicolon,\n    Comma,\n    LeftSquareBracket,\n    RightSquareBracket,\n    LeftParenthesis,\n    RightParenthesis,\n    LeftCurlyBracket,\n    RightCurlyBracket\n} from '../tokenizer/index.js';\n\nconst calcFunctionNames = ['calc(', '-moz-calc(', '-webkit-calc('];\nconst balancePair = new Map([\n    [FunctionToken, RightParenthesis],\n    [LeftParenthesis, RightParenthesis],\n    [LeftSquareBracket, RightSquareBracket],\n    [LeftCurlyBracket, RightCurlyBracket]\n]);\n\n// safe char code getter\nfunction charCodeAt(str, index) {\n    return index < str.length ? str.charCodeAt(index) : 0;\n}\n\nfunction eqStr(actual, expected) {\n    return cmpStr(actual, 0, actual.length, expected);\n}\n\nfunction eqStrAny(actual, expected) {\n    for (let i = 0; i < expected.length; i++) {\n        if (eqStr(actual, expected[i])) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n// IE postfix hack, i.e. 123\\0 or 123px\\9\nfunction isPostfixIeHack(str, offset) {\n    if (offset !== str.length - 2) {\n        return false;\n    }\n\n    return (\n        charCodeAt(str, offset) === 0x005C &&  // U+005C REVERSE SOLIDUS (\\)\n        isDigit(charCodeAt(str, offset + 1))\n    );\n}\n\nfunction outOfRange(opts, value, numEnd) {\n    if (opts && opts.type === 'Range') {\n        const num = Number(\n            numEnd !== undefined && numEnd !== value.length\n                ? value.substr(0, numEnd)\n                : value\n        );\n\n        if (isNaN(num)) {\n            return true;\n        }\n\n        // FIXME: when opts.min is a string it's a dimension, skip a range validation\n        // for now since it requires a type covertation which is not implmented yet\n        if (opts.min !== null && num < opts.min && typeof opts.min !== 'string') {\n            return true;\n        }\n\n        // FIXME: when opts.max is a string it's a dimension, skip a range validation\n        // for now since it requires a type covertation which is not implmented yet\n        if (opts.max !== null && num > opts.max && typeof opts.max !== 'string') {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction consumeFunction(token, getNextToken) {\n    let balanceCloseType = 0;\n    let balanceStash = [];\n    let length = 0;\n\n    // balanced token consuming\n    scan:\n    do {\n        switch (token.type) {\n            case RightCurlyBracket:\n            case RightParenthesis:\n            case RightSquareBracket:\n                if (token.type !== balanceCloseType) {\n                    break scan;\n                }\n\n                balanceCloseType = balanceStash.pop();\n\n                if (balanceStash.length === 0) {\n                    length++;\n                    break scan;\n                }\n\n                break;\n\n            case FunctionToken:\n            case LeftParenthesis:\n            case LeftSquareBracket:\n            case LeftCurlyBracket:\n                balanceStash.push(balanceCloseType);\n                balanceCloseType = balancePair.get(token.type);\n                break;\n        }\n\n        length++;\n    } while (token = getNextToken(length));\n\n    return length;\n}\n\n// TODO: implement\n// can be used wherever <length>, <frequency>, <angle>, <time>, <percentage>, <number>, or <integer> values are allowed\n// https://drafts.csswg.org/css-values/#calc-notation\nfunction calc(next) {\n    return function(token, getNextToken, opts) {\n        if (token === null) {\n            return 0;\n        }\n\n        if (token.type === FunctionToken && eqStrAny(token.value, calcFunctionNames)) {\n            return consumeFunction(token, getNextToken);\n        }\n\n        return next(token, getNextToken, opts);\n    };\n}\n\nfunction tokenType(expectedTokenType) {\n    return function(token) {\n        if (token === null || token.type !== expectedTokenType) {\n            return 0;\n        }\n\n        return 1;\n    };\n}\n\n// =========================\n// Complex types\n//\n\n// https://drafts.csswg.org/css-values-4/#custom-idents\n// 4.2. Author-defined Identifiers: the <custom-ident> type\n// Some properties accept arbitrary author-defined identifiers as a component value.\n// This generic data type is denoted by <custom-ident>, and represents any valid CSS identifier\n// that would not be misinterpreted as a pre-defined keyword in that property\u2019s value definition.\n//\n// See also: https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident\nfunction customIdent(token) {\n    if (token === null || token.type !== Ident) {\n        return 0;\n    }\n\n    const name = token.value.toLowerCase();\n\n    // The CSS-wide keywords are not valid <custom-ident>s\n    if (eqStrAny(name, cssWideKeywords)) {\n        return 0;\n    }\n\n    // The default keyword is reserved and is also not a valid <custom-ident>\n    if (eqStr(name, 'default')) {\n        return 0;\n    }\n\n    // TODO: ignore property specific keywords (as described https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident)\n    // Specifications using <custom-ident> must specify clearly what other keywords\n    // are excluded from <custom-ident>, if any\u2014for example by saying that any pre-defined keywords\n    // in that property\u2019s value definition are excluded. Excluded keywords are excluded\n    // in all ASCII case permutations.\n\n    return 1;\n}\n\n// https://drafts.csswg.org/css-variables/#typedef-custom-property-name\n// A custom property is any property whose name starts with two dashes (U+002D HYPHEN-MINUS), like --foo.\n// The <custom-property-name> production corresponds to this: it\u2019s defined as any valid identifier\n// that starts with two dashes, except -- itself, which is reserved for future use by CSS.\n// NOTE: Current implementation treat `--` as a valid name since most (all?) major browsers treat it as valid.\nfunction customPropertyName(token) {\n    // ... defined as any valid identifier\n    if (token === null || token.type !== Ident) {\n        return 0;\n    }\n\n    // ... that starts with two dashes (U+002D HYPHEN-MINUS)\n    if (charCodeAt(token.value, 0) !== 0x002D || charCodeAt(token.value, 1) !== 0x002D) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// https://drafts.csswg.org/css-color-4/#hex-notation\n// The syntax of a <hex-color> is a <hash-token> token whose value consists of 3, 4, 6, or 8 hexadecimal digits.\n// In other words, a hex color is written as a hash character, \"#\", followed by some number of digits 0-9 or\n// letters a-f (the case of the letters doesn\u2019t matter - #00ff00 is identical to #00FF00).\nfunction hexColor(token) {\n    if (token === null || token.type !== Hash) {\n        return 0;\n    }\n\n    const length = token.value.length;\n\n    // valid values (length): #rgb (4), #rgba (5), #rrggbb (7), #rrggbbaa (9)\n    if (length !== 4 && length !== 5 && length !== 7 && length !== 9) {\n        return 0;\n    }\n\n    for (let i = 1; i < length; i++) {\n        if (!isHexDigit(charCodeAt(token.value, i))) {\n            return 0;\n        }\n    }\n\n    return 1;\n}\n\nfunction idSelector(token) {\n    if (token === null || token.type !== Hash) {\n        return 0;\n    }\n\n    if (!isIdentifierStart(charCodeAt(token.value, 1), charCodeAt(token.value, 2), charCodeAt(token.value, 3))) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// https://drafts.csswg.org/css-syntax/#any-value\n// It represents the entirety of what a valid declaration can have as its value.\nfunction declarationValue(token, getNextToken) {\n    if (!token) {\n        return 0;\n    }\n\n    let balanceCloseType = 0;\n    let balanceStash = [];\n    let length = 0;\n\n    // The <declaration-value> production matches any sequence of one or more tokens,\n    // so long as the sequence does not contain ...\n    scan:\n    do {\n        switch (token.type) {\n            // ... <bad-string-token>, <bad-url-token>,\n            case BadString:\n            case BadUrl:\n                break scan;\n\n            // ... unmatched <)-token>, <]-token>, or <}-token>,\n            case RightCurlyBracket:\n            case RightParenthesis:\n            case RightSquareBracket:\n                if (token.type !== balanceCloseType) {\n                    break scan;\n                }\n\n                balanceCloseType = balanceStash.pop();\n                break;\n\n            // ... or top-level <semicolon-token> tokens\n            case Semicolon:\n                if (balanceCloseType === 0) {\n                    break scan;\n                }\n\n                break;\n\n            // ... or <delim-token> tokens with a value of \"!\"\n            case Delim:\n                if (balanceCloseType === 0 && token.value === '!') {\n                    break scan;\n                }\n\n                break;\n\n            case FunctionToken:\n            case LeftParenthesis:\n            case LeftSquareBracket:\n            case LeftCurlyBracket:\n                balanceStash.push(balanceCloseType);\n                balanceCloseType = balancePair.get(token.type);\n                break;\n        }\n\n        length++;\n    } while (token = getNextToken(length));\n\n    return length;\n}\n\n// https://drafts.csswg.org/css-syntax/#any-value\n// The <any-value> production is identical to <declaration-value>, but also\n// allows top-level <semicolon-token> tokens and <delim-token> tokens\n// with a value of \"!\". It represents the entirety of what valid CSS can be in any context.\nfunction anyValue(token, getNextToken) {\n    if (!token) {\n        return 0;\n    }\n\n    let balanceCloseType = 0;\n    let balanceStash = [];\n    let length = 0;\n\n    // The <any-value> production matches any sequence of one or more tokens,\n    // so long as the sequence ...\n    scan:\n    do {\n        switch (token.type) {\n            // ... does not contain <bad-string-token>, <bad-url-token>,\n            case BadString:\n            case BadUrl:\n                break scan;\n\n            // ... unmatched <)-token>, <]-token>, or <}-token>,\n            case RightCurlyBracket:\n            case RightParenthesis:\n            case RightSquareBracket:\n                if (token.type !== balanceCloseType) {\n                    break scan;\n                }\n\n                balanceCloseType = balanceStash.pop();\n                break;\n\n            case FunctionToken:\n            case LeftParenthesis:\n            case LeftSquareBracket:\n            case LeftCurlyBracket:\n                balanceStash.push(balanceCloseType);\n                balanceCloseType = balancePair.get(token.type);\n                break;\n        }\n\n        length++;\n    } while (token = getNextToken(length));\n\n    return length;\n}\n\n// =========================\n// Dimensions\n//\n\nfunction dimension(type) {\n    if (type) {\n        type = new Set(type);\n    }\n\n    return function(token, getNextToken, opts) {\n        if (token === null || token.type !== Dimension) {\n            return 0;\n        }\n\n        const numberEnd = consumeNumber(token.value, 0);\n\n        // check unit\n        if (type !== null) {\n            // check for IE postfix hack, i.e. 123px\\0 or 123px\\9\n            const reverseSolidusOffset = token.value.indexOf('\\\\', numberEnd);\n            const unit = reverseSolidusOffset === -1 || !isPostfixIeHack(token.value, reverseSolidusOffset)\n                ? token.value.substr(numberEnd)\n                : token.value.substring(numberEnd, reverseSolidusOffset);\n\n            if (type.has(unit.toLowerCase()) === false) {\n                return 0;\n            }\n        }\n\n        // check range if specified\n        if (outOfRange(opts, token.value, numberEnd)) {\n            return 0;\n        }\n\n        return 1;\n    };\n}\n\n// =========================\n// Percentage\n//\n\n// \u00A75.5. Percentages: the <percentage> type\n// https://drafts.csswg.org/css-values-4/#percentages\nfunction percentage(token, getNextToken, opts) {\n    // ... corresponds to the <percentage-token> production\n    if (token === null || token.type !== Percentage) {\n        return 0;\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, token.value.length - 1)) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// =========================\n// Numeric\n//\n\n// https://drafts.csswg.org/css-values-4/#numbers\n// The value <zero> represents a literal number with the value 0. Expressions that merely\n// evaluate to a <number> with the value 0 (for example, calc(0)) do not match <zero>;\n// only literal <number-token>s do.\nfunction zero(next) {\n    if (typeof next !== 'function') {\n        next = function() {\n            return 0;\n        };\n    }\n\n    return function(token, getNextToken, opts) {\n        if (token !== null && token.type === NumberToken) {\n            if (Number(token.value) === 0) {\n                return 1;\n            }\n        }\n\n        return next(token, getNextToken, opts);\n    };\n}\n\n// \u00A7 5.3. Real Numbers: the <number> type\n// https://drafts.csswg.org/css-values-4/#numbers\n// Number values are denoted by <number>, and represent real numbers, possibly with a fractional component.\n// ... It corresponds to the <number-token> production\nfunction number(token, getNextToken, opts) {\n    if (token === null) {\n        return 0;\n    }\n\n    const numberEnd = consumeNumber(token.value, 0);\n    const isNumber = numberEnd === token.value.length;\n    if (!isNumber && !isPostfixIeHack(token.value, numberEnd)) {\n        return 0;\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, numberEnd)) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// \u00A75.2. Integers: the <integer> type\n// https://drafts.csswg.org/css-values-4/#integers\nfunction integer(token, getNextToken, opts) {\n    // ... corresponds to a subset of the <number-token> production\n    if (token === null || token.type !== NumberToken) {\n        return 0;\n    }\n\n    // The first digit of an integer may be immediately preceded by `-` or `+` to indicate the integer\u2019s sign.\n    let i = charCodeAt(token.value, 0) === 0x002B ||       // U+002B PLUS SIGN (+)\n            charCodeAt(token.value, 0) === 0x002D ? 1 : 0; // U+002D HYPHEN-MINUS (-)\n\n    // When written literally, an integer is one or more decimal digits 0 through 9 ...\n    for (; i < token.value.length; i++) {\n        if (!isDigit(charCodeAt(token.value, i))) {\n            return 0;\n        }\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, i)) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// token types\nexport const tokenTypes = {\n    'ident-token': tokenType(Ident),\n    'function-token': tokenType(FunctionToken),\n    'at-keyword-token': tokenType(AtKeyword),\n    'hash-token': tokenType(Hash),\n    'string-token': tokenType(StringToken),\n    'bad-string-token': tokenType(BadString),\n    'url-token': tokenType(Url),\n    'bad-url-token': tokenType(BadUrl),\n    'delim-token': tokenType(Delim),\n    'number-token': tokenType(NumberToken),\n    'percentage-token': tokenType(Percentage),\n    'dimension-token': tokenType(Dimension),\n    'whitespace-token': tokenType(WhiteSpace),\n    'CDO-token': tokenType(CDO),\n    'CDC-token': tokenType(CDC),\n    'colon-token': tokenType(Colon),\n    'semicolon-token': tokenType(Semicolon),\n    'comma-token': tokenType(Comma),\n    '[-token': tokenType(LeftSquareBracket),\n    ']-token': tokenType(RightSquareBracket),\n    '(-token': tokenType(LeftParenthesis),\n    ')-token': tokenType(RightParenthesis),\n    '{-token': tokenType(LeftCurlyBracket),\n    '}-token': tokenType(RightCurlyBracket)\n};\n\n// token production types\nexport const productionTypes = {\n    // token type aliases\n    'string': tokenType(StringToken),\n    'ident': tokenType(Ident),\n\n    // percentage\n    'percentage': calc(percentage),\n\n    // numeric\n    'zero': zero(),\n    'number': calc(number),\n    'integer': calc(integer),\n\n    // complex types\n    'custom-ident': customIdent,\n    'custom-property-name': customPropertyName,\n    'hex-color': hexColor,\n    'id-selector': idSelector, // element( <id-selector> )\n    'an-plus-b': anPlusB,\n    'urange': urange,\n    'declaration-value': declarationValue,\n    'any-value': anyValue\n};\n\nexport const unitGroups = [\n    'length',\n    'angle',\n    'time',\n    'frequency',\n    'resolution',\n    'flex',\n    'decibel',\n    'semitones'\n];\n\n// dimensions types depend on units set\nexport function createDemensionTypes(units) {\n    const {\n        angle,\n        decibel,\n        frequency,\n        flex,\n        length,\n        resolution,\n        semitones,\n        time\n    } = units || {};\n\n    return {\n        'dimension': calc(dimension(null)),\n        'angle': calc(dimension(angle)),\n        'decibel': calc(dimension(decibel)),\n        'frequency': calc(dimension(frequency)),\n        'flex': calc(dimension(flex)),\n        'length': calc(zero(dimension(length))),\n        'resolution': calc(dimension(resolution)),\n        'semitones': calc(dimension(semitones)),\n        'time': calc(dimension(time))\n    };\n}\n\nexport function createGenericTypes(units) {\n    return {\n        ...tokenTypes,\n        ...productionTypes,\n        ...createDemensionTypes(units)\n    };\n};\n", "export const length = [\n    // absolute length units https://www.w3.org/TR/css-values-3/#lengths\n    'cm', 'mm', 'q', 'in', 'pt', 'pc', 'px',\n    // font-relative length units https://drafts.csswg.org/css-values-4/#font-relative-lengths\n    'em', 'rem',\n    'ex', 'rex',\n    'cap', 'rcap',\n    'ch', 'rch',\n    'ic', 'ric',\n    'lh', 'rlh',\n    // viewport-percentage lengths https://drafts.csswg.org/css-values-4/#viewport-relative-lengths\n    'vw', 'svw', 'lvw', 'dvw',\n    'vh', 'svh', 'lvh', 'dvh',\n    'vi', 'svi', 'lvi', 'dvi',\n    'vb', 'svb', 'lvb', 'dvb',\n    'vmin', 'svmin', 'lvmin', 'dvmin',\n    'vmax', 'svmax', 'lvmax', 'dvmax',\n    // container relative lengths https://drafts.csswg.org/css-contain-3/#container-lengths\n    'cqw', 'cqh', 'cqi', 'cqb', 'cqmin', 'cqmax'\n];\nexport const angle = ['deg', 'grad', 'rad', 'turn'];    // https://www.w3.org/TR/css-values-3/#angles\nexport const time = ['s', 'ms'];                        // https://www.w3.org/TR/css-values-3/#time\nexport const frequency = ['hz', 'khz'];                 // https://www.w3.org/TR/css-values-3/#frequency\nexport const resolution = ['dpi', 'dpcm', 'dppx', 'x']; // https://www.w3.org/TR/css-values-3/#resolution\nexport const flex = ['fr'];                             // https://drafts.csswg.org/css-grid/#fr-unit\nexport const decibel = ['db'];                          // https://www.w3.org/TR/css3-speech/#mixing-props-voice-volume\nexport const semitones = ['st'];                        // https://www.w3.org/TR/css3-speech/#voice-props-voice-pitch\n", "import { createCustomError } from '../utils/create-custom-error.js';\n\nexport function SyntaxError(message, input, offset) {\n    return Object.assign(createCustomError('SyntaxError', message), {\n        input,\n        offset,\n        rawMessage: message,\n        message: message + '\\n' +\n            '  ' + input + '\\n' +\n            '--' + new Array((offset || input.length) + 1).join('-') + '^'\n    });\n};\n", "import { SyntaxError } from './SyntaxError.js';\n\nconst TAB = 9;\nconst N = 10;\nconst F = 12;\nconst R = 13;\nconst SPACE = 32;\n\nexport class Tokenizer {\n    constructor(str) {\n        this.str = str;\n        this.pos = 0;\n    }\n    charCodeAt(pos) {\n        return pos < this.str.length ? this.str.charCodeAt(pos) : 0;\n    }\n    charCode() {\n        return this.charCodeAt(this.pos);\n    }\n    nextCharCode() {\n        return this.charCodeAt(this.pos + 1);\n    }\n    nextNonWsCode(pos) {\n        return this.charCodeAt(this.findWsEnd(pos));\n    }\n    findWsEnd(pos) {\n        for (; pos < this.str.length; pos++) {\n            const code = this.str.charCodeAt(pos);\n            if (code !== R && code !== N && code !== F && code !== SPACE && code !== TAB) {\n                break;\n            }\n        }\n\n        return pos;\n    }\n    substringToPos(end) {\n        return this.str.substring(this.pos, this.pos = end);\n    }\n    eat(code) {\n        if (this.charCode() !== code) {\n            this.error('Expect `' + String.fromCharCode(code) + '`');\n        }\n\n        this.pos++;\n    }\n    peek() {\n        return this.pos < this.str.length ? this.str.charAt(this.pos++) : '';\n    }\n    error(message) {\n        throw new SyntaxError(message, this.str, this.pos);\n    }\n};\n", "import { Tokenizer } from './tokenizer.js';\n\nconst TAB = 9;\nconst N = 10;\nconst F = 12;\nconst R = 13;\nconst SPACE = 32;\nconst EXCLAMATIONMARK = 33;    // !\nconst NUMBERSIGN = 35;         // #\nconst AMPERSAND = 38;          // &\nconst APOSTROPHE = 39;         // '\nconst LEFTPARENTHESIS = 40;    // (\nconst RIGHTPARENTHESIS = 41;   // )\nconst ASTERISK = 42;           // *\nconst PLUSSIGN = 43;           // +\nconst COMMA = 44;              // ,\nconst HYPERMINUS = 45;         // -\nconst LESSTHANSIGN = 60;       // <\nconst GREATERTHANSIGN = 62;    // >\nconst QUESTIONMARK = 63;       // ?\nconst COMMERCIALAT = 64;       // @\nconst LEFTSQUAREBRACKET = 91;  // [\nconst RIGHTSQUAREBRACKET = 93; // ]\nconst LEFTCURLYBRACKET = 123;  // {\nconst VERTICALLINE = 124;      // |\nconst RIGHTCURLYBRACKET = 125; // }\nconst INFINITY = 8734;         // \u221E\nconst NAME_CHAR = new Uint8Array(128).map((_, idx) =>\n    /[a-zA-Z0-9\\-]/.test(String.fromCharCode(idx)) ? 1 : 0\n);\nconst COMBINATOR_PRECEDENCE = {\n    ' ': 1,\n    '&&': 2,\n    '||': 3,\n    '|': 4\n};\n\nfunction scanSpaces(tokenizer) {\n    return tokenizer.substringToPos(\n        tokenizer.findWsEnd(tokenizer.pos)\n    );\n}\n\nfunction scanWord(tokenizer) {\n    let end = tokenizer.pos;\n\n    for (; end < tokenizer.str.length; end++) {\n        const code = tokenizer.str.charCodeAt(end);\n        if (code >= 128 || NAME_CHAR[code] === 0) {\n            break;\n        }\n    }\n\n    if (tokenizer.pos === end) {\n        tokenizer.error('Expect a keyword');\n    }\n\n    return tokenizer.substringToPos(end);\n}\n\nfunction scanNumber(tokenizer) {\n    let end = tokenizer.pos;\n\n    for (; end < tokenizer.str.length; end++) {\n        const code = tokenizer.str.charCodeAt(end);\n        if (code < 48 || code > 57) {\n            break;\n        }\n    }\n\n    if (tokenizer.pos === end) {\n        tokenizer.error('Expect a number');\n    }\n\n    return tokenizer.substringToPos(end);\n}\n\nfunction scanString(tokenizer) {\n    const end = tokenizer.str.indexOf('\\'', tokenizer.pos + 1);\n\n    if (end === -1) {\n        tokenizer.pos = tokenizer.str.length;\n        tokenizer.error('Expect an apostrophe');\n    }\n\n    return tokenizer.substringToPos(end + 1);\n}\n\nfunction readMultiplierRange(tokenizer) {\n    let min = null;\n    let max = null;\n\n    tokenizer.eat(LEFTCURLYBRACKET);\n\n    min = scanNumber(tokenizer);\n\n    if (tokenizer.charCode() === COMMA) {\n        tokenizer.pos++;\n        if (tokenizer.charCode() !== RIGHTCURLYBRACKET) {\n            max = scanNumber(tokenizer);\n        }\n    } else {\n        max = min;\n    }\n\n    tokenizer.eat(RIGHTCURLYBRACKET);\n\n    return {\n        min: Number(min),\n        max: max ? Number(max) : 0\n    };\n}\n\nfunction readMultiplier(tokenizer) {\n    let range = null;\n    let comma = false;\n\n    switch (tokenizer.charCode()) {\n        case ASTERISK:\n            tokenizer.pos++;\n\n            range = {\n                min: 0,\n                max: 0\n            };\n\n            break;\n\n        case PLUSSIGN:\n            tokenizer.pos++;\n\n            range = {\n                min: 1,\n                max: 0\n            };\n\n            break;\n\n        case QUESTIONMARK:\n            tokenizer.pos++;\n\n            range = {\n                min: 0,\n                max: 1\n            };\n\n            break;\n\n        case NUMBERSIGN:\n            tokenizer.pos++;\n\n            comma = true;\n\n            if (tokenizer.charCode() === LEFTCURLYBRACKET) {\n                range = readMultiplierRange(tokenizer);\n            } else if (tokenizer.charCode() === QUESTIONMARK) {\n                // https://www.w3.org/TR/css-values-4/#component-multipliers\n                // > the # and ? multipliers may be stacked as #?\n                // In this case just treat \"#?\" as a single multiplier\n                // { min: 0, max: 0, comma: true }\n                tokenizer.pos++;\n                range = {\n                    min: 0,\n                    max: 0\n                };\n            } else {\n                range = {\n                    min: 1,\n                    max: 0\n                };\n            }\n\n            break;\n\n        case LEFTCURLYBRACKET:\n            range = readMultiplierRange(tokenizer);\n            break;\n\n        default:\n            return null;\n    }\n\n    return {\n        type: 'Multiplier',\n        comma,\n        min: range.min,\n        max: range.max,\n        term: null\n    };\n}\n\nfunction maybeMultiplied(tokenizer, node) {\n    const multiplier = readMultiplier(tokenizer);\n\n    if (multiplier !== null) {\n        multiplier.term = node;\n\n        // https://www.w3.org/TR/css-values-4/#component-multipliers\n        // > The + and # multipliers may be stacked as +#;\n        // Represent \"+#\" as nested multipliers:\n        // { ...<multiplier #>,\n        //   term: {\n        //     ...<multipler +>,\n        //     term: node\n        //   }\n        // }\n        if (tokenizer.charCode() === NUMBERSIGN &&\n            tokenizer.charCodeAt(tokenizer.pos - 1) === PLUSSIGN) {\n            return maybeMultiplied(tokenizer, multiplier);\n        }\n\n        return multiplier;\n    }\n\n    return node;\n}\n\nfunction maybeToken(tokenizer) {\n    const ch = tokenizer.peek();\n\n    if (ch === '') {\n        return null;\n    }\n\n    return {\n        type: 'Token',\n        value: ch\n    };\n}\n\nfunction readProperty(tokenizer) {\n    let name;\n\n    tokenizer.eat(LESSTHANSIGN);\n    tokenizer.eat(APOSTROPHE);\n\n    name = scanWord(tokenizer);\n\n    tokenizer.eat(APOSTROPHE);\n    tokenizer.eat(GREATERTHANSIGN);\n\n    return maybeMultiplied(tokenizer, {\n        type: 'Property',\n        name\n    });\n}\n\n// https://drafts.csswg.org/css-values-3/#numeric-ranges\n// 4.1. Range Restrictions and Range Definition Notation\n//\n// Range restrictions can be annotated in the numeric type notation using CSS bracketed\n// range notation\u2014[min,max]\u2014within the angle brackets, after the identifying keyword,\n// indicating a closed range between (and including) min and max.\n// For example, <integer [0, 10]> indicates an integer between 0 and 10, inclusive.\nfunction readTypeRange(tokenizer) {\n    // use null for Infinity to make AST format JSON serializable/deserializable\n    let min = null; // -Infinity\n    let max = null; // Infinity\n    let sign = 1;\n\n    tokenizer.eat(LEFTSQUAREBRACKET);\n\n    if (tokenizer.charCode() === HYPERMINUS) {\n        tokenizer.peek();\n        sign = -1;\n    }\n\n    if (sign == -1 && tokenizer.charCode() === INFINITY) {\n        tokenizer.peek();\n    } else {\n        min = sign * Number(scanNumber(tokenizer));\n\n        if (NAME_CHAR[tokenizer.charCode()] !== 0) {\n            min += scanWord(tokenizer);\n        }\n    }\n\n    scanSpaces(tokenizer);\n    tokenizer.eat(COMMA);\n    scanSpaces(tokenizer);\n\n    if (tokenizer.charCode() === INFINITY) {\n        tokenizer.peek();\n    } else {\n        sign = 1;\n\n        if (tokenizer.charCode() === HYPERMINUS) {\n            tokenizer.peek();\n            sign = -1;\n        }\n\n        max = sign * Number(scanNumber(tokenizer));\n\n        if (NAME_CHAR[tokenizer.charCode()] !== 0) {\n            max += scanWord(tokenizer);\n        }\n    }\n\n    tokenizer.eat(RIGHTSQUAREBRACKET);\n\n    return {\n        type: 'Range',\n        min,\n        max\n    };\n}\n\nfunction readType(tokenizer) {\n    let name;\n    let opts = null;\n\n    tokenizer.eat(LESSTHANSIGN);\n    name = scanWord(tokenizer);\n\n    if (tokenizer.charCode() === LEFTPARENTHESIS &&\n        tokenizer.nextCharCode() === RIGHTPARENTHESIS) {\n        tokenizer.pos += 2;\n        name += '()';\n    }\n\n    if (tokenizer.charCodeAt(tokenizer.findWsEnd(tokenizer.pos)) === LEFTSQUAREBRACKET) {\n        scanSpaces(tokenizer);\n        opts = readTypeRange(tokenizer);\n    }\n\n    tokenizer.eat(GREATERTHANSIGN);\n\n    return maybeMultiplied(tokenizer, {\n        type: 'Type',\n        name,\n        opts\n    });\n}\n\nfunction readKeywordOrFunction(tokenizer) {\n    const name = scanWord(tokenizer);\n\n    if (tokenizer.charCode() === LEFTPARENTHESIS) {\n        tokenizer.pos++;\n\n        return {\n            type: 'Function',\n            name\n        };\n    }\n\n    return maybeMultiplied(tokenizer, {\n        type: 'Keyword',\n        name\n    });\n}\n\nfunction regroupTerms(terms, combinators) {\n    function createGroup(terms, combinator) {\n        return {\n            type: 'Group',\n            terms,\n            combinator,\n            disallowEmpty: false,\n            explicit: false\n        };\n    }\n\n    let combinator;\n\n    combinators = Object.keys(combinators)\n        .sort((a, b) => COMBINATOR_PRECEDENCE[a] - COMBINATOR_PRECEDENCE[b]);\n\n    while (combinators.length > 0) {\n        combinator = combinators.shift();\n\n        let i = 0;\n        let subgroupStart = 0;\n\n        for (; i < terms.length; i++) {\n            const term = terms[i];\n\n            if (term.type === 'Combinator') {\n                if (term.value === combinator) {\n                    if (subgroupStart === -1) {\n                        subgroupStart = i - 1;\n                    }\n                    terms.splice(i, 1);\n                    i--;\n                } else {\n                    if (subgroupStart !== -1 && i - subgroupStart > 1) {\n                        terms.splice(\n                            subgroupStart,\n                            i - subgroupStart,\n                            createGroup(terms.slice(subgroupStart, i), combinator)\n                        );\n                        i = subgroupStart + 1;\n                    }\n                    subgroupStart = -1;\n                }\n            }\n        }\n\n        if (subgroupStart !== -1 && combinators.length) {\n            terms.splice(\n                subgroupStart,\n                i - subgroupStart,\n                createGroup(terms.slice(subgroupStart, i), combinator)\n            );\n        }\n    }\n\n    return combinator;\n}\n\nfunction readImplicitGroup(tokenizer) {\n    const terms = [];\n    const combinators = {};\n    let token;\n    let prevToken = null;\n    let prevTokenPos = tokenizer.pos;\n\n    while (token = peek(tokenizer)) {\n        if (token.type !== 'Spaces') {\n            if (token.type === 'Combinator') {\n                // check for combinator in group beginning and double combinator sequence\n                if (prevToken === null || prevToken.type === 'Combinator') {\n                    tokenizer.pos = prevTokenPos;\n                    tokenizer.error('Unexpected combinator');\n                }\n\n                combinators[token.value] = true;\n            } else if (prevToken !== null && prevToken.type !== 'Combinator') {\n                combinators[' '] = true;  // a b\n                terms.push({\n                    type: 'Combinator',\n                    value: ' '\n                });\n            }\n\n            terms.push(token);\n            prevToken = token;\n            prevTokenPos = tokenizer.pos;\n        }\n    }\n\n    // check for combinator in group ending\n    if (prevToken !== null && prevToken.type === 'Combinator') {\n        tokenizer.pos -= prevTokenPos;\n        tokenizer.error('Unexpected combinator');\n    }\n\n    return {\n        type: 'Group',\n        terms,\n        combinator: regroupTerms(terms, combinators) || ' ',\n        disallowEmpty: false,\n        explicit: false\n    };\n}\n\nfunction readGroup(tokenizer) {\n    let result;\n\n    tokenizer.eat(LEFTSQUAREBRACKET);\n    result = readImplicitGroup(tokenizer);\n    tokenizer.eat(RIGHTSQUAREBRACKET);\n\n    result.explicit = true;\n\n    if (tokenizer.charCode() === EXCLAMATIONMARK) {\n        tokenizer.pos++;\n        result.disallowEmpty = true;\n    }\n\n    return result;\n}\n\nfunction peek(tokenizer) {\n    let code = tokenizer.charCode();\n\n    if (code < 128 && NAME_CHAR[code] === 1) {\n        return readKeywordOrFunction(tokenizer);\n    }\n\n    switch (code) {\n        case RIGHTSQUAREBRACKET:\n            // don't eat, stop scan a group\n            break;\n\n        case LEFTSQUAREBRACKET:\n            return maybeMultiplied(tokenizer, readGroup(tokenizer));\n\n        case LESSTHANSIGN:\n            return tokenizer.nextCharCode() === APOSTROPHE\n                ? readProperty(tokenizer)\n                : readType(tokenizer);\n\n        case VERTICALLINE:\n            return {\n                type: 'Combinator',\n                value: tokenizer.substringToPos(\n                    tokenizer.pos + (tokenizer.nextCharCode() === VERTICALLINE ? 2 : 1)\n                )\n            };\n\n        case AMPERSAND:\n            tokenizer.pos++;\n            tokenizer.eat(AMPERSAND);\n\n            return {\n                type: 'Combinator',\n                value: '&&'\n            };\n\n        case COMMA:\n            tokenizer.pos++;\n            return {\n                type: 'Comma'\n            };\n\n        case APOSTROPHE:\n            return maybeMultiplied(tokenizer, {\n                type: 'String',\n                value: scanString(tokenizer)\n            });\n\n        case SPACE:\n        case TAB:\n        case N:\n        case R:\n        case F:\n            return {\n                type: 'Spaces',\n                value: scanSpaces(tokenizer)\n            };\n\n        case COMMERCIALAT:\n            code = tokenizer.nextCharCode();\n\n            if (code < 128 && NAME_CHAR[code] === 1) {\n                tokenizer.pos++;\n                return {\n                    type: 'AtKeyword',\n                    name: scanWord(tokenizer)\n                };\n            }\n\n            return maybeToken(tokenizer);\n\n        case ASTERISK:\n        case PLUSSIGN:\n        case QUESTIONMARK:\n        case NUMBERSIGN:\n        case EXCLAMATIONMARK:\n            // prohibited tokens (used as a multiplier start)\n            break;\n\n        case LEFTCURLYBRACKET:\n            // LEFTCURLYBRACKET is allowed since mdn/data uses it w/o quoting\n            // check next char isn't a number, because it's likely a disjoined multiplier\n            code = tokenizer.nextCharCode();\n\n            if (code < 48 || code > 57) {\n                return maybeToken(tokenizer);\n            }\n\n            break;\n\n        default:\n            return maybeToken(tokenizer);\n    }\n}\n\nexport function parse(source) {\n    const tokenizer = new Tokenizer(source);\n    const result = readImplicitGroup(tokenizer);\n\n    if (tokenizer.pos !== source.length) {\n        tokenizer.error('Unexpected input');\n    }\n\n    // reduce redundant groups with single group term\n    if (result.terms.length === 1 && result.terms[0].type === 'Group') {\n        return result.terms[0];\n    }\n\n    return result;\n};\n", "const noop = function() {};\n\nfunction ensureFunction(value) {\n    return typeof value === 'function' ? value : noop;\n}\n\nexport function walk(node, options, context) {\n    function walk(node) {\n        enter.call(context, node);\n\n        switch (node.type) {\n            case 'Group':\n                node.terms.forEach(walk);\n                break;\n\n            case 'Multiplier':\n                walk(node.term);\n                break;\n\n            case 'Type':\n            case 'Property':\n            case 'Keyword':\n            case 'AtKeyword':\n            case 'Function':\n            case 'String':\n            case 'Token':\n            case 'Comma':\n                break;\n\n            default:\n                throw new Error('Unknown type: ' + node.type);\n        }\n\n        leave.call(context, node);\n    }\n\n    let enter = noop;\n    let leave = noop;\n\n    if (typeof options === 'function') {\n        enter = options;\n    } else if (options) {\n        enter = ensureFunction(options.enter);\n        leave = ensureFunction(options.leave);\n    }\n\n    if (enter === noop && leave === noop) {\n        throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');\n    }\n\n    walk(node, context);\n};\n", "import { tokenize } from '../tokenizer/index.js';\n\nconst astToTokens = {\n    decorator(handlers) {\n        const tokens = [];\n        let curNode = null;\n\n        return {\n            ...handlers,\n            node(node) {\n                const tmp = curNode;\n                curNode = node;\n                handlers.node.call(this, node);\n                curNode = tmp;\n            },\n            emit(value, type, auto) {\n                tokens.push({\n                    type,\n                    value,\n                    node: auto ? null : curNode\n                });\n            },\n            result() {\n                return tokens;\n            }\n        };\n    }\n};\n\nfunction stringToTokens(str) {\n    const tokens = [];\n\n    tokenize(str, (type, start, end) =>\n        tokens.push({\n            type,\n            value: str.slice(start, end),\n            node: null\n        })\n    );\n\n    return tokens;\n}\n\nexport default function(value, syntax) {\n    if (typeof value === 'string') {\n        return stringToTokens(value);\n    }\n\n    return syntax.generate(value, astToTokens);\n};\n", "import { parse } from '../definition-syntax/parse.js';\n\nexport const MATCH = { type: 'Match' };\nexport const MISMATCH = { type: 'Mismatch' };\nexport const DISALLOW_EMPTY = { type: 'DisallowEmpty' };\n\nconst LEFTPARENTHESIS = 40;  // (\nconst RIGHTPARENTHESIS = 41; // )\n\nfunction createCondition(match, thenBranch, elseBranch) {\n    // reduce node count\n    if (thenBranch === MATCH && elseBranch === MISMATCH) {\n        return match;\n    }\n\n    if (match === MATCH && thenBranch === MATCH && elseBranch === MATCH) {\n        return match;\n    }\n\n    if (match.type === 'If' && match.else === MISMATCH && thenBranch === MATCH) {\n        thenBranch = match.then;\n        match = match.match;\n    }\n\n    return {\n        type: 'If',\n        match,\n        then: thenBranch,\n        else: elseBranch\n    };\n}\n\nfunction isFunctionType(name) {\n    return (\n        name.length > 2 &&\n        name.charCodeAt(name.length - 2) === LEFTPARENTHESIS &&\n        name.charCodeAt(name.length - 1) === RIGHTPARENTHESIS\n    );\n}\n\nfunction isEnumCapatible(term) {\n    return (\n        term.type === 'Keyword' ||\n        term.type === 'AtKeyword' ||\n        term.type === 'Function' ||\n        term.type === 'Type' && isFunctionType(term.name)\n    );\n}\n\nfunction buildGroupMatchGraph(combinator, terms, atLeastOneTermMatched) {\n    switch (combinator) {\n        case ' ': {\n            // Juxtaposing components means that all of them must occur, in the given order.\n            //\n            // a b c\n            // =\n            // match a\n            //   then match b\n            //     then match c\n            //       then MATCH\n            //       else MISMATCH\n            //     else MISMATCH\n            //   else MISMATCH\n            let result = MATCH;\n\n            for (let i = terms.length - 1; i >= 0; i--) {\n                const term = terms[i];\n\n                result = createCondition(\n                    term,\n                    result,\n                    MISMATCH\n                );\n            };\n\n            return result;\n        }\n\n        case '|': {\n            // A bar (|) separates two or more alternatives: exactly one of them must occur.\n            //\n            // a | b | c\n            // =\n            // match a\n            //   then MATCH\n            //   else match b\n            //     then MATCH\n            //     else match c\n            //       then MATCH\n            //       else MISMATCH\n\n            let result = MISMATCH;\n            let map = null;\n\n            for (let i = terms.length - 1; i >= 0; i--) {\n                let term = terms[i];\n\n                // reduce sequence of keywords into a Enum\n                if (isEnumCapatible(term)) {\n                    if (map === null && i > 0 && isEnumCapatible(terms[i - 1])) {\n                        map = Object.create(null);\n                        result = createCondition(\n                            {\n                                type: 'Enum',\n                                map\n                            },\n                            MATCH,\n                            result\n                        );\n                    }\n\n                    if (map !== null) {\n                        const key = (isFunctionType(term.name) ? term.name.slice(0, -1) : term.name).toLowerCase();\n                        if (key in map === false) {\n                            map[key] = term;\n                            continue;\n                        }\n                    }\n                }\n\n                map = null;\n\n                // create a new conditonal node\n                result = createCondition(\n                    term,\n                    MATCH,\n                    result\n                );\n            };\n\n            return result;\n        }\n\n        case '&&': {\n            // A double ampersand (&&) separates two or more components,\n            // all of which must occur, in any order.\n\n            // Use MatchOnce for groups with a large number of terms,\n            // since &&-groups produces at least N!-node trees\n            if (terms.length > 5) {\n                return {\n                    type: 'MatchOnce',\n                    terms,\n                    all: true\n                };\n            }\n\n            // Use a combination tree for groups with small number of terms\n            //\n            // a && b && c\n            // =\n            // match a\n            //   then [b && c]\n            //   else match b\n            //     then [a && c]\n            //     else match c\n            //       then [a && b]\n            //       else MISMATCH\n            //\n            // a && b\n            // =\n            // match a\n            //   then match b\n            //     then MATCH\n            //     else MISMATCH\n            //   else match b\n            //     then match a\n            //       then MATCH\n            //       else MISMATCH\n            //     else MISMATCH\n            let result = MISMATCH;\n\n            for (let i = terms.length - 1; i >= 0; i--) {\n                const term = terms[i];\n                let thenClause;\n\n                if (terms.length > 1) {\n                    thenClause = buildGroupMatchGraph(\n                        combinator,\n                        terms.filter(function(newGroupTerm) {\n                            return newGroupTerm !== term;\n                        }),\n                        false\n                    );\n                } else {\n                    thenClause = MATCH;\n                }\n\n                result = createCondition(\n                    term,\n                    thenClause,\n                    result\n                );\n            };\n\n            return result;\n        }\n\n        case '||': {\n            // A double bar (||) separates two or more options:\n            // one or more of them must occur, in any order.\n\n            // Use MatchOnce for groups with a large number of terms,\n            // since ||-groups produces at least N!-node trees\n            if (terms.length > 5) {\n                return {\n                    type: 'MatchOnce',\n                    terms,\n                    all: false\n                };\n            }\n\n            // Use a combination tree for groups with small number of terms\n            //\n            // a || b || c\n            // =\n            // match a\n            //   then [b || c]\n            //   else match b\n            //     then [a || c]\n            //     else match c\n            //       then [a || b]\n            //       else MISMATCH\n            //\n            // a || b\n            // =\n            // match a\n            //   then match b\n            //     then MATCH\n            //     else MATCH\n            //   else match b\n            //     then match a\n            //       then MATCH\n            //       else MATCH\n            //     else MISMATCH\n            let result = atLeastOneTermMatched ? MATCH : MISMATCH;\n\n            for (let i = terms.length - 1; i >= 0; i--) {\n                const term = terms[i];\n                let thenClause;\n\n                if (terms.length > 1) {\n                    thenClause = buildGroupMatchGraph(\n                        combinator,\n                        terms.filter(function(newGroupTerm) {\n                            return newGroupTerm !== term;\n                        }),\n                        true\n                    );\n                } else {\n                    thenClause = MATCH;\n                }\n\n                result = createCondition(\n                    term,\n                    thenClause,\n                    result\n                );\n            };\n\n            return result;\n        }\n    }\n}\n\nfunction buildMultiplierMatchGraph(node) {\n    let result = MATCH;\n    let matchTerm = buildMatchGraphInternal(node.term);\n\n    if (node.max === 0) {\n        // disable repeating of empty match to prevent infinite loop\n        matchTerm = createCondition(\n            matchTerm,\n            DISALLOW_EMPTY,\n            MISMATCH\n        );\n\n        // an occurrence count is not limited, make a cycle;\n        // to collect more terms on each following matching mismatch\n        result = createCondition(\n            matchTerm,\n            null, // will be a loop\n            MISMATCH\n        );\n\n        result.then = createCondition(\n            MATCH,\n            MATCH,\n            result // make a loop\n        );\n\n        if (node.comma) {\n            result.then.else = createCondition(\n                { type: 'Comma', syntax: node },\n                result,\n                MISMATCH\n            );\n        }\n    } else {\n        // create a match node chain for [min .. max] interval with optional matches\n        for (let i = node.min || 1; i <= node.max; i++) {\n            if (node.comma && result !== MATCH) {\n                result = createCondition(\n                    { type: 'Comma', syntax: node },\n                    result,\n                    MISMATCH\n                );\n            }\n\n            result = createCondition(\n                matchTerm,\n                createCondition(\n                    MATCH,\n                    MATCH,\n                    result\n                ),\n                MISMATCH\n            );\n        }\n    }\n\n    if (node.min === 0) {\n        // allow zero match\n        result = createCondition(\n            MATCH,\n            MATCH,\n            result\n        );\n    } else {\n        // create a match node chain to collect [0 ... min - 1] required matches\n        for (let i = 0; i < node.min - 1; i++) {\n            if (node.comma && result !== MATCH) {\n                result = createCondition(\n                    { type: 'Comma', syntax: node },\n                    result,\n                    MISMATCH\n                );\n            }\n\n            result = createCondition(\n                matchTerm,\n                result,\n                MISMATCH\n            );\n        }\n    }\n\n    return result;\n}\n\nfunction buildMatchGraphInternal(node) {\n    if (typeof node === 'function') {\n        return {\n            type: 'Generic',\n            fn: node\n        };\n    }\n\n    switch (node.type) {\n        case 'Group': {\n            let result = buildGroupMatchGraph(\n                node.combinator,\n                node.terms.map(buildMatchGraphInternal),\n                false\n            );\n\n            if (node.disallowEmpty) {\n                result = createCondition(\n                    result,\n                    DISALLOW_EMPTY,\n                    MISMATCH\n                );\n            }\n\n            return result;\n        }\n\n        case 'Multiplier':\n            return buildMultiplierMatchGraph(node);\n\n        case 'Type':\n        case 'Property':\n            return {\n                type: node.type,\n                name: node.name,\n                syntax: node\n            };\n\n        case 'Keyword':\n            return {\n                type: node.type,\n                name: node.name.toLowerCase(),\n                syntax: node\n            };\n\n        case 'AtKeyword':\n            return {\n                type: node.type,\n                name: '@' + node.name.toLowerCase(),\n                syntax: node\n            };\n\n        case 'Function':\n            return {\n                type: node.type,\n                name: node.name.toLowerCase() + '(',\n                syntax: node\n            };\n\n        case 'String':\n            // convert a one char length String to a Token\n            if (node.value.length === 3) {\n                return {\n                    type: 'Token',\n                    value: node.value.charAt(1),\n                    syntax: node\n                };\n            }\n\n            // otherwise use it as is\n            return {\n                type: node.type,\n                value: node.value.substr(1, node.value.length - 2).replace(/\\\\'/g, '\\''),\n                syntax: node\n            };\n\n        case 'Token':\n            return {\n                type: node.type,\n                value: node.value,\n                syntax: node\n            };\n\n        case 'Comma':\n            return {\n                type: node.type,\n                syntax: node\n            };\n\n        default:\n            throw new Error('Unknown node type:', node.type);\n    }\n}\n\nexport function buildMatchGraph(syntaxTree, ref) {\n    if (typeof syntaxTree === 'string') {\n        syntaxTree = parse(syntaxTree);\n    }\n\n    return {\n        type: 'MatchGraph',\n        match: buildMatchGraphInternal(syntaxTree),\n        syntax: ref || null,\n        source: syntaxTree\n    };\n}\n", "import { MATCH, MISMATCH, DISALLOW_EMPTY } from './match-graph.js';\nimport * as TYPE from '../tokenizer/types.js';\n\nconst { hasOwnProperty } = Object.prototype;\nconst STUB = 0;\nconst TOKEN = 1;\nconst OPEN_SYNTAX = 2;\nconst CLOSE_SYNTAX = 3;\n\nconst EXIT_REASON_MATCH = 'Match';\nconst EXIT_REASON_MISMATCH = 'Mismatch';\nconst EXIT_REASON_ITERATION_LIMIT = 'Maximum iteration number exceeded (please fill an issue on https://github.com/csstree/csstree/issues)';\n\nconst ITERATION_LIMIT = 15000;\nexport let totalIterationCount = 0;\n\nfunction reverseList(list) {\n    let prev = null;\n    let next = null;\n    let item = list;\n\n    while (item !== null) {\n        next = item.prev;\n        item.prev = prev;\n        prev = item;\n        item = next;\n    }\n\n    return prev;\n}\n\nfunction areStringsEqualCaseInsensitive(testStr, referenceStr) {\n    if (testStr.length !== referenceStr.length) {\n        return false;\n    }\n\n    for (let i = 0; i < testStr.length; i++) {\n        const referenceCode = referenceStr.charCodeAt(i);\n        let testCode = testStr.charCodeAt(i);\n\n        // testCode.toLowerCase() for U+0041 LATIN CAPITAL LETTER A (A) .. U+005A LATIN CAPITAL LETTER Z (Z).\n        if (testCode >= 0x0041 && testCode <= 0x005A) {\n            testCode = testCode | 32;\n        }\n\n        if (testCode !== referenceCode) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction isContextEdgeDelim(token) {\n    if (token.type !== TYPE.Delim) {\n        return false;\n    }\n\n    // Fix matching for unicode-range: U+30??, U+FF00-FF9F\n    // Probably we need to check out previous match instead\n    return token.value !== '?';\n}\n\nfunction isCommaContextStart(token) {\n    if (token === null) {\n        return true;\n    }\n\n    return (\n        token.type === TYPE.Comma ||\n        token.type === TYPE.Function ||\n        token.type === TYPE.LeftParenthesis ||\n        token.type === TYPE.LeftSquareBracket ||\n        token.type === TYPE.LeftCurlyBracket ||\n        isContextEdgeDelim(token)\n    );\n}\n\nfunction isCommaContextEnd(token) {\n    if (token === null) {\n        return true;\n    }\n\n    return (\n        token.type === TYPE.RightParenthesis ||\n        token.type === TYPE.RightSquareBracket ||\n        token.type === TYPE.RightCurlyBracket ||\n        (token.type === TYPE.Delim && token.value === '/')\n    );\n}\n\nfunction internalMatch(tokens, state, syntaxes) {\n    function moveToNextToken() {\n        do {\n            tokenIndex++;\n            token = tokenIndex < tokens.length ? tokens[tokenIndex] : null;\n        } while (token !== null && (token.type === TYPE.WhiteSpace || token.type === TYPE.Comment));\n    }\n\n    function getNextToken(offset) {\n        const nextIndex = tokenIndex + offset;\n\n        return nextIndex < tokens.length ? tokens[nextIndex] : null;\n    }\n\n    function stateSnapshotFromSyntax(nextState, prev) {\n        return {\n            nextState,\n            matchStack,\n            syntaxStack,\n            thenStack,\n            tokenIndex,\n            prev\n        };\n    }\n\n    function pushThenStack(nextState) {\n        thenStack = {\n            nextState,\n            matchStack,\n            syntaxStack,\n            prev: thenStack\n        };\n    }\n\n    function pushElseStack(nextState) {\n        elseStack = stateSnapshotFromSyntax(nextState, elseStack);\n    }\n\n    function addTokenToMatch() {\n        matchStack = {\n            type: TOKEN,\n            syntax: state.syntax,\n            token,\n            prev: matchStack\n        };\n\n        moveToNextToken();\n        syntaxStash = null;\n\n        if (tokenIndex > longestMatch) {\n            longestMatch = tokenIndex;\n        }\n    }\n\n    function openSyntax() {\n        syntaxStack = {\n            syntax: state.syntax,\n            opts: state.syntax.opts || (syntaxStack !== null && syntaxStack.opts) || null,\n            prev: syntaxStack\n        };\n\n        matchStack = {\n            type: OPEN_SYNTAX,\n            syntax: state.syntax,\n            token: matchStack.token,\n            prev: matchStack\n        };\n    }\n\n    function closeSyntax() {\n        if (matchStack.type === OPEN_SYNTAX) {\n            matchStack = matchStack.prev;\n        } else {\n            matchStack = {\n                type: CLOSE_SYNTAX,\n                syntax: syntaxStack.syntax,\n                token: matchStack.token,\n                prev: matchStack\n            };\n        }\n\n        syntaxStack = syntaxStack.prev;\n    }\n\n    let syntaxStack = null;\n    let thenStack = null;\n    let elseStack = null;\n\n    // null \u2013 stashing allowed, nothing stashed\n    // false \u2013 stashing disabled, nothing stashed\n    // anithing else \u2013 fail stashable syntaxes, some syntax stashed\n    let syntaxStash = null;\n\n    let iterationCount = 0; // count iterations and prevent infinite loop\n    let exitReason = null;\n\n    let token = null;\n    let tokenIndex = -1;\n    let longestMatch = 0;\n    let matchStack = {\n        type: STUB,\n        syntax: null,\n        token: null,\n        prev: null\n    };\n\n    moveToNextToken();\n\n    while (exitReason === null && ++iterationCount < ITERATION_LIMIT) {\n        // function mapList(list, fn) {\n        //     const result = [];\n        //     while (list) {\n        //         result.unshift(fn(list));\n        //         list = list.prev;\n        //     }\n        //     return result;\n        // }\n        // console.log('--\\n',\n        //     '#' + iterationCount,\n        //     require('util').inspect({\n        //         match: mapList(matchStack, x => x.type === TOKEN ? x.token && x.token.value : x.syntax ? ({ [OPEN_SYNTAX]: '<', [CLOSE_SYNTAX]: '</' }[x.type] || x.type) + '!' + x.syntax.name : null),\n        //         token: token && token.value,\n        //         tokenIndex,\n        //         syntax: syntax.type + (syntax.id ? ' #' + syntax.id : '')\n        //     }, { depth: null })\n        // );\n        switch (state.type) {\n            case 'Match':\n                if (thenStack === null) {\n                    // turn to MISMATCH when some tokens left unmatched\n                    if (token !== null) {\n                        // doesn't mismatch if just one token left and it's an IE hack\n                        if (tokenIndex !== tokens.length - 1 || (token.value !== '\\\\0' && token.value !== '\\\\9')) {\n                            state = MISMATCH;\n                            break;\n                        }\n                    }\n\n                    // break the main loop, return a result - MATCH\n                    exitReason = EXIT_REASON_MATCH;\n                    break;\n                }\n\n                // go to next syntax (`then` branch)\n                state = thenStack.nextState;\n\n                // check match is not empty\n                if (state === DISALLOW_EMPTY) {\n                    if (thenStack.matchStack === matchStack) {\n                        state = MISMATCH;\n                        break;\n                    } else {\n                        state = MATCH;\n                    }\n                }\n\n                // close syntax if needed\n                while (thenStack.syntaxStack !== syntaxStack) {\n                    closeSyntax();\n                }\n\n                // pop stack\n                thenStack = thenStack.prev;\n                break;\n\n            case 'Mismatch':\n                // when some syntax is stashed\n                if (syntaxStash !== null && syntaxStash !== false) {\n                    // there is no else branches or a branch reduce match stack\n                    if (elseStack === null || tokenIndex > elseStack.tokenIndex) {\n                        // restore state from the stash\n                        elseStack = syntaxStash;\n                        syntaxStash = false; // disable stashing\n                    }\n                } else if (elseStack === null) {\n                    // no else branches -> break the main loop\n                    // return a result - MISMATCH\n                    exitReason = EXIT_REASON_MISMATCH;\n                    break;\n                }\n\n                // go to next syntax (`else` branch)\n                state = elseStack.nextState;\n\n                // restore all the rest stack states\n                thenStack = elseStack.thenStack;\n                syntaxStack = elseStack.syntaxStack;\n                matchStack = elseStack.matchStack;\n                tokenIndex = elseStack.tokenIndex;\n                token = tokenIndex < tokens.length ? tokens[tokenIndex] : null;\n\n                // pop stack\n                elseStack = elseStack.prev;\n                break;\n\n            case 'MatchGraph':\n                state = state.match;\n                break;\n\n            case 'If':\n                // IMPORTANT: else stack push must go first,\n                // since it stores the state of thenStack before changes\n                if (state.else !== MISMATCH) {\n                    pushElseStack(state.else);\n                }\n\n                if (state.then !== MATCH) {\n                    pushThenStack(state.then);\n                }\n\n                state = state.match;\n                break;\n\n            case 'MatchOnce':\n                state = {\n                    type: 'MatchOnceBuffer',\n                    syntax: state,\n                    index: 0,\n                    mask: 0\n                };\n                break;\n\n            case 'MatchOnceBuffer': {\n                const terms = state.syntax.terms;\n\n                if (state.index === terms.length) {\n                    // no matches at all or it's required all terms to be matched\n                    if (state.mask === 0 || state.syntax.all) {\n                        state = MISMATCH;\n                        break;\n                    }\n\n                    // a partial match is ok\n                    state = MATCH;\n                    break;\n                }\n\n                // all terms are matched\n                if (state.mask === (1 << terms.length) - 1) {\n                    state = MATCH;\n                    break;\n                }\n\n                for (; state.index < terms.length; state.index++) {\n                    const matchFlag = 1 << state.index;\n\n                    if ((state.mask & matchFlag) === 0) {\n                        // IMPORTANT: else stack push must go first,\n                        // since it stores the state of thenStack before changes\n                        pushElseStack(state);\n                        pushThenStack({\n                            type: 'AddMatchOnce',\n                            syntax: state.syntax,\n                            mask: state.mask | matchFlag\n                        });\n\n                        // match\n                        state = terms[state.index++];\n                        break;\n                    }\n                }\n                break;\n            }\n\n            case 'AddMatchOnce':\n                state = {\n                    type: 'MatchOnceBuffer',\n                    syntax: state.syntax,\n                    index: 0,\n                    mask: state.mask\n                };\n                break;\n\n            case 'Enum':\n                if (token !== null) {\n                    let name = token.value.toLowerCase();\n\n                    // drop \\0 and \\9 hack from keyword name\n                    if (name.indexOf('\\\\') !== -1) {\n                        name = name.replace(/\\\\[09].*$/, '');\n                    }\n\n                    if (hasOwnProperty.call(state.map, name)) {\n                        state = state.map[name];\n                        break;\n                    }\n                }\n\n                state = MISMATCH;\n                break;\n\n            case 'Generic': {\n                const opts = syntaxStack !== null ? syntaxStack.opts : null;\n                const lastTokenIndex = tokenIndex + Math.floor(state.fn(token, getNextToken, opts));\n\n                if (!isNaN(lastTokenIndex) && lastTokenIndex > tokenIndex) {\n                    while (tokenIndex < lastTokenIndex) {\n                        addTokenToMatch();\n                    }\n\n                    state = MATCH;\n                } else {\n                    state = MISMATCH;\n                }\n\n                break;\n            }\n\n            case 'Type':\n            case 'Property': {\n                const syntaxDict = state.type === 'Type' ? 'types' : 'properties';\n                const dictSyntax = hasOwnProperty.call(syntaxes, syntaxDict) ? syntaxes[syntaxDict][state.name] : null;\n\n                if (!dictSyntax || !dictSyntax.match) {\n                    throw new Error(\n                        'Bad syntax reference: ' +\n                        (state.type === 'Type'\n                            ? '<' + state.name + '>'\n                            : '<\\'' + state.name + '\\'>')\n                    );\n                }\n\n                // stash a syntax for types with low priority\n                if (syntaxStash !== false && token !== null && state.type === 'Type') {\n                    const lowPriorityMatching =\n                        // https://drafts.csswg.org/css-values-4/#custom-idents\n                        // When parsing positionally-ambiguous keywords in a property value, a <custom-ident> production\n                        // can only claim the keyword if no other unfulfilled production can claim it.\n                        (state.name === 'custom-ident' && token.type === TYPE.Ident) ||\n\n                        // https://drafts.csswg.org/css-values-4/#lengths\n                        // ... if a `0` could be parsed as either a <number> or a <length> in a property (such as line-height),\n                        // it must parse as a <number>\n                        (state.name === 'length' && token.value === '0');\n\n                    if (lowPriorityMatching) {\n                        if (syntaxStash === null) {\n                            syntaxStash = stateSnapshotFromSyntax(state, elseStack);\n                        }\n\n                        state = MISMATCH;\n                        break;\n                    }\n                }\n\n                openSyntax();\n                state = dictSyntax.match;\n                break;\n            }\n\n            case 'Keyword': {\n                const name = state.name;\n\n                if (token !== null) {\n                    let keywordName = token.value;\n\n                    // drop \\0 and \\9 hack from keyword name\n                    if (keywordName.indexOf('\\\\') !== -1) {\n                        keywordName = keywordName.replace(/\\\\[09].*$/, '');\n                    }\n\n                    if (areStringsEqualCaseInsensitive(keywordName, name)) {\n                        addTokenToMatch();\n                        state = MATCH;\n                        break;\n                    }\n                }\n\n                state = MISMATCH;\n                break;\n            }\n\n            case 'AtKeyword':\n            case 'Function':\n                if (token !== null && areStringsEqualCaseInsensitive(token.value, state.name)) {\n                    addTokenToMatch();\n                    state = MATCH;\n                    break;\n                }\n\n                state = MISMATCH;\n                break;\n\n            case 'Token':\n                if (token !== null && token.value === state.value) {\n                    addTokenToMatch();\n                    state = MATCH;\n                    break;\n                }\n\n                state = MISMATCH;\n                break;\n\n            case 'Comma':\n                if (token !== null && token.type === TYPE.Comma) {\n                    if (isCommaContextStart(matchStack.token)) {\n                        state = MISMATCH;\n                    } else {\n                        addTokenToMatch();\n                        state = isCommaContextEnd(token) ? MISMATCH : MATCH;\n                    }\n                } else {\n                    state = isCommaContextStart(matchStack.token) || isCommaContextEnd(token) ? MATCH : MISMATCH;\n                }\n\n                break;\n\n            case 'String':\n                let string = '';\n                let lastTokenIndex = tokenIndex;\n\n                for (; lastTokenIndex < tokens.length && string.length < state.value.length; lastTokenIndex++) {\n                    string += tokens[lastTokenIndex].value;\n                }\n\n                if (areStringsEqualCaseInsensitive(string, state.value)) {\n                    while (tokenIndex < lastTokenIndex) {\n                        addTokenToMatch();\n                    }\n\n                    state = MATCH;\n                } else {\n                    state = MISMATCH;\n                }\n\n                break;\n\n            default:\n                throw new Error('Unknown node type: ' + state.type);\n        }\n    }\n\n    totalIterationCount += iterationCount;\n\n    switch (exitReason) {\n        case null:\n            console.warn('[csstree-match] BREAK after ' + ITERATION_LIMIT + ' iterations');\n            exitReason = EXIT_REASON_ITERATION_LIMIT;\n            matchStack = null;\n            break;\n\n        case EXIT_REASON_MATCH:\n            while (syntaxStack !== null) {\n                closeSyntax();\n            }\n            break;\n\n        default:\n            matchStack = null;\n    }\n\n    return {\n        tokens,\n        reason: exitReason,\n        iterations: iterationCount,\n        match: matchStack,\n        longestMatch\n    };\n}\n\nexport function matchAsList(tokens, matchGraph, syntaxes) {\n    const matchResult = internalMatch(tokens, matchGraph, syntaxes || {});\n\n    if (matchResult.match !== null) {\n        let item = reverseList(matchResult.match).prev;\n\n        matchResult.match = [];\n\n        while (item !== null) {\n            switch (item.type) {\n                case OPEN_SYNTAX:\n                case CLOSE_SYNTAX:\n                    matchResult.match.push({\n                        type: item.type,\n                        syntax: item.syntax\n                    });\n                    break;\n\n                default:\n                    matchResult.match.push({\n                        token: item.token.value,\n                        node: item.token.node\n                    });\n                    break;\n            }\n\n            item = item.prev;\n        }\n    }\n\n    return matchResult;\n}\n\nexport function matchAsTree(tokens, matchGraph, syntaxes) {\n    const matchResult = internalMatch(tokens, matchGraph, syntaxes || {});\n\n    if (matchResult.match === null) {\n        return matchResult;\n    }\n\n    let item = matchResult.match;\n    let host = matchResult.match = {\n        syntax: matchGraph.syntax || null,\n        match: []\n    };\n    const hostStack = [host];\n\n    // revert a list and start with 2nd item since 1st is a stub item\n    item = reverseList(item).prev;\n\n    // build a tree\n    while (item !== null) {\n        switch (item.type) {\n            case OPEN_SYNTAX:\n                host.match.push(host = {\n                    syntax: item.syntax,\n                    match: []\n                });\n                hostStack.push(host);\n                break;\n\n            case CLOSE_SYNTAX:\n                hostStack.pop();\n                host = hostStack[hostStack.length - 1];\n                break;\n\n            default:\n                host.match.push({\n                    syntax: item.syntax || null,\n                    token: item.token.value,\n                    node: item.token.node\n                });\n        }\n\n        item = item.prev;\n    }\n\n    return matchResult;\n}\n", "export function getTrace(node) {\n    function shouldPutToTrace(syntax) {\n        if (syntax === null) {\n            return false;\n        }\n\n        return (\n            syntax.type === 'Type' ||\n            syntax.type === 'Property' ||\n            syntax.type === 'Keyword'\n        );\n    }\n\n    function hasMatch(matchNode) {\n        if (Array.isArray(matchNode.match)) {\n            // use for-loop for better perfomance\n            for (let i = 0; i < matchNode.match.length; i++) {\n                if (hasMatch(matchNode.match[i])) {\n                    if (shouldPutToTrace(matchNode.syntax)) {\n                        result.unshift(matchNode.syntax);\n                    }\n\n                    return true;\n                }\n            }\n        } else if (matchNode.node === node) {\n            result = shouldPutToTrace(matchNode.syntax)\n                ? [matchNode.syntax]\n                : [];\n\n            return true;\n        }\n\n        return false;\n    }\n\n    let result = null;\n\n    if (this.matched !== null) {\n        hasMatch(this.matched);\n    }\n\n    return result;\n}\n\nexport function isType(node, type) {\n    return testNode(this, node, match => match.type === 'Type' && match.name === type);\n}\n\nexport function isProperty(node, property) {\n    return testNode(this, node, match => match.type === 'Property' && match.name === property);\n}\n\nexport function isKeyword(node) {\n    return testNode(this, node, match => match.type === 'Keyword');\n}\n\nfunction testNode(match, node, fn) {\n    const trace = getTrace.call(match, node);\n\n    if (trace === null) {\n        return false;\n    }\n\n    return trace.some(fn);\n}\n", "import { List } from '../utils/List.js';\n\nfunction getFirstMatchNode(matchNode) {\n    if ('node' in matchNode) {\n        return matchNode.node;\n    }\n\n    return getFirstMatchNode(matchNode.match[0]);\n}\n\nfunction getLastMatchNode(matchNode) {\n    if ('node' in matchNode) {\n        return matchNode.node;\n    }\n\n    return getLastMatchNode(matchNode.match[matchNode.match.length - 1]);\n}\n\nexport function matchFragments(lexer, ast, match, type, name) {\n    function findFragments(matchNode) {\n        if (matchNode.syntax !== null &&\n            matchNode.syntax.type === type &&\n            matchNode.syntax.name === name) {\n            const start = getFirstMatchNode(matchNode);\n            const end = getLastMatchNode(matchNode);\n\n            lexer.syntax.walk(ast, function(node, item, list) {\n                if (node === start) {\n                    const nodes = new List();\n\n                    do {\n                        nodes.appendData(item.data);\n\n                        if (item.data === end) {\n                            break;\n                        }\n\n                        item = item.next;\n                    } while (item !== null);\n\n                    fragments.push({\n                        parent: list,\n                        nodes\n                    });\n                }\n            });\n        }\n\n        if (Array.isArray(matchNode.match)) {\n            matchNode.match.forEach(findFragments);\n        }\n    }\n\n    const fragments = [];\n\n    if (match.matched !== null) {\n        findFragments(match.matched);\n    }\n\n    return fragments;\n}\n", "import { List } from '../utils/List.js';\n\nconst { hasOwnProperty } = Object.prototype;\n\nfunction isValidNumber(value) {\n    // Number.isInteger(value) && value >= 0\n    return (\n        typeof value === 'number' &&\n        isFinite(value) &&\n        Math.floor(value) === value &&\n        value >= 0\n    );\n}\n\nfunction isValidLocation(loc) {\n    return (\n        Boolean(loc) &&\n        isValidNumber(loc.offset) &&\n        isValidNumber(loc.line) &&\n        isValidNumber(loc.column)\n    );\n}\n\nfunction createNodeStructureChecker(type, fields) {\n    return function checkNode(node, warn) {\n        if (!node || node.constructor !== Object) {\n            return warn(node, 'Type of node should be an Object');\n        }\n\n        for (let key in node) {\n            let valid = true;\n\n            if (hasOwnProperty.call(node, key) === false) {\n                continue;\n            }\n\n            if (key === 'type') {\n                if (node.type !== type) {\n                    warn(node, 'Wrong node type `' + node.type + '`, expected `' + type + '`');\n                }\n            } else if (key === 'loc') {\n                if (node.loc === null) {\n                    continue;\n                } else if (node.loc && node.loc.constructor === Object) {\n                    if (typeof node.loc.source !== 'string') {\n                        key += '.source';\n                    } else if (!isValidLocation(node.loc.start)) {\n                        key += '.start';\n                    } else if (!isValidLocation(node.loc.end)) {\n                        key += '.end';\n                    } else {\n                        continue;\n                    }\n                }\n\n                valid = false;\n            } else if (fields.hasOwnProperty(key)) {\n                valid = false;\n\n                for (let i = 0; !valid && i < fields[key].length; i++) {\n                    const fieldType = fields[key][i];\n\n                    switch (fieldType) {\n                        case String:\n                            valid = typeof node[key] === 'string';\n                            break;\n\n                        case Boolean:\n                            valid = typeof node[key] === 'boolean';\n                            break;\n\n                        case null:\n                            valid = node[key] === null;\n                            break;\n\n                        default:\n                            if (typeof fieldType === 'string') {\n                                valid = node[key] && node[key].type === fieldType;\n                            } else if (Array.isArray(fieldType)) {\n                                valid = node[key] instanceof List;\n                            }\n                    }\n                }\n            } else {\n                warn(node, 'Unknown field `' + key + '` for ' + type + ' node type');\n            }\n\n            if (!valid) {\n                warn(node, 'Bad value for `' + type + '.' + key + '`');\n            }\n        }\n\n        for (const key in fields) {\n            if (hasOwnProperty.call(fields, key) &&\n                hasOwnProperty.call(node, key) === false) {\n                warn(node, 'Field `' + type + '.' + key + '` is missed');\n            }\n        }\n    };\n}\n\nfunction processStructure(name, nodeType) {\n    const structure = nodeType.structure;\n    const fields = {\n        type: String,\n        loc: true\n    };\n    const docs = {\n        type: '\"' + name + '\"'\n    };\n\n    for (const key in structure) {\n        if (hasOwnProperty.call(structure, key) === false) {\n            continue;\n        }\n\n        const docsTypes = [];\n        const fieldTypes = fields[key] = Array.isArray(structure[key])\n            ? structure[key].slice()\n            : [structure[key]];\n\n        for (let i = 0; i < fieldTypes.length; i++) {\n            const fieldType = fieldTypes[i];\n            if (fieldType === String || fieldType === Boolean) {\n                docsTypes.push(fieldType.name);\n            } else if (fieldType === null) {\n                docsTypes.push('null');\n            } else if (typeof fieldType === 'string') {\n                docsTypes.push('<' + fieldType + '>');\n            } else if (Array.isArray(fieldType)) {\n                docsTypes.push('List'); // TODO: use type enum\n            } else {\n                throw new Error('Wrong value `' + fieldType + '` in `' + name + '.' + key + '` structure definition');\n            }\n        }\n\n        docs[key] = docsTypes.join(' | ');\n    }\n\n    return {\n        docs,\n        check: createNodeStructureChecker(name, fields)\n    };\n}\n\nexport function getStructureFromConfig(config) {\n    const structure = {};\n\n    if (config.node) {\n        for (const name in config.node) {\n            if (hasOwnProperty.call(config.node, name)) {\n                const nodeType = config.node[name];\n\n                if (nodeType.structure) {\n                    structure[name] = processStructure(name, nodeType);\n                } else {\n                    throw new Error('Missed `structure` field in `' + name + '` node type definition');\n                }\n            }\n        }\n    }\n\n    return structure;\n};\n", "import { SyntaxReferenceError, SyntaxMatchError } from './error.js';\nimport * as names from '../utils/names.js';\nimport { cssWideKeywords } from './generic-const.js';\nimport { createGenericTypes } from './generic.js';\nimport * as units from './units.js';\nimport { parse, generate, walk } from '../definition-syntax/index.js';\nimport prepareTokens from './prepare-tokens.js';\nimport { buildMatchGraph } from './match-graph.js';\nimport { matchAsTree } from './match.js';\nimport * as trace from './trace.js';\nimport { matchFragments } from './search.js';\nimport { getStructureFromConfig } from './structure.js';\n\nconst cssWideKeywordsSyntax = buildMatchGraph(cssWideKeywords.join(' | '));\n\nfunction dumpMapSyntax(map, compact, syntaxAsAst) {\n    const result = {};\n\n    for (const name in map) {\n        if (map[name].syntax) {\n            result[name] = syntaxAsAst\n                ? map[name].syntax\n                : generate(map[name].syntax, { compact });\n        }\n    }\n\n    return result;\n}\n\nfunction dumpAtruleMapSyntax(map, compact, syntaxAsAst) {\n    const result = {};\n\n    for (const [name, atrule] of Object.entries(map)) {\n        result[name] = {\n            prelude: atrule.prelude && (\n                syntaxAsAst\n                    ? atrule.prelude.syntax\n                    : generate(atrule.prelude.syntax, { compact })\n            ),\n            descriptors: atrule.descriptors && dumpMapSyntax(atrule.descriptors, compact, syntaxAsAst)\n        };\n    }\n\n    return result;\n}\n\nfunction valueHasVar(tokens) {\n    for (let i = 0; i < tokens.length; i++) {\n        if (tokens[i].value.toLowerCase() === 'var(') {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction buildMatchResult(matched, error, iterations) {\n    return {\n        matched,\n        iterations,\n        error,\n        ...trace\n    };\n}\n\nfunction matchSyntax(lexer, syntax, value, useCssWideKeywords) {\n    const tokens = prepareTokens(value, lexer.syntax);\n    let result;\n\n    if (valueHasVar(tokens)) {\n        return buildMatchResult(null, new Error('Matching for a tree with var() is not supported'));\n    }\n\n    if (useCssWideKeywords) {\n        result = matchAsTree(tokens, lexer.cssWideKeywordsSyntax, lexer);\n    }\n\n    if (!useCssWideKeywords || !result.match) {\n        result = matchAsTree(tokens, syntax.match, lexer);\n        if (!result.match) {\n            return buildMatchResult(\n                null,\n                new SyntaxMatchError(result.reason, syntax.syntax, value, result),\n                result.iterations\n            );\n        }\n    }\n\n    return buildMatchResult(result.match, null, result.iterations);\n}\n\nexport class Lexer {\n    constructor(config, syntax, structure) {\n        this.cssWideKeywordsSyntax = cssWideKeywordsSyntax;\n        this.syntax = syntax;\n        this.generic = false;\n        this.units = { ...units };\n        this.atrules = Object.create(null);\n        this.properties = Object.create(null);\n        this.types = Object.create(null);\n        this.structure = structure || getStructureFromConfig(config);\n\n        if (config) {\n            if (config.units) {\n                for (const group of Object.keys(units)) {\n                    if (Array.isArray(config.units[group])) {\n                        this.units[group] = config.units[group];\n                    }\n                }\n            }\n\n            if (config.types) {\n                for (const name in config.types) {\n                    this.addType_(name, config.types[name]);\n                }\n            }\n\n            if (config.generic) {\n                this.generic = true;\n                for (const [name, value] of Object.entries(createGenericTypes(this.units))) {\n                    this.addType_(name, value);\n                }\n            }\n\n            if (config.atrules) {\n                for (const name in config.atrules) {\n                    this.addAtrule_(name, config.atrules[name]);\n                }\n            }\n\n            if (config.properties) {\n                for (const name in config.properties) {\n                    this.addProperty_(name, config.properties[name]);\n                }\n            }\n        }\n    }\n\n    checkStructure(ast) {\n        function collectWarning(node, message) {\n            warns.push({ node, message });\n        }\n\n        const structure = this.structure;\n        const warns = [];\n\n        this.syntax.walk(ast, function(node) {\n            if (structure.hasOwnProperty(node.type)) {\n                structure[node.type].check(node, collectWarning);\n            } else {\n                collectWarning(node, 'Unknown node type `' + node.type + '`');\n            }\n        });\n\n        return warns.length ? warns : false;\n    }\n\n    createDescriptor(syntax, type, name, parent = null) {\n        const ref = {\n            type,\n            name\n        };\n        const descriptor = {\n            type,\n            name,\n            parent,\n            serializable: typeof syntax === 'string' || (syntax && typeof syntax.type === 'string'),\n            syntax: null,\n            match: null\n        };\n\n        if (typeof syntax === 'function') {\n            descriptor.match = buildMatchGraph(syntax, ref);\n        } else {\n            if (typeof syntax === 'string') {\n                // lazy parsing on first access\n                Object.defineProperty(descriptor, 'syntax', {\n                    get() {\n                        Object.defineProperty(descriptor, 'syntax', {\n                            value: parse(syntax)\n                        });\n\n                        return descriptor.syntax;\n                    }\n                });\n            } else {\n                descriptor.syntax = syntax;\n            }\n\n            // lazy graph build on first access\n            Object.defineProperty(descriptor, 'match', {\n                get() {\n                    Object.defineProperty(descriptor, 'match', {\n                        value: buildMatchGraph(descriptor.syntax, ref)\n                    });\n\n                    return descriptor.match;\n                }\n            });\n        }\n\n        return descriptor;\n    }\n    addAtrule_(name, syntax) {\n        if (!syntax) {\n            return;\n        }\n\n        this.atrules[name] = {\n            type: 'Atrule',\n            name: name,\n            prelude: syntax.prelude ? this.createDescriptor(syntax.prelude, 'AtrulePrelude', name) : null,\n            descriptors: syntax.descriptors\n                ? Object.keys(syntax.descriptors).reduce(\n                    (map, descName) => {\n                        map[descName] = this.createDescriptor(syntax.descriptors[descName], 'AtruleDescriptor', descName, name);\n                        return map;\n                    },\n                    Object.create(null)\n                )\n                : null\n        };\n    }\n    addProperty_(name, syntax) {\n        if (!syntax) {\n            return;\n        }\n\n        this.properties[name] = this.createDescriptor(syntax, 'Property', name);\n    }\n    addType_(name, syntax) {\n        if (!syntax) {\n            return;\n        }\n\n        this.types[name] = this.createDescriptor(syntax, 'Type', name);\n    }\n\n    checkAtruleName(atruleName) {\n        if (!this.getAtrule(atruleName)) {\n            return new SyntaxReferenceError('Unknown at-rule', '@' + atruleName);\n        }\n    }\n    checkAtrulePrelude(atruleName, prelude) {\n        const error = this.checkAtruleName(atruleName);\n\n        if (error) {\n            return error;\n        }\n\n        const atrule = this.getAtrule(atruleName);\n\n        if (!atrule.prelude && prelude) {\n            return new SyntaxError('At-rule `@' + atruleName + '` should not contain a prelude');\n        }\n\n        if (atrule.prelude && !prelude) {\n            if (!matchSyntax(this, atrule.prelude, '', false).matched) {\n                return new SyntaxError('At-rule `@' + atruleName + '` should contain a prelude');\n            }\n        }\n    }\n    checkAtruleDescriptorName(atruleName, descriptorName) {\n        const error = this.checkAtruleName(atruleName);\n\n        if (error) {\n            return error;\n        }\n\n        const atrule = this.getAtrule(atruleName);\n        const descriptor = names.keyword(descriptorName);\n\n        if (!atrule.descriptors) {\n            return new SyntaxError('At-rule `@' + atruleName + '` has no known descriptors');\n        }\n\n        if (!atrule.descriptors[descriptor.name] &&\n            !atrule.descriptors[descriptor.basename]) {\n            return new SyntaxReferenceError('Unknown at-rule descriptor', descriptorName);\n        }\n    }\n    checkPropertyName(propertyName) {\n        if (!this.getProperty(propertyName)) {\n            return new SyntaxReferenceError('Unknown property', propertyName);\n        }\n    }\n\n    matchAtrulePrelude(atruleName, prelude) {\n        const error = this.checkAtrulePrelude(atruleName, prelude);\n\n        if (error) {\n            return buildMatchResult(null, error);\n        }\n\n        const atrule = this.getAtrule(atruleName);\n\n        if (!atrule.prelude) {\n            return buildMatchResult(null, null);\n        }\n\n        return matchSyntax(this, atrule.prelude, prelude || '', false);\n    }\n    matchAtruleDescriptor(atruleName, descriptorName, value) {\n        const error = this.checkAtruleDescriptorName(atruleName, descriptorName);\n\n        if (error) {\n            return buildMatchResult(null, error);\n        }\n\n        const atrule = this.getAtrule(atruleName);\n        const descriptor = names.keyword(descriptorName);\n\n        return matchSyntax(this, atrule.descriptors[descriptor.name] || atrule.descriptors[descriptor.basename], value, false);\n    }\n    matchDeclaration(node) {\n        if (node.type !== 'Declaration') {\n            return buildMatchResult(null, new Error('Not a Declaration node'));\n        }\n\n        return this.matchProperty(node.property, node.value);\n    }\n    matchProperty(propertyName, value) {\n        // don't match syntax for a custom property at the moment\n        if (names.property(propertyName).custom) {\n            return buildMatchResult(null, new Error('Lexer matching doesn\\'t applicable for custom properties'));\n        }\n\n        const error = this.checkPropertyName(propertyName);\n\n        if (error) {\n            return buildMatchResult(null, error);\n        }\n\n        return matchSyntax(this, this.getProperty(propertyName), value, true);\n    }\n    matchType(typeName, value) {\n        const typeSyntax = this.getType(typeName);\n\n        if (!typeSyntax) {\n            return buildMatchResult(null, new SyntaxReferenceError('Unknown type', typeName));\n        }\n\n        return matchSyntax(this, typeSyntax, value, false);\n    }\n    match(syntax, value) {\n        if (typeof syntax !== 'string' && (!syntax || !syntax.type)) {\n            return buildMatchResult(null, new SyntaxReferenceError('Bad syntax'));\n        }\n\n        if (typeof syntax === 'string' || !syntax.match) {\n            syntax = this.createDescriptor(syntax, 'Type', 'anonymous');\n        }\n\n        return matchSyntax(this, syntax, value, false);\n    }\n\n    findValueFragments(propertyName, value, type, name) {\n        return matchFragments(this, value, this.matchProperty(propertyName, value), type, name);\n    }\n    findDeclarationValueFragments(declaration, type, name) {\n        return matchFragments(this, declaration.value, this.matchDeclaration(declaration), type, name);\n    }\n    findAllFragments(ast, type, name) {\n        const result = [];\n\n        this.syntax.walk(ast, {\n            visit: 'Declaration',\n            enter: (declaration) => {\n                result.push.apply(result, this.findDeclarationValueFragments(declaration, type, name));\n            }\n        });\n\n        return result;\n    }\n\n    getAtrule(atruleName, fallbackBasename = true) {\n        const atrule = names.keyword(atruleName);\n        const atruleEntry = atrule.vendor && fallbackBasename\n            ? this.atrules[atrule.name] || this.atrules[atrule.basename]\n            : this.atrules[atrule.name];\n\n        return atruleEntry || null;\n    }\n    getAtrulePrelude(atruleName, fallbackBasename = true) {\n        const atrule = this.getAtrule(atruleName, fallbackBasename);\n\n        return atrule && atrule.prelude || null;\n    }\n    getAtruleDescriptor(atruleName, name) {\n        return this.atrules.hasOwnProperty(atruleName) && this.atrules.declarators\n            ? this.atrules[atruleName].declarators[name] || null\n            : null;\n    }\n    getProperty(propertyName, fallbackBasename = true) {\n        const property = names.property(propertyName);\n        const propertyEntry = property.vendor && fallbackBasename\n            ? this.properties[property.name] || this.properties[property.basename]\n            : this.properties[property.name];\n\n        return propertyEntry || null;\n    }\n    getType(name) {\n        return hasOwnProperty.call(this.types, name) ? this.types[name] : null;\n    }\n\n    validate() {\n        function validate(syntax, name, broken, descriptor) {\n            if (broken.has(name)) {\n                return broken.get(name);\n            }\n\n            broken.set(name, false);\n            if (descriptor.syntax !== null) {\n                walk(descriptor.syntax, function(node) {\n                    if (node.type !== 'Type' && node.type !== 'Property') {\n                        return;\n                    }\n\n                    const map = node.type === 'Type' ? syntax.types : syntax.properties;\n                    const brokenMap = node.type === 'Type' ? brokenTypes : brokenProperties;\n\n                    if (!hasOwnProperty.call(map, node.name) || validate(syntax, node.name, brokenMap, map[node.name])) {\n                        broken.set(name, true);\n                    }\n                }, this);\n            }\n        }\n\n        let brokenTypes = new Map();\n        let brokenProperties = new Map();\n\n        for (const key in this.types) {\n            validate(this, key, brokenTypes, this.types[key]);\n        }\n\n        for (const key in this.properties) {\n            validate(this, key, brokenProperties, this.properties[key]);\n        }\n\n        brokenTypes = [...brokenTypes.keys()].filter(name => brokenTypes.get(name));\n        brokenProperties = [...brokenProperties.keys()].filter(name => brokenProperties.get(name));\n\n        if (brokenTypes.length || brokenProperties.length) {\n            return {\n                types: brokenTypes,\n                properties: brokenProperties\n            };\n        }\n\n        return null;\n    }\n    dump(syntaxAsAst, pretty) {\n        return {\n            generic: this.generic,\n            units: this.units,\n            types: dumpMapSyntax(this.types, !pretty, syntaxAsAst),\n            properties: dumpMapSyntax(this.properties, !pretty, syntaxAsAst),\n            atrules: dumpAtruleMapSyntax(this.atrules, !pretty, syntaxAsAst)\n        };\n    }\n    toString() {\n        return JSON.stringify(this.dump());\n    }\n};\n", "function appendOrSet(a, b) {\n    if (typeof b === 'string' && /^\\s*\\|/.test(b)) {\n        return typeof a === 'string'\n            ? a + b\n            : b.replace(/^\\s*\\|\\s*/, '');\n    }\n\n    return b || null;\n}\n\nfunction sliceProps(obj, props) {\n    const result = Object.create(null);\n\n    for (const [key, value] of Object.entries(obj)) {\n        if (value) {\n            result[key] = {};\n            for (const prop of Object.keys(value)) {\n                if (props.includes(prop)) {\n                    result[key][prop] = value[prop];\n                }\n            }\n        }\n    }\n\n    return result;\n}\n\nexport default function mix(dest, src) {\n    const result = { ...dest };\n\n    for (const [prop, value] of Object.entries(src)) {\n        switch (prop) {\n            case 'generic':\n                result[prop] = Boolean(value);\n                break;\n\n            case 'units':\n                result[prop] = { ...dest[prop] };\n                for (const [name, patch] of Object.entries(value)) {\n                    result[prop][name] = Array.isArray(patch) ? patch : [];\n                }\n                break;\n\n            case 'atrules':\n                result[prop] = { ...dest[prop] };\n\n                for (const [name, atrule] of Object.entries(value)) {\n                    const exists = result[prop][name] || {};\n                    const current = result[prop][name] = {\n                        prelude: exists.prelude || null,\n                        descriptors: {\n                            ...exists.descriptors\n                        }\n                    };\n\n                    if (!atrule) {\n                        continue;\n                    }\n\n                    current.prelude = atrule.prelude\n                        ? appendOrSet(current.prelude, atrule.prelude)\n                        : current.prelude || null;\n\n                    for (const [descriptorName, descriptorValue] of Object.entries(atrule.descriptors || {})) {\n                        current.descriptors[descriptorName] = descriptorValue\n                            ? appendOrSet(current.descriptors[descriptorName], descriptorValue)\n                            : null;\n                    }\n\n                    if (!Object.keys(current.descriptors).length) {\n                        current.descriptors = null;\n                    }\n                }\n                break;\n\n            case 'types':\n            case 'properties':\n                result[prop] = { ...dest[prop] };\n                for (const [name, syntax] of Object.entries(value)) {\n                    result[prop][name] = appendOrSet(result[prop][name], syntax);\n                }\n                break;\n\n            case 'scope':\n                result[prop] = { ...dest[prop] };\n                for (const [name, props] of Object.entries(value)) {\n                    result[prop][name] = { ...result[prop][name], ...props };\n                }\n                break;\n\n            case 'parseContext':\n                result[prop] = {\n                    ...dest[prop],\n                    ...value\n                };\n                break;\n\n            case 'atrule':\n            case 'pseudo':\n                result[prop] = {\n                    ...dest[prop],\n                    ...sliceProps(value, ['parse']) };\n                break;\n\n            case 'node':\n                result[prop] = {\n                    ...dest[prop],\n                    ...sliceProps(value, ['name', 'structure', 'parse', 'generate', 'walkContext'])\n                };\n                break;\n        }\n    }\n\n    return result;\n}\n", "import { tokenize } from '../tokenizer/index.js';\nimport { createParser } from '../parser/create.js';\nimport { createGenerator } from '../generator/create.js';\nimport { createConvertor } from '../convertor/create.js';\nimport { createWalker } from '../walker/create.js';\nimport { Lexer } from '../lexer/Lexer.js';\nimport mix from './config/mix.js';\n\nfunction createSyntax(config) {\n    const parse = createParser(config);\n    const walk = createWalker(config);\n    const generate = createGenerator(config);\n    const { fromPlainObject, toPlainObject } = createConvertor(walk);\n\n    const syntax = {\n        lexer: null,\n        createLexer: config => new Lexer(config, syntax, syntax.lexer.structure),\n\n        tokenize,\n        parse,\n        generate,\n\n        walk,\n        find: walk.find,\n        findLast: walk.findLast,\n        findAll: walk.findAll,\n\n        fromPlainObject,\n        toPlainObject,\n\n        fork(extension) {\n            const base = mix({}, config); // copy of config\n\n            return createSyntax(\n                typeof extension === 'function'\n                    ? extension(base, Object.assign)\n                    : mix(base, extension)\n            );\n        }\n    };\n\n    syntax.lexer = new Lexer({\n        generic: true,\n        units: config.units,\n        types: config.types,\n        atrules: config.atrules,\n        properties: config.properties,\n        node: config.node\n    }, syntax);\n\n    return syntax;\n};\n\nexport default config => createSyntax(mix({}, config));\n", "export default {\n    \"generic\": true,\n    \"units\": {\n        \"angle\": [\n            \"deg\",\n            \"grad\",\n            \"rad\",\n            \"turn\"\n        ],\n        \"decibel\": [\n            \"db\"\n        ],\n        \"flex\": [\n            \"fr\"\n        ],\n        \"frequency\": [\n            \"hz\",\n            \"khz\"\n        ],\n        \"length\": [\n            \"cm\",\n            \"mm\",\n            \"q\",\n            \"in\",\n            \"pt\",\n            \"pc\",\n            \"px\",\n            \"em\",\n            \"rem\",\n            \"ex\",\n            \"rex\",\n            \"cap\",\n            \"rcap\",\n            \"ch\",\n            \"rch\",\n            \"ic\",\n            \"ric\",\n            \"lh\",\n            \"rlh\",\n            \"vw\",\n            \"svw\",\n            \"lvw\",\n            \"dvw\",\n            \"vh\",\n            \"svh\",\n            \"lvh\",\n            \"dvh\",\n            \"vi\",\n            \"svi\",\n            \"lvi\",\n            \"dvi\",\n            \"vb\",\n            \"svb\",\n            \"lvb\",\n            \"dvb\",\n            \"vmin\",\n            \"svmin\",\n            \"lvmin\",\n            \"dvmin\",\n            \"vmax\",\n            \"svmax\",\n            \"lvmax\",\n            \"dvmax\",\n            \"cqw\",\n            \"cqh\",\n            \"cqi\",\n            \"cqb\",\n            \"cqmin\",\n            \"cqmax\"\n        ],\n        \"resolution\": [\n            \"dpi\",\n            \"dpcm\",\n            \"dppx\",\n            \"x\"\n        ],\n        \"semitones\": [\n            \"st\"\n        ],\n        \"time\": [\n            \"s\",\n            \"ms\"\n        ]\n    },\n    \"types\": {\n        \"abs()\": \"abs( <calc-sum> )\",\n        \"absolute-size\": \"xx-small|x-small|small|medium|large|x-large|xx-large|xxx-large\",\n        \"acos()\": \"acos( <calc-sum> )\",\n        \"alpha-value\": \"<number>|<percentage>\",\n        \"angle-percentage\": \"<angle>|<percentage>\",\n        \"angular-color-hint\": \"<angle-percentage>\",\n        \"angular-color-stop\": \"<color>&&<color-stop-angle>?\",\n        \"angular-color-stop-list\": \"[<angular-color-stop> [, <angular-color-hint>]?]# , <angular-color-stop>\",\n        \"animateable-feature\": \"scroll-position|contents|<custom-ident>\",\n        \"asin()\": \"asin( <calc-sum> )\",\n        \"atan()\": \"atan( <calc-sum> )\",\n        \"atan2()\": \"atan2( <calc-sum> , <calc-sum> )\",\n        \"attachment\": \"scroll|fixed|local\",\n        \"attr()\": \"attr( <attr-name> <type-or-unit>? [, <attr-fallback>]? )\",\n        \"attr-matcher\": \"['~'|'|'|'^'|'$'|'*']? '='\",\n        \"attr-modifier\": \"i|s\",\n        \"attribute-selector\": \"'[' <wq-name> ']'|'[' <wq-name> <attr-matcher> [<string-token>|<ident-token>] <attr-modifier>? ']'\",\n        \"auto-repeat\": \"repeat( [auto-fill|auto-fit] , [<line-names>? <fixed-size>]+ <line-names>? )\",\n        \"auto-track-list\": \"[<line-names>? [<fixed-size>|<fixed-repeat>]]* <line-names>? <auto-repeat> [<line-names>? [<fixed-size>|<fixed-repeat>]]* <line-names>?\",\n        \"axis\": \"block|inline|vertical|horizontal\",\n        \"baseline-position\": \"[first|last]? baseline\",\n        \"basic-shape\": \"<inset()>|<circle()>|<ellipse()>|<polygon()>|<path()>\",\n        \"bg-image\": \"none|<image>\",\n        \"bg-layer\": \"<bg-image>||<bg-position> [/ <bg-size>]?||<repeat-style>||<attachment>||<box>||<box>\",\n        \"bg-position\": \"[[left|center|right|top|bottom|<length-percentage>]|[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]|[center|[left|right] <length-percentage>?]&&[center|[top|bottom] <length-percentage>?]]\",\n        \"bg-size\": \"[<length-percentage>|auto]{1,2}|cover|contain\",\n        \"blur()\": \"blur( <length> )\",\n        \"blend-mode\": \"normal|multiply|screen|overlay|darken|lighten|color-dodge|color-burn|hard-light|soft-light|difference|exclusion|hue|saturation|color|luminosity\",\n        \"box\": \"border-box|padding-box|content-box\",\n        \"brightness()\": \"brightness( <number-percentage> )\",\n        \"calc()\": \"calc( <calc-sum> )\",\n        \"calc-sum\": \"<calc-product> [['+'|'-'] <calc-product>]*\",\n        \"calc-product\": \"<calc-value> ['*' <calc-value>|'/' <number>]*\",\n        \"calc-value\": \"<number>|<dimension>|<percentage>|<calc-constant>|( <calc-sum> )\",\n        \"calc-constant\": \"e|pi|infinity|-infinity|NaN\",\n        \"cf-final-image\": \"<image>|<color>\",\n        \"cf-mixing-image\": \"<percentage>?&&<image>\",\n        \"circle()\": \"circle( [<shape-radius>]? [at <position>]? )\",\n        \"clamp()\": \"clamp( <calc-sum>#{3} )\",\n        \"class-selector\": \"'.' <ident-token>\",\n        \"clip-source\": \"<url>\",\n        \"color\": \"<rgb()>|<rgba()>|<hsl()>|<hsla()>|<hwb()>|<lab()>|<lch()>|<hex-color>|<named-color>|currentcolor|<deprecated-system-color>\",\n        \"color-stop\": \"<color-stop-length>|<color-stop-angle>\",\n        \"color-stop-angle\": \"<angle-percentage>{1,2}\",\n        \"color-stop-length\": \"<length-percentage>{1,2}\",\n        \"color-stop-list\": \"[<linear-color-stop> [, <linear-color-hint>]?]# , <linear-color-stop>\",\n        \"combinator\": \"'>'|'+'|'~'|['||']\",\n        \"common-lig-values\": \"[common-ligatures|no-common-ligatures]\",\n        \"compat-auto\": \"searchfield|textarea|push-button|slider-horizontal|checkbox|radio|square-button|menulist|listbox|meter|progress-bar|button\",\n        \"composite-style\": \"clear|copy|source-over|source-in|source-out|source-atop|destination-over|destination-in|destination-out|destination-atop|xor\",\n        \"compositing-operator\": \"add|subtract|intersect|exclude\",\n        \"compound-selector\": \"[<type-selector>? <subclass-selector>* [<pseudo-element-selector> <pseudo-class-selector>*]*]!\",\n        \"compound-selector-list\": \"<compound-selector>#\",\n        \"complex-selector\": \"<compound-selector> [<combinator>? <compound-selector>]*\",\n        \"complex-selector-list\": \"<complex-selector>#\",\n        \"conic-gradient()\": \"conic-gradient( [from <angle>]? [at <position>]? , <angular-color-stop-list> )\",\n        \"contextual-alt-values\": \"[contextual|no-contextual]\",\n        \"content-distribution\": \"space-between|space-around|space-evenly|stretch\",\n        \"content-list\": \"[<string>|contents|<image>|<counter>|<quote>|<target>|<leader()>|<attr()>]+\",\n        \"content-position\": \"center|start|end|flex-start|flex-end\",\n        \"content-replacement\": \"<image>\",\n        \"contrast()\": \"contrast( [<number-percentage>] )\",\n        \"cos()\": \"cos( <calc-sum> )\",\n        \"counter\": \"<counter()>|<counters()>\",\n        \"counter()\": \"counter( <counter-name> , <counter-style>? )\",\n        \"counter-name\": \"<custom-ident>\",\n        \"counter-style\": \"<counter-style-name>|symbols( )\",\n        \"counter-style-name\": \"<custom-ident>\",\n        \"counters()\": \"counters( <counter-name> , <string> , <counter-style>? )\",\n        \"cross-fade()\": \"cross-fade( <cf-mixing-image> , <cf-final-image>? )\",\n        \"cubic-bezier-timing-function\": \"ease|ease-in|ease-out|ease-in-out|cubic-bezier( <number [0,1]> , <number> , <number [0,1]> , <number> )\",\n        \"deprecated-system-color\": \"ActiveBorder|ActiveCaption|AppWorkspace|Background|ButtonFace|ButtonHighlight|ButtonShadow|ButtonText|CaptionText|GrayText|Highlight|HighlightText|InactiveBorder|InactiveCaption|InactiveCaptionText|InfoBackground|InfoText|Menu|MenuText|Scrollbar|ThreeDDarkShadow|ThreeDFace|ThreeDHighlight|ThreeDLightShadow|ThreeDShadow|Window|WindowFrame|WindowText\",\n        \"discretionary-lig-values\": \"[discretionary-ligatures|no-discretionary-ligatures]\",\n        \"display-box\": \"contents|none\",\n        \"display-inside\": \"flow|flow-root|table|flex|grid|ruby\",\n        \"display-internal\": \"table-row-group|table-header-group|table-footer-group|table-row|table-cell|table-column-group|table-column|table-caption|ruby-base|ruby-text|ruby-base-container|ruby-text-container\",\n        \"display-legacy\": \"inline-block|inline-list-item|inline-table|inline-flex|inline-grid\",\n        \"display-listitem\": \"<display-outside>?&&[flow|flow-root]?&&list-item\",\n        \"display-outside\": \"block|inline|run-in\",\n        \"drop-shadow()\": \"drop-shadow( <length>{2,3} <color>? )\",\n        \"east-asian-variant-values\": \"[jis78|jis83|jis90|jis04|simplified|traditional]\",\n        \"east-asian-width-values\": \"[full-width|proportional-width]\",\n        \"element()\": \"element( <custom-ident> , [first|start|last|first-except]? )|element( <id-selector> )\",\n        \"ellipse()\": \"ellipse( [<shape-radius>{2}]? [at <position>]? )\",\n        \"ending-shape\": \"circle|ellipse\",\n        \"env()\": \"env( <custom-ident> , <declaration-value>? )\",\n        \"exp()\": \"exp( <calc-sum> )\",\n        \"explicit-track-list\": \"[<line-names>? <track-size>]+ <line-names>?\",\n        \"family-name\": \"<string>|<custom-ident>+\",\n        \"feature-tag-value\": \"<string> [<integer>|on|off]?\",\n        \"feature-type\": \"@stylistic|@historical-forms|@styleset|@character-variant|@swash|@ornaments|@annotation\",\n        \"feature-value-block\": \"<feature-type> '{' <feature-value-declaration-list> '}'\",\n        \"feature-value-block-list\": \"<feature-value-block>+\",\n        \"feature-value-declaration\": \"<custom-ident> : <integer>+ ;\",\n        \"feature-value-declaration-list\": \"<feature-value-declaration>\",\n        \"feature-value-name\": \"<custom-ident>\",\n        \"fill-rule\": \"nonzero|evenodd\",\n        \"filter-function\": \"<blur()>|<brightness()>|<contrast()>|<drop-shadow()>|<grayscale()>|<hue-rotate()>|<invert()>|<opacity()>|<saturate()>|<sepia()>\",\n        \"filter-function-list\": \"[<filter-function>|<url>]+\",\n        \"final-bg-layer\": \"<'background-color'>||<bg-image>||<bg-position> [/ <bg-size>]?||<repeat-style>||<attachment>||<box>||<box>\",\n        \"fixed-breadth\": \"<length-percentage>\",\n        \"fixed-repeat\": \"repeat( [<integer [1,\u221E]>] , [<line-names>? <fixed-size>]+ <line-names>? )\",\n        \"fixed-size\": \"<fixed-breadth>|minmax( <fixed-breadth> , <track-breadth> )|minmax( <inflexible-breadth> , <fixed-breadth> )\",\n        \"font-stretch-absolute\": \"normal|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|<percentage>\",\n        \"font-variant-css21\": \"[normal|small-caps]\",\n        \"font-weight-absolute\": \"normal|bold|<number [1,1000]>\",\n        \"frequency-percentage\": \"<frequency>|<percentage>\",\n        \"general-enclosed\": \"[<function-token> <any-value> )]|( <ident> <any-value> )\",\n        \"generic-family\": \"serif|sans-serif|cursive|fantasy|monospace|-apple-system\",\n        \"generic-name\": \"serif|sans-serif|cursive|fantasy|monospace\",\n        \"geometry-box\": \"<shape-box>|fill-box|stroke-box|view-box\",\n        \"gradient\": \"<linear-gradient()>|<repeating-linear-gradient()>|<radial-gradient()>|<repeating-radial-gradient()>|<conic-gradient()>|<repeating-conic-gradient()>|<-legacy-gradient>\",\n        \"grayscale()\": \"grayscale( <number-percentage> )\",\n        \"grid-line\": \"auto|<custom-ident>|[<integer>&&<custom-ident>?]|[span&&[<integer>||<custom-ident>]]\",\n        \"historical-lig-values\": \"[historical-ligatures|no-historical-ligatures]\",\n        \"hsl()\": \"hsl( <hue> <percentage> <percentage> [/ <alpha-value>]? )|hsl( <hue> , <percentage> , <percentage> , <alpha-value>? )\",\n        \"hsla()\": \"hsla( <hue> <percentage> <percentage> [/ <alpha-value>]? )|hsla( <hue> , <percentage> , <percentage> , <alpha-value>? )\",\n        \"hue\": \"<number>|<angle>\",\n        \"hue-rotate()\": \"hue-rotate( <angle> )\",\n        \"hwb()\": \"hwb( [<hue>|none] [<percentage>|none] [<percentage>|none] [/ [<alpha-value>|none]]? )\",\n        \"hypot()\": \"hypot( <calc-sum># )\",\n        \"image\": \"<url>|<image()>|<image-set()>|<element()>|<paint()>|<cross-fade()>|<gradient>\",\n        \"image()\": \"image( <image-tags>? [<image-src>? , <color>?]! )\",\n        \"image-set()\": \"image-set( <image-set-option># )\",\n        \"image-set-option\": \"[<image>|<string>] [<resolution>||type( <string> )]\",\n        \"image-src\": \"<url>|<string>\",\n        \"image-tags\": \"ltr|rtl\",\n        \"inflexible-breadth\": \"<length-percentage>|min-content|max-content|auto\",\n        \"inset()\": \"inset( <length-percentage>{1,4} [round <'border-radius'>]? )\",\n        \"invert()\": \"invert( <number-percentage> )\",\n        \"keyframes-name\": \"<custom-ident>|<string>\",\n        \"keyframe-block\": \"<keyframe-selector># { <declaration-list> }\",\n        \"keyframe-block-list\": \"<keyframe-block>+\",\n        \"keyframe-selector\": \"from|to|<percentage>\",\n        \"lab()\": \"lab( [<percentage>|<number>|none] [<percentage>|<number>|none] [<percentage>|<number>|none] [/ [<alpha-value>|none]]? )\",\n        \"layer()\": \"layer( <layer-name> )\",\n        \"layer-name\": \"<ident> ['.' <ident>]*\",\n        \"lch()\": \"lch( [<percentage>|<number>|none] [<percentage>|<number>|none] [<hue>|none] [/ [<alpha-value>|none]]? )\",\n        \"leader()\": \"leader( <leader-type> )\",\n        \"leader-type\": \"dotted|solid|space|<string>\",\n        \"length-percentage\": \"<length>|<percentage>\",\n        \"line-names\": \"'[' <custom-ident>* ']'\",\n        \"line-name-list\": \"[<line-names>|<name-repeat>]+\",\n        \"line-style\": \"none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset\",\n        \"line-width\": \"<length>|thin|medium|thick\",\n        \"linear-color-hint\": \"<length-percentage>\",\n        \"linear-color-stop\": \"<color> <color-stop-length>?\",\n        \"linear-gradient()\": \"linear-gradient( [<angle>|to <side-or-corner>]? , <color-stop-list> )\",\n        \"log()\": \"log( <calc-sum> , <calc-sum>? )\",\n        \"mask-layer\": \"<mask-reference>||<position> [/ <bg-size>]?||<repeat-style>||<geometry-box>||[<geometry-box>|no-clip]||<compositing-operator>||<masking-mode>\",\n        \"mask-position\": \"[<length-percentage>|left|center|right] [<length-percentage>|top|center|bottom]?\",\n        \"mask-reference\": \"none|<image>|<mask-source>\",\n        \"mask-source\": \"<url>\",\n        \"masking-mode\": \"alpha|luminance|match-source\",\n        \"matrix()\": \"matrix( <number>#{6} )\",\n        \"matrix3d()\": \"matrix3d( <number>#{16} )\",\n        \"max()\": \"max( <calc-sum># )\",\n        \"media-and\": \"<media-in-parens> [and <media-in-parens>]+\",\n        \"media-condition\": \"<media-not>|<media-and>|<media-or>|<media-in-parens>\",\n        \"media-condition-without-or\": \"<media-not>|<media-and>|<media-in-parens>\",\n        \"media-feature\": \"( [<mf-plain>|<mf-boolean>|<mf-range>] )\",\n        \"media-in-parens\": \"( <media-condition> )|<media-feature>|<general-enclosed>\",\n        \"media-not\": \"not <media-in-parens>\",\n        \"media-or\": \"<media-in-parens> [or <media-in-parens>]+\",\n        \"media-query\": \"<media-condition>|[not|only]? <media-type> [and <media-condition-without-or>]?\",\n        \"media-query-list\": \"<media-query>#\",\n        \"media-type\": \"<ident>\",\n        \"mf-boolean\": \"<mf-name>\",\n        \"mf-name\": \"<ident>\",\n        \"mf-plain\": \"<mf-name> : <mf-value>\",\n        \"mf-range\": \"<mf-name> ['<'|'>']? '='? <mf-value>|<mf-value> ['<'|'>']? '='? <mf-name>|<mf-value> '<' '='? <mf-name> '<' '='? <mf-value>|<mf-value> '>' '='? <mf-name> '>' '='? <mf-value>\",\n        \"mf-value\": \"<number>|<dimension>|<ident>|<ratio>\",\n        \"min()\": \"min( <calc-sum># )\",\n        \"minmax()\": \"minmax( [<length-percentage>|min-content|max-content|auto] , [<length-percentage>|<flex>|min-content|max-content|auto] )\",\n        \"mod()\": \"mod( <calc-sum> , <calc-sum> )\",\n        \"name-repeat\": \"repeat( [<integer [1,\u221E]>|auto-fill] , <line-names>+ )\",\n        \"named-color\": \"transparent|aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|rebeccapurple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen|<-non-standard-color>\",\n        \"namespace-prefix\": \"<ident>\",\n        \"ns-prefix\": \"[<ident-token>|'*']? '|'\",\n        \"number-percentage\": \"<number>|<percentage>\",\n        \"numeric-figure-values\": \"[lining-nums|oldstyle-nums]\",\n        \"numeric-fraction-values\": \"[diagonal-fractions|stacked-fractions]\",\n        \"numeric-spacing-values\": \"[proportional-nums|tabular-nums]\",\n        \"nth\": \"<an-plus-b>|even|odd\",\n        \"opacity()\": \"opacity( [<number-percentage>] )\",\n        \"overflow-position\": \"unsafe|safe\",\n        \"outline-radius\": \"<length>|<percentage>\",\n        \"page-body\": \"<declaration>? [; <page-body>]?|<page-margin-box> <page-body>\",\n        \"page-margin-box\": \"<page-margin-box-type> '{' <declaration-list> '}'\",\n        \"page-margin-box-type\": \"@top-left-corner|@top-left|@top-center|@top-right|@top-right-corner|@bottom-left-corner|@bottom-left|@bottom-center|@bottom-right|@bottom-right-corner|@left-top|@left-middle|@left-bottom|@right-top|@right-middle|@right-bottom\",\n        \"page-selector-list\": \"[<page-selector>#]?\",\n        \"page-selector\": \"<pseudo-page>+|<ident> <pseudo-page>*\",\n        \"page-size\": \"A5|A4|A3|B5|B4|JIS-B5|JIS-B4|letter|legal|ledger\",\n        \"path()\": \"path( [<fill-rule> ,]? <string> )\",\n        \"paint()\": \"paint( <ident> , <declaration-value>? )\",\n        \"perspective()\": \"perspective( [<length [0,\u221E]>|none] )\",\n        \"polygon()\": \"polygon( <fill-rule>? , [<length-percentage> <length-percentage>]# )\",\n        \"position\": \"[[left|center|right]||[top|center|bottom]|[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]?|[[left|right] <length-percentage>]&&[[top|bottom] <length-percentage>]]\",\n        \"pow()\": \"pow( <calc-sum> , <calc-sum> )\",\n        \"pseudo-class-selector\": \"':' <ident-token>|':' <function-token> <any-value> ')'\",\n        \"pseudo-element-selector\": \"':' <pseudo-class-selector>\",\n        \"pseudo-page\": \": [left|right|first|blank]\",\n        \"quote\": \"open-quote|close-quote|no-open-quote|no-close-quote\",\n        \"radial-gradient()\": \"radial-gradient( [<ending-shape>||<size>]? [at <position>]? , <color-stop-list> )\",\n        \"ratio\": \"<number [0,\u221E]> [/ <number [0,\u221E]>]?\",\n        \"relative-selector\": \"<combinator>? <complex-selector>\",\n        \"relative-selector-list\": \"<relative-selector>#\",\n        \"relative-size\": \"larger|smaller\",\n        \"rem()\": \"rem( <calc-sum> , <calc-sum> )\",\n        \"repeat-style\": \"repeat-x|repeat-y|[repeat|space|round|no-repeat]{1,2}\",\n        \"repeating-conic-gradient()\": \"repeating-conic-gradient( [from <angle>]? [at <position>]? , <angular-color-stop-list> )\",\n        \"repeating-linear-gradient()\": \"repeating-linear-gradient( [<angle>|to <side-or-corner>]? , <color-stop-list> )\",\n        \"repeating-radial-gradient()\": \"repeating-radial-gradient( [<ending-shape>||<size>]? [at <position>]? , <color-stop-list> )\",\n        \"reversed-counter-name\": \"reversed( <counter-name> )\",\n        \"rgb()\": \"rgb( <percentage>{3} [/ <alpha-value>]? )|rgb( <number>{3} [/ <alpha-value>]? )|rgb( <percentage>#{3} , <alpha-value>? )|rgb( <number>#{3} , <alpha-value>? )\",\n        \"rgba()\": \"rgba( <percentage>{3} [/ <alpha-value>]? )|rgba( <number>{3} [/ <alpha-value>]? )|rgba( <percentage>#{3} , <alpha-value>? )|rgba( <number>#{3} , <alpha-value>? )\",\n        \"rotate()\": \"rotate( [<angle>|<zero>] )\",\n        \"rotate3d()\": \"rotate3d( <number> , <number> , <number> , [<angle>|<zero>] )\",\n        \"rotateX()\": \"rotateX( [<angle>|<zero>] )\",\n        \"rotateY()\": \"rotateY( [<angle>|<zero>] )\",\n        \"rotateZ()\": \"rotateZ( [<angle>|<zero>] )\",\n        \"round()\": \"round( <rounding-strategy>? , <calc-sum> , <calc-sum> )\",\n        \"rounding-strategy\": \"nearest|up|down|to-zero\",\n        \"saturate()\": \"saturate( <number-percentage> )\",\n        \"scale()\": \"scale( [<number>|<percentage>]#{1,2} )\",\n        \"scale3d()\": \"scale3d( [<number>|<percentage>]#{3} )\",\n        \"scaleX()\": \"scaleX( [<number>|<percentage>] )\",\n        \"scaleY()\": \"scaleY( [<number>|<percentage>] )\",\n        \"scaleZ()\": \"scaleZ( [<number>|<percentage>] )\",\n        \"scroller\": \"root|nearest\",\n        \"self-position\": \"center|start|end|self-start|self-end|flex-start|flex-end\",\n        \"shape-radius\": \"<length-percentage>|closest-side|farthest-side\",\n        \"sign()\": \"sign( <calc-sum> )\",\n        \"skew()\": \"skew( [<angle>|<zero>] , [<angle>|<zero>]? )\",\n        \"skewX()\": \"skewX( [<angle>|<zero>] )\",\n        \"skewY()\": \"skewY( [<angle>|<zero>] )\",\n        \"sepia()\": \"sepia( <number-percentage> )\",\n        \"shadow\": \"inset?&&<length>{2,4}&&<color>?\",\n        \"shadow-t\": \"[<length>{2,3}&&<color>?]\",\n        \"shape\": \"rect( <top> , <right> , <bottom> , <left> )|rect( <top> <right> <bottom> <left> )\",\n        \"shape-box\": \"<box>|margin-box\",\n        \"side-or-corner\": \"[left|right]||[top|bottom]\",\n        \"sin()\": \"sin( <calc-sum> )\",\n        \"single-animation\": \"<time>||<easing-function>||<time>||<single-animation-iteration-count>||<single-animation-direction>||<single-animation-fill-mode>||<single-animation-play-state>||[none|<keyframes-name>]\",\n        \"single-animation-direction\": \"normal|reverse|alternate|alternate-reverse\",\n        \"single-animation-fill-mode\": \"none|forwards|backwards|both\",\n        \"single-animation-iteration-count\": \"infinite|<number>\",\n        \"single-animation-play-state\": \"running|paused\",\n        \"single-animation-timeline\": \"auto|none|<timeline-name>|scroll( <axis>? <scroller>? )\",\n        \"single-transition\": \"[none|<single-transition-property>]||<time>||<easing-function>||<time>\",\n        \"single-transition-property\": \"all|<custom-ident>\",\n        \"size\": \"closest-side|farthest-side|closest-corner|farthest-corner|<length>|<length-percentage>{2}\",\n        \"sqrt()\": \"sqrt( <calc-sum> )\",\n        \"step-position\": \"jump-start|jump-end|jump-none|jump-both|start|end\",\n        \"step-timing-function\": \"step-start|step-end|steps( <integer> [, <step-position>]? )\",\n        \"subclass-selector\": \"<id-selector>|<class-selector>|<attribute-selector>|<pseudo-class-selector>\",\n        \"supports-condition\": \"not <supports-in-parens>|<supports-in-parens> [and <supports-in-parens>]*|<supports-in-parens> [or <supports-in-parens>]*\",\n        \"supports-in-parens\": \"( <supports-condition> )|<supports-feature>|<general-enclosed>\",\n        \"supports-feature\": \"<supports-decl>|<supports-selector-fn>\",\n        \"supports-decl\": \"( <declaration> )\",\n        \"supports-selector-fn\": \"selector( <complex-selector> )\",\n        \"symbol\": \"<string>|<image>|<custom-ident>\",\n        \"tan()\": \"tan( <calc-sum> )\",\n        \"target\": \"<target-counter()>|<target-counters()>|<target-text()>\",\n        \"target-counter()\": \"target-counter( [<string>|<url>] , <custom-ident> , <counter-style>? )\",\n        \"target-counters()\": \"target-counters( [<string>|<url>] , <custom-ident> , <string> , <counter-style>? )\",\n        \"target-text()\": \"target-text( [<string>|<url>] , [content|before|after|first-letter]? )\",\n        \"time-percentage\": \"<time>|<percentage>\",\n        \"timeline-name\": \"<custom-ident>|<string>\",\n        \"easing-function\": \"linear|<cubic-bezier-timing-function>|<step-timing-function>\",\n        \"track-breadth\": \"<length-percentage>|<flex>|min-content|max-content|auto\",\n        \"track-list\": \"[<line-names>? [<track-size>|<track-repeat>]]+ <line-names>?\",\n        \"track-repeat\": \"repeat( [<integer [1,\u221E]>] , [<line-names>? <track-size>]+ <line-names>? )\",\n        \"track-size\": \"<track-breadth>|minmax( <inflexible-breadth> , <track-breadth> )|fit-content( <length-percentage> )\",\n        \"transform-function\": \"<matrix()>|<translate()>|<translateX()>|<translateY()>|<scale()>|<scaleX()>|<scaleY()>|<rotate()>|<skew()>|<skewX()>|<skewY()>|<matrix3d()>|<translate3d()>|<translateZ()>|<scale3d()>|<scaleZ()>|<rotate3d()>|<rotateX()>|<rotateY()>|<rotateZ()>|<perspective()>\",\n        \"transform-list\": \"<transform-function>+\",\n        \"translate()\": \"translate( <length-percentage> , <length-percentage>? )\",\n        \"translate3d()\": \"translate3d( <length-percentage> , <length-percentage> , <length> )\",\n        \"translateX()\": \"translateX( <length-percentage> )\",\n        \"translateY()\": \"translateY( <length-percentage> )\",\n        \"translateZ()\": \"translateZ( <length> )\",\n        \"type-or-unit\": \"string|color|url|integer|number|length|angle|time|frequency|cap|ch|em|ex|ic|lh|rlh|rem|vb|vi|vw|vh|vmin|vmax|mm|Q|cm|in|pt|pc|px|deg|grad|rad|turn|ms|s|Hz|kHz|%\",\n        \"type-selector\": \"<wq-name>|<ns-prefix>? '*'\",\n        \"var()\": \"var( <custom-property-name> , <declaration-value>? )\",\n        \"viewport-length\": \"auto|<length-percentage>\",\n        \"visual-box\": \"content-box|padding-box|border-box\",\n        \"wq-name\": \"<ns-prefix>? <ident-token>\",\n        \"-legacy-gradient\": \"<-webkit-gradient()>|<-legacy-linear-gradient>|<-legacy-repeating-linear-gradient>|<-legacy-radial-gradient>|<-legacy-repeating-radial-gradient>\",\n        \"-legacy-linear-gradient\": \"-moz-linear-gradient( <-legacy-linear-gradient-arguments> )|-webkit-linear-gradient( <-legacy-linear-gradient-arguments> )|-o-linear-gradient( <-legacy-linear-gradient-arguments> )\",\n        \"-legacy-repeating-linear-gradient\": \"-moz-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )|-webkit-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )|-o-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )\",\n        \"-legacy-linear-gradient-arguments\": \"[<angle>|<side-or-corner>]? , <color-stop-list>\",\n        \"-legacy-radial-gradient\": \"-moz-radial-gradient( <-legacy-radial-gradient-arguments> )|-webkit-radial-gradient( <-legacy-radial-gradient-arguments> )|-o-radial-gradient( <-legacy-radial-gradient-arguments> )\",\n        \"-legacy-repeating-radial-gradient\": \"-moz-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )|-webkit-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )|-o-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )\",\n        \"-legacy-radial-gradient-arguments\": \"[<position> ,]? [[[<-legacy-radial-gradient-shape>||<-legacy-radial-gradient-size>]|[<length>|<percentage>]{2}] ,]? <color-stop-list>\",\n        \"-legacy-radial-gradient-size\": \"closest-side|closest-corner|farthest-side|farthest-corner|contain|cover\",\n        \"-legacy-radial-gradient-shape\": \"circle|ellipse\",\n        \"-non-standard-font\": \"-apple-system-body|-apple-system-headline|-apple-system-subheadline|-apple-system-caption1|-apple-system-caption2|-apple-system-footnote|-apple-system-short-body|-apple-system-short-headline|-apple-system-short-subheadline|-apple-system-short-caption1|-apple-system-short-footnote|-apple-system-tall-body\",\n        \"-non-standard-color\": \"-moz-ButtonDefault|-moz-ButtonHoverFace|-moz-ButtonHoverText|-moz-CellHighlight|-moz-CellHighlightText|-moz-Combobox|-moz-ComboboxText|-moz-Dialog|-moz-DialogText|-moz-dragtargetzone|-moz-EvenTreeRow|-moz-Field|-moz-FieldText|-moz-html-CellHighlight|-moz-html-CellHighlightText|-moz-mac-accentdarkestshadow|-moz-mac-accentdarkshadow|-moz-mac-accentface|-moz-mac-accentlightesthighlight|-moz-mac-accentlightshadow|-moz-mac-accentregularhighlight|-moz-mac-accentregularshadow|-moz-mac-chrome-active|-moz-mac-chrome-inactive|-moz-mac-focusring|-moz-mac-menuselect|-moz-mac-menushadow|-moz-mac-menutextselect|-moz-MenuHover|-moz-MenuHoverText|-moz-MenuBarText|-moz-MenuBarHoverText|-moz-nativehyperlinktext|-moz-OddTreeRow|-moz-win-communicationstext|-moz-win-mediatext|-moz-activehyperlinktext|-moz-default-background-color|-moz-default-color|-moz-hyperlinktext|-moz-visitedhyperlinktext|-webkit-activelink|-webkit-focus-ring-color|-webkit-link|-webkit-text\",\n        \"-non-standard-image-rendering\": \"optimize-contrast|-moz-crisp-edges|-o-crisp-edges|-webkit-optimize-contrast\",\n        \"-non-standard-overflow\": \"-moz-scrollbars-none|-moz-scrollbars-horizontal|-moz-scrollbars-vertical|-moz-hidden-unscrollable\",\n        \"-non-standard-width\": \"fill-available|min-intrinsic|intrinsic|-moz-available|-moz-fit-content|-moz-min-content|-moz-max-content|-webkit-min-content|-webkit-max-content\",\n        \"-webkit-gradient()\": \"-webkit-gradient( <-webkit-gradient-type> , <-webkit-gradient-point> [, <-webkit-gradient-point>|, <-webkit-gradient-radius> , <-webkit-gradient-point>] [, <-webkit-gradient-radius>]? [, <-webkit-gradient-color-stop>]* )\",\n        \"-webkit-gradient-color-stop\": \"from( <color> )|color-stop( [<number-zero-one>|<percentage>] , <color> )|to( <color> )\",\n        \"-webkit-gradient-point\": \"[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]\",\n        \"-webkit-gradient-radius\": \"<length>|<percentage>\",\n        \"-webkit-gradient-type\": \"linear|radial\",\n        \"-webkit-mask-box-repeat\": \"repeat|stretch|round\",\n        \"-webkit-mask-clip-style\": \"border|border-box|padding|padding-box|content|content-box|text\",\n        \"-ms-filter-function-list\": \"<-ms-filter-function>+\",\n        \"-ms-filter-function\": \"<-ms-filter-function-progid>|<-ms-filter-function-legacy>\",\n        \"-ms-filter-function-progid\": \"'progid:' [<ident-token> '.']* [<ident-token>|<function-token> <any-value>? )]\",\n        \"-ms-filter-function-legacy\": \"<ident-token>|<function-token> <any-value>? )\",\n        \"-ms-filter\": \"<string>\",\n        \"age\": \"child|young|old\",\n        \"attr-name\": \"<wq-name>\",\n        \"attr-fallback\": \"<any-value>\",\n        \"bg-clip\": \"<box>|border|text\",\n        \"bottom\": \"<length>|auto\",\n        \"generic-voice\": \"[<age>? <gender> <integer>?]\",\n        \"gender\": \"male|female|neutral\",\n        \"left\": \"<length>|auto\",\n        \"mask-image\": \"<mask-reference>#\",\n        \"paint\": \"none|<color>|<url> [none|<color>]?|context-fill|context-stroke\",\n        \"right\": \"<length>|auto\",\n        \"scroll-timeline-axis\": \"block|inline|vertical|horizontal\",\n        \"scroll-timeline-name\": \"none|<custom-ident>\",\n        \"single-animation-composition\": \"replace|add|accumulate\",\n        \"svg-length\": \"<percentage>|<length>|<number>\",\n        \"svg-writing-mode\": \"lr-tb|rl-tb|tb-rl|lr|rl|tb\",\n        \"top\": \"<length>|auto\",\n        \"x\": \"<number>\",\n        \"y\": \"<number>\",\n        \"declaration\": \"<ident-token> : <declaration-value>? ['!' important]?\",\n        \"declaration-list\": \"[<declaration>? ';']* <declaration>?\",\n        \"url\": \"url( <string> <url-modifier>* )|<url-token>\",\n        \"url-modifier\": \"<ident>|<function-token> <any-value> )\",\n        \"number-zero-one\": \"<number [0,1]>\",\n        \"number-one-or-greater\": \"<number [1,\u221E]>\",\n        \"-non-standard-display\": \"-ms-inline-flexbox|-ms-grid|-ms-inline-grid|-webkit-flex|-webkit-inline-flex|-webkit-box|-webkit-inline-box|-moz-inline-stack|-moz-box|-moz-inline-box\"\n    },\n    \"properties\": {\n        \"--*\": \"<declaration-value>\",\n        \"-ms-accelerator\": \"false|true\",\n        \"-ms-block-progression\": \"tb|rl|bt|lr\",\n        \"-ms-content-zoom-chaining\": \"none|chained\",\n        \"-ms-content-zooming\": \"none|zoom\",\n        \"-ms-content-zoom-limit\": \"<'-ms-content-zoom-limit-min'> <'-ms-content-zoom-limit-max'>\",\n        \"-ms-content-zoom-limit-max\": \"<percentage>\",\n        \"-ms-content-zoom-limit-min\": \"<percentage>\",\n        \"-ms-content-zoom-snap\": \"<'-ms-content-zoom-snap-type'>||<'-ms-content-zoom-snap-points'>\",\n        \"-ms-content-zoom-snap-points\": \"snapInterval( <percentage> , <percentage> )|snapList( <percentage># )\",\n        \"-ms-content-zoom-snap-type\": \"none|proximity|mandatory\",\n        \"-ms-filter\": \"<string>\",\n        \"-ms-flow-from\": \"[none|<custom-ident>]#\",\n        \"-ms-flow-into\": \"[none|<custom-ident>]#\",\n        \"-ms-grid-columns\": \"none|<track-list>|<auto-track-list>\",\n        \"-ms-grid-rows\": \"none|<track-list>|<auto-track-list>\",\n        \"-ms-high-contrast-adjust\": \"auto|none\",\n        \"-ms-hyphenate-limit-chars\": \"auto|<integer>{1,3}\",\n        \"-ms-hyphenate-limit-lines\": \"no-limit|<integer>\",\n        \"-ms-hyphenate-limit-zone\": \"<percentage>|<length>\",\n        \"-ms-ime-align\": \"auto|after\",\n        \"-ms-overflow-style\": \"auto|none|scrollbar|-ms-autohiding-scrollbar\",\n        \"-ms-scrollbar-3dlight-color\": \"<color>\",\n        \"-ms-scrollbar-arrow-color\": \"<color>\",\n        \"-ms-scrollbar-base-color\": \"<color>\",\n        \"-ms-scrollbar-darkshadow-color\": \"<color>\",\n        \"-ms-scrollbar-face-color\": \"<color>\",\n        \"-ms-scrollbar-highlight-color\": \"<color>\",\n        \"-ms-scrollbar-shadow-color\": \"<color>\",\n        \"-ms-scrollbar-track-color\": \"<color>\",\n        \"-ms-scroll-chaining\": \"chained|none\",\n        \"-ms-scroll-limit\": \"<'-ms-scroll-limit-x-min'> <'-ms-scroll-limit-y-min'> <'-ms-scroll-limit-x-max'> <'-ms-scroll-limit-y-max'>\",\n        \"-ms-scroll-limit-x-max\": \"auto|<length>\",\n        \"-ms-scroll-limit-x-min\": \"<length>\",\n        \"-ms-scroll-limit-y-max\": \"auto|<length>\",\n        \"-ms-scroll-limit-y-min\": \"<length>\",\n        \"-ms-scroll-rails\": \"none|railed\",\n        \"-ms-scroll-snap-points-x\": \"snapInterval( <length-percentage> , <length-percentage> )|snapList( <length-percentage># )\",\n        \"-ms-scroll-snap-points-y\": \"snapInterval( <length-percentage> , <length-percentage> )|snapList( <length-percentage># )\",\n        \"-ms-scroll-snap-type\": \"none|proximity|mandatory\",\n        \"-ms-scroll-snap-x\": \"<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-x'>\",\n        \"-ms-scroll-snap-y\": \"<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-y'>\",\n        \"-ms-scroll-translation\": \"none|vertical-to-horizontal\",\n        \"-ms-text-autospace\": \"none|ideograph-alpha|ideograph-numeric|ideograph-parenthesis|ideograph-space\",\n        \"-ms-touch-select\": \"grippers|none\",\n        \"-ms-user-select\": \"none|element|text\",\n        \"-ms-wrap-flow\": \"auto|both|start|end|maximum|clear\",\n        \"-ms-wrap-margin\": \"<length>\",\n        \"-ms-wrap-through\": \"wrap|none\",\n        \"-moz-appearance\": \"none|button|button-arrow-down|button-arrow-next|button-arrow-previous|button-arrow-up|button-bevel|button-focus|caret|checkbox|checkbox-container|checkbox-label|checkmenuitem|dualbutton|groupbox|listbox|listitem|menuarrow|menubar|menucheckbox|menuimage|menuitem|menuitemtext|menulist|menulist-button|menulist-text|menulist-textfield|menupopup|menuradio|menuseparator|meterbar|meterchunk|progressbar|progressbar-vertical|progresschunk|progresschunk-vertical|radio|radio-container|radio-label|radiomenuitem|range|range-thumb|resizer|resizerpanel|scale-horizontal|scalethumbend|scalethumb-horizontal|scalethumbstart|scalethumbtick|scalethumb-vertical|scale-vertical|scrollbarbutton-down|scrollbarbutton-left|scrollbarbutton-right|scrollbarbutton-up|scrollbarthumb-horizontal|scrollbarthumb-vertical|scrollbartrack-horizontal|scrollbartrack-vertical|searchfield|separator|sheet|spinner|spinner-downbutton|spinner-textfield|spinner-upbutton|splitter|statusbar|statusbarpanel|tab|tabpanel|tabpanels|tab-scroll-arrow-back|tab-scroll-arrow-forward|textfield|textfield-multiline|toolbar|toolbarbutton|toolbarbutton-dropdown|toolbargripper|toolbox|tooltip|treeheader|treeheadercell|treeheadersortarrow|treeitem|treeline|treetwisty|treetwistyopen|treeview|-moz-mac-unified-toolbar|-moz-win-borderless-glass|-moz-win-browsertabbar-toolbox|-moz-win-communicationstext|-moz-win-communications-toolbox|-moz-win-exclude-glass|-moz-win-glass|-moz-win-mediatext|-moz-win-media-toolbox|-moz-window-button-box|-moz-window-button-box-maximized|-moz-window-button-close|-moz-window-button-maximize|-moz-window-button-minimize|-moz-window-button-restore|-moz-window-frame-bottom|-moz-window-frame-left|-moz-window-frame-right|-moz-window-titlebar|-moz-window-titlebar-maximized\",\n        \"-moz-binding\": \"<url>|none\",\n        \"-moz-border-bottom-colors\": \"<color>+|none\",\n        \"-moz-border-left-colors\": \"<color>+|none\",\n        \"-moz-border-right-colors\": \"<color>+|none\",\n        \"-moz-border-top-colors\": \"<color>+|none\",\n        \"-moz-context-properties\": \"none|[fill|fill-opacity|stroke|stroke-opacity]#\",\n        \"-moz-float-edge\": \"border-box|content-box|margin-box|padding-box\",\n        \"-moz-force-broken-image-icon\": \"0|1\",\n        \"-moz-image-region\": \"<shape>|auto\",\n        \"-moz-orient\": \"inline|block|horizontal|vertical\",\n        \"-moz-outline-radius\": \"<outline-radius>{1,4} [/ <outline-radius>{1,4}]?\",\n        \"-moz-outline-radius-bottomleft\": \"<outline-radius>\",\n        \"-moz-outline-radius-bottomright\": \"<outline-radius>\",\n        \"-moz-outline-radius-topleft\": \"<outline-radius>\",\n        \"-moz-outline-radius-topright\": \"<outline-radius>\",\n        \"-moz-stack-sizing\": \"ignore|stretch-to-fit\",\n        \"-moz-text-blink\": \"none|blink\",\n        \"-moz-user-focus\": \"ignore|normal|select-after|select-before|select-menu|select-same|select-all|none\",\n        \"-moz-user-input\": \"auto|none|enabled|disabled\",\n        \"-moz-user-modify\": \"read-only|read-write|write-only\",\n        \"-moz-window-dragging\": \"drag|no-drag\",\n        \"-moz-window-shadow\": \"default|menu|tooltip|sheet|none\",\n        \"-webkit-appearance\": \"none|button|button-bevel|caps-lock-indicator|caret|checkbox|default-button|inner-spin-button|listbox|listitem|media-controls-background|media-controls-fullscreen-background|media-current-time-display|media-enter-fullscreen-button|media-exit-fullscreen-button|media-fullscreen-button|media-mute-button|media-overlay-play-button|media-play-button|media-seek-back-button|media-seek-forward-button|media-slider|media-sliderthumb|media-time-remaining-display|media-toggle-closed-captions-button|media-volume-slider|media-volume-slider-container|media-volume-sliderthumb|menulist|menulist-button|menulist-text|menulist-textfield|meter|progress-bar|progress-bar-value|push-button|radio|scrollbarbutton-down|scrollbarbutton-left|scrollbarbutton-right|scrollbarbutton-up|scrollbargripper-horizontal|scrollbargripper-vertical|scrollbarthumb-horizontal|scrollbarthumb-vertical|scrollbartrack-horizontal|scrollbartrack-vertical|searchfield|searchfield-cancel-button|searchfield-decoration|searchfield-results-button|searchfield-results-decoration|slider-horizontal|slider-vertical|sliderthumb-horizontal|sliderthumb-vertical|square-button|textarea|textfield|-apple-pay-button\",\n        \"-webkit-border-before\": \"<'border-width'>||<'border-style'>||<color>\",\n        \"-webkit-border-before-color\": \"<color>\",\n        \"-webkit-border-before-style\": \"<'border-style'>\",\n        \"-webkit-border-before-width\": \"<'border-width'>\",\n        \"-webkit-box-reflect\": \"[above|below|right|left]? <length>? <image>?\",\n        \"-webkit-line-clamp\": \"none|<integer>\",\n        \"-webkit-mask\": \"[<mask-reference>||<position> [/ <bg-size>]?||<repeat-style>||[<box>|border|padding|content|text]||[<box>|border|padding|content]]#\",\n        \"-webkit-mask-attachment\": \"<attachment>#\",\n        \"-webkit-mask-clip\": \"[<box>|border|padding|content|text]#\",\n        \"-webkit-mask-composite\": \"<composite-style>#\",\n        \"-webkit-mask-image\": \"<mask-reference>#\",\n        \"-webkit-mask-origin\": \"[<box>|border|padding|content]#\",\n        \"-webkit-mask-position\": \"<position>#\",\n        \"-webkit-mask-position-x\": \"[<length-percentage>|left|center|right]#\",\n        \"-webkit-mask-position-y\": \"[<length-percentage>|top|center|bottom]#\",\n        \"-webkit-mask-repeat\": \"<repeat-style>#\",\n        \"-webkit-mask-repeat-x\": \"repeat|no-repeat|space|round\",\n        \"-webkit-mask-repeat-y\": \"repeat|no-repeat|space|round\",\n        \"-webkit-mask-size\": \"<bg-size>#\",\n        \"-webkit-overflow-scrolling\": \"auto|touch\",\n        \"-webkit-tap-highlight-color\": \"<color>\",\n        \"-webkit-text-fill-color\": \"<color>\",\n        \"-webkit-text-stroke\": \"<length>||<color>\",\n        \"-webkit-text-stroke-color\": \"<color>\",\n        \"-webkit-text-stroke-width\": \"<length>\",\n        \"-webkit-touch-callout\": \"default|none\",\n        \"-webkit-user-modify\": \"read-only|read-write|read-write-plaintext-only\",\n        \"accent-color\": \"auto|<color>\",\n        \"align-content\": \"normal|<baseline-position>|<content-distribution>|<overflow-position>? <content-position>\",\n        \"align-items\": \"normal|stretch|<baseline-position>|[<overflow-position>? <self-position>]\",\n        \"align-self\": \"auto|normal|stretch|<baseline-position>|<overflow-position>? <self-position>\",\n        \"align-tracks\": \"[normal|<baseline-position>|<content-distribution>|<overflow-position>? <content-position>]#\",\n        \"all\": \"initial|inherit|unset|revert|revert-layer\",\n        \"animation\": \"<single-animation>#\",\n        \"animation-composition\": \"<single-animation-composition>#\",\n        \"animation-delay\": \"<time>#\",\n        \"animation-direction\": \"<single-animation-direction>#\",\n        \"animation-duration\": \"<time>#\",\n        \"animation-fill-mode\": \"<single-animation-fill-mode>#\",\n        \"animation-iteration-count\": \"<single-animation-iteration-count>#\",\n        \"animation-name\": \"[none|<keyframes-name>]#\",\n        \"animation-play-state\": \"<single-animation-play-state>#\",\n        \"animation-timing-function\": \"<easing-function>#\",\n        \"animation-timeline\": \"<single-animation-timeline>#\",\n        \"appearance\": \"none|auto|textfield|menulist-button|<compat-auto>\",\n        \"aspect-ratio\": \"auto|<ratio>\",\n        \"azimuth\": \"<angle>|[[left-side|far-left|left|center-left|center|center-right|right|far-right|right-side]||behind]|leftwards|rightwards\",\n        \"backdrop-filter\": \"none|<filter-function-list>\",\n        \"backface-visibility\": \"visible|hidden\",\n        \"background\": \"[<bg-layer> ,]* <final-bg-layer>\",\n        \"background-attachment\": \"<attachment>#\",\n        \"background-blend-mode\": \"<blend-mode>#\",\n        \"background-clip\": \"<bg-clip>#\",\n        \"background-color\": \"<color>\",\n        \"background-image\": \"<bg-image>#\",\n        \"background-origin\": \"<box>#\",\n        \"background-position\": \"<bg-position>#\",\n        \"background-position-x\": \"[center|[[left|right|x-start|x-end]? <length-percentage>?]!]#\",\n        \"background-position-y\": \"[center|[[top|bottom|y-start|y-end]? <length-percentage>?]!]#\",\n        \"background-repeat\": \"<repeat-style>#\",\n        \"background-size\": \"<bg-size>#\",\n        \"block-overflow\": \"clip|ellipsis|<string>\",\n        \"block-size\": \"<'width'>\",\n        \"border\": \"<line-width>||<line-style>||<color>\",\n        \"border-block\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-block-color\": \"<'border-top-color'>{1,2}\",\n        \"border-block-style\": \"<'border-top-style'>\",\n        \"border-block-width\": \"<'border-top-width'>\",\n        \"border-block-end\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-block-end-color\": \"<'border-top-color'>\",\n        \"border-block-end-style\": \"<'border-top-style'>\",\n        \"border-block-end-width\": \"<'border-top-width'>\",\n        \"border-block-start\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-block-start-color\": \"<'border-top-color'>\",\n        \"border-block-start-style\": \"<'border-top-style'>\",\n        \"border-block-start-width\": \"<'border-top-width'>\",\n        \"border-bottom\": \"<line-width>||<line-style>||<color>\",\n        \"border-bottom-color\": \"<'border-top-color'>\",\n        \"border-bottom-left-radius\": \"<length-percentage>{1,2}\",\n        \"border-bottom-right-radius\": \"<length-percentage>{1,2}\",\n        \"border-bottom-style\": \"<line-style>\",\n        \"border-bottom-width\": \"<line-width>\",\n        \"border-collapse\": \"collapse|separate\",\n        \"border-color\": \"<color>{1,4}\",\n        \"border-end-end-radius\": \"<length-percentage>{1,2}\",\n        \"border-end-start-radius\": \"<length-percentage>{1,2}\",\n        \"border-image\": \"<'border-image-source'>||<'border-image-slice'> [/ <'border-image-width'>|/ <'border-image-width'>? / <'border-image-outset'>]?||<'border-image-repeat'>\",\n        \"border-image-outset\": \"[<length>|<number>]{1,4}\",\n        \"border-image-repeat\": \"[stretch|repeat|round|space]{1,2}\",\n        \"border-image-slice\": \"<number-percentage>{1,4}&&fill?\",\n        \"border-image-source\": \"none|<image>\",\n        \"border-image-width\": \"[<length-percentage>|<number>|auto]{1,4}\",\n        \"border-inline\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-inline-end\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-inline-color\": \"<'border-top-color'>{1,2}\",\n        \"border-inline-style\": \"<'border-top-style'>\",\n        \"border-inline-width\": \"<'border-top-width'>\",\n        \"border-inline-end-color\": \"<'border-top-color'>\",\n        \"border-inline-end-style\": \"<'border-top-style'>\",\n        \"border-inline-end-width\": \"<'border-top-width'>\",\n        \"border-inline-start\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-inline-start-color\": \"<'border-top-color'>\",\n        \"border-inline-start-style\": \"<'border-top-style'>\",\n        \"border-inline-start-width\": \"<'border-top-width'>\",\n        \"border-left\": \"<line-width>||<line-style>||<color>\",\n        \"border-left-color\": \"<color>\",\n        \"border-left-style\": \"<line-style>\",\n        \"border-left-width\": \"<line-width>\",\n        \"border-radius\": \"<length-percentage>{1,4} [/ <length-percentage>{1,4}]?\",\n        \"border-right\": \"<line-width>||<line-style>||<color>\",\n        \"border-right-color\": \"<color>\",\n        \"border-right-style\": \"<line-style>\",\n        \"border-right-width\": \"<line-width>\",\n        \"border-spacing\": \"<length> <length>?\",\n        \"border-start-end-radius\": \"<length-percentage>{1,2}\",\n        \"border-start-start-radius\": \"<length-percentage>{1,2}\",\n        \"border-style\": \"<line-style>{1,4}\",\n        \"border-top\": \"<line-width>||<line-style>||<color>\",\n        \"border-top-color\": \"<color>\",\n        \"border-top-left-radius\": \"<length-percentage>{1,2}\",\n        \"border-top-right-radius\": \"<length-percentage>{1,2}\",\n        \"border-top-style\": \"<line-style>\",\n        \"border-top-width\": \"<line-width>\",\n        \"border-width\": \"<line-width>{1,4}\",\n        \"bottom\": \"<length>|<percentage>|auto\",\n        \"box-align\": \"start|center|end|baseline|stretch\",\n        \"box-decoration-break\": \"slice|clone\",\n        \"box-direction\": \"normal|reverse|inherit\",\n        \"box-flex\": \"<number>\",\n        \"box-flex-group\": \"<integer>\",\n        \"box-lines\": \"single|multiple\",\n        \"box-ordinal-group\": \"<integer>\",\n        \"box-orient\": \"horizontal|vertical|inline-axis|block-axis|inherit\",\n        \"box-pack\": \"start|center|end|justify\",\n        \"box-shadow\": \"none|<shadow>#\",\n        \"box-sizing\": \"content-box|border-box\",\n        \"break-after\": \"auto|avoid|always|all|avoid-page|page|left|right|recto|verso|avoid-column|column|avoid-region|region\",\n        \"break-before\": \"auto|avoid|always|all|avoid-page|page|left|right|recto|verso|avoid-column|column|avoid-region|region\",\n        \"break-inside\": \"auto|avoid|avoid-page|avoid-column|avoid-region\",\n        \"caption-side\": \"top|bottom|block-start|block-end|inline-start|inline-end\",\n        \"caret\": \"<'caret-color'>||<'caret-shape'>\",\n        \"caret-color\": \"auto|<color>\",\n        \"caret-shape\": \"auto|bar|block|underscore\",\n        \"clear\": \"none|left|right|both|inline-start|inline-end\",\n        \"clip\": \"<shape>|auto\",\n        \"clip-path\": \"<clip-source>|[<basic-shape>||<geometry-box>]|none\",\n        \"color\": \"<color>\",\n        \"print-color-adjust\": \"economy|exact\",\n        \"color-scheme\": \"normal|[light|dark|<custom-ident>]+&&only?\",\n        \"column-count\": \"<integer>|auto\",\n        \"column-fill\": \"auto|balance|balance-all\",\n        \"column-gap\": \"normal|<length-percentage>\",\n        \"column-rule\": \"<'column-rule-width'>||<'column-rule-style'>||<'column-rule-color'>\",\n        \"column-rule-color\": \"<color>\",\n        \"column-rule-style\": \"<'border-style'>\",\n        \"column-rule-width\": \"<'border-width'>\",\n        \"column-span\": \"none|all\",\n        \"column-width\": \"<length>|auto\",\n        \"columns\": \"<'column-width'>||<'column-count'>\",\n        \"contain\": \"none|strict|content|[[size||inline-size]||layout||style||paint]\",\n        \"contain-intrinsic-size\": \"[none|<length>|auto <length>]{1,2}\",\n        \"contain-intrinsic-block-size\": \"none|<length>|auto <length>\",\n        \"contain-intrinsic-height\": \"none|<length>|auto <length>\",\n        \"contain-intrinsic-inline-size\": \"none|<length>|auto <length>\",\n        \"contain-intrinsic-width\": \"none|<length>|auto <length>\",\n        \"content\": \"normal|none|[<content-replacement>|<content-list>] [/ [<string>|<counter>]+]?\",\n        \"content-visibility\": \"visible|auto|hidden\",\n        \"counter-increment\": \"[<counter-name> <integer>?]+|none\",\n        \"counter-reset\": \"[<counter-name> <integer>?|<reversed-counter-name> <integer>?]+|none\",\n        \"counter-set\": \"[<counter-name> <integer>?]+|none\",\n        \"cursor\": \"[[<url> [<x> <y>]? ,]* [auto|default|none|context-menu|help|pointer|progress|wait|cell|crosshair|text|vertical-text|alias|copy|move|no-drop|not-allowed|e-resize|n-resize|ne-resize|nw-resize|s-resize|se-resize|sw-resize|w-resize|ew-resize|ns-resize|nesw-resize|nwse-resize|col-resize|row-resize|all-scroll|zoom-in|zoom-out|grab|grabbing|hand|-webkit-grab|-webkit-grabbing|-webkit-zoom-in|-webkit-zoom-out|-moz-grab|-moz-grabbing|-moz-zoom-in|-moz-zoom-out]]\",\n        \"direction\": \"ltr|rtl\",\n        \"display\": \"[<display-outside>||<display-inside>]|<display-listitem>|<display-internal>|<display-box>|<display-legacy>|<-non-standard-display>\",\n        \"empty-cells\": \"show|hide\",\n        \"filter\": \"none|<filter-function-list>|<-ms-filter-function-list>\",\n        \"flex\": \"none|[<'flex-grow'> <'flex-shrink'>?||<'flex-basis'>]\",\n        \"flex-basis\": \"content|<'width'>\",\n        \"flex-direction\": \"row|row-reverse|column|column-reverse\",\n        \"flex-flow\": \"<'flex-direction'>||<'flex-wrap'>\",\n        \"flex-grow\": \"<number>\",\n        \"flex-shrink\": \"<number>\",\n        \"flex-wrap\": \"nowrap|wrap|wrap-reverse\",\n        \"float\": \"left|right|none|inline-start|inline-end\",\n        \"font\": \"[[<'font-style'>||<font-variant-css21>||<'font-weight'>||<'font-stretch'>]? <'font-size'> [/ <'line-height'>]? <'font-family'>]|caption|icon|menu|message-box|small-caption|status-bar\",\n        \"font-family\": \"[<family-name>|<generic-family>]#\",\n        \"font-feature-settings\": \"normal|<feature-tag-value>#\",\n        \"font-kerning\": \"auto|normal|none\",\n        \"font-language-override\": \"normal|<string>\",\n        \"font-optical-sizing\": \"auto|none\",\n        \"font-variation-settings\": \"normal|[<string> <number>]#\",\n        \"font-size\": \"<absolute-size>|<relative-size>|<length-percentage>\",\n        \"font-size-adjust\": \"none|[ex-height|cap-height|ch-width|ic-width|ic-height]? [from-font|<number>]\",\n        \"font-smooth\": \"auto|never|always|<absolute-size>|<length>\",\n        \"font-stretch\": \"<font-stretch-absolute>\",\n        \"font-style\": \"normal|italic|oblique <angle>?\",\n        \"font-synthesis\": \"none|[weight||style||small-caps]\",\n        \"font-variant\": \"normal|none|[<common-lig-values>||<discretionary-lig-values>||<historical-lig-values>||<contextual-alt-values>||stylistic( <feature-value-name> )||historical-forms||styleset( <feature-value-name># )||character-variant( <feature-value-name># )||swash( <feature-value-name> )||ornaments( <feature-value-name> )||annotation( <feature-value-name> )||[small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps]||<numeric-figure-values>||<numeric-spacing-values>||<numeric-fraction-values>||ordinal||slashed-zero||<east-asian-variant-values>||<east-asian-width-values>||ruby]\",\n        \"font-variant-alternates\": \"normal|[stylistic( <feature-value-name> )||historical-forms||styleset( <feature-value-name># )||character-variant( <feature-value-name># )||swash( <feature-value-name> )||ornaments( <feature-value-name> )||annotation( <feature-value-name> )]\",\n        \"font-variant-caps\": \"normal|small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps\",\n        \"font-variant-east-asian\": \"normal|[<east-asian-variant-values>||<east-asian-width-values>||ruby]\",\n        \"font-variant-ligatures\": \"normal|none|[<common-lig-values>||<discretionary-lig-values>||<historical-lig-values>||<contextual-alt-values>]\",\n        \"font-variant-numeric\": \"normal|[<numeric-figure-values>||<numeric-spacing-values>||<numeric-fraction-values>||ordinal||slashed-zero]\",\n        \"font-variant-position\": \"normal|sub|super\",\n        \"font-weight\": \"<font-weight-absolute>|bolder|lighter\",\n        \"forced-color-adjust\": \"auto|none\",\n        \"gap\": \"<'row-gap'> <'column-gap'>?\",\n        \"grid\": \"<'grid-template'>|<'grid-template-rows'> / [auto-flow&&dense?] <'grid-auto-columns'>?|[auto-flow&&dense?] <'grid-auto-rows'>? / <'grid-template-columns'>\",\n        \"grid-area\": \"<grid-line> [/ <grid-line>]{0,3}\",\n        \"grid-auto-columns\": \"<track-size>+\",\n        \"grid-auto-flow\": \"[row|column]||dense\",\n        \"grid-auto-rows\": \"<track-size>+\",\n        \"grid-column\": \"<grid-line> [/ <grid-line>]?\",\n        \"grid-column-end\": \"<grid-line>\",\n        \"grid-column-gap\": \"<length-percentage>\",\n        \"grid-column-start\": \"<grid-line>\",\n        \"grid-gap\": \"<'grid-row-gap'> <'grid-column-gap'>?\",\n        \"grid-row\": \"<grid-line> [/ <grid-line>]?\",\n        \"grid-row-end\": \"<grid-line>\",\n        \"grid-row-gap\": \"<length-percentage>\",\n        \"grid-row-start\": \"<grid-line>\",\n        \"grid-template\": \"none|[<'grid-template-rows'> / <'grid-template-columns'>]|[<line-names>? <string> <track-size>? <line-names>?]+ [/ <explicit-track-list>]?\",\n        \"grid-template-areas\": \"none|<string>+\",\n        \"grid-template-columns\": \"none|<track-list>|<auto-track-list>|subgrid <line-name-list>?\",\n        \"grid-template-rows\": \"none|<track-list>|<auto-track-list>|subgrid <line-name-list>?\",\n        \"hanging-punctuation\": \"none|[first||[force-end|allow-end]||last]\",\n        \"height\": \"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )\",\n        \"hyphenate-character\": \"auto|<string>\",\n        \"hyphens\": \"none|manual|auto\",\n        \"image-orientation\": \"from-image|<angle>|[<angle>? flip]\",\n        \"image-rendering\": \"auto|crisp-edges|pixelated|optimizeSpeed|optimizeQuality|<-non-standard-image-rendering>\",\n        \"image-resolution\": \"[from-image||<resolution>]&&snap?\",\n        \"ime-mode\": \"auto|normal|active|inactive|disabled\",\n        \"initial-letter\": \"normal|[<number> <integer>?]\",\n        \"initial-letter-align\": \"[auto|alphabetic|hanging|ideographic]\",\n        \"inline-size\": \"<'width'>\",\n        \"input-security\": \"auto|none\",\n        \"inset\": \"<'top'>{1,4}\",\n        \"inset-block\": \"<'top'>{1,2}\",\n        \"inset-block-end\": \"<'top'>\",\n        \"inset-block-start\": \"<'top'>\",\n        \"inset-inline\": \"<'top'>{1,2}\",\n        \"inset-inline-end\": \"<'top'>\",\n        \"inset-inline-start\": \"<'top'>\",\n        \"isolation\": \"auto|isolate\",\n        \"justify-content\": \"normal|<content-distribution>|<overflow-position>? [<content-position>|left|right]\",\n        \"justify-items\": \"normal|stretch|<baseline-position>|<overflow-position>? [<self-position>|left|right]|legacy|legacy&&[left|right|center]\",\n        \"justify-self\": \"auto|normal|stretch|<baseline-position>|<overflow-position>? [<self-position>|left|right]\",\n        \"justify-tracks\": \"[normal|<content-distribution>|<overflow-position>? [<content-position>|left|right]]#\",\n        \"left\": \"<length>|<percentage>|auto\",\n        \"letter-spacing\": \"normal|<length-percentage>\",\n        \"line-break\": \"auto|loose|normal|strict|anywhere\",\n        \"line-clamp\": \"none|<integer>\",\n        \"line-height\": \"normal|<number>|<length>|<percentage>\",\n        \"line-height-step\": \"<length>\",\n        \"list-style\": \"<'list-style-type'>||<'list-style-position'>||<'list-style-image'>\",\n        \"list-style-image\": \"<image>|none\",\n        \"list-style-position\": \"inside|outside\",\n        \"list-style-type\": \"<counter-style>|<string>|none\",\n        \"margin\": \"[<length>|<percentage>|auto]{1,4}\",\n        \"margin-block\": \"<'margin-left'>{1,2}\",\n        \"margin-block-end\": \"<'margin-left'>\",\n        \"margin-block-start\": \"<'margin-left'>\",\n        \"margin-bottom\": \"<length>|<percentage>|auto\",\n        \"margin-inline\": \"<'margin-left'>{1,2}\",\n        \"margin-inline-end\": \"<'margin-left'>\",\n        \"margin-inline-start\": \"<'margin-left'>\",\n        \"margin-left\": \"<length>|<percentage>|auto\",\n        \"margin-right\": \"<length>|<percentage>|auto\",\n        \"margin-top\": \"<length>|<percentage>|auto\",\n        \"margin-trim\": \"none|in-flow|all\",\n        \"mask\": \"<mask-layer>#\",\n        \"mask-border\": \"<'mask-border-source'>||<'mask-border-slice'> [/ <'mask-border-width'>? [/ <'mask-border-outset'>]?]?||<'mask-border-repeat'>||<'mask-border-mode'>\",\n        \"mask-border-mode\": \"luminance|alpha\",\n        \"mask-border-outset\": \"[<length>|<number>]{1,4}\",\n        \"mask-border-repeat\": \"[stretch|repeat|round|space]{1,2}\",\n        \"mask-border-slice\": \"<number-percentage>{1,4} fill?\",\n        \"mask-border-source\": \"none|<image>\",\n        \"mask-border-width\": \"[<length-percentage>|<number>|auto]{1,4}\",\n        \"mask-clip\": \"[<geometry-box>|no-clip]#\",\n        \"mask-composite\": \"<compositing-operator>#\",\n        \"mask-image\": \"<mask-reference>#\",\n        \"mask-mode\": \"<masking-mode>#\",\n        \"mask-origin\": \"<geometry-box>#\",\n        \"mask-position\": \"<position>#\",\n        \"mask-repeat\": \"<repeat-style>#\",\n        \"mask-size\": \"<bg-size>#\",\n        \"mask-type\": \"luminance|alpha\",\n        \"masonry-auto-flow\": \"[pack|next]||[definite-first|ordered]\",\n        \"math-depth\": \"auto-add|add( <integer> )|<integer>\",\n        \"math-shift\": \"normal|compact\",\n        \"math-style\": \"normal|compact\",\n        \"max-block-size\": \"<'max-width'>\",\n        \"max-height\": \"none|<length-percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )\",\n        \"max-inline-size\": \"<'max-width'>\",\n        \"max-lines\": \"none|<integer>\",\n        \"max-width\": \"none|<length-percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|<-non-standard-width>\",\n        \"min-block-size\": \"<'min-width'>\",\n        \"min-height\": \"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )\",\n        \"min-inline-size\": \"<'min-width'>\",\n        \"min-width\": \"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|<-non-standard-width>\",\n        \"mix-blend-mode\": \"<blend-mode>|plus-lighter\",\n        \"object-fit\": \"fill|contain|cover|none|scale-down\",\n        \"object-position\": \"<position>\",\n        \"offset\": \"[<'offset-position'>? [<'offset-path'> [<'offset-distance'>||<'offset-rotate'>]?]?]! [/ <'offset-anchor'>]?\",\n        \"offset-anchor\": \"auto|<position>\",\n        \"offset-distance\": \"<length-percentage>\",\n        \"offset-path\": \"none|ray( [<angle>&&<size>&&contain?] )|<path()>|<url>|[<basic-shape>||<geometry-box>]\",\n        \"offset-position\": \"auto|<position>\",\n        \"offset-rotate\": \"[auto|reverse]||<angle>\",\n        \"opacity\": \"<alpha-value>\",\n        \"order\": \"<integer>\",\n        \"orphans\": \"<integer>\",\n        \"outline\": \"[<'outline-color'>||<'outline-style'>||<'outline-width'>]\",\n        \"outline-color\": \"<color>|invert\",\n        \"outline-offset\": \"<length>\",\n        \"outline-style\": \"auto|<'border-style'>\",\n        \"outline-width\": \"<line-width>\",\n        \"overflow\": \"[visible|hidden|clip|scroll|auto]{1,2}|<-non-standard-overflow>\",\n        \"overflow-anchor\": \"auto|none\",\n        \"overflow-block\": \"visible|hidden|clip|scroll|auto\",\n        \"overflow-clip-box\": \"padding-box|content-box\",\n        \"overflow-clip-margin\": \"<visual-box>||<length [0,\u221E]>\",\n        \"overflow-inline\": \"visible|hidden|clip|scroll|auto\",\n        \"overflow-wrap\": \"normal|break-word|anywhere\",\n        \"overflow-x\": \"visible|hidden|clip|scroll|auto\",\n        \"overflow-y\": \"visible|hidden|clip|scroll|auto\",\n        \"overscroll-behavior\": \"[contain|none|auto]{1,2}\",\n        \"overscroll-behavior-block\": \"contain|none|auto\",\n        \"overscroll-behavior-inline\": \"contain|none|auto\",\n        \"overscroll-behavior-x\": \"contain|none|auto\",\n        \"overscroll-behavior-y\": \"contain|none|auto\",\n        \"padding\": \"[<length>|<percentage>]{1,4}\",\n        \"padding-block\": \"<'padding-left'>{1,2}\",\n        \"padding-block-end\": \"<'padding-left'>\",\n        \"padding-block-start\": \"<'padding-left'>\",\n        \"padding-bottom\": \"<length>|<percentage>\",\n        \"padding-inline\": \"<'padding-left'>{1,2}\",\n        \"padding-inline-end\": \"<'padding-left'>\",\n        \"padding-inline-start\": \"<'padding-left'>\",\n        \"padding-left\": \"<length>|<percentage>\",\n        \"padding-right\": \"<length>|<percentage>\",\n        \"padding-top\": \"<length>|<percentage>\",\n        \"page-break-after\": \"auto|always|avoid|left|right|recto|verso\",\n        \"page-break-before\": \"auto|always|avoid|left|right|recto|verso\",\n        \"page-break-inside\": \"auto|avoid\",\n        \"paint-order\": \"normal|[fill||stroke||markers]\",\n        \"perspective\": \"none|<length>\",\n        \"perspective-origin\": \"<position>\",\n        \"place-content\": \"<'align-content'> <'justify-content'>?\",\n        \"place-items\": \"<'align-items'> <'justify-items'>?\",\n        \"place-self\": \"<'align-self'> <'justify-self'>?\",\n        \"pointer-events\": \"auto|none|visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|inherit\",\n        \"position\": \"static|relative|absolute|sticky|fixed|-webkit-sticky\",\n        \"quotes\": \"none|auto|[<string> <string>]+\",\n        \"resize\": \"none|both|horizontal|vertical|block|inline\",\n        \"right\": \"<length>|<percentage>|auto\",\n        \"rotate\": \"none|<angle>|[x|y|z|<number>{3}]&&<angle>\",\n        \"row-gap\": \"normal|<length-percentage>\",\n        \"ruby-align\": \"start|center|space-between|space-around\",\n        \"ruby-merge\": \"separate|collapse|auto\",\n        \"ruby-position\": \"[alternate||[over|under]]|inter-character\",\n        \"scale\": \"none|<number>{1,3}\",\n        \"scrollbar-color\": \"auto|<color>{2}\",\n        \"scrollbar-gutter\": \"auto|stable&&both-edges?\",\n        \"scrollbar-width\": \"auto|thin|none\",\n        \"scroll-behavior\": \"auto|smooth\",\n        \"scroll-margin\": \"<length>{1,4}\",\n        \"scroll-margin-block\": \"<length>{1,2}\",\n        \"scroll-margin-block-start\": \"<length>\",\n        \"scroll-margin-block-end\": \"<length>\",\n        \"scroll-margin-bottom\": \"<length>\",\n        \"scroll-margin-inline\": \"<length>{1,2}\",\n        \"scroll-margin-inline-start\": \"<length>\",\n        \"scroll-margin-inline-end\": \"<length>\",\n        \"scroll-margin-left\": \"<length>\",\n        \"scroll-margin-right\": \"<length>\",\n        \"scroll-margin-top\": \"<length>\",\n        \"scroll-padding\": \"[auto|<length-percentage>]{1,4}\",\n        \"scroll-padding-block\": \"[auto|<length-percentage>]{1,2}\",\n        \"scroll-padding-block-start\": \"auto|<length-percentage>\",\n        \"scroll-padding-block-end\": \"auto|<length-percentage>\",\n        \"scroll-padding-bottom\": \"auto|<length-percentage>\",\n        \"scroll-padding-inline\": \"[auto|<length-percentage>]{1,2}\",\n        \"scroll-padding-inline-start\": \"auto|<length-percentage>\",\n        \"scroll-padding-inline-end\": \"auto|<length-percentage>\",\n        \"scroll-padding-left\": \"auto|<length-percentage>\",\n        \"scroll-padding-right\": \"auto|<length-percentage>\",\n        \"scroll-padding-top\": \"auto|<length-percentage>\",\n        \"scroll-snap-align\": \"[none|start|end|center]{1,2}\",\n        \"scroll-snap-coordinate\": \"none|<position>#\",\n        \"scroll-snap-destination\": \"<position>\",\n        \"scroll-snap-points-x\": \"none|repeat( <length-percentage> )\",\n        \"scroll-snap-points-y\": \"none|repeat( <length-percentage> )\",\n        \"scroll-snap-stop\": \"normal|always\",\n        \"scroll-snap-type\": \"none|[x|y|block|inline|both] [mandatory|proximity]?\",\n        \"scroll-snap-type-x\": \"none|mandatory|proximity\",\n        \"scroll-snap-type-y\": \"none|mandatory|proximity\",\n        \"scroll-timeline\": \"<scroll-timeline-name>||<scroll-timeline-axis>\",\n        \"scroll-timeline-axis\": \"block|inline|vertical|horizontal\",\n        \"scroll-timeline-name\": \"none|<custom-ident>\",\n        \"shape-image-threshold\": \"<alpha-value>\",\n        \"shape-margin\": \"<length-percentage>\",\n        \"shape-outside\": \"none|[<shape-box>||<basic-shape>]|<image>\",\n        \"tab-size\": \"<integer>|<length>\",\n        \"table-layout\": \"auto|fixed\",\n        \"text-align\": \"start|end|left|right|center|justify|match-parent\",\n        \"text-align-last\": \"auto|start|end|left|right|center|justify\",\n        \"text-combine-upright\": \"none|all|[digits <integer>?]\",\n        \"text-decoration\": \"<'text-decoration-line'>||<'text-decoration-style'>||<'text-decoration-color'>||<'text-decoration-thickness'>\",\n        \"text-decoration-color\": \"<color>\",\n        \"text-decoration-line\": \"none|[underline||overline||line-through||blink]|spelling-error|grammar-error\",\n        \"text-decoration-skip\": \"none|[objects||[spaces|[leading-spaces||trailing-spaces]]||edges||box-decoration]\",\n        \"text-decoration-skip-ink\": \"auto|all|none\",\n        \"text-decoration-style\": \"solid|double|dotted|dashed|wavy\",\n        \"text-decoration-thickness\": \"auto|from-font|<length>|<percentage>\",\n        \"text-emphasis\": \"<'text-emphasis-style'>||<'text-emphasis-color'>\",\n        \"text-emphasis-color\": \"<color>\",\n        \"text-emphasis-position\": \"[over|under]&&[right|left]\",\n        \"text-emphasis-style\": \"none|[[filled|open]||[dot|circle|double-circle|triangle|sesame]]|<string>\",\n        \"text-indent\": \"<length-percentage>&&hanging?&&each-line?\",\n        \"text-justify\": \"auto|inter-character|inter-word|none\",\n        \"text-orientation\": \"mixed|upright|sideways\",\n        \"text-overflow\": \"[clip|ellipsis|<string>]{1,2}\",\n        \"text-rendering\": \"auto|optimizeSpeed|optimizeLegibility|geometricPrecision\",\n        \"text-shadow\": \"none|<shadow-t>#\",\n        \"text-size-adjust\": \"none|auto|<percentage>\",\n        \"text-transform\": \"none|capitalize|uppercase|lowercase|full-width|full-size-kana\",\n        \"text-underline-offset\": \"auto|<length>|<percentage>\",\n        \"text-underline-position\": \"auto|from-font|[under||[left|right]]\",\n        \"top\": \"<length>|<percentage>|auto\",\n        \"touch-action\": \"auto|none|[[pan-x|pan-left|pan-right]||[pan-y|pan-up|pan-down]||pinch-zoom]|manipulation\",\n        \"transform\": \"none|<transform-list>\",\n        \"transform-box\": \"content-box|border-box|fill-box|stroke-box|view-box\",\n        \"transform-origin\": \"[<length-percentage>|left|center|right|top|bottom]|[[<length-percentage>|left|center|right]&&[<length-percentage>|top|center|bottom]] <length>?\",\n        \"transform-style\": \"flat|preserve-3d\",\n        \"transition\": \"<single-transition>#\",\n        \"transition-delay\": \"<time>#\",\n        \"transition-duration\": \"<time>#\",\n        \"transition-property\": \"none|<single-transition-property>#\",\n        \"transition-timing-function\": \"<easing-function>#\",\n        \"translate\": \"none|<length-percentage> [<length-percentage> <length>?]?\",\n        \"unicode-bidi\": \"normal|embed|isolate|bidi-override|isolate-override|plaintext|-moz-isolate|-moz-isolate-override|-moz-plaintext|-webkit-isolate|-webkit-isolate-override|-webkit-plaintext\",\n        \"user-select\": \"auto|text|none|contain|all\",\n        \"vertical-align\": \"baseline|sub|super|text-top|text-bottom|middle|top|bottom|<percentage>|<length>\",\n        \"visibility\": \"visible|hidden|collapse\",\n        \"white-space\": \"normal|pre|nowrap|pre-wrap|pre-line|break-spaces\",\n        \"widows\": \"<integer>\",\n        \"width\": \"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|fill|stretch|intrinsic|-moz-max-content|-webkit-max-content|-moz-fit-content|-webkit-fit-content\",\n        \"will-change\": \"auto|<animateable-feature>#\",\n        \"word-break\": \"normal|break-all|keep-all|break-word\",\n        \"word-spacing\": \"normal|<length>\",\n        \"word-wrap\": \"normal|break-word\",\n        \"writing-mode\": \"horizontal-tb|vertical-rl|vertical-lr|sideways-rl|sideways-lr|<svg-writing-mode>\",\n        \"z-index\": \"auto|<integer>\",\n        \"zoom\": \"normal|reset|<number>|<percentage>\",\n        \"-moz-background-clip\": \"padding|border\",\n        \"-moz-border-radius-bottomleft\": \"<'border-bottom-left-radius'>\",\n        \"-moz-border-radius-bottomright\": \"<'border-bottom-right-radius'>\",\n        \"-moz-border-radius-topleft\": \"<'border-top-left-radius'>\",\n        \"-moz-border-radius-topright\": \"<'border-bottom-right-radius'>\",\n        \"-moz-control-character-visibility\": \"visible|hidden\",\n        \"-moz-osx-font-smoothing\": \"auto|grayscale\",\n        \"-moz-user-select\": \"none|text|all|-moz-none\",\n        \"-ms-flex-align\": \"start|end|center|baseline|stretch\",\n        \"-ms-flex-item-align\": \"auto|start|end|center|baseline|stretch\",\n        \"-ms-flex-line-pack\": \"start|end|center|justify|distribute|stretch\",\n        \"-ms-flex-negative\": \"<'flex-shrink'>\",\n        \"-ms-flex-pack\": \"start|end|center|justify|distribute\",\n        \"-ms-flex-order\": \"<integer>\",\n        \"-ms-flex-positive\": \"<'flex-grow'>\",\n        \"-ms-flex-preferred-size\": \"<'flex-basis'>\",\n        \"-ms-interpolation-mode\": \"nearest-neighbor|bicubic\",\n        \"-ms-grid-column-align\": \"start|end|center|stretch\",\n        \"-ms-grid-row-align\": \"start|end|center|stretch\",\n        \"-ms-hyphenate-limit-last\": \"none|always|column|page|spread\",\n        \"-webkit-background-clip\": \"[<box>|border|padding|content|text]#\",\n        \"-webkit-column-break-after\": \"always|auto|avoid\",\n        \"-webkit-column-break-before\": \"always|auto|avoid\",\n        \"-webkit-column-break-inside\": \"always|auto|avoid\",\n        \"-webkit-font-smoothing\": \"auto|none|antialiased|subpixel-antialiased\",\n        \"-webkit-mask-box-image\": \"[<url>|<gradient>|none] [<length-percentage>{4} <-webkit-mask-box-repeat>{2}]?\",\n        \"-webkit-print-color-adjust\": \"economy|exact\",\n        \"-webkit-text-security\": \"none|circle|disc|square\",\n        \"-webkit-user-drag\": \"none|element|auto\",\n        \"-webkit-user-select\": \"auto|none|text|all\",\n        \"alignment-baseline\": \"auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical\",\n        \"baseline-shift\": \"baseline|sub|super|<svg-length>\",\n        \"behavior\": \"<url>+\",\n        \"clip-rule\": \"nonzero|evenodd\",\n        \"cue\": \"<'cue-before'> <'cue-after'>?\",\n        \"cue-after\": \"<url> <decibel>?|none\",\n        \"cue-before\": \"<url> <decibel>?|none\",\n        \"dominant-baseline\": \"auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge\",\n        \"fill\": \"<paint>\",\n        \"fill-opacity\": \"<number-zero-one>\",\n        \"fill-rule\": \"nonzero|evenodd\",\n        \"glyph-orientation-horizontal\": \"<angle>\",\n        \"glyph-orientation-vertical\": \"<angle>\",\n        \"kerning\": \"auto|<svg-length>\",\n        \"marker\": \"none|<url>\",\n        \"marker-end\": \"none|<url>\",\n        \"marker-mid\": \"none|<url>\",\n        \"marker-start\": \"none|<url>\",\n        \"pause\": \"<'pause-before'> <'pause-after'>?\",\n        \"pause-after\": \"<time>|none|x-weak|weak|medium|strong|x-strong\",\n        \"pause-before\": \"<time>|none|x-weak|weak|medium|strong|x-strong\",\n        \"rest\": \"<'rest-before'> <'rest-after'>?\",\n        \"rest-after\": \"<time>|none|x-weak|weak|medium|strong|x-strong\",\n        \"rest-before\": \"<time>|none|x-weak|weak|medium|strong|x-strong\",\n        \"shape-rendering\": \"auto|optimizeSpeed|crispEdges|geometricPrecision\",\n        \"src\": \"[<url> [format( <string># )]?|local( <family-name> )]#\",\n        \"speak\": \"auto|none|normal\",\n        \"speak-as\": \"normal|spell-out||digits||[literal-punctuation|no-punctuation]\",\n        \"stroke\": \"<paint>\",\n        \"stroke-dasharray\": \"none|[<svg-length>+]#\",\n        \"stroke-dashoffset\": \"<svg-length>\",\n        \"stroke-linecap\": \"butt|round|square\",\n        \"stroke-linejoin\": \"miter|round|bevel\",\n        \"stroke-miterlimit\": \"<number-one-or-greater>\",\n        \"stroke-opacity\": \"<number-zero-one>\",\n        \"stroke-width\": \"<svg-length>\",\n        \"text-anchor\": \"start|middle|end\",\n        \"unicode-range\": \"<urange>#\",\n        \"voice-balance\": \"<number>|left|center|right|leftwards|rightwards\",\n        \"voice-duration\": \"auto|<time>\",\n        \"voice-family\": \"[[<family-name>|<generic-voice>] ,]* [<family-name>|<generic-voice>]|preserve\",\n        \"voice-pitch\": \"<frequency>&&absolute|[[x-low|low|medium|high|x-high]||[<frequency>|<semitones>|<percentage>]]\",\n        \"voice-range\": \"<frequency>&&absolute|[[x-low|low|medium|high|x-high]||[<frequency>|<semitones>|<percentage>]]\",\n        \"voice-rate\": \"[normal|x-slow|slow|medium|fast|x-fast]||<percentage>\",\n        \"voice-stress\": \"normal|strong|moderate|none|reduced\",\n        \"voice-volume\": \"silent|[[x-soft|soft|medium|loud|x-loud]||<decibel>]\"\n    },\n    \"atrules\": {\n        \"charset\": {\n            \"prelude\": \"<string>\",\n            \"descriptors\": null\n        },\n        \"counter-style\": {\n            \"prelude\": \"<counter-style-name>\",\n            \"descriptors\": {\n                \"additive-symbols\": \"[<integer>&&<symbol>]#\",\n                \"fallback\": \"<counter-style-name>\",\n                \"negative\": \"<symbol> <symbol>?\",\n                \"pad\": \"<integer>&&<symbol>\",\n                \"prefix\": \"<symbol>\",\n                \"range\": \"[[<integer>|infinite]{2}]#|auto\",\n                \"speak-as\": \"auto|bullets|numbers|words|spell-out|<counter-style-name>\",\n                \"suffix\": \"<symbol>\",\n                \"symbols\": \"<symbol>+\",\n                \"system\": \"cyclic|numeric|alphabetic|symbolic|additive|[fixed <integer>?]|[extends <counter-style-name>]\"\n            }\n        },\n        \"document\": {\n            \"prelude\": \"[<url>|url-prefix( <string> )|domain( <string> )|media-document( <string> )|regexp( <string> )]#\",\n            \"descriptors\": null\n        },\n        \"font-face\": {\n            \"prelude\": null,\n            \"descriptors\": {\n                \"ascent-override\": \"normal|<percentage>\",\n                \"descent-override\": \"normal|<percentage>\",\n                \"font-display\": \"[auto|block|swap|fallback|optional]\",\n                \"font-family\": \"<family-name>\",\n                \"font-feature-settings\": \"normal|<feature-tag-value>#\",\n                \"font-variation-settings\": \"normal|[<string> <number>]#\",\n                \"font-stretch\": \"<font-stretch-absolute>{1,2}\",\n                \"font-style\": \"normal|italic|oblique <angle>{0,2}\",\n                \"font-weight\": \"<font-weight-absolute>{1,2}\",\n                \"font-variant\": \"normal|none|[<common-lig-values>||<discretionary-lig-values>||<historical-lig-values>||<contextual-alt-values>||stylistic( <feature-value-name> )||historical-forms||styleset( <feature-value-name># )||character-variant( <feature-value-name># )||swash( <feature-value-name> )||ornaments( <feature-value-name> )||annotation( <feature-value-name> )||[small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps]||<numeric-figure-values>||<numeric-spacing-values>||<numeric-fraction-values>||ordinal||slashed-zero||<east-asian-variant-values>||<east-asian-width-values>||ruby]\",\n                \"line-gap-override\": \"normal|<percentage>\",\n                \"size-adjust\": \"<percentage>\",\n                \"src\": \"[<url> [format( <string># )]?|local( <family-name> )]#\",\n                \"unicode-range\": \"<urange>#\"\n            }\n        },\n        \"font-feature-values\": {\n            \"prelude\": \"<family-name>#\",\n            \"descriptors\": null\n        },\n        \"import\": {\n            \"prelude\": \"[<string>|<url>] [layer|layer( <layer-name> )]? [supports( [<supports-condition>|<declaration>] )]? <media-query-list>?\",\n            \"descriptors\": null\n        },\n        \"keyframes\": {\n            \"prelude\": \"<keyframes-name>\",\n            \"descriptors\": null\n        },\n        \"layer\": {\n            \"prelude\": \"[<layer-name>#|<layer-name>?]\",\n            \"descriptors\": null\n        },\n        \"media\": {\n            \"prelude\": \"<media-query-list>\",\n            \"descriptors\": null\n        },\n        \"namespace\": {\n            \"prelude\": \"<namespace-prefix>? [<string>|<url>]\",\n            \"descriptors\": null\n        },\n        \"page\": {\n            \"prelude\": \"<page-selector-list>\",\n            \"descriptors\": {\n                \"bleed\": \"auto|<length>\",\n                \"marks\": \"none|[crop||cross]\",\n                \"size\": \"<length>{1,2}|auto|[<page-size>||[portrait|landscape]]\"\n            }\n        },\n        \"property\": {\n            \"prelude\": \"<custom-property-name>\",\n            \"descriptors\": {\n                \"syntax\": \"<string>\",\n                \"inherits\": \"true|false\",\n                \"initial-value\": \"<string>\"\n            }\n        },\n        \"scroll-timeline\": {\n            \"prelude\": \"<timeline-name>\",\n            \"descriptors\": null\n        },\n        \"supports\": {\n            \"prelude\": \"<supports-condition>\",\n            \"descriptors\": null\n        },\n        \"viewport\": {\n            \"prelude\": null,\n            \"descriptors\": {\n                \"height\": \"<viewport-length>{1,2}\",\n                \"max-height\": \"<viewport-length>\",\n                \"max-width\": \"<viewport-length>\",\n                \"max-zoom\": \"auto|<number>|<percentage>\",\n                \"min-height\": \"<viewport-length>\",\n                \"min-width\": \"<viewport-length>\",\n                \"min-zoom\": \"auto|<number>|<percentage>\",\n                \"orientation\": \"auto|portrait|landscape\",\n                \"user-zoom\": \"zoom|fixed\",\n                \"viewport-fit\": \"auto|contain|cover\",\n                \"width\": \"<viewport-length>{1,2}\",\n                \"zoom\": \"auto|<number>|<percentage>\"\n            }\n        },\n        \"nest\": {\n            \"prelude\": \"<complex-selector-list>\",\n            \"descriptors\": null\n        }\n    }\n};", "export * as AnPlusB from './AnPlusB.js';\nexport * as Atrule from './Atrule.js';\nexport * as AtrulePrelude from './AtrulePrelude.js';\nexport * as AttributeSelector from './AttributeSelector.js';\nexport * as Block from './Block.js';\nexport * as Brackets from './Brackets.js';\nexport * as CDC from './CDC.js';\nexport * as CDO from './CDO.js';\nexport * as ClassSelector from './ClassSelector.js';\nexport * as Combinator from './Combinator.js';\nexport * as Comment from './Comment.js';\nexport * as Declaration from './Declaration.js';\nexport * as DeclarationList from './DeclarationList.js';\nexport * as Dimension from './Dimension.js';\nexport * as Function from './Function.js';\nexport * as Hash from './Hash.js';\nexport * as Identifier from './Identifier.js';\nexport * as IdSelector from './IdSelector.js';\nexport * as MediaFeature from './MediaFeature.js';\nexport * as MediaQuery from './MediaQuery.js';\nexport * as MediaQueryList from './MediaQueryList.js';\nexport * as NestingSelector from './NestingSelector.js';\nexport * as Nth from './Nth.js';\nexport * as Number from './Number.js';\nexport * as Operator from './Operator.js';\nexport * as Parentheses from './Parentheses.js';\nexport * as Percentage from './Percentage.js';\nexport * as PseudoClassSelector from './PseudoClassSelector.js';\nexport * as PseudoElementSelector from './PseudoElementSelector.js';\nexport * as Ratio from './Ratio.js';\nexport * as Raw from './Raw.js';\nexport * as Rule from './Rule.js';\nexport * as Selector from './Selector.js';\nexport * as SelectorList from './SelectorList.js';\nexport * as String from './String.js';\nexport * as StyleSheet from './StyleSheet.js';\nexport * as TypeSelector from './TypeSelector.js';\nexport * as UnicodeRange from './UnicodeRange.js';\nexport * as Url from './Url.js';\nexport * as Value from './Value.js';\nexport * as WhiteSpace from './WhiteSpace.js';\n", "import {\n    isDigit,\n    WhiteSpace,\n    Comment,\n    Ident,\n    Number,\n    Dimension\n} from '../../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\nconst N = 0x006E;           // U+006E LATIN SMALL LETTER N (n)\nconst DISALLOW_SIGN = true;\nconst ALLOW_SIGN = false;\n\nfunction checkInteger(offset, disallowSign) {\n    let pos = this.tokenStart + offset;\n    const code = this.charCodeAt(pos);\n\n    if (code === PLUSSIGN || code === HYPHENMINUS) {\n        if (disallowSign) {\n            this.error('Number sign is not allowed');\n        }\n        pos++;\n    }\n\n    for (; pos < this.tokenEnd; pos++) {\n        if (!isDigit(this.charCodeAt(pos))) {\n            this.error('Integer is expected', pos);\n        }\n    }\n}\n\nfunction checkTokenIsInteger(disallowSign) {\n    return checkInteger.call(this, 0, disallowSign);\n}\n\nfunction expectCharCode(offset, code) {\n    if (!this.cmpChar(this.tokenStart + offset, code)) {\n        let msg = '';\n\n        switch (code) {\n            case N:\n                msg = 'N is expected';\n                break;\n            case HYPHENMINUS:\n                msg = 'HyphenMinus is expected';\n                break;\n        }\n\n        this.error(msg, this.tokenStart + offset);\n    }\n}\n\n// ... <signed-integer>\n// ... ['+' | '-'] <signless-integer>\nfunction consumeB() {\n    let offset = 0;\n    let sign = 0;\n    let type = this.tokenType;\n\n    while (type === WhiteSpace || type === Comment) {\n        type = this.lookupType(++offset);\n    }\n\n    if (type !== Number) {\n        if (this.isDelim(PLUSSIGN, offset) ||\n            this.isDelim(HYPHENMINUS, offset)) {\n            sign = this.isDelim(PLUSSIGN, offset) ? PLUSSIGN : HYPHENMINUS;\n\n            do {\n                type = this.lookupType(++offset);\n            } while (type === WhiteSpace || type === Comment);\n\n            if (type !== Number) {\n                this.skip(offset);\n                checkTokenIsInteger.call(this, DISALLOW_SIGN);\n            }\n        } else {\n            return null;\n        }\n    }\n\n    if (offset > 0) {\n        this.skip(offset);\n    }\n\n    if (sign === 0) {\n        type = this.charCodeAt(this.tokenStart);\n        if (type !== PLUSSIGN && type !== HYPHENMINUS) {\n            this.error('Number sign is expected');\n        }\n    }\n\n    checkTokenIsInteger.call(this, sign !== 0);\n    return sign === HYPHENMINUS ? '-' + this.consume(Number) : this.consume(Number);\n}\n\n// An+B microsyntax https://www.w3.org/TR/css-syntax-3/#anb\nexport const name = 'AnPlusB';\nexport const structure = {\n    a: [String, null],\n    b: [String, null]\n};\n\nexport function parse() {\n    /* eslint-disable brace-style*/\n    const start = this.tokenStart;\n    let a = null;\n    let b = null;\n\n    // <integer>\n    if (this.tokenType === Number) {\n        checkTokenIsInteger.call(this, ALLOW_SIGN);\n        b = this.consume(Number);\n    }\n\n    // -n\n    // -n <signed-integer>\n    // -n ['+' | '-'] <signless-integer>\n    // -n- <signless-integer>\n    // <dashndashdigit-ident>\n    else if (this.tokenType === Ident && this.cmpChar(this.tokenStart, HYPHENMINUS)) {\n        a = '-1';\n\n        expectCharCode.call(this, 1, N);\n\n        switch (this.tokenEnd - this.tokenStart) {\n            // -n\n            // -n <signed-integer>\n            // -n ['+' | '-'] <signless-integer>\n            case 2:\n                this.next();\n                b = consumeB.call(this);\n                break;\n\n            // -n- <signless-integer>\n            case 3:\n                expectCharCode.call(this, 2, HYPHENMINUS);\n\n                this.next();\n                this.skipSC();\n\n                checkTokenIsInteger.call(this, DISALLOW_SIGN);\n\n                b = '-' + this.consume(Number);\n                break;\n\n            // <dashndashdigit-ident>\n            default:\n                expectCharCode.call(this, 2, HYPHENMINUS);\n                checkInteger.call(this, 3, DISALLOW_SIGN);\n                this.next();\n\n                b = this.substrToCursor(start + 2);\n        }\n    }\n\n    // '+'? n\n    // '+'? n <signed-integer>\n    // '+'? n ['+' | '-'] <signless-integer>\n    // '+'? n- <signless-integer>\n    // '+'? <ndashdigit-ident>\n    else if (this.tokenType === Ident || (this.isDelim(PLUSSIGN) && this.lookupType(1) === Ident)) {\n        let sign = 0;\n        a = '1';\n\n        // just ignore a plus\n        if (this.isDelim(PLUSSIGN)) {\n            sign = 1;\n            this.next();\n        }\n\n        expectCharCode.call(this, 0, N);\n\n        switch (this.tokenEnd - this.tokenStart) {\n            // '+'? n\n            // '+'? n <signed-integer>\n            // '+'? n ['+' | '-'] <signless-integer>\n            case 1:\n                this.next();\n                b = consumeB.call(this);\n                break;\n\n            // '+'? n- <signless-integer>\n            case 2:\n                expectCharCode.call(this, 1, HYPHENMINUS);\n\n                this.next();\n                this.skipSC();\n\n                checkTokenIsInteger.call(this, DISALLOW_SIGN);\n\n                b = '-' + this.consume(Number);\n                break;\n\n            // '+'? <ndashdigit-ident>\n            default:\n                expectCharCode.call(this, 1, HYPHENMINUS);\n                checkInteger.call(this, 2, DISALLOW_SIGN);\n                this.next();\n\n                b = this.substrToCursor(start + sign + 1);\n        }\n    }\n\n    // <ndashdigit-dimension>\n    // <ndash-dimension> <signless-integer>\n    // <n-dimension>\n    // <n-dimension> <signed-integer>\n    // <n-dimension> ['+' | '-'] <signless-integer>\n    else if (this.tokenType === Dimension) {\n        const code = this.charCodeAt(this.tokenStart);\n        const sign = code === PLUSSIGN || code === HYPHENMINUS;\n        let i = this.tokenStart + sign;\n\n        for (; i < this.tokenEnd; i++) {\n            if (!isDigit(this.charCodeAt(i))) {\n                break;\n            }\n        }\n\n        if (i === this.tokenStart + sign) {\n            this.error('Integer is expected', this.tokenStart + sign);\n        }\n\n        expectCharCode.call(this, i - this.tokenStart, N);\n        a = this.substring(start, i);\n\n        // <n-dimension>\n        // <n-dimension> <signed-integer>\n        // <n-dimension> ['+' | '-'] <signless-integer>\n        if (i + 1 === this.tokenEnd) {\n            this.next();\n            b = consumeB.call(this);\n        } else {\n            expectCharCode.call(this, i - this.tokenStart + 1, HYPHENMINUS);\n\n            // <ndash-dimension> <signless-integer>\n            if (i + 2 === this.tokenEnd) {\n                this.next();\n                this.skipSC();\n                checkTokenIsInteger.call(this, DISALLOW_SIGN);\n                b = '-' + this.consume(Number);\n            }\n            // <ndashdigit-dimension>\n            else {\n                checkInteger.call(this, i - this.tokenStart + 2, DISALLOW_SIGN);\n                this.next();\n                b = this.substrToCursor(i + 1);\n            }\n        }\n    } else {\n        this.error();\n    }\n\n    if (a !== null && a.charCodeAt(0) === PLUSSIGN) {\n        a = a.substr(1);\n    }\n\n    if (b !== null && b.charCodeAt(0) === PLUSSIGN) {\n        b = b.substr(1);\n    }\n\n    return {\n        type: 'AnPlusB',\n        loc: this.getLocation(start, this.tokenStart),\n        a,\n        b\n    };\n}\n\nexport function generate(node) {\n    if (node.a) {\n        const a =\n            node.a === '+1' && 'n' ||\n            node.a ===  '1' && 'n' ||\n            node.a === '-1' && '-n' ||\n            node.a + 'n';\n\n        if (node.b) {\n            const b = node.b[0] === '-' || node.b[0] === '+'\n                ? node.b\n                : '+' + node.b;\n            this.tokenize(a + b);\n        } else {\n            this.tokenize(a);\n        }\n    } else {\n        this.tokenize(node.b);\n    }\n}\n", "import {\n    AtKeyword,\n    Semicolon,\n    LeftCurlyBracket,\n    RightCurlyBracket\n} from '../../tokenizer/index.js';\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, this.consumeUntilLeftCurlyBracketOrSemicolon, true);\n}\n\nfunction isDeclarationBlockAtrule() {\n    for (let offset = 1, type; type = this.lookupType(offset); offset++) {\n        if (type === RightCurlyBracket) {\n            return true;\n        }\n\n        if (type === LeftCurlyBracket ||\n            type === AtKeyword) {\n            return false;\n        }\n    }\n\n    return false;\n}\n\n\nexport const name = 'Atrule';\nexport const walkContext = 'atrule';\nexport const structure = {\n    name: String,\n    prelude: ['AtrulePrelude', 'Raw', null],\n    block: ['Block', null]\n};\n\nexport function parse(isDeclaration = false) {\n    const start = this.tokenStart;\n    let name;\n    let nameLowerCase;\n    let prelude = null;\n    let block = null;\n\n    this.eat(AtKeyword);\n\n    name = this.substrToCursor(start + 1);\n    nameLowerCase = name.toLowerCase();\n    this.skipSC();\n\n    // parse prelude\n    if (this.eof === false &&\n        this.tokenType !== LeftCurlyBracket &&\n        this.tokenType !== Semicolon) {\n        if (this.parseAtrulePrelude) {\n            prelude = this.parseWithFallback(this.AtrulePrelude.bind(this, name, isDeclaration), consumeRaw);\n        } else {\n            prelude = consumeRaw.call(this, this.tokenIndex);\n        }\n\n        this.skipSC();\n    }\n\n    switch (this.tokenType) {\n        case Semicolon:\n            this.next();\n            break;\n\n        case LeftCurlyBracket:\n            if (hasOwnProperty.call(this.atrule, nameLowerCase) &&\n                typeof this.atrule[nameLowerCase].block === 'function') {\n                block = this.atrule[nameLowerCase].block.call(this, isDeclaration);\n            } else {\n                // TODO: should consume block content as Raw?\n                block = this.Block(isDeclarationBlockAtrule.call(this));\n            }\n\n            break;\n    }\n\n    return {\n        type: 'Atrule',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        prelude,\n        block\n    };\n}\n\nexport function generate(node) {\n    this.token(AtKeyword, '@' + node.name);\n\n    if (node.prelude !== null) {\n        this.node(node.prelude);\n    }\n\n    if (node.block) {\n        this.node(node.block);\n    } else {\n        this.token(Semicolon, ';');\n    }\n}\n", "import {\n    Semicolon,\n    LeftCurlyBracket\n} from '../../tokenizer/index.js';\n\nexport const name = 'AtrulePrelude';\nexport const walkContext = 'atrulePrelude';\nexport const structure = {\n    children: [[]]\n};\n\nexport function parse(name) {\n    let children = null;\n\n    if (name !== null) {\n        name = name.toLowerCase();\n    }\n\n    this.skipSC();\n\n    if (hasOwnProperty.call(this.atrule, name) &&\n        typeof this.atrule[name].prelude === 'function') {\n        // custom consumer\n        children = this.atrule[name].prelude.call(this);\n    } else {\n        // default consumer\n        children = this.readSequence(this.scope.AtrulePrelude);\n    }\n\n    this.skipSC();\n\n    if (this.eof !== true &&\n        this.tokenType !== LeftCurlyBracket &&\n        this.tokenType !== Semicolon) {\n        this.error('Semicolon or block is expected');\n    }\n\n    return {\n        type: 'AtrulePrelude',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node);\n}\n", "import {\n    Ident,\n    String as StringToken,\n    Delim,\n    LeftSquareBracket,\n    RightSquareBracket\n} from '../../tokenizer/index.js';\n\nconst DOLLARSIGN = 0x0024;       // U+0024 DOLLAR SIGN ($)\nconst ASTERISK = 0x002A;         // U+002A ASTERISK (*)\nconst EQUALSSIGN = 0x003D;       // U+003D EQUALS SIGN (=)\nconst CIRCUMFLEXACCENT = 0x005E; // U+005E (^)\nconst VERTICALLINE = 0x007C;     // U+007C VERTICAL LINE (|)\nconst TILDE = 0x007E;            // U+007E TILDE (~)\n\nfunction getAttributeName() {\n    if (this.eof) {\n        this.error('Unexpected end of input');\n    }\n\n    const start = this.tokenStart;\n    let expectIdent = false;\n\n    if (this.isDelim(ASTERISK)) {\n        expectIdent = true;\n        this.next();\n    } else if (!this.isDelim(VERTICALLINE)) {\n        this.eat(Ident);\n    }\n\n    if (this.isDelim(VERTICALLINE)) {\n        if (this.charCodeAt(this.tokenStart + 1) !== EQUALSSIGN) {\n            this.next();\n            this.eat(Ident);\n        } else if (expectIdent) {\n            this.error('Identifier is expected', this.tokenEnd);\n        }\n    } else if (expectIdent) {\n        this.error('Vertical line is expected');\n    }\n\n    return {\n        type: 'Identifier',\n        loc: this.getLocation(start, this.tokenStart),\n        name: this.substrToCursor(start)\n    };\n}\n\nfunction getOperator() {\n    const start = this.tokenStart;\n    const code = this.charCodeAt(start);\n\n    if (code !== EQUALSSIGN &&        // =\n        code !== TILDE &&             // ~=\n        code !== CIRCUMFLEXACCENT &&  // ^=\n        code !== DOLLARSIGN &&        // $=\n        code !== ASTERISK &&          // *=\n        code !== VERTICALLINE         // |=\n    ) {\n        this.error('Attribute selector (=, ~=, ^=, $=, *=, |=) is expected');\n    }\n\n    this.next();\n\n    if (code !== EQUALSSIGN) {\n        if (!this.isDelim(EQUALSSIGN)) {\n            this.error('Equal sign is expected');\n        }\n\n        this.next();\n    }\n\n    return this.substrToCursor(start);\n}\n\n// '[' <wq-name> ']'\n// '[' <wq-name> <attr-matcher> [ <string-token> | <ident-token> ] <attr-modifier>? ']'\nexport const name = 'AttributeSelector';\nexport const structure = {\n    name: 'Identifier',\n    matcher: [String, null],\n    value: ['String', 'Identifier', null],\n    flags: [String, null]\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    let name;\n    let matcher = null;\n    let value = null;\n    let flags = null;\n\n    this.eat(LeftSquareBracket);\n    this.skipSC();\n\n    name = getAttributeName.call(this);\n    this.skipSC();\n\n    if (this.tokenType !== RightSquareBracket) {\n        // avoid case `[name i]`\n        if (this.tokenType !== Ident) {\n            matcher = getOperator.call(this);\n\n            this.skipSC();\n\n            value = this.tokenType === StringToken\n                ? this.String()\n                : this.Identifier();\n\n            this.skipSC();\n        }\n\n        // attribute flags\n        if (this.tokenType === Ident) {\n            flags = this.consume(Ident);\n\n            this.skipSC();\n        }\n    }\n\n    this.eat(RightSquareBracket);\n\n    return {\n        type: 'AttributeSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        matcher,\n        value,\n        flags\n    };\n}\n\nexport function generate(node) {\n    this.token(Delim, '[');\n    this.node(node.name);\n\n    if (node.matcher !== null) {\n        this.tokenize(node.matcher);\n        this.node(node.value);\n    }\n\n    if (node.flags !== null) {\n        this.token(Ident, node.flags);\n    }\n\n    this.token(Delim, ']');\n}\n", "import {\n    WhiteSpace,\n    Comment,\n    Semicolon,\n    AtKeyword,\n    LeftCurlyBracket,\n    RightCurlyBracket\n} from '../../tokenizer/index.js';\n\nconst AMPERSAND = 0x0026;       // U+0026 AMPERSAND (&)\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, null, true);\n}\nfunction consumeRule() {\n    return this.parseWithFallback(this.Rule, consumeRaw);\n}\nfunction consumeRawDeclaration(startToken) {\n    return this.Raw(startToken, this.consumeUntilSemicolonIncluded, true);\n}\nfunction consumeDeclaration() {\n    if (this.tokenType === Semicolon) {\n        return consumeRawDeclaration.call(this, this.tokenIndex);\n    }\n\n    const node = this.parseWithFallback(this.Declaration, consumeRawDeclaration);\n\n    if (this.tokenType === Semicolon) {\n        this.next();\n    }\n\n    return node;\n}\n\nexport const name = 'Block';\nexport const walkContext = 'block';\nexport const structure = {\n    children: [[\n        'Atrule',\n        'Rule',\n        'Declaration'\n    ]]\n};\n\nexport function parse(isStyleBlock) {\n    const consumer = isStyleBlock ? consumeDeclaration : consumeRule;\n    const start = this.tokenStart;\n    let children = this.createList();\n\n    this.eat(LeftCurlyBracket);\n\n    scan:\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case RightCurlyBracket:\n                break scan;\n\n            case WhiteSpace:\n            case Comment:\n                this.next();\n                break;\n\n            case AtKeyword:\n                children.push(this.parseWithFallback(this.Atrule.bind(this, isStyleBlock), consumeRaw));\n                break;\n\n            default:\n                if (isStyleBlock && this.isDelim(AMPERSAND))  {\n                    children.push(consumeRule.call(this));\n                } else {\n                    children.push(consumer.call(this));\n                }\n        }\n    }\n\n    if (!this.eof) {\n        this.eat(RightCurlyBracket);\n    }\n\n    return {\n        type: 'Block',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(LeftCurlyBracket, '{');\n    this.children(node, prev => {\n        if (prev.type === 'Declaration') {\n            this.token(Semicolon, ';');\n        }\n    });\n    this.token(RightCurlyBracket, '}');\n}\n", "import {\n    Delim,\n    LeftSquareBracket,\n    RightSquareBracket\n} from '../../tokenizer/index.js';\n\nexport const name = 'Brackets';\nexport const structure = {\n    children: [[]]\n};\n\nexport function parse(readSequence, recognizer) {\n    const start = this.tokenStart;\n    let children = null;\n\n    this.eat(LeftSquareBracket);\n\n    children = readSequence.call(this, recognizer);\n\n    if (!this.eof) {\n        this.eat(RightSquareBracket);\n    }\n\n    return {\n        type: 'Brackets',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(Delim, '[');\n    this.children(node);\n    this.token(Delim, ']');\n}\n", "import { CDC } from '../../tokenizer/index.js';\n\nexport const name = 'CDC';\nexport const structure = [];\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    this.eat(CDC); // -->\n\n    return {\n        type: 'CDC',\n        loc: this.getLocation(start, this.tokenStart)\n    };\n}\n\nexport function generate() {\n    this.token(CDC, '-->');\n}\n", "import { CDO } from '../../tokenizer/index.js';\n\nexport const name = 'CDO';\nexport const structure = [];\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    this.eat(CDO); // <!--\n\n    return {\n        type: 'CDO',\n        loc: this.getLocation(start, this.tokenStart)\n    };\n}\n\nexport function generate() {\n    this.token(CDO, '<!--');\n}\n", "import { Delim, Ident } from '../../tokenizer/index.js';\n\nconst FULLSTOP = 0x002E; // U+002E FULL STOP (.)\n\n// '.' ident\nexport const name = 'ClassSelector';\nexport const structure = {\n    name: String\n};\n\nexport function parse() {\n    this.eatDelim(FULLSTOP);\n\n    return {\n        type: 'ClassSelector',\n        loc: this.getLocation(this.tokenStart - 1, this.tokenEnd),\n        name: this.consume(Ident)\n    };\n}\n\nexport function generate(node) {\n    this.token(Delim, '.');\n    this.token(Ident, node.name);\n}\n", "import { WhiteSpace, Delim } from '../../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\nconst SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\nconst GREATERTHANSIGN = 0x003E; // U+003E GREATER-THAN SIGN (>)\nconst TILDE = 0x007E;           // U+007E TILDE (~)\n\nexport const name = 'Combinator';\nexport const structure = {\n    name: String\n};\n\n// + | > | ~ | /deep/\nexport function parse() {\n    const start = this.tokenStart;\n    let name;\n\n    switch (this.tokenType) {\n        case WhiteSpace:\n            name = ' ';\n            break;\n\n        case Delim:\n            switch (this.charCodeAt(this.tokenStart)) {\n                case GREATERTHANSIGN:\n                case PLUSSIGN:\n                case TILDE:\n                    this.next();\n                    break;\n\n                case SOLIDUS:\n                    this.next();\n                    this.eatIdent('deep');\n                    this.eatDelim(SOLIDUS);\n                    break;\n\n                default:\n                    this.error('Combinator is expected');\n            }\n\n            name = this.substrToCursor(start);\n            break;\n    }\n\n    return {\n        type: 'Combinator',\n        loc: this.getLocation(start, this.tokenStart),\n        name\n    };\n}\n\nexport function generate(node) {\n    this.tokenize(node.name);\n}\n", "import { Comment } from '../../tokenizer/index.js';\n\nconst ASTERISK = 0x002A;        // U+002A ASTERISK (*)\nconst SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\n\n\nexport const name = 'Comment';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    let end = this.tokenEnd;\n\n    this.eat(Comment);\n\n    if ((end - start + 2) >= 2 &&\n        this.charCodeAt(end - 2) === ASTERISK &&\n        this.charCodeAt(end - 1) === SOLIDUS) {\n        end -= 2;\n    }\n\n    return {\n        type: 'Comment',\n        loc: this.getLocation(start, this.tokenStart),\n        value: this.substring(start + 2, end)\n    };\n}\n\nexport function generate(node) {\n    this.token(Comment, '/*' + node.value + '*/');\n}\n", "import { isCustomProperty } from '../../utils/names.js';\nimport {\n    Ident,\n    Hash,\n    Colon,\n    Semicolon,\n    Delim,\n    WhiteSpace\n} from '../../tokenizer/index.js';\n\nconst EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\nconst NUMBERSIGN = 0x0023;      // U+0023 NUMBER SIGN (#)\nconst DOLLARSIGN = 0x0024;      // U+0024 DOLLAR SIGN ($)\nconst AMPERSAND = 0x0026;       // U+0026 AMPERSAND (&)\nconst ASTERISK = 0x002A;        // U+002A ASTERISK (*)\nconst PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\nconst SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\n\nfunction consumeValueRaw(startToken) {\n    return this.Raw(startToken, this.consumeUntilExclamationMarkOrSemicolon, true);\n}\n\nfunction consumeCustomPropertyRaw(startToken) {\n    return this.Raw(startToken, this.consumeUntilExclamationMarkOrSemicolon, false);\n}\n\nfunction consumeValue() {\n    const startValueToken = this.tokenIndex;\n    const value = this.Value();\n\n    if (value.type !== 'Raw' &&\n        this.eof === false &&\n        this.tokenType !== Semicolon &&\n        this.isDelim(EXCLAMATIONMARK) === false &&\n        this.isBalanceEdge(startValueToken) === false) {\n        this.error();\n    }\n\n    return value;\n}\n\nexport const name = 'Declaration';\nexport const walkContext = 'declaration';\nexport const structure = {\n    important: [Boolean, String],\n    property: String,\n    value: ['Value', 'Raw']\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    const startToken = this.tokenIndex;\n    const property = readProperty.call(this);\n    const customProperty = isCustomProperty(property);\n    const parseValue = customProperty ? this.parseCustomProperty : this.parseValue;\n    const consumeRaw = customProperty ? consumeCustomPropertyRaw : consumeValueRaw;\n    let important = false;\n    let value;\n\n    this.skipSC();\n    this.eat(Colon);\n\n    const valueStart = this.tokenIndex;\n\n    if (!customProperty) {\n        this.skipSC();\n    }\n\n    if (parseValue) {\n        value = this.parseWithFallback(consumeValue, consumeRaw);\n    } else {\n        value = consumeRaw.call(this, this.tokenIndex);\n    }\n\n    if (customProperty && value.type === 'Value' && value.children.isEmpty) {\n        for (let offset = valueStart - this.tokenIndex; offset <= 0; offset++) {\n            if (this.lookupType(offset) === WhiteSpace) {\n                value.children.appendData({\n                    type: 'WhiteSpace',\n                    loc: null,\n                    value: ' '\n                });\n                break;\n            }\n        }\n    }\n\n    if (this.isDelim(EXCLAMATIONMARK)) {\n        important = getImportant.call(this);\n        this.skipSC();\n    }\n\n    // Do not include semicolon to range per spec\n    // https://drafts.csswg.org/css-syntax/#declaration-diagram\n\n    if (this.eof === false &&\n        this.tokenType !== Semicolon &&\n        this.isBalanceEdge(startToken) === false) {\n        this.error();\n    }\n\n    return {\n        type: 'Declaration',\n        loc: this.getLocation(start, this.tokenStart),\n        important,\n        property,\n        value\n    };\n}\n\nexport function generate(node) {\n    this.token(Ident, node.property);\n    this.token(Colon, ':');\n    this.node(node.value);\n\n    if (node.important) {\n        this.token(Delim, '!');\n        this.token(Ident, node.important === true ? 'important' : node.important);\n    }\n}\n\nfunction readProperty() {\n    const start = this.tokenStart;\n\n    // hacks\n    if (this.tokenType === Delim) {\n        switch (this.charCodeAt(this.tokenStart)) {\n            case ASTERISK:\n            case DOLLARSIGN:\n            case PLUSSIGN:\n            case NUMBERSIGN:\n            case AMPERSAND:\n                this.next();\n                break;\n\n            // TODO: not sure we should support this hack\n            case SOLIDUS:\n                this.next();\n                if (this.isDelim(SOLIDUS)) {\n                    this.next();\n                }\n                break;\n        }\n    }\n\n    if (this.tokenType === Hash) {\n        this.eat(Hash);\n    } else {\n        this.eat(Ident);\n    }\n\n    return this.substrToCursor(start);\n}\n\n// ! ws* important\nfunction getImportant() {\n    this.eat(Delim);\n    this.skipSC();\n\n    const important = this.consume(Ident);\n\n    // store original value in case it differ from `important`\n    // for better original source restoring and hacks like `!ie` support\n    return important === 'important' ? true : important;\n}\n", "import {\n    WhiteSpace,\n    Comment,\n    Semicolon,\n    AtKeyword\n} from '../../tokenizer/index.js';\n\nconst AMPERSAND = 0x0026;       // U+0026 AMPERSAND (&)\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, this.consumeUntilSemicolonIncluded, true);\n}\n\nexport const name = 'DeclarationList';\nexport const structure = {\n    children: [[\n        'Declaration',\n        'Atrule',\n        'Rule'\n    ]]\n};\n\nexport function parse() {\n    const children = this.createList();\n\n    scan:\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case WhiteSpace:\n            case Comment:\n            case Semicolon:\n                this.next();\n                break;\n\n            case AtKeyword:\n                children.push(this.parseWithFallback(this.Atrule.bind(this, true), consumeRaw));\n                break;\n\n            default:\n                if (this.isDelim(AMPERSAND))  {\n                    children.push(this.parseWithFallback(this.Rule, consumeRaw));\n                } else {\n                    children.push(this.parseWithFallback(this.Declaration, consumeRaw));\n                }\n        }\n    }\n\n    return {\n        type: 'DeclarationList',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node, prev => {\n        if (prev.type === 'Declaration') {\n            this.token(Semicolon, ';');\n        }\n    });\n}\n\n", "import { Dimension } from '../../tokenizer/index.js';\n\nexport const name = 'Dimension';\nexport const structure = {\n    value: String,\n    unit: String\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    const value = this.consumeNumber(Dimension);\n\n    return {\n        type: 'Dimension',\n        loc: this.getLocation(start, this.tokenStart),\n        value,\n        unit: this.substring(start + value.length, this.tokenStart)\n    };\n}\n\nexport function generate(node) {\n    this.token(Dimension, node.value + node.unit);\n}\n", "import {\n    Function as FunctionToken,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\n\nexport const name = 'Function';\nexport const walkContext = 'function';\nexport const structure = {\n    name: String,\n    children: [[]]\n};\n\n// <function-token> <sequence> )\nexport function parse(readSequence, recognizer) {\n    const start = this.tokenStart;\n    const name = this.consumeFunctionName();\n    const nameLowerCase = name.toLowerCase();\n    let children;\n\n    children = recognizer.hasOwnProperty(nameLowerCase)\n        ? recognizer[nameLowerCase].call(this, recognizer)\n        : readSequence.call(this, recognizer);\n\n    if (!this.eof) {\n        this.eat(RightParenthesis);\n    }\n\n    return {\n        type: 'Function',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(FunctionToken, node.name + '(');\n    this.children(node);\n    this.token(RightParenthesis, ')');\n}\n", "import { Hash } from '../../tokenizer/index.js';\n\n// '#' ident\nexport const xxx = 'XXX';\nexport const name = 'Hash';\nexport const structure = {\n    value: String\n};\nexport function parse() {\n    const start = this.tokenStart;\n\n    this.eat(Hash);\n\n    return {\n        type: 'Hash',\n        loc: this.getLocation(start, this.tokenStart),\n        value: this.substrToCursor(start + 1)\n    };\n}\nexport function generate(node) {\n    this.token(Hash, '#' + node.value);\n}\n\n", "import { Ident } from '../../tokenizer/index.js';\n\nexport const name = 'Identifier';\nexport const structure = {\n    name: String\n};\n\nexport function parse() {\n    return {\n        type: 'Identifier',\n        loc: this.getLocation(this.tokenStart, this.tokenEnd),\n        name: this.consume(Ident)\n    };\n}\n\nexport function generate(node) {\n    this.token(Ident, node.name);\n}\n", "import { Hash, Delim } from '../../tokenizer/index.js';\n\nexport const name = 'IdSelector';\nexport const structure = {\n    name: String\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    // TODO: check value is an ident\n    this.eat(Hash);\n\n    return {\n        type: 'IdSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name: this.substrToCursor(start + 1)\n    };\n}\n\nexport function generate(node) {\n    // Using Delim instead of Hash is a hack to avoid for a whitespace between ident and id-selector\n    // in safe mode (e.g. \"a#id\"), because IE11 doesn't allow a sequence <ident-token> <hash-token>\n    // without a whitespace in values (e.g. \"1px solid#000\")\n    this.token(Delim, '#' + node.name);\n}\n", "import {\n    Ident,\n    Number,\n    Dimension,\n    LeftParenthesis,\n    RightParenthesis,\n    Colon,\n    Delim\n} from '../../tokenizer/index.js';\n\nexport const name = 'MediaFeature';\nexport const structure = {\n    name: String,\n    value: ['Identifier', 'Number', 'Dimension', 'Ratio', null]\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    let name;\n    let value = null;\n\n    this.eat(LeftParenthesis);\n    this.skipSC();\n\n    name = this.consume(Ident);\n    this.skipSC();\n\n    if (this.tokenType !== RightParenthesis) {\n        this.eat(Colon);\n        this.skipSC();\n\n        switch (this.tokenType) {\n            case Number:\n                if (this.lookupNonWSType(1) === Delim) {\n                    value = this.Ratio();\n                } else {\n                    value = this.Number();\n                }\n\n                break;\n\n            case Dimension:\n                value = this.Dimension();\n                break;\n\n            case Ident:\n                value = this.Identifier();\n                break;\n\n            default:\n                this.error('Number, dimension, ratio or identifier is expected');\n        }\n\n        this.skipSC();\n    }\n\n    this.eat(RightParenthesis);\n\n    return {\n        type: 'MediaFeature',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        value\n    };\n}\n\nexport function generate(node) {\n    this.token(LeftParenthesis, '(');\n    this.token(Ident, node.name);\n\n    if (node.value !== null) {\n        this.token(Colon, ':');\n        this.node(node.value);\n    }\n\n    this.token(RightParenthesis, ')');\n}\n", "import {\n    WhiteSpace,\n    Comment,\n    Ident,\n    LeftParenthesis\n} from '../../tokenizer/index.js';\n\nexport const name = 'MediaQuery';\nexport const structure = {\n    children: [[\n        'Identifier',\n        'MediaFeature',\n        'WhiteSpace'\n    ]]\n};\n\nexport function parse() {\n    const children = this.createList();\n    let child = null;\n\n    this.skipSC();\n\n    scan:\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case Comment:\n            case WhiteSpace:\n                this.next();\n                continue;\n\n            case Ident:\n                child = this.Identifier();\n                break;\n\n            case LeftParenthesis:\n                child = this.MediaFeature();\n                break;\n\n            default:\n                break scan;\n        }\n\n        children.push(child);\n    }\n\n    if (child === null) {\n        this.error('Identifier or parenthesis is expected');\n    }\n\n    return {\n        type: 'MediaQuery',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node);\n}\n\n", "import { Comma } from '../../tokenizer/index.js';\n\nexport const name = 'MediaQueryList';\nexport const structure = {\n    children: [[\n        'MediaQuery'\n    ]]\n};\n\nexport function parse() {\n    const children = this.createList();\n\n    this.skipSC();\n\n    while (!this.eof) {\n        children.push(this.MediaQuery());\n\n        if (this.tokenType !== Comma) {\n            break;\n        }\n\n        this.next();\n    }\n\n    return {\n        type: 'MediaQueryList',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node, () => this.token(Comma, ','));\n}\n", "import { Delim } from '../../tokenizer/index.js';\n\nconst AMPERSAND = 0x0026;       // U+0026 AMPERSAND (&)\n\nexport const name = 'NestingSelector';\nexport const structure = {\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    this.eatDelim(AMPERSAND);\n\n    return {\n        type: 'NestingSelector',\n        loc: this.getLocation(start, this.tokenStart)\n    };\n}\n\nexport function generate() {\n    this.token(Delim, '&');\n}\n", "import { Ident } from '../../tokenizer/index.js';\n\nexport const name = 'Nth';\nexport const structure = {\n    nth: ['AnPlusB', 'Identifier'],\n    selector: ['SelectorList', null]\n};\n\nexport function parse() {\n    this.skipSC();\n\n    const start = this.tokenStart;\n    let end = start;\n    let selector = null;\n    let nth;\n\n    if (this.lookupValue(0, 'odd') || this.lookupValue(0, 'even')) {\n        nth = this.Identifier();\n    } else {\n        nth = this.AnPlusB();\n    }\n\n    end = this.tokenStart;\n    this.skipSC();\n\n    if (this.lookupValue(0, 'of')) {\n        this.next();\n\n        selector = this.SelectorList();\n        end = this.tokenStart;\n    }\n\n    return {\n        type: 'Nth',\n        loc: this.getLocation(start, end),\n        nth,\n        selector\n    };\n}\n\nexport function generate(node) {\n    this.node(node.nth);\n    if (node.selector !== null) {\n        this.token(Ident, 'of');\n        this.node(node.selector);\n    }\n}\n", "import { Number as NumberToken } from '../../tokenizer/index.js';\n\nexport const name = 'Number';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    return {\n        type: 'Number',\n        loc: this.getLocation(this.tokenStart, this.tokenEnd),\n        value: this.consume(NumberToken)\n    };\n}\n\nexport function generate(node) {\n    this.token(NumberToken, node.value);\n}\n", "// '/' | '*' | ',' | ':' | '+' | '-'\nexport const name = 'Operator';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    this.next();\n\n    return {\n        type: 'Operator',\n        loc: this.getLocation(start, this.tokenStart),\n        value: this.substrToCursor(start)\n    };\n}\n\nexport function generate(node) {\n    this.tokenize(node.value);\n}\n", "import {\n    LeftParenthesis,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\nexport const name = 'Parentheses';\nexport const structure = {\n    children: [[]]\n};\n\nexport function parse(readSequence, recognizer) {\n    const start = this.tokenStart;\n    let children = null;\n\n    this.eat(LeftParenthesis);\n\n    children = readSequence.call(this, recognizer);\n\n    if (!this.eof) {\n        this.eat(RightParenthesis);\n    }\n\n    return {\n        type: 'Parentheses',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(LeftParenthesis, '(');\n    this.children(node);\n    this.token(RightParenthesis, ')');\n}\n", "import { Percentage } from '../../tokenizer/index.js';\n\nexport const name = 'Percentage';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    return {\n        type: 'Percentage',\n        loc: this.getLocation(this.tokenStart, this.tokenEnd),\n        value: this.consumeNumber(Percentage)\n    };\n}\n\nexport function generate(node) {\n    this.token(Percentage, node.value + '%');\n}\n", "import {\n    Ident,\n    Function as FunctionToken,\n    Colon,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\n\nexport const name = 'PseudoClassSelector';\nexport const walkContext = 'function';\nexport const structure = {\n    name: String,\n    children: [['Raw'], null]\n};\n\n// : [ <ident> | <function-token> <any-value>? ) ]\nexport function parse() {\n    const start = this.tokenStart;\n    let children = null;\n    let name;\n    let nameLowerCase;\n\n    this.eat(Colon);\n\n    if (this.tokenType === FunctionToken) {\n        name = this.consumeFunctionName();\n        nameLowerCase = name.toLowerCase();\n\n        if (hasOwnProperty.call(this.pseudo, nameLowerCase)) {\n            this.skipSC();\n            children = this.pseudo[nameLowerCase].call(this);\n            this.skipSC();\n        } else {\n            children = this.createList();\n            children.push(\n                this.Raw(this.tokenIndex, null, false)\n            );\n        }\n\n        this.eat(RightParenthesis);\n    } else {\n        name = this.consume(Ident);\n    }\n\n    return {\n        type: 'PseudoClassSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(Colon, ':');\n\n    if (node.children === null) {\n        this.token(Ident, node.name);\n    } else {\n        this.token(FunctionToken, node.name + '(');\n        this.children(node);\n        this.token(RightParenthesis, ')');\n    }\n}\n", "import {\n    Ident,\n    Function as FunctionToken,\n    Colon,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\nexport const name = 'PseudoElementSelector';\nexport const walkContext = 'function';\nexport const structure = {\n    name: String,\n    children: [['Raw'], null]\n};\n\n// :: [ <ident> | <function-token> <any-value>? ) ]\nexport function parse() {\n    const start = this.tokenStart;\n    let children = null;\n    let name;\n    let nameLowerCase;\n\n    this.eat(Colon);\n    this.eat(Colon);\n\n    if (this.tokenType === FunctionToken) {\n        name = this.consumeFunctionName();\n        nameLowerCase = name.toLowerCase();\n\n        if (hasOwnProperty.call(this.pseudo, nameLowerCase)) {\n            this.skipSC();\n            children = this.pseudo[nameLowerCase].call(this);\n            this.skipSC();\n        } else {\n            children = this.createList();\n            children.push(\n                this.Raw(this.tokenIndex, null, false)\n            );\n        }\n\n        this.eat(RightParenthesis);\n    } else {\n        name = this.consume(Ident);\n    }\n\n    return {\n        type: 'PseudoElementSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(Colon, ':');\n    this.token(Colon, ':');\n\n    if (node.children === null) {\n        this.token(Ident, node.name);\n    } else {\n        this.token(FunctionToken, node.name + '(');\n        this.children(node);\n        this.token(RightParenthesis, ')');\n    }\n}\n", "import { isDigit, Delim, Number as NumberToken } from '../../tokenizer/index.js';\n\nconst SOLIDUS = 0x002F;  // U+002F SOLIDUS (/)\nconst FULLSTOP = 0x002E; // U+002E FULL STOP (.)\n\n// Terms of <ratio> should be a positive numbers (not zero or negative)\n// (see https://drafts.csswg.org/mediaqueries-3/#values)\n// However, -o-min-device-pixel-ratio takes fractional values as a ratio's term\n// and this is using by various sites. Therefore we relax checking on parse\n// to test a term is unsigned number without an exponent part.\n// Additional checking may be applied on lexer validation.\nfunction consumeNumber() {\n    this.skipSC();\n\n    const value = this.consume(NumberToken);\n\n    for (let i = 0; i < value.length; i++) {\n        const code = value.charCodeAt(i);\n        if (!isDigit(code) && code !== FULLSTOP) {\n            this.error('Unsigned number is expected', this.tokenStart - value.length + i);\n        }\n    }\n\n    if (Number(value) === 0) {\n        this.error('Zero number is not allowed', this.tokenStart - value.length);\n    }\n\n    return value;\n}\n\nexport const name = 'Ratio';\nexport const structure = {\n    left: String,\n    right: String\n};\n\n// <positive-integer> S* '/' S* <positive-integer>\nexport function parse() {\n    const start = this.tokenStart;\n    const left = consumeNumber.call(this);\n    let right;\n\n    this.skipSC();\n    this.eatDelim(SOLIDUS);\n    right = consumeNumber.call(this);\n\n    return {\n        type: 'Ratio',\n        loc: this.getLocation(start, this.tokenStart),\n        left,\n        right\n    };\n}\n\nexport function generate(node) {\n    this.token(NumberToken, node.left);\n    this.token(Delim, '/');\n    this.token(NumberToken, node.right);\n}\n", "import { WhiteSpace } from '../../tokenizer/index.js';\n\nfunction getOffsetExcludeWS() {\n    if (this.tokenIndex > 0) {\n        if (this.lookupType(-1) === WhiteSpace) {\n            return this.tokenIndex > 1\n                ? this.getTokenStart(this.tokenIndex - 1)\n                : this.firstCharOffset;\n        }\n    }\n\n    return this.tokenStart;\n}\n\nexport const name = 'Raw';\nexport const structure = {\n    value: String\n};\n\nexport function parse(startToken, consumeUntil, excludeWhiteSpace) {\n    const startOffset = this.getTokenStart(startToken);\n    let endOffset;\n\n    this.skipUntilBalanced(startToken, consumeUntil || this.consumeUntilBalanceEnd);\n\n    if (excludeWhiteSpace && this.tokenStart > startOffset) {\n        endOffset = getOffsetExcludeWS.call(this);\n    } else {\n        endOffset = this.tokenStart;\n    }\n\n    return {\n        type: 'Raw',\n        loc: this.getLocation(startOffset, endOffset),\n        value: this.substring(startOffset, endOffset)\n    };\n}\n\nexport function generate(node) {\n    this.tokenize(node.value);\n}\n", "import { LeftCurlyBracket } from '../../tokenizer/index.js';\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, this.consumeUntilLeftCurlyBracket, true);\n}\n\nfunction consumePrelude() {\n    const prelude = this.SelectorList();\n\n    if (prelude.type !== 'Raw' &&\n        this.eof === false &&\n        this.tokenType !== LeftCurlyBracket) {\n        this.error();\n    }\n\n    return prelude;\n}\n\nexport const name = 'Rule';\nexport const walkContext = 'rule';\nexport const structure = {\n    prelude: ['SelectorList', 'Raw'],\n    block: ['Block']\n};\n\nexport function parse() {\n    const startToken = this.tokenIndex;\n    const startOffset = this.tokenStart;\n    let prelude;\n    let block;\n\n    if (this.parseRulePrelude) {\n        prelude = this.parseWithFallback(consumePrelude, consumeRaw);\n    } else {\n        prelude = consumeRaw.call(this, startToken);\n    }\n\n    block = this.Block(true);\n\n    return {\n        type: 'Rule',\n        loc: this.getLocation(startOffset, this.tokenStart),\n        prelude,\n        block\n    };\n}\nexport function generate(node) {\n    this.node(node.prelude);\n    this.node(node.block);\n}\n\n", "export const name = 'Selector';\nexport const structure = {\n    children: [[\n        'TypeSelector',\n        'IdSelector',\n        'ClassSelector',\n        'AttributeSelector',\n        'PseudoClassSelector',\n        'PseudoElementSelector',\n        'Combinator',\n        'WhiteSpace'\n    ]]\n};\n\nexport function parse() {\n    const children = this.readSequence(this.scope.Selector);\n\n    // nothing were consumed\n    if (this.getFirstListNode(children) === null) {\n        this.error('Selector is expected');\n    }\n\n    return {\n        type: 'Selector',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node);\n}\n", "import { Comma } from '../../tokenizer/index.js';\n\nexport const name = 'SelectorList';\nexport const walkContext = 'selector';\nexport const structure = {\n    children: [[\n        'Selector',\n        'Raw'\n    ]]\n};\n\nexport function parse() {\n    const children = this.createList();\n\n    while (!this.eof) {\n        children.push(this.Selector());\n\n        if (this.tokenType === Comma) {\n            this.next();\n            continue;\n        }\n\n        break;\n    }\n\n    return {\n        type: 'SelectorList',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node, () => this.token(Comma, ','));\n}\n", "import { String as StringToken } from '../../tokenizer/index.js';\nimport { decode, encode } from '../../utils/string.js';\n\nexport const name = 'String';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    return {\n        type: 'String',\n        loc: this.getLocation(this.tokenStart, this.tokenEnd),\n        value: decode(this.consume(StringToken))\n    };\n}\n\nexport function generate(node) {\n    this.token(StringToken, encode(node.value));\n}\n", "import {\n    isHexDigit,\n    isWhiteSpace,\n    isValidEscape,\n    consumeEscaped,\n    decodeEscaped\n} from '../tokenizer/index.js';\n\nconst REVERSE_SOLIDUS = 0x005c; // U+005C REVERSE SOLIDUS (\\)\nconst QUOTATION_MARK = 0x0022;  // \"\nconst APOSTROPHE = 0x0027;      // '\n\nexport function decode(str) {\n    const len = str.length;\n    const firstChar = str.charCodeAt(0);\n    const start = firstChar === QUOTATION_MARK || firstChar === APOSTROPHE ? 1 : 0;\n    const end = start === 1 && len > 1 && str.charCodeAt(len - 1) === firstChar ? len - 2 : len - 1;\n    let decoded = '';\n\n    for (let i = start; i <= end; i++) {\n        let code = str.charCodeAt(i);\n\n        if (code === REVERSE_SOLIDUS) {\n            // special case at the ending\n            if (i === end) {\n                // if the next input code point is EOF, do nothing\n                // otherwise include last quote as escaped\n                if (i !== len - 1) {\n                    decoded = str.substr(i + 1);\n                }\n                break;\n            }\n\n            code = str.charCodeAt(++i);\n\n            // consume escaped\n            if (isValidEscape(REVERSE_SOLIDUS, code)) {\n                const escapeStart = i - 1;\n                const escapeEnd = consumeEscaped(str, escapeStart);\n\n                i = escapeEnd - 1;\n                decoded += decodeEscaped(str.substring(escapeStart + 1, escapeEnd));\n            } else {\n                // \\r\\n\n                if (code === 0x000d && str.charCodeAt(i + 1) === 0x000a) {\n                    i++;\n                }\n            }\n        } else {\n            decoded += str[i];\n        }\n    }\n\n    return decoded;\n}\n\n// https://drafts.csswg.org/cssom/#serialize-a-string\n// \u00A7 2.1. Common Serializing Idioms\nexport function encode(str, apostrophe) {\n    const quote = apostrophe ? '\\'' : '\"';\n    const quoteCode = apostrophe ? APOSTROPHE : QUOTATION_MARK;\n    let encoded = '';\n    let wsBeforeHexIsNeeded = false;\n\n    for (let i = 0; i < str.length; i++) {\n        const code = str.charCodeAt(i);\n\n        // If the character is NULL (U+0000), then the REPLACEMENT CHARACTER (U+FFFD).\n        if (code === 0x0000) {\n            encoded += '\\uFFFD';\n            continue;\n        }\n\n        // If the character is in the range [\\1-\\1f] (U+0001 to U+001F) or is U+007F,\n        // the character escaped as code point.\n        // Note: Do not compare with 0x0001 since 0x0000 is precessed before\n        if (code <= 0x001f || code === 0x007F) {\n            encoded += '\\\\' + code.toString(16);\n            wsBeforeHexIsNeeded = true;\n            continue;\n        }\n\n        // If the character is '\"' (U+0022) or \"\\\" (U+005C), the escaped character.\n        if (code === quoteCode || code === REVERSE_SOLIDUS) {\n            encoded += '\\\\' + str.charAt(i);\n            wsBeforeHexIsNeeded = false;\n        } else {\n            if (wsBeforeHexIsNeeded && (isHexDigit(code) || isWhiteSpace(code))) {\n                encoded += ' ';\n            }\n\n            // Otherwise, the character itself.\n            encoded += str.charAt(i);\n            wsBeforeHexIsNeeded = false;\n        }\n    }\n\n    return quote + encoded + quote;\n}\n", "import {\n    WhiteSpace,\n    Comment,\n    AtKeyword,\n    CDO,\n    CDC\n} from '../../tokenizer/index.js';\n\nconst EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, null, false);\n}\n\nexport const name = 'StyleSheet';\nexport const walkContext = 'stylesheet';\nexport const structure = {\n    children: [[\n        'Comment',\n        'CDO',\n        'CDC',\n        'Atrule',\n        'Rule',\n        'Raw'\n    ]]\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    const children = this.createList();\n    let child;\n\n    scan:\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case WhiteSpace:\n                this.next();\n                continue;\n\n            case Comment:\n                // ignore comments except exclamation comments (i.e. /*! .. */) on top level\n                if (this.charCodeAt(this.tokenStart + 2) !== EXCLAMATIONMARK) {\n                    this.next();\n                    continue;\n                }\n\n                child = this.Comment();\n                break;\n\n            case CDO: // <!--\n                child = this.CDO();\n                break;\n\n            case CDC: // -->\n                child = this.CDC();\n                break;\n\n            // CSS Syntax Module Level 3\n            // \u00A72.2 Error handling\n            // At the \"top level\" of a stylesheet, an <at-keyword-token> starts an at-rule.\n            case AtKeyword:\n                child = this.parseWithFallback(this.Atrule, consumeRaw);\n                break;\n\n            // Anything else starts a qualified rule ...\n            default:\n                child = this.parseWithFallback(this.Rule, consumeRaw);\n        }\n\n        children.push(child);\n    }\n\n    return {\n        type: 'StyleSheet',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node);\n}\n", "import { Ident } from '../../tokenizer/index.js';\n\nconst ASTERISK = 0x002A;     // U+002A ASTERISK (*)\nconst VERTICALLINE = 0x007C; // U+007C VERTICAL LINE (|)\n\nfunction eatIdentifierOrAsterisk() {\n    if (this.tokenType !== Ident &&\n        this.isDelim(ASTERISK) === false) {\n        this.error('Identifier or asterisk is expected');\n    }\n\n    this.next();\n}\n\nexport const name = 'TypeSelector';\nexport const structure = {\n    name: String\n};\n\n// ident\n// ident|ident\n// ident|*\n// *\n// *|ident\n// *|*\n// |ident\n// |*\nexport function parse() {\n    const start = this.tokenStart;\n\n    if (this.isDelim(VERTICALLINE)) {\n        this.next();\n        eatIdentifierOrAsterisk.call(this);\n    } else {\n        eatIdentifierOrAsterisk.call(this);\n\n        if (this.isDelim(VERTICALLINE)) {\n            this.next();\n            eatIdentifierOrAsterisk.call(this);\n        }\n    }\n\n    return {\n        type: 'TypeSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name: this.substrToCursor(start)\n    };\n}\n\nexport function generate(node) {\n    this.tokenize(node.name);\n}\n", "import {\n    isHexDigit,\n    Ident,\n    Number,\n    Dimension\n} from '../../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;     // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D;  // U+002D HYPHEN-MINUS (-)\nconst QUESTIONMARK = 0x003F; // U+003F QUESTION MARK (?)\n\nfunction eatHexSequence(offset, allowDash) {\n    let len = 0;\n\n    for (let pos = this.tokenStart + offset; pos < this.tokenEnd; pos++) {\n        const code = this.charCodeAt(pos);\n\n        if (code === HYPHENMINUS && allowDash && len !== 0) {\n            eatHexSequence.call(this, offset + len + 1, false);\n            return -1;\n        }\n\n        if (!isHexDigit(code)) {\n            this.error(\n                allowDash && len !== 0\n                    ? 'Hyphen minus' + (len < 6 ? ' or hex digit' : '') + ' is expected'\n                    : (len < 6 ? 'Hex digit is expected' : 'Unexpected input'),\n                pos\n            );\n        }\n\n        if (++len > 6) {\n            this.error('Too many hex digits', pos);\n        };\n    }\n\n    this.next();\n    return len;\n}\n\nfunction eatQuestionMarkSequence(max) {\n    let count = 0;\n\n    while (this.isDelim(QUESTIONMARK)) {\n        if (++count > max) {\n            this.error('Too many question marks');\n        }\n\n        this.next();\n    }\n}\n\nfunction startsWith(code) {\n    if (this.charCodeAt(this.tokenStart) !== code) {\n        this.error((code === PLUSSIGN ? 'Plus sign' : 'Hyphen minus') + ' is expected');\n    }\n}\n\n// https://drafts.csswg.org/css-syntax/#urange\n// Informally, the <urange> production has three forms:\n// U+0001\n//      Defines a range consisting of a single code point, in this case the code point \"1\".\n// U+0001-00ff\n//      Defines a range of codepoints between the first and the second value, in this case\n//      the range between \"1\" and \"ff\" (255 in decimal) inclusive.\n// U+00??\n//      Defines a range of codepoints where the \"?\" characters range over all hex digits,\n//      in this case defining the same as the value U+0000-00ff.\n// In each form, a maximum of 6 digits is allowed for each hexadecimal number (if you treat \"?\" as a hexadecimal digit).\n//\n// <urange> =\n//   u '+' <ident-token> '?'* |\n//   u <dimension-token> '?'* |\n//   u <number-token> '?'* |\n//   u <number-token> <dimension-token> |\n//   u <number-token> <number-token> |\n//   u '+' '?'+\nfunction scanUnicodeRange() {\n    let hexLength = 0;\n\n    switch (this.tokenType) {\n        case Number:\n            // u <number-token> '?'*\n            // u <number-token> <dimension-token>\n            // u <number-token> <number-token>\n            hexLength = eatHexSequence.call(this, 1, true);\n\n            if (this.isDelim(QUESTIONMARK)) {\n                eatQuestionMarkSequence.call(this, 6 - hexLength);\n                break;\n            }\n\n            if (this.tokenType === Dimension ||\n                this.tokenType === Number) {\n                startsWith.call(this, HYPHENMINUS);\n                eatHexSequence.call(this, 1, false);\n                break;\n            }\n\n            break;\n\n        case Dimension:\n            // u <dimension-token> '?'*\n            hexLength = eatHexSequence.call(this, 1, true);\n\n            if (hexLength > 0) {\n                eatQuestionMarkSequence.call(this, 6 - hexLength);\n            }\n\n            break;\n\n        default:\n            // u '+' <ident-token> '?'*\n            // u '+' '?'+\n            this.eatDelim(PLUSSIGN);\n\n            if (this.tokenType === Ident) {\n                hexLength = eatHexSequence.call(this, 0, true);\n                if (hexLength > 0) {\n                    eatQuestionMarkSequence.call(this, 6 - hexLength);\n                }\n                break;\n            }\n\n            if (this.isDelim(QUESTIONMARK)) {\n                this.next();\n                eatQuestionMarkSequence.call(this, 5);\n                break;\n            }\n\n            this.error('Hex digit or question mark is expected');\n    }\n}\n\nexport const name = 'UnicodeRange';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    // U or u\n    this.eatIdent('u');\n    scanUnicodeRange.call(this);\n\n    return {\n        type: 'UnicodeRange',\n        loc: this.getLocation(start, this.tokenStart),\n        value: this.substrToCursor(start)\n    };\n}\n\nexport function generate(node) {\n    this.tokenize(node.value);\n}\n", "import * as url from '../../utils/url.js';\nimport * as string from '../../utils/string.js';\nimport {\n    Function as FunctionToken,\n    String as StringToken,\n    Url,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\nexport const name = 'Url';\nexport const structure = {\n    value: String\n};\n\n// <url-token> | <function-token> <string> )\nexport function parse() {\n    const start = this.tokenStart;\n    let value;\n\n    switch (this.tokenType) {\n        case Url:\n            value = url.decode(this.consume(Url));\n            break;\n\n        case FunctionToken:\n            if (!this.cmpStr(this.tokenStart, this.tokenEnd, 'url(')) {\n                this.error('Function name must be `url`');\n            }\n\n            this.eat(FunctionToken);\n            this.skipSC();\n            value = string.decode(this.consume(StringToken));\n            this.skipSC();\n            if (!this.eof) {\n                this.eat(RightParenthesis);\n            }\n            break;\n\n        default:\n            this.error('Url or Function is expected');\n    }\n\n    return {\n        type: 'Url',\n        loc: this.getLocation(start, this.tokenStart),\n        value\n    };\n}\n\nexport function generate(node) {\n    this.token(Url, url.encode(node.value));\n}\n", "import {\n    isHexDigit,\n    isWhiteSpace,\n    isValidEscape,\n    consumeEscaped,\n    decodeEscaped\n} from '../tokenizer/index.js';\n\nconst SPACE = 0x0020;            // U+0020 SPACE\nconst REVERSE_SOLIDUS = 0x005c;  // U+005C REVERSE SOLIDUS (\\)\nconst QUOTATION_MARK = 0x0022;   // \"\nconst APOSTROPHE = 0x0027;       // '\nconst LEFTPARENTHESIS = 0x0028;  // U+0028 LEFT PARENTHESIS (()\nconst RIGHTPARENTHESIS = 0x0029; // U+0029 RIGHT PARENTHESIS ())\n\nexport function decode(str) {\n    const len = str.length;\n    let start = 4; // length of \"url(\"\n    let end = str.charCodeAt(len - 1) === RIGHTPARENTHESIS ? len - 2 : len - 1;\n    let decoded = '';\n\n    while (start < end && isWhiteSpace(str.charCodeAt(start))) {\n        start++;\n    }\n\n    while (start < end && isWhiteSpace(str.charCodeAt(end))) {\n        end--;\n    }\n\n    for (let i = start; i <= end; i++) {\n        let code = str.charCodeAt(i);\n\n        if (code === REVERSE_SOLIDUS) {\n            // special case at the ending\n            if (i === end) {\n                // if the next input code point is EOF, do nothing\n                // otherwise include last left parenthesis as escaped\n                if (i !== len - 1) {\n                    decoded = str.substr(i + 1);\n                }\n                break;\n            }\n\n            code = str.charCodeAt(++i);\n\n            // consume escaped\n            if (isValidEscape(REVERSE_SOLIDUS, code)) {\n                const escapeStart = i - 1;\n                const escapeEnd = consumeEscaped(str, escapeStart);\n\n                i = escapeEnd - 1;\n                decoded += decodeEscaped(str.substring(escapeStart + 1, escapeEnd));\n            } else {\n                // \\r\\n\n                if (code === 0x000d && str.charCodeAt(i + 1) === 0x000a) {\n                    i++;\n                }\n            }\n        } else {\n            decoded += str[i];\n        }\n    }\n\n    return decoded;\n}\n\nexport function encode(str) {\n    let encoded = '';\n    let wsBeforeHexIsNeeded = false;\n\n    for (let i = 0; i < str.length; i++) {\n        const code = str.charCodeAt(i);\n\n        // If the character is NULL (U+0000), then the REPLACEMENT CHARACTER (U+FFFD).\n        if (code === 0x0000) {\n            encoded += '\\uFFFD';\n            continue;\n        }\n\n        // If the character is in the range [\\1-\\1f] (U+0001 to U+001F) or is U+007F,\n        // the character escaped as code point.\n        // Note: Do not compare with 0x0001 since 0x0000 is precessed before\n        if (code <= 0x001f || code === 0x007F) {\n            encoded += '\\\\' + code.toString(16);\n            wsBeforeHexIsNeeded = true;\n            continue;\n        }\n\n        if (code === SPACE ||\n            code === REVERSE_SOLIDUS ||\n            code === QUOTATION_MARK ||\n            code === APOSTROPHE ||\n            code === LEFTPARENTHESIS ||\n            code === RIGHTPARENTHESIS) {\n            encoded += '\\\\' + str.charAt(i);\n            wsBeforeHexIsNeeded = false;\n        } else {\n            if (wsBeforeHexIsNeeded && isHexDigit(code)) {\n                encoded += ' ';\n            }\n\n            encoded += str.charAt(i);\n            wsBeforeHexIsNeeded = false;\n        }\n    }\n\n    return 'url(' + encoded + ')';\n}\n", "export const name = 'Value';\nexport const structure = {\n    children: [[]]\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    const children = this.readSequence(this.scope.Value);\n\n    return {\n        type: 'Value',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node);\n}\n", "import { WhiteSpace } from '../../tokenizer/index.js';\n\nconst SPACE = Object.freeze({\n    type: 'WhiteSpace',\n    loc: null,\n    value: ' '\n});\n\nexport const name = 'WhiteSpace';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    this.eat(WhiteSpace);\n    return SPACE;\n\n    // return {\n    //     type: 'WhiteSpace',\n    //     loc: this.getLocation(this.tokenStart, this.tokenEnd),\n    //     value: this.consume(WHITESPACE)\n    // };\n}\n\nexport function generate(node) {\n    this.token(WhiteSpace, node.value);\n}\n", "import definitions from '../../data.js';\nimport * as node from '../node/index.js';\n\nexport default {\n    generic: true,\n    ...definitions,\n    node\n};\n", "export { default as AtrulePrelude } from './atrulePrelude.js';\nexport { default as Selector } from './selector.js';\nexport { default as Value } from './value.js';\n", "import {\n    Ident,\n    String as StringToken,\n    Number as NumberToken,\n    Function as FunctionToken,\n    Url,\n    Hash,\n    Dimension,\n    Percentage,\n    LeftParenthesis,\n    LeftSquareBracket,\n    Comma,\n    Delim\n} from '../../tokenizer/index.js';\n\nconst NUMBERSIGN = 0x0023;  // U+0023 NUMBER SIGN (#)\nconst ASTERISK = 0x002A;    // U+002A ASTERISK (*)\nconst PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\nconst SOLIDUS = 0x002F;     // U+002F SOLIDUS (/)\nconst U = 0x0075;           // U+0075 LATIN SMALL LETTER U (u)\n\nexport default function defaultRecognizer(context) {\n    switch (this.tokenType) {\n        case Hash:\n            return this.Hash();\n\n        case Comma:\n            return this.Operator();\n\n        case LeftParenthesis:\n            return this.Parentheses(this.readSequence, context.recognizer);\n\n        case LeftSquareBracket:\n            return this.Brackets(this.readSequence, context.recognizer);\n\n        case StringToken:\n            return this.String();\n\n        case Dimension:\n            return this.Dimension();\n\n        case Percentage:\n            return this.Percentage();\n\n        case NumberToken:\n            return this.Number();\n\n        case FunctionToken:\n            return this.cmpStr(this.tokenStart, this.tokenEnd, 'url(')\n                ? this.Url()\n                : this.Function(this.readSequence, context.recognizer);\n\n        case Url:\n            return this.Url();\n\n        case Ident:\n            // check for unicode range, it should start with u+ or U+\n            if (this.cmpChar(this.tokenStart, U) &&\n                this.cmpChar(this.tokenStart + 1, PLUSSIGN)) {\n                return this.UnicodeRange();\n            } else {\n                return this.Identifier();\n            }\n\n        case Delim: {\n            const code = this.charCodeAt(this.tokenStart);\n\n            if (code === SOLIDUS ||\n                code === ASTERISK ||\n                code === PLUSSIGN ||\n                code === HYPHENMINUS) {\n                return this.Operator(); // TODO: replace with Delim\n            }\n\n            // TODO: produce a node with Delim node type\n\n            if (code === NUMBERSIGN) {\n                this.error('Hex or identifier is expected', this.tokenStart + 1);\n            }\n\n            break;\n        }\n    }\n};\n", "import getNode from './default.js';\n\nexport default {\n    getNode\n};\n", "import {\n    Delim,\n    Ident,\n    Dimension,\n    Percentage,\n    Number as NumberToken,\n    Hash,\n    Colon,\n    LeftSquareBracket\n} from '../../tokenizer/index.js';\n\nconst NUMBERSIGN = 0x0023;      // U+0023 NUMBER SIGN (#)\nconst AMPERSAND = 0x0026;       // U+0026 AMPERSAND (&)\nconst ASTERISK = 0x002A;        // U+002A ASTERISK (*)\nconst PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\nconst SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\nconst FULLSTOP = 0x002E;        // U+002E FULL STOP (.)\nconst GREATERTHANSIGN = 0x003E; // U+003E GREATER-THAN SIGN (>)\nconst VERTICALLINE = 0x007C;    // U+007C VERTICAL LINE (|)\nconst TILDE = 0x007E;           // U+007E TILDE (~)\n\nfunction onWhiteSpace(next, children) {\n    if (children.last !== null && children.last.type !== 'Combinator' &&\n        next !== null && next.type !== 'Combinator') {\n        children.push({  // FIXME: this.Combinator() should be used instead\n            type: 'Combinator',\n            loc: null,\n            name: ' '\n        });\n    }\n}\n\nfunction getNode() {\n    switch (this.tokenType) {\n        case LeftSquareBracket:\n            return this.AttributeSelector();\n\n        case Hash:\n            return this.IdSelector();\n\n        case Colon:\n            if (this.lookupType(1) === Colon) {\n                return this.PseudoElementSelector();\n            } else {\n                return this.PseudoClassSelector();\n            }\n\n        case Ident:\n            return this.TypeSelector();\n\n        case NumberToken:\n        case Percentage:\n            return this.Percentage();\n\n        case Dimension:\n            // throws when .123ident\n            if (this.charCodeAt(this.tokenStart) === FULLSTOP) {\n                this.error('Identifier is expected', this.tokenStart + 1);\n            }\n            break;\n\n        case Delim: {\n            const code = this.charCodeAt(this.tokenStart);\n\n            switch (code) {\n                case PLUSSIGN:\n                case GREATERTHANSIGN:\n                case TILDE:\n                case SOLIDUS:  // /deep/\n                    return this.Combinator();\n\n                case FULLSTOP:\n                    return this.ClassSelector();\n\n                case ASTERISK:\n                case VERTICALLINE:\n                    return this.TypeSelector();\n\n                case NUMBERSIGN:\n                    return this.IdSelector();\n\n                case AMPERSAND:\n                    return this.NestingSelector();\n            }\n\n            break;\n        }\n    }\n};\n\nexport default {\n    onWhiteSpace,\n    getNode\n};\n", "// legacy IE function\n// expression( <any-value> )\nexport default function() {\n    return this.createSingleNodeList(\n        this.Raw(this.tokenIndex, null, false)\n    );\n}\n", "import { Comma, WhiteSpace } from '../../tokenizer/index.js';\n\n// var( <ident> , <value>? )\nexport default function() {\n    const children = this.createList();\n\n    this.skipSC();\n\n    // NOTE: Don't check more than a first argument is an ident, rest checks are for lexer\n    children.push(this.Identifier());\n\n    this.skipSC();\n\n    if (this.tokenType === Comma) {\n        children.push(this.Operator());\n\n        const startIndex = this.tokenIndex;\n        const value = this.parseCustomProperty\n            ? this.Value(null)\n            : this.Raw(this.tokenIndex, this.consumeUntilExclamationMarkOrSemicolon, false);\n\n        if (value.type === 'Value' && value.children.isEmpty) {\n            for (let offset = startIndex - this.tokenIndex; offset <= 0; offset++) {\n                if (this.lookupType(offset) === WhiteSpace) {\n                    value.children.appendData({\n                        type: 'WhiteSpace',\n                        loc: null,\n                        value: ' '\n                    });\n                    break;\n                }\n            }\n        }\n\n        children.push(value);\n    }\n\n    return children;\n};\n", "import getNode from './default.js';\nimport expressionFn from '../function/expression.js';\nimport varFn from '../function/var.js';\n\nfunction isPlusMinusOperator(node) {\n    return (\n        node !== null &&\n        node.type === 'Operator' &&\n        (node.value[node.value.length - 1] === '-' || node.value[node.value.length - 1] === '+')\n    );\n}\n\nexport default {\n    getNode,\n    onWhiteSpace(next, children) {\n        if (isPlusMinusOperator(next)) {\n            next.value = ' ' + next.value;\n        }\n        if (isPlusMinusOperator(children.last)) {\n            children.last.value += ' ';\n        }\n    },\n    'expression': expressionFn,\n    'var': varFn\n};\n", "export default {\n    parse: {\n        prelude: null,\n        block() {\n            return this.Block(true);\n        }\n    }\n};\n", "import {\n    String as StringToken,\n    Ident,\n    Url,\n    Function as FunctionToken,\n    LeftParenthesis\n} from '../../tokenizer/index.js';\n\nexport default {\n    parse: {\n        prelude() {\n            const children = this.createList();\n\n            this.skipSC();\n\n            switch (this.tokenType) {\n                case StringToken:\n                    children.push(this.String());\n                    break;\n\n                case Url:\n                case FunctionToken:\n                    children.push(this.Url());\n                    break;\n\n                default:\n                    this.error('String or url() is expected');\n            }\n\n            if (this.lookupNonWSType(0) === Ident ||\n                this.lookupNonWSType(0) === LeftParenthesis) {\n                children.push(this.MediaQueryList());\n            }\n\n            return children;\n        },\n        block: null\n    }\n};\n", "export default {\n    parse: {\n        prelude() {\n            return this.createSingleNodeList(\n                this.MediaQueryList()\n            );\n        },\n        block(isStyleBlock = false) {\n            return this.Block(isStyleBlock);\n        }\n    }\n};\n", "export default {\n    parse: {\n        prelude() {\n            return this.createSingleNodeList(\n                this.SelectorList()\n            );\n        },\n        block() {\n            return this.Block(true);\n        }\n    }\n};\n", "export default {\n    parse: {\n        prelude() {\n            return this.createSingleNodeList(\n                this.SelectorList()\n            );\n        },\n        block() {\n            return this.Block(true);\n        }\n    }\n};\n", "import {\n    WhiteSpace,\n    Comment,\n    Ident,\n    Function,\n    Colon,\n    LeftParenthesis\n} from '../../tokenizer/index.js';\n\nfunction consumeRaw() {\n    return this.createSingleNodeList(\n        this.Raw(this.tokenIndex, null, false)\n    );\n}\n\nfunction parentheses() {\n    this.skipSC();\n\n    if (this.tokenType === Ident &&\n        this.lookupNonWSType(1) === Colon) {\n        return this.createSingleNodeList(\n            this.Declaration()\n        );\n    }\n\n    return readSequence.call(this);\n}\n\nfunction readSequence() {\n    const children = this.createList();\n    let child;\n\n    this.skipSC();\n\n    scan:\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case Comment:\n            case WhiteSpace:\n                this.next();\n                continue;\n\n            case Function:\n                child = this.Function(consumeRaw, this.scope.AtrulePrelude);\n                break;\n\n            case Ident:\n                child = this.Identifier();\n                break;\n\n            case LeftParenthesis:\n                child = this.Parentheses(parentheses, this.scope.AtrulePrelude);\n                break;\n\n            default:\n                break scan;\n        }\n\n        children.push(child);\n    }\n\n    return children;\n}\n\nexport default {\n    parse: {\n        prelude() {\n            const children = readSequence.call(this);\n\n            if (this.getFirstListNode(children) === null) {\n                this.error('Condition is expected');\n            }\n\n            return children;\n        },\n        block(isStyleBlock = false) {\n            return this.Block(isStyleBlock);\n        }\n    }\n};\n", "import fontFace from './font-face.js';\nimport importAtrule from './import.js';\nimport media from './media.js';\nimport nest from './nest.js';\nimport page from './page.js';\nimport supports from './supports.js';\n\nexport default {\n    'font-face': fontFace,\n    'import': importAtrule,\n    media,\n    nest,\n    page,\n    supports\n};\n", "const selectorList = {\n    parse() {\n        return this.createSingleNodeList(\n            this.SelectorList()\n        );\n    }\n};\n\nconst selector = {\n    parse() {\n        return this.createSingleNodeList(\n            this.Selector()\n        );\n    }\n};\n\nconst identList = {\n    parse() {\n        return this.createSingleNodeList(\n            this.Identifier()\n        );\n    }\n};\n\nconst nth = {\n    parse() {\n        return this.createSingleNodeList(\n            this.Nth()\n        );\n    }\n};\n\nexport default {\n    'dir': identList,\n    'has': selectorList,\n    'lang': identList,\n    'matches': selectorList,\n    'is': selectorList,\n    '-moz-any': selectorList,\n    '-webkit-any': selectorList,\n    'where': selectorList,\n    'not': selectorList,\n    'nth-child': nth,\n    'nth-last-child': nth,\n    'nth-last-of-type': nth,\n    'nth-of-type': nth,\n    'slotted': selector,\n    'host': selector,\n    'host-context': selector\n};\n", "export { parse as AnPlusB } from './AnPlusB.js';\nexport { parse as Atrule } from './Atrule.js';\nexport { parse as AtrulePrelude } from './AtrulePrelude.js';\nexport { parse as AttributeSelector } from './AttributeSelector.js';\nexport { parse as Block } from './Block.js';\nexport { parse as Brackets } from './Brackets.js';\nexport { parse as CDC } from './CDC.js';\nexport { parse as CDO } from './CDO.js';\nexport { parse as ClassSelector } from './ClassSelector.js';\nexport { parse as Combinator } from './Combinator.js';\nexport { parse as Comment } from './Comment.js';\nexport { parse as Declaration } from './Declaration.js';\nexport { parse as DeclarationList } from './DeclarationList.js';\nexport { parse as Dimension } from './Dimension.js';\nexport { parse as Function } from './Function.js';\nexport { parse as Hash } from './Hash.js';\nexport { parse as Identifier } from './Identifier.js';\nexport { parse as IdSelector } from './IdSelector.js';\nexport { parse as MediaFeature } from './MediaFeature.js';\nexport { parse as MediaQuery } from './MediaQuery.js';\nexport { parse as MediaQueryList } from './MediaQueryList.js';\nexport { parse as NestingSelector } from './NestingSelector.js';\nexport { parse as Nth } from './Nth.js';\nexport { parse as Number } from './Number.js';\nexport { parse as Operator } from './Operator.js';\nexport { parse as Parentheses } from './Parentheses.js';\nexport { parse as Percentage } from './Percentage.js';\nexport { parse as PseudoClassSelector } from './PseudoClassSelector.js';\nexport { parse as PseudoElementSelector } from './PseudoElementSelector.js';\nexport { parse as Ratio } from './Ratio.js';\nexport { parse as Raw } from './Raw.js';\nexport { parse as Rule } from './Rule.js';\nexport { parse as Selector } from './Selector.js';\nexport { parse as SelectorList } from './SelectorList.js';\nexport { parse as String } from './String.js';\nexport { parse as StyleSheet } from './StyleSheet.js';\nexport { parse as TypeSelector } from './TypeSelector.js';\nexport { parse as UnicodeRange } from './UnicodeRange.js';\nexport { parse as Url } from './Url.js';\nexport { parse as Value } from './Value.js';\nexport { parse as WhiteSpace } from './WhiteSpace.js';\n", "import * as scope from '../scope/index.js';\nimport atrule from '../atrule/index.js';\nimport pseudo from '../pseudo/index.js';\nimport * as node from '../node/index-parse.js';\n\nexport default {\n    parseContext: {\n        default: 'StyleSheet',\n        stylesheet: 'StyleSheet',\n        atrule: 'Atrule',\n        atrulePrelude(options) {\n            return this.AtrulePrelude(options.atrule ? String(options.atrule) : null);\n        },\n        mediaQueryList: 'MediaQueryList',\n        mediaQuery: 'MediaQuery',\n        rule: 'Rule',\n        selectorList: 'SelectorList',\n        selector: 'Selector',\n        block() {\n            return this.Block(true);\n        },\n        declarationList: 'DeclarationList',\n        declaration: 'Declaration',\n        value: 'Value'\n    },\n    scope,\n    atrule,\n    pseudo,\n    node\n};\n", "import * as node from '../node/index.js';\n\nexport default {\n    node\n};\n", "import createSyntax from './create.js';\nimport lexerConfig from './config/lexer.js';\nimport parserConfig from './config/parser.js';\nimport walkerConfig from './config/walker.js';\n\nexport default createSyntax({\n    ...lexerConfig,\n    ...parserConfig,\n    ...walkerConfig\n});\n", "import syntax from './syntax/index.js';\n\nexport * from './version.js';\nexport { default as createSyntax } from './syntax/create.js';\nexport { List } from './utils/List.js';\nexport { Lexer } from './lexer/Lexer.js';\nexport { tokenTypes, tokenNames, TokenStream } from './tokenizer/index.js';\nexport * as definitionSyntax from './definition-syntax/index.js';\nexport { clone } from './utils/clone.js';\nexport * from './utils/names.js';\nexport * as ident from './utils/ident.js';\nexport * as string from './utils/string.js';\nexport * as url from './utils/url.js';\nexport const {\n    tokenize,\n    parse,\n    generate,\n    lexer,\n    createLexer,\n\n    walk,\n    find,\n    findLast,\n    findAll,\n\n    toPlainObject,\n    fromPlainObject,\n\n    fork\n} = syntax;\n", "import { parse, walk, generate } from 'css-tree';\nimport EventEmitter from 'events';\n\nclass CSS extends EventEmitter {\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.meta = ctx.meta;\n        this.parse = parse;\n        this.walk = walk;\n        this.generate = generate;\n    }\n    rewrite(str, options) {\n        return this.recast(str, options, 'rewrite');\n    }\n    source(str, options) {\n        return this.recast(str, options, 'source');\n    }\n    recast(str, options, type) {\n        if (!str) return str;\n        str = new String(str).toString();\n        try {\n            const ast = this.parse(str, {\n                ...options,\n                parseCustomProperty: true,\n            });\n            this.walk(ast, (node) => {\n                this.emit(node.type, node, options, type);\n            });\n            return this.generate(ast);\n        } catch (e) {\n            return str;\n        }\n    }\n}\n\nexport default CSS;\n", "const errorMessages = {\r\n    [0]: 'Unexpected token',\r\n    [28]: \"Unexpected token: '%0'\",\r\n    [1]: 'Octal escape sequences are not allowed in strict mode',\r\n    [2]: 'Octal escape sequences are not allowed in template strings',\r\n    [3]: 'Unexpected token `#`',\r\n    [4]: 'Illegal Unicode escape sequence',\r\n    [5]: 'Invalid code point %0',\r\n    [6]: 'Invalid hexadecimal escape sequence',\r\n    [8]: 'Octal literals are not allowed in strict mode',\r\n    [7]: 'Decimal integer literals with a leading zero are forbidden in strict mode',\r\n    [9]: 'Expected number in radix %0',\r\n    [146]: 'Invalid left-hand side assignment to a destructible right-hand side',\r\n    [10]: 'Non-number found after exponent indicator',\r\n    [11]: 'Invalid BigIntLiteral',\r\n    [12]: 'No identifiers allowed directly after numeric literal',\r\n    [13]: 'Escapes \\\\8 or \\\\9 are not syntactically valid escapes',\r\n    [14]: 'Unterminated string literal',\r\n    [15]: 'Unterminated template literal',\r\n    [16]: 'Multiline comment was not closed properly',\r\n    [17]: 'The identifier contained dynamic unicode escape that was not closed',\r\n    [18]: \"Illegal character '%0'\",\r\n    [19]: 'Missing hexadecimal digits',\r\n    [20]: 'Invalid implicit octal',\r\n    [21]: 'Invalid line break in string literal',\r\n    [22]: 'Only unicode escapes are legal in identifier names',\r\n    [23]: \"Expected '%0'\",\r\n    [24]: 'Invalid left-hand side in assignment',\r\n    [25]: 'Invalid left-hand side in async arrow',\r\n    [26]: 'Calls to super must be in the \"constructor\" method of a class expression or class declaration that has a superclass',\r\n    [27]: 'Member access on super must be in a method',\r\n    [29]: 'Await expression not allowed in formal parameter',\r\n    [30]: 'Yield expression not allowed in formal parameter',\r\n    [93]: \"Unexpected token: 'escaped keyword'\",\r\n    [31]: 'Unary expressions as the left operand of an exponentiation expression must be disambiguated with parentheses',\r\n    [120]: 'Async functions can only be declared at the top level or inside a block',\r\n    [32]: 'Unterminated regular expression',\r\n    [33]: 'Unexpected regular expression flag',\r\n    [34]: \"Duplicate regular expression flag '%0'\",\r\n    [35]: '%0 functions must have exactly %1 argument%2',\r\n    [36]: 'Setter function argument must not be a rest parameter',\r\n    [37]: '%0 declaration must have a name in this context',\r\n    [38]: 'Function name may not contain any reserved words or be eval or arguments in strict mode',\r\n    [39]: 'The rest operator is missing an argument',\r\n    [40]: 'A getter cannot be a generator',\r\n    [41]: 'A setter cannot be a generator',\r\n    [42]: 'A computed property name must be followed by a colon or paren',\r\n    [131]: 'Object literal keys that are strings or numbers must be a method or have a colon',\r\n    [44]: 'Found `* async x(){}` but this should be `async * x(){}`',\r\n    [43]: 'Getters and setters can not be generators',\r\n    [45]: \"'%0' can not be generator method\",\r\n    [46]: \"No line break is allowed after '=>'\",\r\n    [47]: 'The left-hand side of the arrow can only be destructed through assignment',\r\n    [48]: 'The binding declaration is not destructible',\r\n    [49]: 'Async arrow can not be followed by new expression',\r\n    [50]: \"Classes may not have a static property named 'prototype'\",\r\n    [51]: 'Class constructor may not be a %0',\r\n    [52]: 'Duplicate constructor method in class',\r\n    [53]: 'Invalid increment/decrement operand',\r\n    [54]: 'Invalid use of `new` keyword on an increment/decrement expression',\r\n    [55]: '`=>` is an invalid assignment target',\r\n    [56]: 'Rest element may not have a trailing comma',\r\n    [57]: 'Missing initializer in %0 declaration',\r\n    [58]: \"'for-%0' loop head declarations can not have an initializer\",\r\n    [59]: 'Invalid left-hand side in for-%0 loop: Must have a single binding',\r\n    [60]: 'Invalid shorthand property initializer',\r\n    [61]: 'Property name __proto__ appears more than once in object literal',\r\n    [62]: 'Let is disallowed as a lexically bound name',\r\n    [63]: \"Invalid use of '%0' inside new expression\",\r\n    [64]: \"Illegal 'use strict' directive in function with non-simple parameter list\",\r\n    [65]: 'Identifier \"let\" disallowed as left-hand side expression in strict mode',\r\n    [66]: 'Illegal continue statement',\r\n    [67]: 'Illegal break statement',\r\n    [68]: 'Cannot have `let[...]` as a var name in strict mode',\r\n    [69]: 'Invalid destructuring assignment target',\r\n    [70]: 'Rest parameter may not have a default initializer',\r\n    [71]: 'The rest argument must the be last parameter',\r\n    [72]: 'Invalid rest argument',\r\n    [74]: 'In strict mode code, functions can only be declared at top level or inside a block',\r\n    [75]: 'In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement',\r\n    [76]: 'Without web compatibility enabled functions can not be declared at top level, inside a block, or as the body of an if statement',\r\n    [77]: \"Class declaration can't appear in single-statement context\",\r\n    [78]: 'Invalid left-hand side in for-%0',\r\n    [79]: 'Invalid assignment in for-%0',\r\n    [80]: 'for await (... of ...) is only valid in async functions and async generators',\r\n    [81]: 'The first token after the template expression should be a continuation of the template',\r\n    [83]: '`let` declaration not allowed here and `let` cannot be a regular var name in strict mode',\r\n    [82]: '`let \\n [` is a restricted production at the start of a statement',\r\n    [84]: 'Catch clause requires exactly one parameter, not more (and no trailing comma)',\r\n    [85]: 'Catch clause parameter does not support default values',\r\n    [86]: 'Missing catch or finally after try',\r\n    [87]: 'More than one default clause in switch statement',\r\n    [88]: 'Illegal newline after throw',\r\n    [89]: 'Strict mode code may not include a with statement',\r\n    [90]: 'Illegal return statement',\r\n    [91]: 'The left hand side of the for-header binding declaration is not destructible',\r\n    [92]: 'new.target only allowed within functions',\r\n    [94]: \"'#' not followed by identifier\",\r\n    [100]: 'Invalid keyword',\r\n    [99]: \"Can not use 'let' as a class name\",\r\n    [98]: \"'A lexical declaration can't define a 'let' binding\",\r\n    [97]: 'Can not use `let` as variable name in strict mode',\r\n    [95]: \"'%0' may not be used as an identifier in this context\",\r\n    [96]: 'Await is only valid in async functions',\r\n    [101]: 'The %0 keyword can only be used with the module goal',\r\n    [102]: 'Unicode codepoint must not be greater than 0x10FFFF',\r\n    [103]: '%0 source must be string',\r\n    [104]: 'Only a identifier can be used to indicate alias',\r\n    [105]: \"Only '*' or '{...}' can be imported after default\",\r\n    [106]: 'Trailing decorator may be followed by method',\r\n    [107]: \"Decorators can't be used with a constructor\",\r\n    [109]: 'HTML comments are only allowed with web compatibility (Annex B)',\r\n    [110]: \"The identifier 'let' must not be in expression position in strict mode\",\r\n    [111]: 'Cannot assign to `eval` and `arguments` in strict mode',\r\n    [112]: \"The left-hand side of a for-of loop may not start with 'let'\",\r\n    [113]: 'Block body arrows can not be immediately invoked without a group',\r\n    [114]: 'Block body arrows can not be immediately accessed without a group',\r\n    [115]: 'Unexpected strict mode reserved word',\r\n    [116]: 'Unexpected eval or arguments in strict mode',\r\n    [117]: 'Decorators must not be followed by a semicolon',\r\n    [118]: 'Calling delete on expression not allowed in strict mode',\r\n    [119]: 'Pattern can not have a tail',\r\n    [121]: 'Can not have a `yield` expression on the left side of a ternary',\r\n    [122]: 'An arrow function can not have a postfix update operator',\r\n    [123]: 'Invalid object literal key character after generator star',\r\n    [124]: 'Private fields can not be deleted',\r\n    [126]: 'Classes may not have a field called constructor',\r\n    [125]: 'Classes may not have a private element named constructor',\r\n    [127]: 'A class field initializer may not contain arguments',\r\n    [128]: 'Generators can only be declared at the top level or inside a block',\r\n    [129]: 'Async methods are a restricted production and cannot have a newline following it',\r\n    [130]: 'Unexpected character after object literal property name',\r\n    [132]: 'Invalid key token',\r\n    [133]: \"Label '%0' has already been declared\",\r\n    [134]: 'continue statement must be nested within an iteration statement',\r\n    [135]: \"Undefined label '%0'\",\r\n    [136]: 'Trailing comma is disallowed inside import(...) arguments',\r\n    [137]: 'import() requires exactly one argument',\r\n    [138]: 'Cannot use new with import(...)',\r\n    [139]: '... is not allowed in import()',\r\n    [140]: \"Expected '=>'\",\r\n    [141]: \"Duplicate binding '%0'\",\r\n    [142]: \"Cannot export a duplicate name '%0'\",\r\n    [145]: 'Duplicate %0 for-binding',\r\n    [143]: \"Exported binding '%0' needs to refer to a top-level declared variable\",\r\n    [144]: 'Unexpected private field',\r\n    [148]: 'Numeric separators are not allowed at the end of numeric literals',\r\n    [147]: 'Only one underscore is allowed as numeric separator',\r\n    [149]: 'JSX value should be either an expression or a quoted JSX text',\r\n    [150]: 'Expected corresponding JSX closing tag for %0',\r\n    [151]: 'Adjacent JSX elements must be wrapped in an enclosing tag',\r\n    [152]: \"JSX attributes must only be assigned a non-empty 'expression'\",\r\n    [153]: \"'%0' has already been declared\",\r\n    [154]: \"'%0' shadowed a catch clause binding\",\r\n    [155]: 'Dot property must be an identifier',\r\n    [156]: 'Encountered invalid input after spread/rest argument',\r\n    [157]: 'Catch without try',\r\n    [158]: 'Finally without try',\r\n    [159]: 'Expected corresponding closing tag for JSX fragment',\r\n    [160]: 'Coalescing and logical operators used together in the same expression must be disambiguated with parentheses',\r\n    [161]: 'Invalid tagged template on optional chain',\r\n    [162]: 'Invalid optional chain from super property',\r\n    [163]: 'Invalid optional chain from new expression',\r\n    [164]: 'Cannot use \"import.meta\" outside a module',\r\n    [165]: 'Leading decorators must be attached to a class declaration'\r\n};\r\nclass ParseError extends SyntaxError {\r\n    constructor(startindex, line, column, type, ...params) {\r\n        const message = '[' + line + ':' + column + ']: ' + errorMessages[type].replace(/%(\\d+)/g, (_, i) => params[i]);\r\n        super(`${message}`);\r\n        this.index = startindex;\r\n        this.line = line;\r\n        this.column = column;\r\n        this.description = message;\r\n        this.loc = {\r\n            line,\r\n            column\r\n        };\r\n    }\r\n}\r\nfunction report(parser, type, ...params) {\r\n    throw new ParseError(parser.index, parser.line, parser.column, type, ...params);\r\n}\r\nfunction reportScopeError(scope) {\r\n    throw new ParseError(scope.index, scope.line, scope.column, scope.type, scope.params);\r\n}\r\nfunction reportMessageAt(index, line, column, type, ...params) {\r\n    throw new ParseError(index, line, column, type, ...params);\r\n}\r\nfunction reportScannerError(index, line, column, type) {\r\n    throw new ParseError(index, line, column, type);\r\n}\n\nconst unicodeLookup = ((compressed, lookup) => {\r\n    const result = new Uint32Array(104448);\r\n    let index = 0;\r\n    let subIndex = 0;\r\n    while (index < 3540) {\r\n        const inst = compressed[index++];\r\n        if (inst < 0) {\r\n            subIndex -= inst;\r\n        }\r\n        else {\r\n            let code = compressed[index++];\r\n            if (inst & 2)\r\n                code = lookup[code];\r\n            if (inst & 1) {\r\n                result.fill(code, subIndex, subIndex += compressed[index++]);\r\n            }\r\n            else {\r\n                result[subIndex++] = code;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n})([-1, 2, 24, 2, 25, 2, 5, -1, 0, 77595648, 3, 44, 2, 3, 0, 14, 2, 57, 2, 58, 3, 0, 3, 0, 3168796671, 0, 4294956992, 2, 1, 2, 0, 2, 59, 3, 0, 4, 0, 4294966523, 3, 0, 4, 2, 16, 2, 60, 2, 0, 0, 4294836735, 0, 3221225471, 0, 4294901942, 2, 61, 0, 134152192, 3, 0, 2, 0, 4294951935, 3, 0, 2, 0, 2683305983, 0, 2684354047, 2, 17, 2, 0, 0, 4294961151, 3, 0, 2, 2, 19, 2, 0, 0, 608174079, 2, 0, 2, 131, 2, 6, 2, 56, -1, 2, 37, 0, 4294443263, 2, 1, 3, 0, 3, 0, 4294901711, 2, 39, 0, 4089839103, 0, 2961209759, 0, 1342439375, 0, 4294543342, 0, 3547201023, 0, 1577204103, 0, 4194240, 0, 4294688750, 2, 2, 0, 80831, 0, 4261478351, 0, 4294549486, 2, 2, 0, 2967484831, 0, 196559, 0, 3594373100, 0, 3288319768, 0, 8469959, 2, 194, 2, 3, 0, 3825204735, 0, 123747807, 0, 65487, 0, 4294828015, 0, 4092591615, 0, 1080049119, 0, 458703, 2, 3, 2, 0, 0, 2163244511, 0, 4227923919, 0, 4236247022, 2, 66, 0, 4284449919, 0, 851904, 2, 4, 2, 11, 0, 67076095, -1, 2, 67, 0, 1073741743, 0, 4093591391, -1, 0, 50331649, 0, 3265266687, 2, 32, 0, 4294844415, 0, 4278190047, 2, 18, 2, 129, -1, 3, 0, 2, 2, 21, 2, 0, 2, 9, 2, 0, 2, 14, 2, 15, 3, 0, 10, 2, 69, 2, 0, 2, 70, 2, 71, 2, 72, 2, 0, 2, 73, 2, 0, 2, 10, 0, 261632, 2, 23, 3, 0, 2, 2, 12, 2, 4, 3, 0, 18, 2, 74, 2, 5, 3, 0, 2, 2, 75, 0, 2088959, 2, 27, 2, 8, 0, 909311, 3, 0, 2, 0, 814743551, 2, 41, 0, 67057664, 3, 0, 2, 2, 40, 2, 0, 2, 28, 2, 0, 2, 29, 2, 7, 0, 268374015, 2, 26, 2, 49, 2, 0, 2, 76, 0, 134153215, -1, 2, 6, 2, 0, 2, 7, 0, 2684354559, 0, 67044351, 0, 3221160064, 0, 1, -1, 3, 0, 2, 2, 42, 0, 1046528, 3, 0, 3, 2, 8, 2, 0, 2, 51, 0, 4294960127, 2, 9, 2, 38, 2, 10, 0, 4294377472, 2, 11, 3, 0, 7, 0, 4227858431, 3, 0, 8, 2, 12, 2, 0, 2, 78, 2, 9, 2, 0, 2, 79, 2, 80, 2, 81, -1, 2, 124, 0, 1048577, 2, 82, 2, 13, -1, 2, 13, 0, 131042, 2, 83, 2, 84, 2, 85, 2, 0, 2, 33, -83, 2, 0, 2, 53, 2, 7, 3, 0, 4, 0, 1046559, 2, 0, 2, 14, 2, 0, 0, 2147516671, 2, 20, 3, 86, 2, 2, 0, -16, 2, 87, 0, 524222462, 2, 4, 2, 0, 0, 4269801471, 2, 4, 2, 0, 2, 15, 2, 77, 2, 16, 3, 0, 2, 2, 47, 2, 0, -1, 2, 17, -16, 3, 0, 206, -2, 3, 0, 655, 2, 18, 3, 0, 36, 2, 68, -1, 2, 17, 2, 9, 3, 0, 8, 2, 89, 2, 121, 2, 0, 0, 3220242431, 3, 0, 3, 2, 19, 2, 90, 2, 91, 3, 0, 2, 2, 92, 2, 0, 2, 93, 2, 94, 2, 0, 0, 4351, 2, 0, 2, 8, 3, 0, 2, 0, 67043391, 0, 3909091327, 2, 0, 2, 22, 2, 8, 2, 18, 3, 0, 2, 0, 67076097, 2, 7, 2, 0, 2, 20, 0, 67059711, 0, 4236247039, 3, 0, 2, 0, 939524103, 0, 8191999, 2, 97, 2, 98, 2, 15, 2, 21, 3, 0, 3, 0, 67057663, 3, 0, 349, 2, 99, 2, 100, 2, 6, -264, 3, 0, 11, 2, 22, 3, 0, 2, 2, 31, -1, 0, 3774349439, 2, 101, 2, 102, 3, 0, 2, 2, 19, 2, 103, 3, 0, 10, 2, 9, 2, 17, 2, 0, 2, 45, 2, 0, 2, 30, 2, 104, 2, 23, 0, 1638399, 2, 172, 2, 105, 3, 0, 3, 2, 18, 2, 24, 2, 25, 2, 5, 2, 26, 2, 0, 2, 7, 2, 106, -1, 2, 107, 2, 108, 2, 109, -1, 3, 0, 3, 2, 11, -2, 2, 0, 2, 27, -3, 2, 150, -4, 2, 18, 2, 0, 2, 35, 0, 1, 2, 0, 2, 62, 2, 28, 2, 11, 2, 9, 2, 0, 2, 110, -1, 3, 0, 4, 2, 9, 2, 21, 2, 111, 2, 6, 2, 0, 2, 112, 2, 0, 2, 48, -4, 3, 0, 9, 2, 20, 2, 29, 2, 30, -4, 2, 113, 2, 114, 2, 29, 2, 20, 2, 7, -2, 2, 115, 2, 29, 2, 31, -2, 2, 0, 2, 116, -2, 0, 4277137519, 0, 2269118463, -1, 3, 18, 2, -1, 2, 32, 2, 36, 2, 0, 3, 29, 2, 2, 34, 2, 19, -3, 3, 0, 2, 2, 33, -1, 2, 0, 2, 34, 2, 0, 2, 34, 2, 0, 2, 46, -10, 2, 0, 0, 203775, -2, 2, 18, 2, 43, 2, 35, -2, 2, 17, 2, 117, 2, 20, 3, 0, 2, 2, 36, 0, 2147549120, 2, 0, 2, 11, 2, 17, 2, 135, 2, 0, 2, 37, 2, 52, 0, 5242879, 3, 0, 2, 0, 402644511, -1, 2, 120, 0, 1090519039, -2, 2, 122, 2, 38, 2, 0, 0, 67045375, 2, 39, 0, 4226678271, 0, 3766565279, 0, 2039759, -4, 3, 0, 2, 0, 3288270847, 0, 3, 3, 0, 2, 0, 67043519, -5, 2, 0, 0, 4282384383, 0, 1056964609, -1, 3, 0, 2, 0, 67043345, -1, 2, 0, 2, 40, 2, 41, -1, 2, 10, 2, 42, -6, 2, 0, 2, 11, -3, 3, 0, 2, 0, 2147484671, 2, 125, 0, 4190109695, 2, 50, -2, 2, 126, 0, 4244635647, 0, 27, 2, 0, 2, 7, 2, 43, 2, 0, 2, 63, -1, 2, 0, 2, 40, -8, 2, 54, 2, 44, 0, 67043329, 2, 127, 2, 45, 0, 8388351, -2, 2, 128, 0, 3028287487, 2, 46, 2, 130, 0, 33259519, 2, 41, -9, 2, 20, -5, 2, 64, -2, 3, 0, 28, 2, 31, -3, 3, 0, 3, 2, 47, 3, 0, 6, 2, 48, -85, 3, 0, 33, 2, 47, -126, 3, 0, 18, 2, 36, -269, 3, 0, 17, 2, 40, 2, 7, 2, 41, -2, 2, 17, 2, 49, 2, 0, 2, 20, 2, 50, 2, 132, 2, 23, -21, 3, 0, 2, -4, 3, 0, 2, 0, 4294936575, 2, 0, 0, 4294934783, -2, 0, 196635, 3, 0, 191, 2, 51, 3, 0, 38, 2, 29, -1, 2, 33, -279, 3, 0, 8, 2, 7, -1, 2, 133, 2, 52, 3, 0, 11, 2, 6, -72, 3, 0, 3, 2, 134, 0, 1677656575, -166, 0, 4161266656, 0, 4071, 0, 15360, -4, 0, 28, -13, 3, 0, 2, 2, 37, 2, 0, 2, 136, 2, 137, 2, 55, 2, 0, 2, 138, 2, 139, 2, 140, 3, 0, 10, 2, 141, 2, 142, 2, 15, 3, 37, 2, 3, 53, 2, 3, 54, 2, 0, 4294954999, 2, 0, -16, 2, 0, 2, 88, 2, 0, 0, 2105343, 0, 4160749584, 0, 65534, -42, 0, 4194303871, 0, 2011, -6, 2, 0, 0, 1073684479, 0, 17407, -11, 2, 0, 2, 31, -40, 3, 0, 6, 0, 8323103, -1, 3, 0, 2, 2, 42, -37, 2, 55, 2, 144, 2, 145, 2, 146, 2, 147, 2, 148, -105, 2, 24, -32, 3, 0, 1334, 2, 9, -1, 3, 0, 129, 2, 27, 3, 0, 6, 2, 9, 3, 0, 180, 2, 149, 3, 0, 233, 0, 1, -96, 3, 0, 16, 2, 9, -47, 3, 0, 154, 2, 56, -22381, 3, 0, 7, 2, 23, -6130, 3, 5, 2, -1, 0, 69207040, 3, 44, 2, 3, 0, 14, 2, 57, 2, 58, -3, 0, 3168731136, 0, 4294956864, 2, 1, 2, 0, 2, 59, 3, 0, 4, 0, 4294966275, 3, 0, 4, 2, 16, 2, 60, 2, 0, 2, 33, -1, 2, 17, 2, 61, -1, 2, 0, 2, 56, 0, 4294885376, 3, 0, 2, 0, 3145727, 0, 2617294944, 0, 4294770688, 2, 23, 2, 62, 3, 0, 2, 0, 131135, 2, 95, 0, 70256639, 0, 71303167, 0, 272, 2, 40, 2, 56, -1, 2, 37, 2, 30, -1, 2, 96, 2, 63, 0, 4278255616, 0, 4294836227, 0, 4294549473, 0, 600178175, 0, 2952806400, 0, 268632067, 0, 4294543328, 0, 57540095, 0, 1577058304, 0, 1835008, 0, 4294688736, 2, 65, 2, 64, 0, 33554435, 2, 123, 2, 65, 2, 151, 0, 131075, 0, 3594373096, 0, 67094296, 2, 64, -1, 0, 4294828000, 0, 603979263, 2, 160, 0, 3, 0, 4294828001, 0, 602930687, 2, 183, 0, 393219, 0, 4294828016, 0, 671088639, 0, 2154840064, 0, 4227858435, 0, 4236247008, 2, 66, 2, 36, -1, 2, 4, 0, 917503, 2, 36, -1, 2, 67, 0, 537788335, 0, 4026531935, -1, 0, 1, -1, 2, 32, 2, 68, 0, 7936, -3, 2, 0, 0, 2147485695, 0, 1010761728, 0, 4292984930, 0, 16387, 2, 0, 2, 14, 2, 15, 3, 0, 10, 2, 69, 2, 0, 2, 70, 2, 71, 2, 72, 2, 0, 2, 73, 2, 0, 2, 11, -1, 2, 23, 3, 0, 2, 2, 12, 2, 4, 3, 0, 18, 2, 74, 2, 5, 3, 0, 2, 2, 75, 0, 253951, 3, 19, 2, 0, 122879, 2, 0, 2, 8, 0, 276824064, -2, 3, 0, 2, 2, 40, 2, 0, 0, 4294903295, 2, 0, 2, 29, 2, 7, -1, 2, 17, 2, 49, 2, 0, 2, 76, 2, 41, -1, 2, 20, 2, 0, 2, 27, -2, 0, 128, -2, 2, 77, 2, 8, 0, 4064, -1, 2, 119, 0, 4227907585, 2, 0, 2, 118, 2, 0, 2, 48, 2, 173, 2, 9, 2, 38, 2, 10, -1, 0, 74440192, 3, 0, 6, -2, 3, 0, 8, 2, 12, 2, 0, 2, 78, 2, 9, 2, 0, 2, 79, 2, 80, 2, 81, -3, 2, 82, 2, 13, -3, 2, 83, 2, 84, 2, 85, 2, 0, 2, 33, -83, 2, 0, 2, 53, 2, 7, 3, 0, 4, 0, 817183, 2, 0, 2, 14, 2, 0, 0, 33023, 2, 20, 3, 86, 2, -17, 2, 87, 0, 524157950, 2, 4, 2, 0, 2, 88, 2, 4, 2, 0, 2, 15, 2, 77, 2, 16, 3, 0, 2, 2, 47, 2, 0, -1, 2, 17, -16, 3, 0, 206, -2, 3, 0, 655, 2, 18, 3, 0, 36, 2, 68, -1, 2, 17, 2, 9, 3, 0, 8, 2, 89, 0, 3072, 2, 0, 0, 2147516415, 2, 9, 3, 0, 2, 2, 23, 2, 90, 2, 91, 3, 0, 2, 2, 92, 2, 0, 2, 93, 2, 94, 0, 4294965179, 0, 7, 2, 0, 2, 8, 2, 91, 2, 8, -1, 0, 1761345536, 2, 95, 0, 4294901823, 2, 36, 2, 18, 2, 96, 2, 34, 2, 166, 0, 2080440287, 2, 0, 2, 33, 2, 143, 0, 3296722943, 2, 0, 0, 1046675455, 0, 939524101, 0, 1837055, 2, 97, 2, 98, 2, 15, 2, 21, 3, 0, 3, 0, 7, 3, 0, 349, 2, 99, 2, 100, 2, 6, -264, 3, 0, 11, 2, 22, 3, 0, 2, 2, 31, -1, 0, 2700607615, 2, 101, 2, 102, 3, 0, 2, 2, 19, 2, 103, 3, 0, 10, 2, 9, 2, 17, 2, 0, 2, 45, 2, 0, 2, 30, 2, 104, -3, 2, 105, 3, 0, 3, 2, 18, -1, 3, 5, 2, 2, 26, 2, 0, 2, 7, 2, 106, -1, 2, 107, 2, 108, 2, 109, -1, 3, 0, 3, 2, 11, -2, 2, 0, 2, 27, -8, 2, 18, 2, 0, 2, 35, -1, 2, 0, 2, 62, 2, 28, 2, 29, 2, 9, 2, 0, 2, 110, -1, 3, 0, 4, 2, 9, 2, 17, 2, 111, 2, 6, 2, 0, 2, 112, 2, 0, 2, 48, -4, 3, 0, 9, 2, 20, 2, 29, 2, 30, -4, 2, 113, 2, 114, 2, 29, 2, 20, 2, 7, -2, 2, 115, 2, 29, 2, 31, -2, 2, 0, 2, 116, -2, 0, 4277075969, 2, 29, -1, 3, 18, 2, -1, 2, 32, 2, 117, 2, 0, 3, 29, 2, 2, 34, 2, 19, -3, 3, 0, 2, 2, 33, -1, 2, 0, 2, 34, 2, 0, 2, 34, 2, 0, 2, 48, -10, 2, 0, 0, 197631, -2, 2, 18, 2, 43, 2, 118, -2, 2, 17, 2, 117, 2, 20, 2, 119, 2, 51, -2, 2, 119, 2, 23, 2, 17, 2, 33, 2, 119, 2, 36, 0, 4294901904, 0, 4718591, 2, 119, 2, 34, 0, 335544350, -1, 2, 120, 2, 121, -2, 2, 122, 2, 38, 2, 7, -1, 2, 123, 2, 65, 0, 3758161920, 0, 3, -4, 2, 0, 2, 27, 0, 2147485568, 0, 3, 2, 0, 2, 23, 0, 176, -5, 2, 0, 2, 47, 2, 186, -1, 2, 0, 2, 23, 2, 197, -1, 2, 0, 0, 16779263, -2, 2, 11, -7, 2, 0, 2, 121, -3, 3, 0, 2, 2, 124, 2, 125, 0, 2147549183, 0, 2, -2, 2, 126, 2, 35, 0, 10, 0, 4294965249, 0, 67633151, 0, 4026597376, 2, 0, 0, 536871935, -1, 2, 0, 2, 40, -8, 2, 54, 2, 47, 0, 1, 2, 127, 2, 23, -3, 2, 128, 2, 35, 2, 129, 2, 130, 0, 16778239, -10, 2, 34, -5, 2, 64, -2, 3, 0, 28, 2, 31, -3, 3, 0, 3, 2, 47, 3, 0, 6, 2, 48, -85, 3, 0, 33, 2, 47, -126, 3, 0, 18, 2, 36, -269, 3, 0, 17, 2, 40, 2, 7, -3, 2, 17, 2, 131, 2, 0, 2, 23, 2, 48, 2, 132, 2, 23, -21, 3, 0, 2, -4, 3, 0, 2, 0, 67583, -1, 2, 103, -2, 0, 11, 3, 0, 191, 2, 51, 3, 0, 38, 2, 29, -1, 2, 33, -279, 3, 0, 8, 2, 7, -1, 2, 133, 2, 52, 3, 0, 11, 2, 6, -72, 3, 0, 3, 2, 134, 2, 135, -187, 3, 0, 2, 2, 37, 2, 0, 2, 136, 2, 137, 2, 55, 2, 0, 2, 138, 2, 139, 2, 140, 3, 0, 10, 2, 141, 2, 142, 2, 15, 3, 37, 2, 3, 53, 2, 3, 54, 2, 2, 143, -73, 2, 0, 0, 1065361407, 0, 16384, -11, 2, 0, 2, 121, -40, 3, 0, 6, 2, 117, -1, 3, 0, 2, 0, 2063, -37, 2, 55, 2, 144, 2, 145, 2, 146, 2, 147, 2, 148, -138, 3, 0, 1334, 2, 9, -1, 3, 0, 129, 2, 27, 3, 0, 6, 2, 9, 3, 0, 180, 2, 149, 3, 0, 233, 0, 1, -96, 3, 0, 16, 2, 9, -47, 3, 0, 154, 2, 56, -28517, 2, 0, 0, 1, -1, 2, 124, 2, 0, 0, 8193, -21, 2, 193, 0, 10255, 0, 4, -11, 2, 64, 2, 171, -1, 0, 71680, -1, 2, 161, 0, 4292900864, 0, 805306431, -5, 2, 150, -1, 2, 157, -1, 0, 6144, -2, 2, 127, -1, 2, 154, -1, 0, 2147532800, 2, 151, 2, 165, 2, 0, 2, 164, 0, 524032, 0, 4, -4, 2, 190, 0, 205128192, 0, 1333757536, 0, 2147483696, 0, 423953, 0, 747766272, 0, 2717763192, 0, 4286578751, 0, 278545, 2, 152, 0, 4294886464, 0, 33292336, 0, 417809, 2, 152, 0, 1327482464, 0, 4278190128, 0, 700594195, 0, 1006647527, 0, 4286497336, 0, 4160749631, 2, 153, 0, 469762560, 0, 4171219488, 0, 8323120, 2, 153, 0, 202375680, 0, 3214918176, 0, 4294508592, 2, 153, -1, 0, 983584, 0, 48, 0, 58720273, 0, 3489923072, 0, 10517376, 0, 4293066815, 0, 1, 0, 2013265920, 2, 177, 2, 0, 0, 2089, 0, 3221225552, 0, 201375904, 2, 0, -2, 0, 256, 0, 122880, 0, 16777216, 2, 150, 0, 4160757760, 2, 0, -6, 2, 167, -11, 0, 3263218176, -1, 0, 49664, 0, 2160197632, 0, 8388802, -1, 0, 12713984, -1, 2, 154, 2, 159, 2, 178, -2, 2, 162, -20, 0, 3758096385, -2, 2, 155, 0, 4292878336, 2, 90, 2, 169, 0, 4294057984, -2, 2, 163, 2, 156, 2, 175, -2, 2, 155, -1, 2, 182, -1, 2, 170, 2, 124, 0, 4026593280, 0, 14, 0, 4292919296, -1, 2, 158, 0, 939588608, -1, 0, 805306368, -1, 2, 124, 0, 1610612736, 2, 156, 2, 157, 2, 4, 2, 0, -2, 2, 158, 2, 159, -3, 0, 267386880, -1, 2, 160, 0, 7168, -1, 0, 65024, 2, 154, 2, 161, 2, 179, -7, 2, 168, -8, 2, 162, -1, 0, 1426112704, 2, 163, -1, 2, 164, 0, 271581216, 0, 2149777408, 2, 23, 2, 161, 2, 124, 0, 851967, 2, 180, -1, 2, 23, 2, 181, -4, 2, 158, -20, 2, 195, 2, 165, -56, 0, 3145728, 2, 185, -4, 2, 166, 2, 124, -4, 0, 32505856, -1, 2, 167, -1, 0, 2147385088, 2, 90, 1, 2155905152, 2, -3, 2, 103, 2, 0, 2, 168, -2, 2, 169, -6, 2, 170, 0, 4026597375, 0, 1, -1, 0, 1, -1, 2, 171, -3, 2, 117, 2, 64, -2, 2, 166, -2, 2, 176, 2, 124, -878, 2, 159, -36, 2, 172, -1, 2, 201, -10, 2, 188, -5, 2, 174, -6, 0, 4294965251, 2, 27, -1, 2, 173, -1, 2, 174, -2, 0, 4227874752, -3, 0, 2146435072, 2, 159, -2, 0, 1006649344, 2, 124, -1, 2, 90, 0, 201375744, -3, 0, 134217720, 2, 90, 0, 4286677377, 0, 32896, -1, 2, 158, -3, 2, 175, -349, 2, 176, 0, 1920, 2, 177, 3, 0, 264, -11, 2, 157, -2, 2, 178, 2, 0, 0, 520617856, 0, 2692743168, 0, 36, -3, 0, 524284, -11, 2, 23, -1, 2, 187, -1, 2, 184, 0, 3221291007, 2, 178, -1, 2, 202, 0, 2158720, -3, 2, 159, 0, 1, -4, 2, 124, 0, 3808625411, 0, 3489628288, 2, 200, 0, 1207959680, 0, 3221274624, 2, 0, -3, 2, 179, 0, 120, 0, 7340032, -2, 2, 180, 2, 4, 2, 23, 2, 163, 3, 0, 4, 2, 159, -1, 2, 181, 2, 177, -1, 0, 8176, 2, 182, 2, 179, 2, 183, -1, 0, 4290773232, 2, 0, -4, 2, 163, 2, 189, 0, 15728640, 2, 177, -1, 2, 161, -1, 0, 4294934512, 3, 0, 4, -9, 2, 90, 2, 170, 2, 184, 3, 0, 4, 0, 704, 0, 1849688064, 2, 185, -1, 2, 124, 0, 4294901887, 2, 0, 0, 130547712, 0, 1879048192, 2, 199, 3, 0, 2, -1, 2, 186, 2, 187, -1, 0, 17829776, 0, 2025848832, 0, 4261477888, -2, 2, 0, -1, 0, 4286580608, -1, 0, 29360128, 2, 192, 0, 16252928, 0, 3791388672, 2, 38, 3, 0, 2, -2, 2, 196, 2, 0, -1, 2, 103, -1, 0, 66584576, -1, 2, 191, 3, 0, 9, 2, 124, -1, 0, 4294755328, 3, 0, 2, -1, 2, 161, 2, 178, 3, 0, 2, 2, 23, 2, 188, 2, 90, -2, 0, 245760, 0, 2147418112, -1, 2, 150, 2, 203, 0, 4227923456, -1, 2, 164, 2, 161, 2, 90, -3, 0, 4292870145, 0, 262144, 2, 124, 3, 0, 2, 0, 1073758848, 2, 189, -1, 0, 4227921920, 2, 190, 0, 68289024, 0, 528402016, 0, 4292927536, 3, 0, 4, -2, 0, 268435456, 2, 91, -2, 2, 191, 3, 0, 5, -1, 2, 192, 2, 163, 2, 0, -2, 0, 4227923936, 2, 62, -1, 2, 155, 2, 95, 2, 0, 2, 154, 2, 158, 3, 0, 6, -1, 2, 177, 3, 0, 3, -2, 0, 2146959360, 0, 9440640, 0, 104857600, 0, 4227923840, 3, 0, 2, 0, 768, 2, 193, 2, 77, -2, 2, 161, -2, 2, 119, -1, 2, 155, 3, 0, 8, 0, 512, 0, 8388608, 2, 194, 2, 172, 2, 187, 0, 4286578944, 3, 0, 2, 0, 1152, 0, 1266679808, 2, 191, 0, 576, 0, 4261707776, 2, 95, 3, 0, 9, 2, 155, 3, 0, 5, 2, 16, -1, 0, 2147221504, -28, 2, 178, 3, 0, 3, -3, 0, 4292902912, -6, 2, 96, 3, 0, 85, -33, 0, 4294934528, 3, 0, 126, -18, 2, 195, 3, 0, 269, -17, 2, 155, 2, 124, 2, 198, 3, 0, 2, 2, 23, 0, 4290822144, -2, 0, 67174336, 0, 520093700, 2, 17, 3, 0, 21, -2, 2, 179, 3, 0, 3, -2, 0, 30720, -1, 0, 32512, 3, 0, 2, 0, 4294770656, -191, 2, 174, -38, 2, 170, 2, 0, 2, 196, 3, 0, 279, -8, 2, 124, 2, 0, 0, 4294508543, 0, 65295, -11, 2, 177, 3, 0, 72, -3, 0, 3758159872, 0, 201391616, 3, 0, 155, -7, 2, 170, -1, 0, 384, -1, 0, 133693440, -3, 2, 196, -2, 2, 26, 3, 0, 4, 2, 169, -2, 2, 90, 2, 155, 3, 0, 4, -2, 2, 164, -1, 2, 150, 0, 335552923, 2, 197, -1, 0, 538974272, 0, 2214592512, 0, 132000, -10, 0, 192, -8, 0, 12288, -21, 0, 134213632, 0, 4294901761, 3, 0, 42, 0, 100663424, 0, 4294965284, 3, 0, 6, -1, 0, 3221282816, 2, 198, 3, 0, 11, -1, 2, 199, 3, 0, 40, -6, 0, 4286578784, 2, 0, -2, 0, 1006694400, 3, 0, 24, 2, 35, -1, 2, 94, 3, 0, 2, 0, 1, 2, 163, 3, 0, 6, 2, 197, 0, 4110942569, 0, 1432950139, 0, 2701658217, 0, 4026532864, 0, 4026532881, 2, 0, 2, 45, 3, 0, 8, -1, 2, 158, -2, 2, 169, 0, 98304, 0, 65537, 2, 170, -5, 0, 4294950912, 2, 0, 2, 118, 0, 65528, 2, 177, 0, 4294770176, 2, 26, 3, 0, 4, -30, 2, 174, 0, 3758153728, -3, 2, 169, -2, 2, 155, 2, 188, 2, 158, -1, 2, 191, -1, 2, 161, 0, 4294754304, 3, 0, 2, -3, 0, 33554432, -2, 2, 200, -3, 2, 169, 0, 4175478784, 2, 201, 0, 4286643712, 0, 4286644216, 2, 0, -4, 2, 202, -1, 2, 165, 0, 4227923967, 3, 0, 32, -1334, 2, 163, 2, 0, -129, 2, 94, -6, 2, 163, -180, 2, 203, -233, 2, 4, 3, 0, 96, -16, 2, 163, 3, 0, 47, -154, 2, 165, 3, 0, 22381, -7, 2, 17, 3, 0, 6128], [4294967295, 4294967291, 4092460543, 4294828031, 4294967294, 134217726, 268435455, 2147483647, 1048575, 1073741823, 3892314111, 134217727, 1061158911, 536805376, 4294910143, 4160749567, 4294901759, 4294901760, 536870911, 262143, 8388607, 4294902783, 4294918143, 65535, 67043328, 2281701374, 4294967232, 2097151, 4294903807, 4194303, 255, 67108863, 4294967039, 511, 524287, 131071, 127, 4292870143, 4294902271, 4294549487, 33554431, 1023, 67047423, 4294901888, 4286578687, 4294770687, 67043583, 32767, 15, 2047999, 67043343, 16777215, 4294902000, 4294934527, 4294966783, 4294967279, 2047, 262083, 20511, 4290772991, 41943039, 493567, 4294959104, 603979775, 65536, 602799615, 805044223, 4294965206, 8191, 1031749119, 4294917631, 2134769663, 4286578493, 4282253311, 4294942719, 33540095, 4294905855, 4294967264, 2868854591, 1608515583, 265232348, 534519807, 2147614720, 1060109444, 4093640016, 17376, 2139062143, 224, 4169138175, 4294909951, 4286578688, 4294967292, 4294965759, 2044, 4292870144, 4294966272, 4294967280, 8289918, 4294934399, 4294901775, 4294965375, 1602223615, 4294967259, 4294443008, 268369920, 4292804608, 486341884, 4294963199, 3087007615, 1073692671, 4128527, 4279238655, 4294902015, 4294966591, 2445279231, 3670015, 3238002687, 31, 63, 4294967288, 4294705151, 4095, 3221208447, 4294549472, 2147483648, 4285526655, 4294966527, 4294705152, 4294966143, 64, 4294966719, 16383, 3774873592, 458752, 536807423, 67043839, 3758096383, 3959414372, 3755993023, 2080374783, 4294835295, 4294967103, 4160749565, 4087, 184024726, 2862017156, 1593309078, 268434431, 268434414, 4294901763, 536870912, 2952790016, 202506752, 139264, 402653184, 4261412864, 4227922944, 49152, 61440, 3758096384, 117440512, 65280, 3233808384, 3221225472, 2097152, 4294965248, 32768, 57152, 67108864, 4293918720, 4290772992, 25165824, 57344, 4227915776, 4278190080, 4227907584, 65520, 4026531840, 4227858432, 4160749568, 3758129152, 4294836224, 63488, 1073741824, 4294967040, 4194304, 251658240, 196608, 4294963200, 64512, 417808, 4227923712, 12582912, 50331648, 65472, 4294967168, 4294966784, 16, 4294917120, 2080374784, 4096, 65408, 524288, 65532]);\n\nfunction advanceChar(parser) {\r\n    parser.column++;\r\n    return (parser.currentChar = parser.source.charCodeAt(++parser.index));\r\n}\r\nfunction consumeMultiUnitCodePoint(parser, hi) {\r\n    if ((hi & 0xfc00) !== 55296)\r\n        return 0;\r\n    const lo = parser.source.charCodeAt(parser.index + 1);\r\n    if ((lo & 0xfc00) !== 0xdc00)\r\n        return 0;\r\n    hi = parser.currentChar = 65536 + ((hi & 0x3ff) << 10) + (lo & 0x3ff);\r\n    if (((unicodeLookup[(hi >>> 5) + 0] >>> hi) & 31 & 1) === 0) {\r\n        report(parser, 18, fromCodePoint(hi));\r\n    }\r\n    parser.index++;\r\n    parser.column++;\r\n    return 1;\r\n}\r\nfunction consumeLineFeed(parser, state) {\r\n    parser.currentChar = parser.source.charCodeAt(++parser.index);\r\n    parser.flags |= 1;\r\n    if ((state & 4) === 0) {\r\n        parser.column = 0;\r\n        parser.line++;\r\n    }\r\n}\r\nfunction scanNewLine(parser) {\r\n    parser.flags |= 1;\r\n    parser.currentChar = parser.source.charCodeAt(++parser.index);\r\n    parser.column = 0;\r\n    parser.line++;\r\n}\r\nfunction isExoticECMAScriptWhitespace(ch) {\r\n    return (ch === 160 ||\r\n        ch === 65279 ||\r\n        ch === 133 ||\r\n        ch === 5760 ||\r\n        (ch >= 8192 && ch <= 8203) ||\r\n        ch === 8239 ||\r\n        ch === 8287 ||\r\n        ch === 12288 ||\r\n        ch === 8201 ||\r\n        ch === 65519);\r\n}\r\nfunction fromCodePoint(codePoint) {\r\n    return codePoint <= 65535\r\n        ? String.fromCharCode(codePoint)\r\n        : String.fromCharCode(codePoint >>> 10) + String.fromCharCode(codePoint & 0x3ff);\r\n}\r\nfunction toHex(code) {\r\n    return code < 65 ? code - 48 : (code - 65 + 10) & 0xf;\r\n}\r\nfunction convertTokenType(t) {\r\n    switch (t) {\r\n        case 134283266:\r\n            return 'NumericLiteral';\r\n        case 134283267:\r\n            return 'StringLiteral';\r\n        case 86021:\r\n        case 86022:\r\n            return 'BooleanLiteral';\r\n        case 86023:\r\n            return 'NullLiteral';\r\n        case 65540:\r\n            return 'RegularExpression';\r\n        case 67174408:\r\n        case 67174409:\r\n        case 132:\r\n            return 'TemplateLiteral';\r\n        default:\r\n            if ((t & 143360) === 143360)\r\n                return 'Identifier';\r\n            if ((t & 4096) === 4096)\r\n                return 'Keyword';\r\n            return 'Punctuator';\r\n    }\r\n}\n\nconst CharTypes = [\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    8 | 1024,\r\n    0,\r\n    0,\r\n    8 | 2048,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    8192,\r\n    0,\r\n    1 | 2,\r\n    0,\r\n    0,\r\n    8192,\r\n    0,\r\n    0,\r\n    0,\r\n    256,\r\n    0,\r\n    256 | 32768,\r\n    0,\r\n    0,\r\n    2 | 16 | 128 | 32 | 64,\r\n    2 | 16 | 128 | 32 | 64,\r\n    2 | 16 | 32 | 64,\r\n    2 | 16 | 32 | 64,\r\n    2 | 16 | 32 | 64,\r\n    2 | 16 | 32 | 64,\r\n    2 | 16 | 32 | 64,\r\n    2 | 16 | 32 | 64,\r\n    2 | 16 | 512 | 64,\r\n    2 | 16 | 512 | 64,\r\n    0,\r\n    0,\r\n    16384,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    1 | 2 | 64,\r\n    1 | 2 | 64,\r\n    1 | 2 | 64,\r\n    1 | 2 | 64,\r\n    1 | 2 | 64,\r\n    1 | 2 | 64,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    1 | 2,\r\n    0,\r\n    1,\r\n    0,\r\n    0,\r\n    1 | 2 | 4096,\r\n    0,\r\n    1 | 2 | 4 | 64,\r\n    1 | 2 | 4 | 64,\r\n    1 | 2 | 4 | 64,\r\n    1 | 2 | 4 | 64,\r\n    1 | 2 | 4 | 64,\r\n    1 | 2 | 4 | 64,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    1 | 2 | 4,\r\n    16384,\r\n    0,\r\n    0,\r\n    0,\r\n    0\r\n];\r\nconst isIdStart = [\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0\r\n];\r\nconst isIdPart = [\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    1,\r\n    0,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    1,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0\r\n];\r\nfunction isIdentifierStart(code) {\r\n    return code <= 0x7F\r\n        ? isIdStart[code]\r\n        : (unicodeLookup[(code >>> 5) + 34816] >>> code) & 31 & 1;\r\n}\r\nfunction isIdentifierPart(code) {\r\n    return code <= 0x7F\r\n        ? isIdPart[code]\r\n        : (unicodeLookup[(code >>> 5) + 0] >>> code) & 31 & 1 || (code === 8204 || code === 8205);\r\n}\n\nconst CommentTypes = ['SingleLine', 'MultiLine', 'HTMLOpen', 'HTMLClose', 'HashbangComment'];\r\nfunction skipHashBang(parser) {\r\n    const source = parser.source;\r\n    if (parser.currentChar === 35 && source.charCodeAt(parser.index + 1) === 33) {\r\n        advanceChar(parser);\r\n        advanceChar(parser);\r\n        skipSingleLineComment(parser, source, 0, 4, parser.tokenPos, parser.linePos, parser.colPos);\r\n    }\r\n}\r\nfunction skipSingleHTMLComment(parser, source, state, context, type, start, line, column) {\r\n    if (context & 2048)\r\n        report(parser, 0);\r\n    return skipSingleLineComment(parser, source, state, type, start, line, column);\r\n}\r\nfunction skipSingleLineComment(parser, source, state, type, start, line, column) {\r\n    const { index } = parser;\r\n    parser.tokenPos = parser.index;\r\n    parser.linePos = parser.line;\r\n    parser.colPos = parser.column;\r\n    while (parser.index < parser.end) {\r\n        if (CharTypes[parser.currentChar] & 8) {\r\n            const isCR = parser.currentChar === 13;\r\n            scanNewLine(parser);\r\n            if (isCR && parser.index < parser.end && parser.currentChar === 10)\r\n                parser.currentChar = source.charCodeAt(++parser.index);\r\n            break;\r\n        }\r\n        else if ((parser.currentChar ^ 8232) <= 1) {\r\n            scanNewLine(parser);\r\n            break;\r\n        }\r\n        advanceChar(parser);\r\n        parser.tokenPos = parser.index;\r\n        parser.linePos = parser.line;\r\n        parser.colPos = parser.column;\r\n    }\r\n    if (parser.onComment) {\r\n        const loc = {\r\n            start: {\r\n                line,\r\n                column\r\n            },\r\n            end: {\r\n                line: parser.linePos,\r\n                column: parser.colPos\r\n            }\r\n        };\r\n        parser.onComment(CommentTypes[type & 0xff], source.slice(index, parser.tokenPos), start, parser.tokenPos, loc);\r\n    }\r\n    return state | 1;\r\n}\r\nfunction skipMultiLineComment(parser, source, state) {\r\n    const { index } = parser;\r\n    while (parser.index < parser.end) {\r\n        if (parser.currentChar < 0x2b) {\r\n            let skippedOneAsterisk = false;\r\n            while (parser.currentChar === 42) {\r\n                if (!skippedOneAsterisk) {\r\n                    state &= ~4;\r\n                    skippedOneAsterisk = true;\r\n                }\r\n                if (advanceChar(parser) === 47) {\r\n                    advanceChar(parser);\r\n                    if (parser.onComment) {\r\n                        const loc = {\r\n                            start: {\r\n                                line: parser.linePos,\r\n                                column: parser.colPos\r\n                            },\r\n                            end: {\r\n                                line: parser.line,\r\n                                column: parser.column\r\n                            }\r\n                        };\r\n                        parser.onComment(CommentTypes[1 & 0xff], source.slice(index, parser.index - 2), index - 2, parser.index, loc);\r\n                    }\r\n                    parser.tokenPos = parser.index;\r\n                    parser.linePos = parser.line;\r\n                    parser.colPos = parser.column;\r\n                    return state;\r\n                }\r\n            }\r\n            if (skippedOneAsterisk) {\r\n                continue;\r\n            }\r\n            if (CharTypes[parser.currentChar] & 8) {\r\n                if (parser.currentChar === 13) {\r\n                    state |= 1 | 4;\r\n                    scanNewLine(parser);\r\n                }\r\n                else {\r\n                    consumeLineFeed(parser, state);\r\n                    state = (state & ~4) | 1;\r\n                }\r\n            }\r\n            else {\r\n                advanceChar(parser);\r\n            }\r\n        }\r\n        else if ((parser.currentChar ^ 8232) <= 1) {\r\n            state = (state & ~4) | 1;\r\n            scanNewLine(parser);\r\n        }\r\n        else {\r\n            state &= ~4;\r\n            advanceChar(parser);\r\n        }\r\n    }\r\n    report(parser, 16);\r\n}\n\nfunction scanRegularExpression(parser, context) {\r\n    const bodyStart = parser.index;\r\n    let preparseState = 0;\r\n    loop: while (true) {\r\n        const ch = parser.currentChar;\r\n        advanceChar(parser);\r\n        if (preparseState & 1) {\r\n            preparseState &= ~1;\r\n        }\r\n        else {\r\n            switch (ch) {\r\n                case 47:\r\n                    if (!preparseState)\r\n                        break loop;\r\n                    else\r\n                        break;\r\n                case 92:\r\n                    preparseState |= 1;\r\n                    break;\r\n                case 91:\r\n                    preparseState |= 2;\r\n                    break;\r\n                case 93:\r\n                    preparseState &= 1;\r\n                    break;\r\n                case 13:\r\n                case 10:\r\n                case 8232:\r\n                case 8233:\r\n                    report(parser, 32);\r\n            }\r\n        }\r\n        if (parser.index >= parser.source.length) {\r\n            return report(parser, 32);\r\n        }\r\n    }\r\n    const bodyEnd = parser.index - 1;\r\n    let mask = 0;\r\n    let char = parser.currentChar;\r\n    const { index: flagStart } = parser;\r\n    while (isIdentifierPart(char)) {\r\n        switch (char) {\r\n            case 103:\r\n                if (mask & 2)\r\n                    report(parser, 34, 'g');\r\n                mask |= 2;\r\n                break;\r\n            case 105:\r\n                if (mask & 1)\r\n                    report(parser, 34, 'i');\r\n                mask |= 1;\r\n                break;\r\n            case 109:\r\n                if (mask & 4)\r\n                    report(parser, 34, 'm');\r\n                mask |= 4;\r\n                break;\r\n            case 117:\r\n                if (mask & 16)\r\n                    report(parser, 34, 'u');\r\n                mask |= 16;\r\n                break;\r\n            case 121:\r\n                if (mask & 8)\r\n                    report(parser, 34, 'y');\r\n                mask |= 8;\r\n                break;\r\n            case 115:\r\n                if (mask & 32)\r\n                    report(parser, 34, 's');\r\n                mask |= 32;\r\n                break;\r\n            case 100:\r\n                if (mask & 64)\r\n                    report(parser, 34, 'd');\r\n                mask |= 64;\r\n                break;\r\n            default:\r\n                report(parser, 33);\r\n        }\r\n        char = advanceChar(parser);\r\n    }\r\n    const flags = parser.source.slice(flagStart, parser.index);\r\n    const pattern = parser.source.slice(bodyStart, bodyEnd);\r\n    parser.tokenRegExp = { pattern, flags };\r\n    if (context & 512)\r\n        parser.tokenRaw = parser.source.slice(parser.tokenPos, parser.index);\r\n    parser.tokenValue = validate(parser, pattern, flags);\r\n    return 65540;\r\n}\r\nfunction validate(parser, pattern, flags) {\r\n    try {\r\n        return new RegExp(pattern, flags);\r\n    }\r\n    catch (e) {\r\n        try {\r\n            new RegExp(pattern, flags.replace('d', ''));\r\n            return null;\r\n        }\r\n        catch (e) {\r\n            report(parser, 32);\r\n        }\r\n    }\r\n}\n\nfunction scanString(parser, context, quote) {\r\n    const { index: start } = parser;\r\n    let ret = '';\r\n    let char = advanceChar(parser);\r\n    let marker = parser.index;\r\n    while ((CharTypes[char] & 8) === 0) {\r\n        if (char === quote) {\r\n            ret += parser.source.slice(marker, parser.index);\r\n            advanceChar(parser);\r\n            if (context & 512)\r\n                parser.tokenRaw = parser.source.slice(start, parser.index);\r\n            parser.tokenValue = ret;\r\n            return 134283267;\r\n        }\r\n        if ((char & 8) === 8 && char === 92) {\r\n            ret += parser.source.slice(marker, parser.index);\r\n            char = advanceChar(parser);\r\n            if (char < 0x7f || char === 8232 || char === 8233) {\r\n                const code = parseEscape(parser, context, char);\r\n                if (code >= 0)\r\n                    ret += fromCodePoint(code);\r\n                else\r\n                    handleStringError(parser, code, 0);\r\n            }\r\n            else {\r\n                ret += fromCodePoint(char);\r\n            }\r\n            marker = parser.index + 1;\r\n        }\r\n        if (parser.index >= parser.end)\r\n            report(parser, 14);\r\n        char = advanceChar(parser);\r\n    }\r\n    report(parser, 14);\r\n}\r\nfunction parseEscape(parser, context, first) {\r\n    switch (first) {\r\n        case 98:\r\n            return 8;\r\n        case 102:\r\n            return 12;\r\n        case 114:\r\n            return 13;\r\n        case 110:\r\n            return 10;\r\n        case 116:\r\n            return 9;\r\n        case 118:\r\n            return 11;\r\n        case 13: {\r\n            if (parser.index < parser.end) {\r\n                const nextChar = parser.source.charCodeAt(parser.index + 1);\r\n                if (nextChar === 10) {\r\n                    parser.index = parser.index + 1;\r\n                    parser.currentChar = nextChar;\r\n                }\r\n            }\r\n        }\r\n        case 10:\r\n        case 8232:\r\n        case 8233:\r\n            parser.column = -1;\r\n            parser.line++;\r\n            return -1;\r\n        case 48:\r\n        case 49:\r\n        case 50:\r\n        case 51: {\r\n            let code = first - 48;\r\n            let index = parser.index + 1;\r\n            let column = parser.column + 1;\r\n            if (index < parser.end) {\r\n                const next = parser.source.charCodeAt(index);\r\n                if ((CharTypes[next] & 32) === 0) {\r\n                    if ((code !== 0 || CharTypes[next] & 512) && context & 1024)\r\n                        return -2;\r\n                }\r\n                else if (context & 1024) {\r\n                    return -2;\r\n                }\r\n                else {\r\n                    parser.currentChar = next;\r\n                    code = (code << 3) | (next - 48);\r\n                    index++;\r\n                    column++;\r\n                    if (index < parser.end) {\r\n                        const next = parser.source.charCodeAt(index);\r\n                        if (CharTypes[next] & 32) {\r\n                            parser.currentChar = next;\r\n                            code = (code << 3) | (next - 48);\r\n                            index++;\r\n                            column++;\r\n                        }\r\n                    }\r\n                    parser.flags |= 64;\r\n                    parser.index = index - 1;\r\n                    parser.column = column - 1;\r\n                }\r\n            }\r\n            return code;\r\n        }\r\n        case 52:\r\n        case 53:\r\n        case 54:\r\n        case 55: {\r\n            if (context & 1024)\r\n                return -2;\r\n            let code = first - 48;\r\n            const index = parser.index + 1;\r\n            const column = parser.column + 1;\r\n            if (index < parser.end) {\r\n                const next = parser.source.charCodeAt(index);\r\n                if (CharTypes[next] & 32) {\r\n                    code = (code << 3) | (next - 48);\r\n                    parser.currentChar = next;\r\n                    parser.index = index;\r\n                    parser.column = column;\r\n                }\r\n            }\r\n            parser.flags |= 64;\r\n            return code;\r\n        }\r\n        case 120: {\r\n            const ch1 = advanceChar(parser);\r\n            if ((CharTypes[ch1] & 64) === 0)\r\n                return -4;\r\n            const hi = toHex(ch1);\r\n            const ch2 = advanceChar(parser);\r\n            if ((CharTypes[ch2] & 64) === 0)\r\n                return -4;\r\n            const lo = toHex(ch2);\r\n            return (hi << 4) | lo;\r\n        }\r\n        case 117: {\r\n            const ch = advanceChar(parser);\r\n            if (parser.currentChar === 123) {\r\n                let code = 0;\r\n                while ((CharTypes[advanceChar(parser)] & 64) !== 0) {\r\n                    code = (code << 4) | toHex(parser.currentChar);\r\n                    if (code > 1114111)\r\n                        return -5;\r\n                }\r\n                if (parser.currentChar < 1 || parser.currentChar !== 125) {\r\n                    return -4;\r\n                }\r\n                return code;\r\n            }\r\n            else {\r\n                if ((CharTypes[ch] & 64) === 0)\r\n                    return -4;\r\n                const ch2 = parser.source.charCodeAt(parser.index + 1);\r\n                if ((CharTypes[ch2] & 64) === 0)\r\n                    return -4;\r\n                const ch3 = parser.source.charCodeAt(parser.index + 2);\r\n                if ((CharTypes[ch3] & 64) === 0)\r\n                    return -4;\r\n                const ch4 = parser.source.charCodeAt(parser.index + 3);\r\n                if ((CharTypes[ch4] & 64) === 0)\r\n                    return -4;\r\n                parser.index += 3;\r\n                parser.column += 3;\r\n                parser.currentChar = parser.source.charCodeAt(parser.index);\r\n                return (toHex(ch) << 12) | (toHex(ch2) << 8) | (toHex(ch3) << 4) | toHex(ch4);\r\n            }\r\n        }\r\n        case 56:\r\n        case 57:\r\n            if ((context & 256) === 0)\r\n                return -3;\r\n        default:\r\n            return first;\r\n    }\r\n}\r\nfunction handleStringError(state, code, isTemplate) {\r\n    switch (code) {\r\n        case -1:\r\n            return;\r\n        case -2:\r\n            report(state, isTemplate ? 2 : 1);\r\n        case -3:\r\n            report(state, 13);\r\n        case -4:\r\n            report(state, 6);\r\n        case -5:\r\n            report(state, 102);\r\n    }\r\n}\n\nfunction scanTemplate(parser, context) {\r\n    const { index: start } = parser;\r\n    let token = 67174409;\r\n    let ret = '';\r\n    let char = advanceChar(parser);\r\n    while (char !== 96) {\r\n        if (char === 36 && parser.source.charCodeAt(parser.index + 1) === 123) {\r\n            advanceChar(parser);\r\n            token = 67174408;\r\n            break;\r\n        }\r\n        else if ((char & 8) === 8 && char === 92) {\r\n            char = advanceChar(parser);\r\n            if (char > 0x7e) {\r\n                ret += fromCodePoint(char);\r\n            }\r\n            else {\r\n                const code = parseEscape(parser, context | 1024, char);\r\n                if (code >= 0) {\r\n                    ret += fromCodePoint(code);\r\n                }\r\n                else if (code !== -1 && context & 65536) {\r\n                    ret = undefined;\r\n                    char = scanBadTemplate(parser, char);\r\n                    if (char < 0)\r\n                        token = 67174408;\r\n                    break;\r\n                }\r\n                else {\r\n                    handleStringError(parser, code, 1);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (parser.index < parser.end &&\r\n                char === 13 &&\r\n                parser.source.charCodeAt(parser.index) === 10) {\r\n                ret += fromCodePoint(char);\r\n                parser.currentChar = parser.source.charCodeAt(++parser.index);\r\n            }\r\n            if (((char & 83) < 3 && char === 10) || (char ^ 8232) <= 1) {\r\n                parser.column = -1;\r\n                parser.line++;\r\n            }\r\n            ret += fromCodePoint(char);\r\n        }\r\n        if (parser.index >= parser.end)\r\n            report(parser, 15);\r\n        char = advanceChar(parser);\r\n    }\r\n    advanceChar(parser);\r\n    parser.tokenValue = ret;\r\n    parser.tokenRaw = parser.source.slice(start + 1, parser.index - (token === 67174409 ? 1 : 2));\r\n    return token;\r\n}\r\nfunction scanBadTemplate(parser, ch) {\r\n    while (ch !== 96) {\r\n        switch (ch) {\r\n            case 36: {\r\n                const index = parser.index + 1;\r\n                if (index < parser.end && parser.source.charCodeAt(index) === 123) {\r\n                    parser.index = index;\r\n                    parser.column++;\r\n                    return -ch;\r\n                }\r\n                break;\r\n            }\r\n            case 10:\r\n            case 8232:\r\n            case 8233:\r\n                parser.column = -1;\r\n                parser.line++;\r\n        }\r\n        if (parser.index >= parser.end)\r\n            report(parser, 15);\r\n        ch = advanceChar(parser);\r\n    }\r\n    return ch;\r\n}\r\nfunction scanTemplateTail(parser, context) {\r\n    if (parser.index >= parser.end)\r\n        report(parser, 0);\r\n    parser.index--;\r\n    parser.column--;\r\n    return scanTemplate(parser, context);\r\n}\n\nfunction scanNumber(parser, context, kind) {\r\n    let char = parser.currentChar;\r\n    let value = 0;\r\n    let digit = 9;\r\n    let atStart = kind & 64 ? 0 : 1;\r\n    let digits = 0;\r\n    let allowSeparator = 0;\r\n    if (kind & 64) {\r\n        value = '.' + scanDecimalDigitsOrSeparator(parser, char);\r\n        char = parser.currentChar;\r\n        if (char === 110)\r\n            report(parser, 11);\r\n    }\r\n    else {\r\n        if (char === 48) {\r\n            char = advanceChar(parser);\r\n            if ((char | 32) === 120) {\r\n                kind = 8 | 128;\r\n                char = advanceChar(parser);\r\n                while (CharTypes[char] & (64 | 4096)) {\r\n                    if (char === 95) {\r\n                        if (!allowSeparator)\r\n                            report(parser, 147);\r\n                        allowSeparator = 0;\r\n                        char = advanceChar(parser);\r\n                        continue;\r\n                    }\r\n                    allowSeparator = 1;\r\n                    value = value * 0x10 + toHex(char);\r\n                    digits++;\r\n                    char = advanceChar(parser);\r\n                }\r\n                if (digits === 0 || !allowSeparator) {\r\n                    report(parser, digits === 0 ? 19 : 148);\r\n                }\r\n            }\r\n            else if ((char | 32) === 111) {\r\n                kind = 4 | 128;\r\n                char = advanceChar(parser);\r\n                while (CharTypes[char] & (32 | 4096)) {\r\n                    if (char === 95) {\r\n                        if (!allowSeparator) {\r\n                            report(parser, 147);\r\n                        }\r\n                        allowSeparator = 0;\r\n                        char = advanceChar(parser);\r\n                        continue;\r\n                    }\r\n                    allowSeparator = 1;\r\n                    value = value * 8 + (char - 48);\r\n                    digits++;\r\n                    char = advanceChar(parser);\r\n                }\r\n                if (digits === 0 || !allowSeparator) {\r\n                    report(parser, digits === 0 ? 0 : 148);\r\n                }\r\n            }\r\n            else if ((char | 32) === 98) {\r\n                kind = 2 | 128;\r\n                char = advanceChar(parser);\r\n                while (CharTypes[char] & (128 | 4096)) {\r\n                    if (char === 95) {\r\n                        if (!allowSeparator) {\r\n                            report(parser, 147);\r\n                        }\r\n                        allowSeparator = 0;\r\n                        char = advanceChar(parser);\r\n                        continue;\r\n                    }\r\n                    allowSeparator = 1;\r\n                    value = value * 2 + (char - 48);\r\n                    digits++;\r\n                    char = advanceChar(parser);\r\n                }\r\n                if (digits === 0 || !allowSeparator) {\r\n                    report(parser, digits === 0 ? 0 : 148);\r\n                }\r\n            }\r\n            else if (CharTypes[char] & 32) {\r\n                if (context & 1024)\r\n                    report(parser, 1);\r\n                kind = 1;\r\n                while (CharTypes[char] & 16) {\r\n                    if (CharTypes[char] & 512) {\r\n                        kind = 32;\r\n                        atStart = 0;\r\n                        break;\r\n                    }\r\n                    value = value * 8 + (char - 48);\r\n                    char = advanceChar(parser);\r\n                }\r\n            }\r\n            else if (CharTypes[char] & 512) {\r\n                if (context & 1024)\r\n                    report(parser, 1);\r\n                parser.flags |= 64;\r\n                kind = 32;\r\n            }\r\n            else if (char === 95) {\r\n                report(parser, 0);\r\n            }\r\n        }\r\n        if (kind & 48) {\r\n            if (atStart) {\r\n                while (digit >= 0 && CharTypes[char] & (16 | 4096)) {\r\n                    if (char === 95) {\r\n                        char = advanceChar(parser);\r\n                        if (char === 95 || kind & 32) {\r\n                            reportScannerError(parser.index, parser.line, parser.index + 1, 147);\r\n                        }\r\n                        allowSeparator = 1;\r\n                        continue;\r\n                    }\r\n                    allowSeparator = 0;\r\n                    value = 10 * value + (char - 48);\r\n                    char = advanceChar(parser);\r\n                    --digit;\r\n                }\r\n                if (allowSeparator) {\r\n                    reportScannerError(parser.index, parser.line, parser.index + 1, 148);\r\n                }\r\n                if (digit >= 0 && !isIdentifierStart(char) && char !== 46) {\r\n                    parser.tokenValue = value;\r\n                    if (context & 512)\r\n                        parser.tokenRaw = parser.source.slice(parser.tokenPos, parser.index);\r\n                    return 134283266;\r\n                }\r\n            }\r\n            value += scanDecimalDigitsOrSeparator(parser, char);\r\n            char = parser.currentChar;\r\n            if (char === 46) {\r\n                if (advanceChar(parser) === 95)\r\n                    report(parser, 0);\r\n                kind = 64;\r\n                value += '.' + scanDecimalDigitsOrSeparator(parser, parser.currentChar);\r\n                char = parser.currentChar;\r\n            }\r\n        }\r\n    }\r\n    const end = parser.index;\r\n    let isBigInt = 0;\r\n    if (char === 110 && kind & 128) {\r\n        isBigInt = 1;\r\n        char = advanceChar(parser);\r\n    }\r\n    else {\r\n        if ((char | 32) === 101) {\r\n            char = advanceChar(parser);\r\n            if (CharTypes[char] & 256)\r\n                char = advanceChar(parser);\r\n            const { index } = parser;\r\n            if ((CharTypes[char] & 16) === 0)\r\n                report(parser, 10);\r\n            value += parser.source.substring(end, index) + scanDecimalDigitsOrSeparator(parser, char);\r\n            char = parser.currentChar;\r\n        }\r\n    }\r\n    if ((parser.index < parser.end && CharTypes[char] & 16) || isIdentifierStart(char)) {\r\n        report(parser, 12);\r\n    }\r\n    if (isBigInt) {\r\n        parser.tokenRaw = parser.source.slice(parser.tokenPos, parser.index);\r\n        parser.tokenValue = BigInt(value);\r\n        return 134283389;\r\n    }\r\n    parser.tokenValue =\r\n        kind & (1 | 2 | 8 | 4)\r\n            ? value\r\n            : kind & 32\r\n                ? parseFloat(parser.source.substring(parser.tokenPos, parser.index))\r\n                : +value;\r\n    if (context & 512)\r\n        parser.tokenRaw = parser.source.slice(parser.tokenPos, parser.index);\r\n    return 134283266;\r\n}\r\nfunction scanDecimalDigitsOrSeparator(parser, char) {\r\n    let allowSeparator = 0;\r\n    let start = parser.index;\r\n    let ret = '';\r\n    while (CharTypes[char] & (16 | 4096)) {\r\n        if (char === 95) {\r\n            const { index } = parser;\r\n            char = advanceChar(parser);\r\n            if (char === 95) {\r\n                reportScannerError(parser.index, parser.line, parser.index + 1, 147);\r\n            }\r\n            allowSeparator = 1;\r\n            ret += parser.source.substring(start, index);\r\n            start = parser.index;\r\n            continue;\r\n        }\r\n        allowSeparator = 0;\r\n        char = advanceChar(parser);\r\n    }\r\n    if (allowSeparator) {\r\n        reportScannerError(parser.index, parser.line, parser.index + 1, 148);\r\n    }\r\n    return ret + parser.source.substring(start, parser.index);\r\n}\n\nconst KeywordDescTable = [\r\n    'end of source',\r\n    'identifier', 'number', 'string', 'regular expression',\r\n    'false', 'true', 'null',\r\n    'template continuation', 'template tail',\r\n    '=>', '(', '{', '.', '...', '}', ')', ';', ',', '[', ']', ':', '?', '\\'', '\"', '</', '/>',\r\n    '++', '--',\r\n    '=', '<<=', '>>=', '>>>=', '**=', '+=', '-=', '*=', '/=', '%=', '^=', '|=',\r\n    '&=', '||=', '&&=', '??=',\r\n    'typeof', 'delete', 'void', '!', '~', '+', '-', 'in', 'instanceof', '*', '%', '/', '**', '&&',\r\n    '||', '===', '!==', '==', '!=', '<=', '>=', '<', '>', '<<', '>>', '>>>', '&', '|', '^',\r\n    'var', 'let', 'const',\r\n    'break', 'case', 'catch', 'class', 'continue', 'debugger', 'default', 'do', 'else', 'export',\r\n    'extends', 'finally', 'for', 'function', 'if', 'import', 'new', 'return', 'super', 'switch',\r\n    'this', 'throw', 'try', 'while', 'with',\r\n    'implements', 'interface', 'package', 'private', 'protected', 'public', 'static', 'yield',\r\n    'as', 'async', 'await', 'constructor', 'get', 'set', 'from', 'of',\r\n    'enum', 'eval', 'arguments', 'escaped keyword', 'escaped future reserved keyword', 'reserved if strict', '#',\r\n    'BigIntLiteral', '??', '?.', 'WhiteSpace', 'Illegal', 'LineTerminator', 'PrivateField',\r\n    'Template', '@', 'target', 'meta', 'LineFeed', 'Escaped', 'JSXText'\r\n];\r\nconst descKeywordTable = Object.create(null, {\r\n    this: { value: 86113 },\r\n    function: { value: 86106 },\r\n    if: { value: 20571 },\r\n    return: { value: 20574 },\r\n    var: { value: 86090 },\r\n    else: { value: 20565 },\r\n    for: { value: 20569 },\r\n    new: { value: 86109 },\r\n    in: { value: 8738868 },\r\n    typeof: { value: 16863277 },\r\n    while: { value: 20580 },\r\n    case: { value: 20558 },\r\n    break: { value: 20557 },\r\n    try: { value: 20579 },\r\n    catch: { value: 20559 },\r\n    delete: { value: 16863278 },\r\n    throw: { value: 86114 },\r\n    switch: { value: 86112 },\r\n    continue: { value: 20561 },\r\n    default: { value: 20563 },\r\n    instanceof: { value: 8476725 },\r\n    do: { value: 20564 },\r\n    void: { value: 16863279 },\r\n    finally: { value: 20568 },\r\n    async: { value: 209007 },\r\n    await: { value: 209008 },\r\n    class: { value: 86096 },\r\n    const: { value: 86092 },\r\n    constructor: { value: 12401 },\r\n    debugger: { value: 20562 },\r\n    export: { value: 20566 },\r\n    extends: { value: 20567 },\r\n    false: { value: 86021 },\r\n    from: { value: 12404 },\r\n    get: { value: 12402 },\r\n    implements: { value: 36966 },\r\n    import: { value: 86108 },\r\n    interface: { value: 36967 },\r\n    let: { value: 241739 },\r\n    null: { value: 86023 },\r\n    of: { value: 274549 },\r\n    package: { value: 36968 },\r\n    private: { value: 36969 },\r\n    protected: { value: 36970 },\r\n    public: { value: 36971 },\r\n    set: { value: 12403 },\r\n    static: { value: 36972 },\r\n    super: { value: 86111 },\r\n    true: { value: 86022 },\r\n    with: { value: 20581 },\r\n    yield: { value: 241773 },\r\n    enum: { value: 86134 },\r\n    eval: { value: 537079927 },\r\n    as: { value: 77934 },\r\n    arguments: { value: 537079928 },\r\n    target: { value: 143494 },\r\n    meta: { value: 143495 },\r\n});\n\nfunction scanIdentifier(parser, context, isValidAsKeyword) {\r\n    while (isIdPart[advanceChar(parser)]) { }\r\n    parser.tokenValue = parser.source.slice(parser.tokenPos, parser.index);\r\n    return parser.currentChar !== 92 && parser.currentChar <= 0x7e\r\n        ? descKeywordTable[parser.tokenValue] || 208897\r\n        : scanIdentifierSlowCase(parser, context, 0, isValidAsKeyword);\r\n}\r\nfunction scanUnicodeIdentifier(parser, context) {\r\n    const cookedChar = scanIdentifierUnicodeEscape(parser);\r\n    if (!isIdentifierPart(cookedChar))\r\n        report(parser, 4);\r\n    parser.tokenValue = fromCodePoint(cookedChar);\r\n    return scanIdentifierSlowCase(parser, context, 1, CharTypes[cookedChar] & 4);\r\n}\r\nfunction scanIdentifierSlowCase(parser, context, hasEscape, isValidAsKeyword) {\r\n    let start = parser.index;\r\n    while (parser.index < parser.end) {\r\n        if (parser.currentChar === 92) {\r\n            parser.tokenValue += parser.source.slice(start, parser.index);\r\n            hasEscape = 1;\r\n            const code = scanIdentifierUnicodeEscape(parser);\r\n            if (!isIdentifierPart(code))\r\n                report(parser, 4);\r\n            isValidAsKeyword = isValidAsKeyword && CharTypes[code] & 4;\r\n            parser.tokenValue += fromCodePoint(code);\r\n            start = parser.index;\r\n        }\r\n        else if (isIdentifierPart(parser.currentChar) || consumeMultiUnitCodePoint(parser, parser.currentChar)) {\r\n            advanceChar(parser);\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n    if (parser.index <= parser.end) {\r\n        parser.tokenValue += parser.source.slice(start, parser.index);\r\n    }\r\n    const length = parser.tokenValue.length;\r\n    if (isValidAsKeyword && length >= 2 && length <= 11) {\r\n        const token = descKeywordTable[parser.tokenValue];\r\n        if (token === void 0)\r\n            return 208897;\r\n        if (!hasEscape)\r\n            return token;\r\n        if (token === 209008) {\r\n            if ((context & (2048 | 4194304)) === 0) {\r\n                return token;\r\n            }\r\n            return 121;\r\n        }\r\n        if (context & 1024) {\r\n            if (token === 36972) {\r\n                return 122;\r\n            }\r\n            if ((token & 36864) === 36864) {\r\n                return 122;\r\n            }\r\n            if ((token & 20480) === 20480) {\r\n                if (context & 1073741824 && (context & 8192) === 0) {\r\n                    return token;\r\n                }\r\n                else {\r\n                    return 121;\r\n                }\r\n            }\r\n            return 143483;\r\n        }\r\n        if (context & 1073741824 &&\r\n            (context & 8192) === 0 &&\r\n            (token & 20480) === 20480)\r\n            return token;\r\n        if (token === 241773) {\r\n            return context & 1073741824\r\n                ? 143483\r\n                : context & 2097152\r\n                    ? 121\r\n                    : token;\r\n        }\r\n        if (token === 209007) {\r\n            return 143483;\r\n        }\r\n        if ((token & 36864) === 36864) {\r\n            return token;\r\n        }\r\n        return 121;\r\n    }\r\n    return 208897;\r\n}\r\nfunction scanPrivateIdentifier(parser) {\r\n    if (!isIdentifierStart(advanceChar(parser)))\r\n        report(parser, 94);\r\n    return 131;\r\n}\r\nfunction scanIdentifierUnicodeEscape(parser) {\r\n    if (parser.source.charCodeAt(parser.index + 1) !== 117) {\r\n        report(parser, 4);\r\n    }\r\n    parser.currentChar = parser.source.charCodeAt((parser.index += 2));\r\n    return scanUnicodeEscape(parser);\r\n}\r\nfunction scanUnicodeEscape(parser) {\r\n    let codePoint = 0;\r\n    const char = parser.currentChar;\r\n    if (char === 123) {\r\n        const begin = parser.index - 2;\r\n        while (CharTypes[advanceChar(parser)] & 64) {\r\n            codePoint = (codePoint << 4) | toHex(parser.currentChar);\r\n            if (codePoint > 1114111)\r\n                reportScannerError(begin, parser.line, parser.index + 1, 102);\r\n        }\r\n        if (parser.currentChar !== 125) {\r\n            reportScannerError(begin, parser.line, parser.index - 1, 6);\r\n        }\r\n        advanceChar(parser);\r\n        return codePoint;\r\n    }\r\n    if ((CharTypes[char] & 64) === 0)\r\n        report(parser, 6);\r\n    const char2 = parser.source.charCodeAt(parser.index + 1);\r\n    if ((CharTypes[char2] & 64) === 0)\r\n        report(parser, 6);\r\n    const char3 = parser.source.charCodeAt(parser.index + 2);\r\n    if ((CharTypes[char3] & 64) === 0)\r\n        report(parser, 6);\r\n    const char4 = parser.source.charCodeAt(parser.index + 3);\r\n    if ((CharTypes[char4] & 64) === 0)\r\n        report(parser, 6);\r\n    codePoint = (toHex(char) << 12) | (toHex(char2) << 8) | (toHex(char3) << 4) | toHex(char4);\r\n    parser.currentChar = parser.source.charCodeAt((parser.index += 4));\r\n    return codePoint;\r\n}\n\nconst TokenLookup = [\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    128,\r\n    136,\r\n    128,\r\n    128,\r\n    130,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    129,\r\n    128,\r\n    16842800,\r\n    134283267,\r\n    131,\r\n    208897,\r\n    8457015,\r\n    8455751,\r\n    134283267,\r\n    67174411,\r\n    16,\r\n    8457014,\r\n    25233970,\r\n    18,\r\n    25233971,\r\n    67108877,\r\n    8457016,\r\n    134283266,\r\n    134283266,\r\n    134283266,\r\n    134283266,\r\n    134283266,\r\n    134283266,\r\n    134283266,\r\n    134283266,\r\n    134283266,\r\n    134283266,\r\n    21,\r\n    1074790417,\r\n    8456258,\r\n    1077936157,\r\n    8456259,\r\n    22,\r\n    133,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    208897,\r\n    69271571,\r\n    137,\r\n    20,\r\n    8455497,\r\n    208897,\r\n    132,\r\n    4096,\r\n    4096,\r\n    4096,\r\n    4096,\r\n    4096,\r\n    4096,\r\n    4096,\r\n    208897,\r\n    4096,\r\n    208897,\r\n    208897,\r\n    4096,\r\n    208897,\r\n    4096,\r\n    208897,\r\n    4096,\r\n    208897,\r\n    4096,\r\n    4096,\r\n    4096,\r\n    208897,\r\n    4096,\r\n    4096,\r\n    208897,\r\n    4096,\r\n    4096,\r\n    2162700,\r\n    8455240,\r\n    1074790415,\r\n    16842801,\r\n    129\r\n];\r\nfunction nextToken(parser, context) {\r\n    parser.flags = (parser.flags | 1) ^ 1;\r\n    parser.startPos = parser.index;\r\n    parser.startColumn = parser.column;\r\n    parser.startLine = parser.line;\r\n    parser.token = scanSingleToken(parser, context, 0);\r\n    if (parser.onToken && parser.token !== 1048576) {\r\n        const loc = {\r\n            start: {\r\n                line: parser.linePos,\r\n                column: parser.colPos\r\n            },\r\n            end: {\r\n                line: parser.line,\r\n                column: parser.column\r\n            }\r\n        };\r\n        parser.onToken(convertTokenType(parser.token), parser.tokenPos, parser.index, loc);\r\n    }\r\n}\r\nfunction scanSingleToken(parser, context, state) {\r\n    const isStartOfLine = parser.index === 0;\r\n    const source = parser.source;\r\n    let startPos = parser.index;\r\n    let startLine = parser.line;\r\n    let startColumn = parser.column;\r\n    while (parser.index < parser.end) {\r\n        parser.tokenPos = parser.index;\r\n        parser.colPos = parser.column;\r\n        parser.linePos = parser.line;\r\n        let char = parser.currentChar;\r\n        if (char <= 0x7e) {\r\n            const token = TokenLookup[char];\r\n            switch (token) {\r\n                case 67174411:\r\n                case 16:\r\n                case 2162700:\r\n                case 1074790415:\r\n                case 69271571:\r\n                case 20:\r\n                case 21:\r\n                case 1074790417:\r\n                case 18:\r\n                case 16842801:\r\n                case 133:\r\n                case 129:\r\n                    advanceChar(parser);\r\n                    return token;\r\n                case 208897:\r\n                    return scanIdentifier(parser, context, 0);\r\n                case 4096:\r\n                    return scanIdentifier(parser, context, 1);\r\n                case 134283266:\r\n                    return scanNumber(parser, context, 16 | 128);\r\n                case 134283267:\r\n                    return scanString(parser, context, char);\r\n                case 132:\r\n                    return scanTemplate(parser, context);\r\n                case 137:\r\n                    return scanUnicodeIdentifier(parser, context);\r\n                case 131:\r\n                    return scanPrivateIdentifier(parser);\r\n                case 128:\r\n                    advanceChar(parser);\r\n                    break;\r\n                case 130:\r\n                    state |= 1 | 4;\r\n                    scanNewLine(parser);\r\n                    break;\r\n                case 136:\r\n                    consumeLineFeed(parser, state);\r\n                    state = (state & ~4) | 1;\r\n                    break;\r\n                case 8456258:\r\n                    let ch = advanceChar(parser);\r\n                    if (parser.index < parser.end) {\r\n                        if (ch === 60) {\r\n                            if (parser.index < parser.end && advanceChar(parser) === 61) {\r\n                                advanceChar(parser);\r\n                                return 4194334;\r\n                            }\r\n                            return 8456516;\r\n                        }\r\n                        else if (ch === 61) {\r\n                            advanceChar(parser);\r\n                            return 8456256;\r\n                        }\r\n                        if (ch === 33) {\r\n                            const index = parser.index + 1;\r\n                            if (index + 1 < parser.end &&\r\n                                source.charCodeAt(index) === 45 &&\r\n                                source.charCodeAt(index + 1) == 45) {\r\n                                parser.column += 3;\r\n                                parser.currentChar = source.charCodeAt((parser.index += 3));\r\n                                state = skipSingleHTMLComment(parser, source, state, context, 2, parser.tokenPos, parser.linePos, parser.colPos);\r\n                                startPos = parser.tokenPos;\r\n                                startLine = parser.linePos;\r\n                                startColumn = parser.colPos;\r\n                                continue;\r\n                            }\r\n                            return 8456258;\r\n                        }\r\n                        if (ch === 47) {\r\n                            if ((context & 16) === 0)\r\n                                return 8456258;\r\n                            const index = parser.index + 1;\r\n                            if (index < parser.end) {\r\n                                ch = source.charCodeAt(index);\r\n                                if (ch === 42 || ch === 47)\r\n                                    break;\r\n                            }\r\n                            advanceChar(parser);\r\n                            return 25;\r\n                        }\r\n                    }\r\n                    return 8456258;\r\n                case 1077936157: {\r\n                    advanceChar(parser);\r\n                    const ch = parser.currentChar;\r\n                    if (ch === 61) {\r\n                        if (advanceChar(parser) === 61) {\r\n                            advanceChar(parser);\r\n                            return 8455996;\r\n                        }\r\n                        return 8455998;\r\n                    }\r\n                    if (ch === 62) {\r\n                        advanceChar(parser);\r\n                        return 10;\r\n                    }\r\n                    return 1077936157;\r\n                }\r\n                case 16842800:\r\n                    if (advanceChar(parser) !== 61) {\r\n                        return 16842800;\r\n                    }\r\n                    if (advanceChar(parser) !== 61) {\r\n                        return 8455999;\r\n                    }\r\n                    advanceChar(parser);\r\n                    return 8455997;\r\n                case 8457015:\r\n                    if (advanceChar(parser) !== 61)\r\n                        return 8457015;\r\n                    advanceChar(parser);\r\n                    return 4194342;\r\n                case 8457014: {\r\n                    advanceChar(parser);\r\n                    if (parser.index >= parser.end)\r\n                        return 8457014;\r\n                    const ch = parser.currentChar;\r\n                    if (ch === 61) {\r\n                        advanceChar(parser);\r\n                        return 4194340;\r\n                    }\r\n                    if (ch !== 42)\r\n                        return 8457014;\r\n                    if (advanceChar(parser) !== 61)\r\n                        return 8457273;\r\n                    advanceChar(parser);\r\n                    return 4194337;\r\n                }\r\n                case 8455497:\r\n                    if (advanceChar(parser) !== 61)\r\n                        return 8455497;\r\n                    advanceChar(parser);\r\n                    return 4194343;\r\n                case 25233970: {\r\n                    advanceChar(parser);\r\n                    const ch = parser.currentChar;\r\n                    if (ch === 43) {\r\n                        advanceChar(parser);\r\n                        return 33619995;\r\n                    }\r\n                    if (ch === 61) {\r\n                        advanceChar(parser);\r\n                        return 4194338;\r\n                    }\r\n                    return 25233970;\r\n                }\r\n                case 25233971: {\r\n                    advanceChar(parser);\r\n                    const ch = parser.currentChar;\r\n                    if (ch === 45) {\r\n                        advanceChar(parser);\r\n                        if ((state & 1 || isStartOfLine) && parser.currentChar === 62) {\r\n                            if ((context & 256) === 0)\r\n                                report(parser, 109);\r\n                            advanceChar(parser);\r\n                            state = skipSingleHTMLComment(parser, source, state, context, 3, startPos, startLine, startColumn);\r\n                            startPos = parser.tokenPos;\r\n                            startLine = parser.linePos;\r\n                            startColumn = parser.colPos;\r\n                            continue;\r\n                        }\r\n                        return 33619996;\r\n                    }\r\n                    if (ch === 61) {\r\n                        advanceChar(parser);\r\n                        return 4194339;\r\n                    }\r\n                    return 25233971;\r\n                }\r\n                case 8457016: {\r\n                    advanceChar(parser);\r\n                    if (parser.index < parser.end) {\r\n                        const ch = parser.currentChar;\r\n                        if (ch === 47) {\r\n                            advanceChar(parser);\r\n                            state = skipSingleLineComment(parser, source, state, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n                            startPos = parser.tokenPos;\r\n                            startLine = parser.linePos;\r\n                            startColumn = parser.colPos;\r\n                            continue;\r\n                        }\r\n                        if (ch === 42) {\r\n                            advanceChar(parser);\r\n                            state = skipMultiLineComment(parser, source, state);\r\n                            startPos = parser.tokenPos;\r\n                            startLine = parser.linePos;\r\n                            startColumn = parser.colPos;\r\n                            continue;\r\n                        }\r\n                        if (context & 32768) {\r\n                            return scanRegularExpression(parser, context);\r\n                        }\r\n                        if (ch === 61) {\r\n                            advanceChar(parser);\r\n                            return 4259877;\r\n                        }\r\n                    }\r\n                    return 8457016;\r\n                }\r\n                case 67108877:\r\n                    const next = advanceChar(parser);\r\n                    if (next >= 48 && next <= 57)\r\n                        return scanNumber(parser, context, 64 | 16);\r\n                    if (next === 46) {\r\n                        const index = parser.index + 1;\r\n                        if (index < parser.end && source.charCodeAt(index) === 46) {\r\n                            parser.column += 2;\r\n                            parser.currentChar = source.charCodeAt((parser.index += 2));\r\n                            return 14;\r\n                        }\r\n                    }\r\n                    return 67108877;\r\n                case 8455240: {\r\n                    advanceChar(parser);\r\n                    const ch = parser.currentChar;\r\n                    if (ch === 124) {\r\n                        advanceChar(parser);\r\n                        if (parser.currentChar === 61) {\r\n                            advanceChar(parser);\r\n                            return 4194346;\r\n                        }\r\n                        return 8979003;\r\n                    }\r\n                    if (ch === 61) {\r\n                        advanceChar(parser);\r\n                        return 4194344;\r\n                    }\r\n                    return 8455240;\r\n                }\r\n                case 8456259: {\r\n                    advanceChar(parser);\r\n                    const ch = parser.currentChar;\r\n                    if (ch === 61) {\r\n                        advanceChar(parser);\r\n                        return 8456257;\r\n                    }\r\n                    if (ch !== 62)\r\n                        return 8456259;\r\n                    advanceChar(parser);\r\n                    if (parser.index < parser.end) {\r\n                        const ch = parser.currentChar;\r\n                        if (ch === 62) {\r\n                            if (advanceChar(parser) === 61) {\r\n                                advanceChar(parser);\r\n                                return 4194336;\r\n                            }\r\n                            return 8456518;\r\n                        }\r\n                        if (ch === 61) {\r\n                            advanceChar(parser);\r\n                            return 4194335;\r\n                        }\r\n                    }\r\n                    return 8456517;\r\n                }\r\n                case 8455751: {\r\n                    advanceChar(parser);\r\n                    const ch = parser.currentChar;\r\n                    if (ch === 38) {\r\n                        advanceChar(parser);\r\n                        if (parser.currentChar === 61) {\r\n                            advanceChar(parser);\r\n                            return 4194347;\r\n                        }\r\n                        return 8979258;\r\n                    }\r\n                    if (ch === 61) {\r\n                        advanceChar(parser);\r\n                        return 4194345;\r\n                    }\r\n                    return 8455751;\r\n                }\r\n                case 22: {\r\n                    let ch = advanceChar(parser);\r\n                    if (ch === 63) {\r\n                        advanceChar(parser);\r\n                        if (parser.currentChar === 61) {\r\n                            advanceChar(parser);\r\n                            return 4194348;\r\n                        }\r\n                        return 276889982;\r\n                    }\r\n                    if (ch === 46) {\r\n                        const index = parser.index + 1;\r\n                        if (index < parser.end) {\r\n                            ch = source.charCodeAt(index);\r\n                            if (!(ch >= 48 && ch <= 57)) {\r\n                                advanceChar(parser);\r\n                                return 67108991;\r\n                            }\r\n                        }\r\n                    }\r\n                    return 22;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if ((char ^ 8232) <= 1) {\r\n                state = (state & ~4) | 1;\r\n                scanNewLine(parser);\r\n                continue;\r\n            }\r\n            if ((char & 0xfc00) === 0xd800 || ((unicodeLookup[(char >>> 5) + 34816] >>> char) & 31 & 1) !== 0) {\r\n                if ((char & 0xfc00) === 0xdc00) {\r\n                    char = ((char & 0x3ff) << 10) | (char & 0x3ff) | 0x10000;\r\n                    if (((unicodeLookup[(char >>> 5) + 0] >>> char) & 31 & 1) === 0) {\r\n                        report(parser, 18, fromCodePoint(char));\r\n                    }\r\n                    parser.index++;\r\n                    parser.currentChar = char;\r\n                }\r\n                parser.column++;\r\n                parser.tokenValue = '';\r\n                return scanIdentifierSlowCase(parser, context, 0, 0);\r\n            }\r\n            if (isExoticECMAScriptWhitespace(char)) {\r\n                advanceChar(parser);\r\n                continue;\r\n            }\r\n            report(parser, 18, fromCodePoint(char));\r\n        }\r\n    }\r\n    return 1048576;\r\n}\n\nconst entities = {\r\n    AElig: '\\u00C6',\r\n    AMP: '\\u0026',\r\n    Aacute: '\\u00C1',\r\n    Abreve: '\\u0102',\r\n    Acirc: '\\u00C2',\r\n    Acy: '\\u0410',\r\n    Afr: '\\uD835\\uDD04',\r\n    Agrave: '\\u00C0',\r\n    Alpha: '\\u0391',\r\n    Amacr: '\\u0100',\r\n    And: '\\u2A53',\r\n    Aogon: '\\u0104',\r\n    Aopf: '\\uD835\\uDD38',\r\n    ApplyFunction: '\\u2061',\r\n    Aring: '\\u00C5',\r\n    Ascr: '\\uD835\\uDC9C',\r\n    Assign: '\\u2254',\r\n    Atilde: '\\u00C3',\r\n    Auml: '\\u00C4',\r\n    Backslash: '\\u2216',\r\n    Barv: '\\u2AE7',\r\n    Barwed: '\\u2306',\r\n    Bcy: '\\u0411',\r\n    Because: '\\u2235',\r\n    Bernoullis: '\\u212C',\r\n    Beta: '\\u0392',\r\n    Bfr: '\\uD835\\uDD05',\r\n    Bopf: '\\uD835\\uDD39',\r\n    Breve: '\\u02D8',\r\n    Bscr: '\\u212C',\r\n    Bumpeq: '\\u224E',\r\n    CHcy: '\\u0427',\r\n    COPY: '\\u00A9',\r\n    Cacute: '\\u0106',\r\n    Cap: '\\u22D2',\r\n    CapitalDifferentialD: '\\u2145',\r\n    Cayleys: '\\u212D',\r\n    Ccaron: '\\u010C',\r\n    Ccedil: '\\u00C7',\r\n    Ccirc: '\\u0108',\r\n    Cconint: '\\u2230',\r\n    Cdot: '\\u010A',\r\n    Cedilla: '\\u00B8',\r\n    CenterDot: '\\u00B7',\r\n    Cfr: '\\u212D',\r\n    Chi: '\\u03A7',\r\n    CircleDot: '\\u2299',\r\n    CircleMinus: '\\u2296',\r\n    CirclePlus: '\\u2295',\r\n    CircleTimes: '\\u2297',\r\n    ClockwiseContourIntegral: '\\u2232',\r\n    CloseCurlyDoubleQuote: '\\u201D',\r\n    CloseCurlyQuote: '\\u2019',\r\n    Colon: '\\u2237',\r\n    Colone: '\\u2A74',\r\n    Congruent: '\\u2261',\r\n    Conint: '\\u222F',\r\n    ContourIntegral: '\\u222E',\r\n    Copf: '\\u2102',\r\n    Coproduct: '\\u2210',\r\n    CounterClockwiseContourIntegral: '\\u2233',\r\n    Cross: '\\u2A2F',\r\n    Cscr: '\\uD835\\uDC9E',\r\n    Cup: '\\u22D3',\r\n    CupCap: '\\u224D',\r\n    DD: '\\u2145',\r\n    DDotrahd: '\\u2911',\r\n    DJcy: '\\u0402',\r\n    DScy: '\\u0405',\r\n    DZcy: '\\u040F',\r\n    Dagger: '\\u2021',\r\n    Darr: '\\u21A1',\r\n    Dashv: '\\u2AE4',\r\n    Dcaron: '\\u010E',\r\n    Dcy: '\\u0414',\r\n    Del: '\\u2207',\r\n    Delta: '\\u0394',\r\n    Dfr: '\\uD835\\uDD07',\r\n    DiacriticalAcute: '\\u00B4',\r\n    DiacriticalDot: '\\u02D9',\r\n    DiacriticalDoubleAcute: '\\u02DD',\r\n    DiacriticalGrave: '\\u0060',\r\n    DiacriticalTilde: '\\u02DC',\r\n    Diamond: '\\u22C4',\r\n    DifferentialD: '\\u2146',\r\n    Dopf: '\\uD835\\uDD3B',\r\n    Dot: '\\u00A8',\r\n    DotDot: '\\u20DC',\r\n    DotEqual: '\\u2250',\r\n    DoubleContourIntegral: '\\u222F',\r\n    DoubleDot: '\\u00A8',\r\n    DoubleDownArrow: '\\u21D3',\r\n    DoubleLeftArrow: '\\u21D0',\r\n    DoubleLeftRightArrow: '\\u21D4',\r\n    DoubleLeftTee: '\\u2AE4',\r\n    DoubleLongLeftArrow: '\\u27F8',\r\n    DoubleLongLeftRightArrow: '\\u27FA',\r\n    DoubleLongRightArrow: '\\u27F9',\r\n    DoubleRightArrow: '\\u21D2',\r\n    DoubleRightTee: '\\u22A8',\r\n    DoubleUpArrow: '\\u21D1',\r\n    DoubleUpDownArrow: '\\u21D5',\r\n    DoubleVerticalBar: '\\u2225',\r\n    DownArrow: '\\u2193',\r\n    DownArrowBar: '\\u2913',\r\n    DownArrowUpArrow: '\\u21F5',\r\n    DownBreve: '\\u0311',\r\n    DownLeftRightVector: '\\u2950',\r\n    DownLeftTeeVector: '\\u295E',\r\n    DownLeftVector: '\\u21BD',\r\n    DownLeftVectorBar: '\\u2956',\r\n    DownRightTeeVector: '\\u295F',\r\n    DownRightVector: '\\u21C1',\r\n    DownRightVectorBar: '\\u2957',\r\n    DownTee: '\\u22A4',\r\n    DownTeeArrow: '\\u21A7',\r\n    Downarrow: '\\u21D3',\r\n    Dscr: '\\uD835\\uDC9F',\r\n    Dstrok: '\\u0110',\r\n    ENG: '\\u014A',\r\n    ETH: '\\u00D0',\r\n    Eacute: '\\u00C9',\r\n    Ecaron: '\\u011A',\r\n    Ecirc: '\\u00CA',\r\n    Ecy: '\\u042D',\r\n    Edot: '\\u0116',\r\n    Efr: '\\uD835\\uDD08',\r\n    Egrave: '\\u00C8',\r\n    Element: '\\u2208',\r\n    Emacr: '\\u0112',\r\n    EmptySmallSquare: '\\u25FB',\r\n    EmptyVerySmallSquare: '\\u25AB',\r\n    Eogon: '\\u0118',\r\n    Eopf: '\\uD835\\uDD3C',\r\n    Epsilon: '\\u0395',\r\n    Equal: '\\u2A75',\r\n    EqualTilde: '\\u2242',\r\n    Equilibrium: '\\u21CC',\r\n    Escr: '\\u2130',\r\n    Esim: '\\u2A73',\r\n    Eta: '\\u0397',\r\n    Euml: '\\u00CB',\r\n    Exists: '\\u2203',\r\n    ExponentialE: '\\u2147',\r\n    Fcy: '\\u0424',\r\n    Ffr: '\\uD835\\uDD09',\r\n    FilledSmallSquare: '\\u25FC',\r\n    FilledVerySmallSquare: '\\u25AA',\r\n    Fopf: '\\uD835\\uDD3D',\r\n    ForAll: '\\u2200',\r\n    Fouriertrf: '\\u2131',\r\n    Fscr: '\\u2131',\r\n    GJcy: '\\u0403',\r\n    GT: '\\u003E',\r\n    Gamma: '\\u0393',\r\n    Gammad: '\\u03DC',\r\n    Gbreve: '\\u011E',\r\n    Gcedil: '\\u0122',\r\n    Gcirc: '\\u011C',\r\n    Gcy: '\\u0413',\r\n    Gdot: '\\u0120',\r\n    Gfr: '\\uD835\\uDD0A',\r\n    Gg: '\\u22D9',\r\n    Gopf: '\\uD835\\uDD3E',\r\n    GreaterEqual: '\\u2265',\r\n    GreaterEqualLess: '\\u22DB',\r\n    GreaterFullEqual: '\\u2267',\r\n    GreaterGreater: '\\u2AA2',\r\n    GreaterLess: '\\u2277',\r\n    GreaterSlantEqual: '\\u2A7E',\r\n    GreaterTilde: '\\u2273',\r\n    Gscr: '\\uD835\\uDCA2',\r\n    Gt: '\\u226B',\r\n    HARDcy: '\\u042A',\r\n    Hacek: '\\u02C7',\r\n    Hat: '\\u005E',\r\n    Hcirc: '\\u0124',\r\n    Hfr: '\\u210C',\r\n    HilbertSpace: '\\u210B',\r\n    Hopf: '\\u210D',\r\n    HorizontalLine: '\\u2500',\r\n    Hscr: '\\u210B',\r\n    Hstrok: '\\u0126',\r\n    HumpDownHump: '\\u224E',\r\n    HumpEqual: '\\u224F',\r\n    IEcy: '\\u0415',\r\n    IJlig: '\\u0132',\r\n    IOcy: '\\u0401',\r\n    Iacute: '\\u00CD',\r\n    Icirc: '\\u00CE',\r\n    Icy: '\\u0418',\r\n    Idot: '\\u0130',\r\n    Ifr: '\\u2111',\r\n    Igrave: '\\u00CC',\r\n    Im: '\\u2111',\r\n    Imacr: '\\u012A',\r\n    ImaginaryI: '\\u2148',\r\n    Implies: '\\u21D2',\r\n    Int: '\\u222C',\r\n    Integral: '\\u222B',\r\n    Intersection: '\\u22C2',\r\n    InvisibleComma: '\\u2063',\r\n    InvisibleTimes: '\\u2062',\r\n    Iogon: '\\u012E',\r\n    Iopf: '\\uD835\\uDD40',\r\n    Iota: '\\u0399',\r\n    Iscr: '\\u2110',\r\n    Itilde: '\\u0128',\r\n    Iukcy: '\\u0406',\r\n    Iuml: '\\u00CF',\r\n    Jcirc: '\\u0134',\r\n    Jcy: '\\u0419',\r\n    Jfr: '\\uD835\\uDD0D',\r\n    Jopf: '\\uD835\\uDD41',\r\n    Jscr: '\\uD835\\uDCA5',\r\n    Jsercy: '\\u0408',\r\n    Jukcy: '\\u0404',\r\n    KHcy: '\\u0425',\r\n    KJcy: '\\u040C',\r\n    Kappa: '\\u039A',\r\n    Kcedil: '\\u0136',\r\n    Kcy: '\\u041A',\r\n    Kfr: '\\uD835\\uDD0E',\r\n    Kopf: '\\uD835\\uDD42',\r\n    Kscr: '\\uD835\\uDCA6',\r\n    LJcy: '\\u0409',\r\n    LT: '\\u003C',\r\n    Lacute: '\\u0139',\r\n    Lambda: '\\u039B',\r\n    Lang: '\\u27EA',\r\n    Laplacetrf: '\\u2112',\r\n    Larr: '\\u219E',\r\n    Lcaron: '\\u013D',\r\n    Lcedil: '\\u013B',\r\n    Lcy: '\\u041B',\r\n    LeftAngleBracket: '\\u27E8',\r\n    LeftArrow: '\\u2190',\r\n    LeftArrowBar: '\\u21E4',\r\n    LeftArrowRightArrow: '\\u21C6',\r\n    LeftCeiling: '\\u2308',\r\n    LeftDoubleBracket: '\\u27E6',\r\n    LeftDownTeeVector: '\\u2961',\r\n    LeftDownVector: '\\u21C3',\r\n    LeftDownVectorBar: '\\u2959',\r\n    LeftFloor: '\\u230A',\r\n    LeftRightArrow: '\\u2194',\r\n    LeftRightVector: '\\u294E',\r\n    LeftTee: '\\u22A3',\r\n    LeftTeeArrow: '\\u21A4',\r\n    LeftTeeVector: '\\u295A',\r\n    LeftTriangle: '\\u22B2',\r\n    LeftTriangleBar: '\\u29CF',\r\n    LeftTriangleEqual: '\\u22B4',\r\n    LeftUpDownVector: '\\u2951',\r\n    LeftUpTeeVector: '\\u2960',\r\n    LeftUpVector: '\\u21BF',\r\n    LeftUpVectorBar: '\\u2958',\r\n    LeftVector: '\\u21BC',\r\n    LeftVectorBar: '\\u2952',\r\n    Leftarrow: '\\u21D0',\r\n    Leftrightarrow: '\\u21D4',\r\n    LessEqualGreater: '\\u22DA',\r\n    LessFullEqual: '\\u2266',\r\n    LessGreater: '\\u2276',\r\n    LessLess: '\\u2AA1',\r\n    LessSlantEqual: '\\u2A7D',\r\n    LessTilde: '\\u2272',\r\n    Lfr: '\\uD835\\uDD0F',\r\n    Ll: '\\u22D8',\r\n    Lleftarrow: '\\u21DA',\r\n    Lmidot: '\\u013F',\r\n    LongLeftArrow: '\\u27F5',\r\n    LongLeftRightArrow: '\\u27F7',\r\n    LongRightArrow: '\\u27F6',\r\n    Longleftarrow: '\\u27F8',\r\n    Longleftrightarrow: '\\u27FA',\r\n    Longrightarrow: '\\u27F9',\r\n    Lopf: '\\uD835\\uDD43',\r\n    LowerLeftArrow: '\\u2199',\r\n    LowerRightArrow: '\\u2198',\r\n    Lscr: '\\u2112',\r\n    Lsh: '\\u21B0',\r\n    Lstrok: '\\u0141',\r\n    Lt: '\\u226A',\r\n    Map: '\\u2905',\r\n    Mcy: '\\u041C',\r\n    MediumSpace: '\\u205F',\r\n    Mellintrf: '\\u2133',\r\n    Mfr: '\\uD835\\uDD10',\r\n    MinusPlus: '\\u2213',\r\n    Mopf: '\\uD835\\uDD44',\r\n    Mscr: '\\u2133',\r\n    Mu: '\\u039C',\r\n    NJcy: '\\u040A',\r\n    Nacute: '\\u0143',\r\n    Ncaron: '\\u0147',\r\n    Ncedil: '\\u0145',\r\n    Ncy: '\\u041D',\r\n    NegativeMediumSpace: '\\u200B',\r\n    NegativeThickSpace: '\\u200B',\r\n    NegativeThinSpace: '\\u200B',\r\n    NegativeVeryThinSpace: '\\u200B',\r\n    NestedGreaterGreater: '\\u226B',\r\n    NestedLessLess: '\\u226A',\r\n    NewLine: '\\u000A',\r\n    Nfr: '\\uD835\\uDD11',\r\n    NoBreak: '\\u2060',\r\n    NonBreakingSpace: '\\u00A0',\r\n    Nopf: '\\u2115',\r\n    Not: '\\u2AEC',\r\n    NotCongruent: '\\u2262',\r\n    NotCupCap: '\\u226D',\r\n    NotDoubleVerticalBar: '\\u2226',\r\n    NotElement: '\\u2209',\r\n    NotEqual: '\\u2260',\r\n    NotEqualTilde: '\\u2242\\u0338',\r\n    NotExists: '\\u2204',\r\n    NotGreater: '\\u226F',\r\n    NotGreaterEqual: '\\u2271',\r\n    NotGreaterFullEqual: '\\u2267\\u0338',\r\n    NotGreaterGreater: '\\u226B\\u0338',\r\n    NotGreaterLess: '\\u2279',\r\n    NotGreaterSlantEqual: '\\u2A7E\\u0338',\r\n    NotGreaterTilde: '\\u2275',\r\n    NotHumpDownHump: '\\u224E\\u0338',\r\n    NotHumpEqual: '\\u224F\\u0338',\r\n    NotLeftTriangle: '\\u22EA',\r\n    NotLeftTriangleBar: '\\u29CF\\u0338',\r\n    NotLeftTriangleEqual: '\\u22EC',\r\n    NotLess: '\\u226E',\r\n    NotLessEqual: '\\u2270',\r\n    NotLessGreater: '\\u2278',\r\n    NotLessLess: '\\u226A\\u0338',\r\n    NotLessSlantEqual: '\\u2A7D\\u0338',\r\n    NotLessTilde: '\\u2274',\r\n    NotNestedGreaterGreater: '\\u2AA2\\u0338',\r\n    NotNestedLessLess: '\\u2AA1\\u0338',\r\n    NotPrecedes: '\\u2280',\r\n    NotPrecedesEqual: '\\u2AAF\\u0338',\r\n    NotPrecedesSlantEqual: '\\u22E0',\r\n    NotReverseElement: '\\u220C',\r\n    NotRightTriangle: '\\u22EB',\r\n    NotRightTriangleBar: '\\u29D0\\u0338',\r\n    NotRightTriangleEqual: '\\u22ED',\r\n    NotSquareSubset: '\\u228F\\u0338',\r\n    NotSquareSubsetEqual: '\\u22E2',\r\n    NotSquareSuperset: '\\u2290\\u0338',\r\n    NotSquareSupersetEqual: '\\u22E3',\r\n    NotSubset: '\\u2282\\u20D2',\r\n    NotSubsetEqual: '\\u2288',\r\n    NotSucceeds: '\\u2281',\r\n    NotSucceedsEqual: '\\u2AB0\\u0338',\r\n    NotSucceedsSlantEqual: '\\u22E1',\r\n    NotSucceedsTilde: '\\u227F\\u0338',\r\n    NotSuperset: '\\u2283\\u20D2',\r\n    NotSupersetEqual: '\\u2289',\r\n    NotTilde: '\\u2241',\r\n    NotTildeEqual: '\\u2244',\r\n    NotTildeFullEqual: '\\u2247',\r\n    NotTildeTilde: '\\u2249',\r\n    NotVerticalBar: '\\u2224',\r\n    Nscr: '\\uD835\\uDCA9',\r\n    Ntilde: '\\u00D1',\r\n    Nu: '\\u039D',\r\n    OElig: '\\u0152',\r\n    Oacute: '\\u00D3',\r\n    Ocirc: '\\u00D4',\r\n    Ocy: '\\u041E',\r\n    Odblac: '\\u0150',\r\n    Ofr: '\\uD835\\uDD12',\r\n    Ograve: '\\u00D2',\r\n    Omacr: '\\u014C',\r\n    Omega: '\\u03A9',\r\n    Omicron: '\\u039F',\r\n    Oopf: '\\uD835\\uDD46',\r\n    OpenCurlyDoubleQuote: '\\u201C',\r\n    OpenCurlyQuote: '\\u2018',\r\n    Or: '\\u2A54',\r\n    Oscr: '\\uD835\\uDCAA',\r\n    Oslash: '\\u00D8',\r\n    Otilde: '\\u00D5',\r\n    Otimes: '\\u2A37',\r\n    Ouml: '\\u00D6',\r\n    OverBar: '\\u203E',\r\n    OverBrace: '\\u23DE',\r\n    OverBracket: '\\u23B4',\r\n    OverParenthesis: '\\u23DC',\r\n    PartialD: '\\u2202',\r\n    Pcy: '\\u041F',\r\n    Pfr: '\\uD835\\uDD13',\r\n    Phi: '\\u03A6',\r\n    Pi: '\\u03A0',\r\n    PlusMinus: '\\u00B1',\r\n    Poincareplane: '\\u210C',\r\n    Popf: '\\u2119',\r\n    Pr: '\\u2ABB',\r\n    Precedes: '\\u227A',\r\n    PrecedesEqual: '\\u2AAF',\r\n    PrecedesSlantEqual: '\\u227C',\r\n    PrecedesTilde: '\\u227E',\r\n    Prime: '\\u2033',\r\n    Product: '\\u220F',\r\n    Proportion: '\\u2237',\r\n    Proportional: '\\u221D',\r\n    Pscr: '\\uD835\\uDCAB',\r\n    Psi: '\\u03A8',\r\n    QUOT: '\\u0022',\r\n    Qfr: '\\uD835\\uDD14',\r\n    Qopf: '\\u211A',\r\n    Qscr: '\\uD835\\uDCAC',\r\n    RBarr: '\\u2910',\r\n    REG: '\\u00AE',\r\n    Racute: '\\u0154',\r\n    Rang: '\\u27EB',\r\n    Rarr: '\\u21A0',\r\n    Rarrtl: '\\u2916',\r\n    Rcaron: '\\u0158',\r\n    Rcedil: '\\u0156',\r\n    Rcy: '\\u0420',\r\n    Re: '\\u211C',\r\n    ReverseElement: '\\u220B',\r\n    ReverseEquilibrium: '\\u21CB',\r\n    ReverseUpEquilibrium: '\\u296F',\r\n    Rfr: '\\u211C',\r\n    Rho: '\\u03A1',\r\n    RightAngleBracket: '\\u27E9',\r\n    RightArrow: '\\u2192',\r\n    RightArrowBar: '\\u21E5',\r\n    RightArrowLeftArrow: '\\u21C4',\r\n    RightCeiling: '\\u2309',\r\n    RightDoubleBracket: '\\u27E7',\r\n    RightDownTeeVector: '\\u295D',\r\n    RightDownVector: '\\u21C2',\r\n    RightDownVectorBar: '\\u2955',\r\n    RightFloor: '\\u230B',\r\n    RightTee: '\\u22A2',\r\n    RightTeeArrow: '\\u21A6',\r\n    RightTeeVector: '\\u295B',\r\n    RightTriangle: '\\u22B3',\r\n    RightTriangleBar: '\\u29D0',\r\n    RightTriangleEqual: '\\u22B5',\r\n    RightUpDownVector: '\\u294F',\r\n    RightUpTeeVector: '\\u295C',\r\n    RightUpVector: '\\u21BE',\r\n    RightUpVectorBar: '\\u2954',\r\n    RightVector: '\\u21C0',\r\n    RightVectorBar: '\\u2953',\r\n    Rightarrow: '\\u21D2',\r\n    Ropf: '\\u211D',\r\n    RoundImplies: '\\u2970',\r\n    Rrightarrow: '\\u21DB',\r\n    Rscr: '\\u211B',\r\n    Rsh: '\\u21B1',\r\n    RuleDelayed: '\\u29F4',\r\n    SHCHcy: '\\u0429',\r\n    SHcy: '\\u0428',\r\n    SOFTcy: '\\u042C',\r\n    Sacute: '\\u015A',\r\n    Sc: '\\u2ABC',\r\n    Scaron: '\\u0160',\r\n    Scedil: '\\u015E',\r\n    Scirc: '\\u015C',\r\n    Scy: '\\u0421',\r\n    Sfr: '\\uD835\\uDD16',\r\n    ShortDownArrow: '\\u2193',\r\n    ShortLeftArrow: '\\u2190',\r\n    ShortRightArrow: '\\u2192',\r\n    ShortUpArrow: '\\u2191',\r\n    Sigma: '\\u03A3',\r\n    SmallCircle: '\\u2218',\r\n    Sopf: '\\uD835\\uDD4A',\r\n    Sqrt: '\\u221A',\r\n    Square: '\\u25A1',\r\n    SquareIntersection: '\\u2293',\r\n    SquareSubset: '\\u228F',\r\n    SquareSubsetEqual: '\\u2291',\r\n    SquareSuperset: '\\u2290',\r\n    SquareSupersetEqual: '\\u2292',\r\n    SquareUnion: '\\u2294',\r\n    Sscr: '\\uD835\\uDCAE',\r\n    Star: '\\u22C6',\r\n    Sub: '\\u22D0',\r\n    Subset: '\\u22D0',\r\n    SubsetEqual: '\\u2286',\r\n    Succeeds: '\\u227B',\r\n    SucceedsEqual: '\\u2AB0',\r\n    SucceedsSlantEqual: '\\u227D',\r\n    SucceedsTilde: '\\u227F',\r\n    SuchThat: '\\u220B',\r\n    Sum: '\\u2211',\r\n    Sup: '\\u22D1',\r\n    Superset: '\\u2283',\r\n    SupersetEqual: '\\u2287',\r\n    Supset: '\\u22D1',\r\n    THORN: '\\u00DE',\r\n    TRADE: '\\u2122',\r\n    TSHcy: '\\u040B',\r\n    TScy: '\\u0426',\r\n    Tab: '\\u0009',\r\n    Tau: '\\u03A4',\r\n    Tcaron: '\\u0164',\r\n    Tcedil: '\\u0162',\r\n    Tcy: '\\u0422',\r\n    Tfr: '\\uD835\\uDD17',\r\n    Therefore: '\\u2234',\r\n    Theta: '\\u0398',\r\n    ThickSpace: '\\u205F\\u200A',\r\n    ThinSpace: '\\u2009',\r\n    Tilde: '\\u223C',\r\n    TildeEqual: '\\u2243',\r\n    TildeFullEqual: '\\u2245',\r\n    TildeTilde: '\\u2248',\r\n    Topf: '\\uD835\\uDD4B',\r\n    TripleDot: '\\u20DB',\r\n    Tscr: '\\uD835\\uDCAF',\r\n    Tstrok: '\\u0166',\r\n    Uacute: '\\u00DA',\r\n    Uarr: '\\u219F',\r\n    Uarrocir: '\\u2949',\r\n    Ubrcy: '\\u040E',\r\n    Ubreve: '\\u016C',\r\n    Ucirc: '\\u00DB',\r\n    Ucy: '\\u0423',\r\n    Udblac: '\\u0170',\r\n    Ufr: '\\uD835\\uDD18',\r\n    Ugrave: '\\u00D9',\r\n    Umacr: '\\u016A',\r\n    UnderBar: '\\u005F',\r\n    UnderBrace: '\\u23DF',\r\n    UnderBracket: '\\u23B5',\r\n    UnderParenthesis: '\\u23DD',\r\n    Union: '\\u22C3',\r\n    UnionPlus: '\\u228E',\r\n    Uogon: '\\u0172',\r\n    Uopf: '\\uD835\\uDD4C',\r\n    UpArrow: '\\u2191',\r\n    UpArrowBar: '\\u2912',\r\n    UpArrowDownArrow: '\\u21C5',\r\n    UpDownArrow: '\\u2195',\r\n    UpEquilibrium: '\\u296E',\r\n    UpTee: '\\u22A5',\r\n    UpTeeArrow: '\\u21A5',\r\n    Uparrow: '\\u21D1',\r\n    Updownarrow: '\\u21D5',\r\n    UpperLeftArrow: '\\u2196',\r\n    UpperRightArrow: '\\u2197',\r\n    Upsi: '\\u03D2',\r\n    Upsilon: '\\u03A5',\r\n    Uring: '\\u016E',\r\n    Uscr: '\\uD835\\uDCB0',\r\n    Utilde: '\\u0168',\r\n    Uuml: '\\u00DC',\r\n    VDash: '\\u22AB',\r\n    Vbar: '\\u2AEB',\r\n    Vcy: '\\u0412',\r\n    Vdash: '\\u22A9',\r\n    Vdashl: '\\u2AE6',\r\n    Vee: '\\u22C1',\r\n    Verbar: '\\u2016',\r\n    Vert: '\\u2016',\r\n    VerticalBar: '\\u2223',\r\n    VerticalLine: '\\u007C',\r\n    VerticalSeparator: '\\u2758',\r\n    VerticalTilde: '\\u2240',\r\n    VeryThinSpace: '\\u200A',\r\n    Vfr: '\\uD835\\uDD19',\r\n    Vopf: '\\uD835\\uDD4D',\r\n    Vscr: '\\uD835\\uDCB1',\r\n    Vvdash: '\\u22AA',\r\n    Wcirc: '\\u0174',\r\n    Wedge: '\\u22C0',\r\n    Wfr: '\\uD835\\uDD1A',\r\n    Wopf: '\\uD835\\uDD4E',\r\n    Wscr: '\\uD835\\uDCB2',\r\n    Xfr: '\\uD835\\uDD1B',\r\n    Xi: '\\u039E',\r\n    Xopf: '\\uD835\\uDD4F',\r\n    Xscr: '\\uD835\\uDCB3',\r\n    YAcy: '\\u042F',\r\n    YIcy: '\\u0407',\r\n    YUcy: '\\u042E',\r\n    Yacute: '\\u00DD',\r\n    Ycirc: '\\u0176',\r\n    Ycy: '\\u042B',\r\n    Yfr: '\\uD835\\uDD1C',\r\n    Yopf: '\\uD835\\uDD50',\r\n    Yscr: '\\uD835\\uDCB4',\r\n    Yuml: '\\u0178',\r\n    ZHcy: '\\u0416',\r\n    Zacute: '\\u0179',\r\n    Zcaron: '\\u017D',\r\n    Zcy: '\\u0417',\r\n    Zdot: '\\u017B',\r\n    ZeroWidthSpace: '\\u200B',\r\n    Zeta: '\\u0396',\r\n    Zfr: '\\u2128',\r\n    Zopf: '\\u2124',\r\n    Zscr: '\\uD835\\uDCB5',\r\n    aacute: '\\u00E1',\r\n    abreve: '\\u0103',\r\n    ac: '\\u223E',\r\n    acE: '\\u223E\\u0333',\r\n    acd: '\\u223F',\r\n    acirc: '\\u00E2',\r\n    acute: '\\u00B4',\r\n    acy: '\\u0430',\r\n    aelig: '\\u00E6',\r\n    af: '\\u2061',\r\n    afr: '\\uD835\\uDD1E',\r\n    agrave: '\\u00E0',\r\n    alefsym: '\\u2135',\r\n    aleph: '\\u2135',\r\n    alpha: '\\u03B1',\r\n    amacr: '\\u0101',\r\n    amalg: '\\u2A3F',\r\n    amp: '\\u0026',\r\n    and: '\\u2227',\r\n    andand: '\\u2A55',\r\n    andd: '\\u2A5C',\r\n    andslope: '\\u2A58',\r\n    andv: '\\u2A5A',\r\n    ang: '\\u2220',\r\n    ange: '\\u29A4',\r\n    angle: '\\u2220',\r\n    angmsd: '\\u2221',\r\n    angmsdaa: '\\u29A8',\r\n    angmsdab: '\\u29A9',\r\n    angmsdac: '\\u29AA',\r\n    angmsdad: '\\u29AB',\r\n    angmsdae: '\\u29AC',\r\n    angmsdaf: '\\u29AD',\r\n    angmsdag: '\\u29AE',\r\n    angmsdah: '\\u29AF',\r\n    angrt: '\\u221F',\r\n    angrtvb: '\\u22BE',\r\n    angrtvbd: '\\u299D',\r\n    angsph: '\\u2222',\r\n    angst: '\\u00C5',\r\n    angzarr: '\\u237C',\r\n    aogon: '\\u0105',\r\n    aopf: '\\uD835\\uDD52',\r\n    ap: '\\u2248',\r\n    apE: '\\u2A70',\r\n    apacir: '\\u2A6F',\r\n    ape: '\\u224A',\r\n    apid: '\\u224B',\r\n    apos: '\\u0027',\r\n    approx: '\\u2248',\r\n    approxeq: '\\u224A',\r\n    aring: '\\u00E5',\r\n    ascr: '\\uD835\\uDCB6',\r\n    ast: '\\u002A',\r\n    asymp: '\\u2248',\r\n    asympeq: '\\u224D',\r\n    atilde: '\\u00E3',\r\n    auml: '\\u00E4',\r\n    awconint: '\\u2233',\r\n    awint: '\\u2A11',\r\n    bNot: '\\u2AED',\r\n    backcong: '\\u224C',\r\n    backepsilon: '\\u03F6',\r\n    backprime: '\\u2035',\r\n    backsim: '\\u223D',\r\n    backsimeq: '\\u22CD',\r\n    barvee: '\\u22BD',\r\n    barwed: '\\u2305',\r\n    barwedge: '\\u2305',\r\n    bbrk: '\\u23B5',\r\n    bbrktbrk: '\\u23B6',\r\n    bcong: '\\u224C',\r\n    bcy: '\\u0431',\r\n    bdquo: '\\u201E',\r\n    becaus: '\\u2235',\r\n    because: '\\u2235',\r\n    bemptyv: '\\u29B0',\r\n    bepsi: '\\u03F6',\r\n    bernou: '\\u212C',\r\n    beta: '\\u03B2',\r\n    beth: '\\u2136',\r\n    between: '\\u226C',\r\n    bfr: '\\uD835\\uDD1F',\r\n    bigcap: '\\u22C2',\r\n    bigcirc: '\\u25EF',\r\n    bigcup: '\\u22C3',\r\n    bigodot: '\\u2A00',\r\n    bigoplus: '\\u2A01',\r\n    bigotimes: '\\u2A02',\r\n    bigsqcup: '\\u2A06',\r\n    bigstar: '\\u2605',\r\n    bigtriangledown: '\\u25BD',\r\n    bigtriangleup: '\\u25B3',\r\n    biguplus: '\\u2A04',\r\n    bigvee: '\\u22C1',\r\n    bigwedge: '\\u22C0',\r\n    bkarow: '\\u290D',\r\n    blacklozenge: '\\u29EB',\r\n    blacksquare: '\\u25AA',\r\n    blacktriangle: '\\u25B4',\r\n    blacktriangledown: '\\u25BE',\r\n    blacktriangleleft: '\\u25C2',\r\n    blacktriangleright: '\\u25B8',\r\n    blank: '\\u2423',\r\n    blk12: '\\u2592',\r\n    blk14: '\\u2591',\r\n    blk34: '\\u2593',\r\n    block: '\\u2588',\r\n    bne: '\\u003D\\u20E5',\r\n    bnequiv: '\\u2261\\u20E5',\r\n    bnot: '\\u2310',\r\n    bopf: '\\uD835\\uDD53',\r\n    bot: '\\u22A5',\r\n    bottom: '\\u22A5',\r\n    bowtie: '\\u22C8',\r\n    boxDL: '\\u2557',\r\n    boxDR: '\\u2554',\r\n    boxDl: '\\u2556',\r\n    boxDr: '\\u2553',\r\n    boxH: '\\u2550',\r\n    boxHD: '\\u2566',\r\n    boxHU: '\\u2569',\r\n    boxHd: '\\u2564',\r\n    boxHu: '\\u2567',\r\n    boxUL: '\\u255D',\r\n    boxUR: '\\u255A',\r\n    boxUl: '\\u255C',\r\n    boxUr: '\\u2559',\r\n    boxV: '\\u2551',\r\n    boxVH: '\\u256C',\r\n    boxVL: '\\u2563',\r\n    boxVR: '\\u2560',\r\n    boxVh: '\\u256B',\r\n    boxVl: '\\u2562',\r\n    boxVr: '\\u255F',\r\n    boxbox: '\\u29C9',\r\n    boxdL: '\\u2555',\r\n    boxdR: '\\u2552',\r\n    boxdl: '\\u2510',\r\n    boxdr: '\\u250C',\r\n    boxh: '\\u2500',\r\n    boxhD: '\\u2565',\r\n    boxhU: '\\u2568',\r\n    boxhd: '\\u252C',\r\n    boxhu: '\\u2534',\r\n    boxminus: '\\u229F',\r\n    boxplus: '\\u229E',\r\n    boxtimes: '\\u22A0',\r\n    boxuL: '\\u255B',\r\n    boxuR: '\\u2558',\r\n    boxul: '\\u2518',\r\n    boxur: '\\u2514',\r\n    boxv: '\\u2502',\r\n    boxvH: '\\u256A',\r\n    boxvL: '\\u2561',\r\n    boxvR: '\\u255E',\r\n    boxvh: '\\u253C',\r\n    boxvl: '\\u2524',\r\n    boxvr: '\\u251C',\r\n    bprime: '\\u2035',\r\n    breve: '\\u02D8',\r\n    brvbar: '\\u00A6',\r\n    bscr: '\\uD835\\uDCB7',\r\n    bsemi: '\\u204F',\r\n    bsim: '\\u223D',\r\n    bsime: '\\u22CD',\r\n    bsol: '\\u005C',\r\n    bsolb: '\\u29C5',\r\n    bsolhsub: '\\u27C8',\r\n    bull: '\\u2022',\r\n    bullet: '\\u2022',\r\n    bump: '\\u224E',\r\n    bumpE: '\\u2AAE',\r\n    bumpe: '\\u224F',\r\n    bumpeq: '\\u224F',\r\n    cacute: '\\u0107',\r\n    cap: '\\u2229',\r\n    capand: '\\u2A44',\r\n    capbrcup: '\\u2A49',\r\n    capcap: '\\u2A4B',\r\n    capcup: '\\u2A47',\r\n    capdot: '\\u2A40',\r\n    caps: '\\u2229\\uFE00',\r\n    caret: '\\u2041',\r\n    caron: '\\u02C7',\r\n    ccaps: '\\u2A4D',\r\n    ccaron: '\\u010D',\r\n    ccedil: '\\u00E7',\r\n    ccirc: '\\u0109',\r\n    ccups: '\\u2A4C',\r\n    ccupssm: '\\u2A50',\r\n    cdot: '\\u010B',\r\n    cedil: '\\u00B8',\r\n    cemptyv: '\\u29B2',\r\n    cent: '\\u00A2',\r\n    centerdot: '\\u00B7',\r\n    cfr: '\\uD835\\uDD20',\r\n    chcy: '\\u0447',\r\n    check: '\\u2713',\r\n    checkmark: '\\u2713',\r\n    chi: '\\u03C7',\r\n    cir: '\\u25CB',\r\n    cirE: '\\u29C3',\r\n    circ: '\\u02C6',\r\n    circeq: '\\u2257',\r\n    circlearrowleft: '\\u21BA',\r\n    circlearrowright: '\\u21BB',\r\n    circledR: '\\u00AE',\r\n    circledS: '\\u24C8',\r\n    circledast: '\\u229B',\r\n    circledcirc: '\\u229A',\r\n    circleddash: '\\u229D',\r\n    cire: '\\u2257',\r\n    cirfnint: '\\u2A10',\r\n    cirmid: '\\u2AEF',\r\n    cirscir: '\\u29C2',\r\n    clubs: '\\u2663',\r\n    clubsuit: '\\u2663',\r\n    colon: '\\u003A',\r\n    colone: '\\u2254',\r\n    coloneq: '\\u2254',\r\n    comma: '\\u002C',\r\n    commat: '\\u0040',\r\n    comp: '\\u2201',\r\n    compfn: '\\u2218',\r\n    complement: '\\u2201',\r\n    complexes: '\\u2102',\r\n    cong: '\\u2245',\r\n    congdot: '\\u2A6D',\r\n    conint: '\\u222E',\r\n    copf: '\\uD835\\uDD54',\r\n    coprod: '\\u2210',\r\n    copy: '\\u00A9',\r\n    copysr: '\\u2117',\r\n    crarr: '\\u21B5',\r\n    cross: '\\u2717',\r\n    cscr: '\\uD835\\uDCB8',\r\n    csub: '\\u2ACF',\r\n    csube: '\\u2AD1',\r\n    csup: '\\u2AD0',\r\n    csupe: '\\u2AD2',\r\n    ctdot: '\\u22EF',\r\n    cudarrl: '\\u2938',\r\n    cudarrr: '\\u2935',\r\n    cuepr: '\\u22DE',\r\n    cuesc: '\\u22DF',\r\n    cularr: '\\u21B6',\r\n    cularrp: '\\u293D',\r\n    cup: '\\u222A',\r\n    cupbrcap: '\\u2A48',\r\n    cupcap: '\\u2A46',\r\n    cupcup: '\\u2A4A',\r\n    cupdot: '\\u228D',\r\n    cupor: '\\u2A45',\r\n    cups: '\\u222A\\uFE00',\r\n    curarr: '\\u21B7',\r\n    curarrm: '\\u293C',\r\n    curlyeqprec: '\\u22DE',\r\n    curlyeqsucc: '\\u22DF',\r\n    curlyvee: '\\u22CE',\r\n    curlywedge: '\\u22CF',\r\n    curren: '\\u00A4',\r\n    curvearrowleft: '\\u21B6',\r\n    curvearrowright: '\\u21B7',\r\n    cuvee: '\\u22CE',\r\n    cuwed: '\\u22CF',\r\n    cwconint: '\\u2232',\r\n    cwint: '\\u2231',\r\n    cylcty: '\\u232D',\r\n    dArr: '\\u21D3',\r\n    dHar: '\\u2965',\r\n    dagger: '\\u2020',\r\n    daleth: '\\u2138',\r\n    darr: '\\u2193',\r\n    dash: '\\u2010',\r\n    dashv: '\\u22A3',\r\n    dbkarow: '\\u290F',\r\n    dblac: '\\u02DD',\r\n    dcaron: '\\u010F',\r\n    dcy: '\\u0434',\r\n    dd: '\\u2146',\r\n    ddagger: '\\u2021',\r\n    ddarr: '\\u21CA',\r\n    ddotseq: '\\u2A77',\r\n    deg: '\\u00B0',\r\n    delta: '\\u03B4',\r\n    demptyv: '\\u29B1',\r\n    dfisht: '\\u297F',\r\n    dfr: '\\uD835\\uDD21',\r\n    dharl: '\\u21C3',\r\n    dharr: '\\u21C2',\r\n    diam: '\\u22C4',\r\n    diamond: '\\u22C4',\r\n    diamondsuit: '\\u2666',\r\n    diams: '\\u2666',\r\n    die: '\\u00A8',\r\n    digamma: '\\u03DD',\r\n    disin: '\\u22F2',\r\n    div: '\\u00F7',\r\n    divide: '\\u00F7',\r\n    divideontimes: '\\u22C7',\r\n    divonx: '\\u22C7',\r\n    djcy: '\\u0452',\r\n    dlcorn: '\\u231E',\r\n    dlcrop: '\\u230D',\r\n    dollar: '\\u0024',\r\n    dopf: '\\uD835\\uDD55',\r\n    dot: '\\u02D9',\r\n    doteq: '\\u2250',\r\n    doteqdot: '\\u2251',\r\n    dotminus: '\\u2238',\r\n    dotplus: '\\u2214',\r\n    dotsquare: '\\u22A1',\r\n    doublebarwedge: '\\u2306',\r\n    downarrow: '\\u2193',\r\n    downdownarrows: '\\u21CA',\r\n    downharpoonleft: '\\u21C3',\r\n    downharpoonright: '\\u21C2',\r\n    drbkarow: '\\u2910',\r\n    drcorn: '\\u231F',\r\n    drcrop: '\\u230C',\r\n    dscr: '\\uD835\\uDCB9',\r\n    dscy: '\\u0455',\r\n    dsol: '\\u29F6',\r\n    dstrok: '\\u0111',\r\n    dtdot: '\\u22F1',\r\n    dtri: '\\u25BF',\r\n    dtrif: '\\u25BE',\r\n    duarr: '\\u21F5',\r\n    duhar: '\\u296F',\r\n    dwangle: '\\u29A6',\r\n    dzcy: '\\u045F',\r\n    dzigrarr: '\\u27FF',\r\n    eDDot: '\\u2A77',\r\n    eDot: '\\u2251',\r\n    eacute: '\\u00E9',\r\n    easter: '\\u2A6E',\r\n    ecaron: '\\u011B',\r\n    ecir: '\\u2256',\r\n    ecirc: '\\u00EA',\r\n    ecolon: '\\u2255',\r\n    ecy: '\\u044D',\r\n    edot: '\\u0117',\r\n    ee: '\\u2147',\r\n    efDot: '\\u2252',\r\n    efr: '\\uD835\\uDD22',\r\n    eg: '\\u2A9A',\r\n    egrave: '\\u00E8',\r\n    egs: '\\u2A96',\r\n    egsdot: '\\u2A98',\r\n    el: '\\u2A99',\r\n    elinters: '\\u23E7',\r\n    ell: '\\u2113',\r\n    els: '\\u2A95',\r\n    elsdot: '\\u2A97',\r\n    emacr: '\\u0113',\r\n    empty: '\\u2205',\r\n    emptyset: '\\u2205',\r\n    emptyv: '\\u2205',\r\n    emsp13: '\\u2004',\r\n    emsp14: '\\u2005',\r\n    emsp: '\\u2003',\r\n    eng: '\\u014B',\r\n    ensp: '\\u2002',\r\n    eogon: '\\u0119',\r\n    eopf: '\\uD835\\uDD56',\r\n    epar: '\\u22D5',\r\n    eparsl: '\\u29E3',\r\n    eplus: '\\u2A71',\r\n    epsi: '\\u03B5',\r\n    epsilon: '\\u03B5',\r\n    epsiv: '\\u03F5',\r\n    eqcirc: '\\u2256',\r\n    eqcolon: '\\u2255',\r\n    eqsim: '\\u2242',\r\n    eqslantgtr: '\\u2A96',\r\n    eqslantless: '\\u2A95',\r\n    equals: '\\u003D',\r\n    equest: '\\u225F',\r\n    equiv: '\\u2261',\r\n    equivDD: '\\u2A78',\r\n    eqvparsl: '\\u29E5',\r\n    erDot: '\\u2253',\r\n    erarr: '\\u2971',\r\n    escr: '\\u212F',\r\n    esdot: '\\u2250',\r\n    esim: '\\u2242',\r\n    eta: '\\u03B7',\r\n    eth: '\\u00F0',\r\n    euml: '\\u00EB',\r\n    euro: '\\u20AC',\r\n    excl: '\\u0021',\r\n    exist: '\\u2203',\r\n    expectation: '\\u2130',\r\n    exponentiale: '\\u2147',\r\n    fallingdotseq: '\\u2252',\r\n    fcy: '\\u0444',\r\n    female: '\\u2640',\r\n    ffilig: '\\uFB03',\r\n    fflig: '\\uFB00',\r\n    ffllig: '\\uFB04',\r\n    ffr: '\\uD835\\uDD23',\r\n    filig: '\\uFB01',\r\n    fjlig: '\\u0066\\u006A',\r\n    flat: '\\u266D',\r\n    fllig: '\\uFB02',\r\n    fltns: '\\u25B1',\r\n    fnof: '\\u0192',\r\n    fopf: '\\uD835\\uDD57',\r\n    forall: '\\u2200',\r\n    fork: '\\u22D4',\r\n    forkv: '\\u2AD9',\r\n    fpartint: '\\u2A0D',\r\n    frac12: '\\u00BD',\r\n    frac13: '\\u2153',\r\n    frac14: '\\u00BC',\r\n    frac15: '\\u2155',\r\n    frac16: '\\u2159',\r\n    frac18: '\\u215B',\r\n    frac23: '\\u2154',\r\n    frac25: '\\u2156',\r\n    frac34: '\\u00BE',\r\n    frac35: '\\u2157',\r\n    frac38: '\\u215C',\r\n    frac45: '\\u2158',\r\n    frac56: '\\u215A',\r\n    frac58: '\\u215D',\r\n    frac78: '\\u215E',\r\n    frasl: '\\u2044',\r\n    frown: '\\u2322',\r\n    fscr: '\\uD835\\uDCBB',\r\n    gE: '\\u2267',\r\n    gEl: '\\u2A8C',\r\n    gacute: '\\u01F5',\r\n    gamma: '\\u03B3',\r\n    gammad: '\\u03DD',\r\n    gap: '\\u2A86',\r\n    gbreve: '\\u011F',\r\n    gcirc: '\\u011D',\r\n    gcy: '\\u0433',\r\n    gdot: '\\u0121',\r\n    ge: '\\u2265',\r\n    gel: '\\u22DB',\r\n    geq: '\\u2265',\r\n    geqq: '\\u2267',\r\n    geqslant: '\\u2A7E',\r\n    ges: '\\u2A7E',\r\n    gescc: '\\u2AA9',\r\n    gesdot: '\\u2A80',\r\n    gesdoto: '\\u2A82',\r\n    gesdotol: '\\u2A84',\r\n    gesl: '\\u22DB\\uFE00',\r\n    gesles: '\\u2A94',\r\n    gfr: '\\uD835\\uDD24',\r\n    gg: '\\u226B',\r\n    ggg: '\\u22D9',\r\n    gimel: '\\u2137',\r\n    gjcy: '\\u0453',\r\n    gl: '\\u2277',\r\n    glE: '\\u2A92',\r\n    gla: '\\u2AA5',\r\n    glj: '\\u2AA4',\r\n    gnE: '\\u2269',\r\n    gnap: '\\u2A8A',\r\n    gnapprox: '\\u2A8A',\r\n    gne: '\\u2A88',\r\n    gneq: '\\u2A88',\r\n    gneqq: '\\u2269',\r\n    gnsim: '\\u22E7',\r\n    gopf: '\\uD835\\uDD58',\r\n    grave: '\\u0060',\r\n    gscr: '\\u210A',\r\n    gsim: '\\u2273',\r\n    gsime: '\\u2A8E',\r\n    gsiml: '\\u2A90',\r\n    gt: '\\u003E',\r\n    gtcc: '\\u2AA7',\r\n    gtcir: '\\u2A7A',\r\n    gtdot: '\\u22D7',\r\n    gtlPar: '\\u2995',\r\n    gtquest: '\\u2A7C',\r\n    gtrapprox: '\\u2A86',\r\n    gtrarr: '\\u2978',\r\n    gtrdot: '\\u22D7',\r\n    gtreqless: '\\u22DB',\r\n    gtreqqless: '\\u2A8C',\r\n    gtrless: '\\u2277',\r\n    gtrsim: '\\u2273',\r\n    gvertneqq: '\\u2269\\uFE00',\r\n    gvnE: '\\u2269\\uFE00',\r\n    hArr: '\\u21D4',\r\n    hairsp: '\\u200A',\r\n    half: '\\u00BD',\r\n    hamilt: '\\u210B',\r\n    hardcy: '\\u044A',\r\n    harr: '\\u2194',\r\n    harrcir: '\\u2948',\r\n    harrw: '\\u21AD',\r\n    hbar: '\\u210F',\r\n    hcirc: '\\u0125',\r\n    hearts: '\\u2665',\r\n    heartsuit: '\\u2665',\r\n    hellip: '\\u2026',\r\n    hercon: '\\u22B9',\r\n    hfr: '\\uD835\\uDD25',\r\n    hksearow: '\\u2925',\r\n    hkswarow: '\\u2926',\r\n    hoarr: '\\u21FF',\r\n    homtht: '\\u223B',\r\n    hookleftarrow: '\\u21A9',\r\n    hookrightarrow: '\\u21AA',\r\n    hopf: '\\uD835\\uDD59',\r\n    horbar: '\\u2015',\r\n    hscr: '\\uD835\\uDCBD',\r\n    hslash: '\\u210F',\r\n    hstrok: '\\u0127',\r\n    hybull: '\\u2043',\r\n    hyphen: '\\u2010',\r\n    iacute: '\\u00ED',\r\n    ic: '\\u2063',\r\n    icirc: '\\u00EE',\r\n    icy: '\\u0438',\r\n    iecy: '\\u0435',\r\n    iexcl: '\\u00A1',\r\n    iff: '\\u21D4',\r\n    ifr: '\\uD835\\uDD26',\r\n    igrave: '\\u00EC',\r\n    ii: '\\u2148',\r\n    iiiint: '\\u2A0C',\r\n    iiint: '\\u222D',\r\n    iinfin: '\\u29DC',\r\n    iiota: '\\u2129',\r\n    ijlig: '\\u0133',\r\n    imacr: '\\u012B',\r\n    image: '\\u2111',\r\n    imagline: '\\u2110',\r\n    imagpart: '\\u2111',\r\n    imath: '\\u0131',\r\n    imof: '\\u22B7',\r\n    imped: '\\u01B5',\r\n    in: '\\u2208',\r\n    incare: '\\u2105',\r\n    infin: '\\u221E',\r\n    infintie: '\\u29DD',\r\n    inodot: '\\u0131',\r\n    int: '\\u222B',\r\n    intcal: '\\u22BA',\r\n    integers: '\\u2124',\r\n    intercal: '\\u22BA',\r\n    intlarhk: '\\u2A17',\r\n    intprod: '\\u2A3C',\r\n    iocy: '\\u0451',\r\n    iogon: '\\u012F',\r\n    iopf: '\\uD835\\uDD5A',\r\n    iota: '\\u03B9',\r\n    iprod: '\\u2A3C',\r\n    iquest: '\\u00BF',\r\n    iscr: '\\uD835\\uDCBE',\r\n    isin: '\\u2208',\r\n    isinE: '\\u22F9',\r\n    isindot: '\\u22F5',\r\n    isins: '\\u22F4',\r\n    isinsv: '\\u22F3',\r\n    isinv: '\\u2208',\r\n    it: '\\u2062',\r\n    itilde: '\\u0129',\r\n    iukcy: '\\u0456',\r\n    iuml: '\\u00EF',\r\n    jcirc: '\\u0135',\r\n    jcy: '\\u0439',\r\n    jfr: '\\uD835\\uDD27',\r\n    jmath: '\\u0237',\r\n    jopf: '\\uD835\\uDD5B',\r\n    jscr: '\\uD835\\uDCBF',\r\n    jsercy: '\\u0458',\r\n    jukcy: '\\u0454',\r\n    kappa: '\\u03BA',\r\n    kappav: '\\u03F0',\r\n    kcedil: '\\u0137',\r\n    kcy: '\\u043A',\r\n    kfr: '\\uD835\\uDD28',\r\n    kgreen: '\\u0138',\r\n    khcy: '\\u0445',\r\n    kjcy: '\\u045C',\r\n    kopf: '\\uD835\\uDD5C',\r\n    kscr: '\\uD835\\uDCC0',\r\n    lAarr: '\\u21DA',\r\n    lArr: '\\u21D0',\r\n    lAtail: '\\u291B',\r\n    lBarr: '\\u290E',\r\n    lE: '\\u2266',\r\n    lEg: '\\u2A8B',\r\n    lHar: '\\u2962',\r\n    lacute: '\\u013A',\r\n    laemptyv: '\\u29B4',\r\n    lagran: '\\u2112',\r\n    lambda: '\\u03BB',\r\n    lang: '\\u27E8',\r\n    langd: '\\u2991',\r\n    langle: '\\u27E8',\r\n    lap: '\\u2A85',\r\n    laquo: '\\u00AB',\r\n    larr: '\\u2190',\r\n    larrb: '\\u21E4',\r\n    larrbfs: '\\u291F',\r\n    larrfs: '\\u291D',\r\n    larrhk: '\\u21A9',\r\n    larrlp: '\\u21AB',\r\n    larrpl: '\\u2939',\r\n    larrsim: '\\u2973',\r\n    larrtl: '\\u21A2',\r\n    lat: '\\u2AAB',\r\n    latail: '\\u2919',\r\n    late: '\\u2AAD',\r\n    lates: '\\u2AAD\\uFE00',\r\n    lbarr: '\\u290C',\r\n    lbbrk: '\\u2772',\r\n    lbrace: '\\u007B',\r\n    lbrack: '\\u005B',\r\n    lbrke: '\\u298B',\r\n    lbrksld: '\\u298F',\r\n    lbrkslu: '\\u298D',\r\n    lcaron: '\\u013E',\r\n    lcedil: '\\u013C',\r\n    lceil: '\\u2308',\r\n    lcub: '\\u007B',\r\n    lcy: '\\u043B',\r\n    ldca: '\\u2936',\r\n    ldquo: '\\u201C',\r\n    ldquor: '\\u201E',\r\n    ldrdhar: '\\u2967',\r\n    ldrushar: '\\u294B',\r\n    ldsh: '\\u21B2',\r\n    le: '\\u2264',\r\n    leftarrow: '\\u2190',\r\n    leftarrowtail: '\\u21A2',\r\n    leftharpoondown: '\\u21BD',\r\n    leftharpoonup: '\\u21BC',\r\n    leftleftarrows: '\\u21C7',\r\n    leftrightarrow: '\\u2194',\r\n    leftrightarrows: '\\u21C6',\r\n    leftrightharpoons: '\\u21CB',\r\n    leftrightsquigarrow: '\\u21AD',\r\n    leftthreetimes: '\\u22CB',\r\n    leg: '\\u22DA',\r\n    leq: '\\u2264',\r\n    leqq: '\\u2266',\r\n    leqslant: '\\u2A7D',\r\n    les: '\\u2A7D',\r\n    lescc: '\\u2AA8',\r\n    lesdot: '\\u2A7F',\r\n    lesdoto: '\\u2A81',\r\n    lesdotor: '\\u2A83',\r\n    lesg: '\\u22DA\\uFE00',\r\n    lesges: '\\u2A93',\r\n    lessapprox: '\\u2A85',\r\n    lessdot: '\\u22D6',\r\n    lesseqgtr: '\\u22DA',\r\n    lesseqqgtr: '\\u2A8B',\r\n    lessgtr: '\\u2276',\r\n    lesssim: '\\u2272',\r\n    lfisht: '\\u297C',\r\n    lfloor: '\\u230A',\r\n    lfr: '\\uD835\\uDD29',\r\n    lg: '\\u2276',\r\n    lgE: '\\u2A91',\r\n    lhard: '\\u21BD',\r\n    lharu: '\\u21BC',\r\n    lharul: '\\u296A',\r\n    lhblk: '\\u2584',\r\n    ljcy: '\\u0459',\r\n    ll: '\\u226A',\r\n    llarr: '\\u21C7',\r\n    llcorner: '\\u231E',\r\n    llhard: '\\u296B',\r\n    lltri: '\\u25FA',\r\n    lmidot: '\\u0140',\r\n    lmoust: '\\u23B0',\r\n    lmoustache: '\\u23B0',\r\n    lnE: '\\u2268',\r\n    lnap: '\\u2A89',\r\n    lnapprox: '\\u2A89',\r\n    lne: '\\u2A87',\r\n    lneq: '\\u2A87',\r\n    lneqq: '\\u2268',\r\n    lnsim: '\\u22E6',\r\n    loang: '\\u27EC',\r\n    loarr: '\\u21FD',\r\n    lobrk: '\\u27E6',\r\n    longleftarrow: '\\u27F5',\r\n    longleftrightarrow: '\\u27F7',\r\n    longmapsto: '\\u27FC',\r\n    longrightarrow: '\\u27F6',\r\n    looparrowleft: '\\u21AB',\r\n    looparrowright: '\\u21AC',\r\n    lopar: '\\u2985',\r\n    lopf: '\\uD835\\uDD5D',\r\n    loplus: '\\u2A2D',\r\n    lotimes: '\\u2A34',\r\n    lowast: '\\u2217',\r\n    lowbar: '\\u005F',\r\n    loz: '\\u25CA',\r\n    lozenge: '\\u25CA',\r\n    lozf: '\\u29EB',\r\n    lpar: '\\u0028',\r\n    lparlt: '\\u2993',\r\n    lrarr: '\\u21C6',\r\n    lrcorner: '\\u231F',\r\n    lrhar: '\\u21CB',\r\n    lrhard: '\\u296D',\r\n    lrm: '\\u200E',\r\n    lrtri: '\\u22BF',\r\n    lsaquo: '\\u2039',\r\n    lscr: '\\uD835\\uDCC1',\r\n    lsh: '\\u21B0',\r\n    lsim: '\\u2272',\r\n    lsime: '\\u2A8D',\r\n    lsimg: '\\u2A8F',\r\n    lsqb: '\\u005B',\r\n    lsquo: '\\u2018',\r\n    lsquor: '\\u201A',\r\n    lstrok: '\\u0142',\r\n    lt: '\\u003C',\r\n    ltcc: '\\u2AA6',\r\n    ltcir: '\\u2A79',\r\n    ltdot: '\\u22D6',\r\n    lthree: '\\u22CB',\r\n    ltimes: '\\u22C9',\r\n    ltlarr: '\\u2976',\r\n    ltquest: '\\u2A7B',\r\n    ltrPar: '\\u2996',\r\n    ltri: '\\u25C3',\r\n    ltrie: '\\u22B4',\r\n    ltrif: '\\u25C2',\r\n    lurdshar: '\\u294A',\r\n    luruhar: '\\u2966',\r\n    lvertneqq: '\\u2268\\uFE00',\r\n    lvnE: '\\u2268\\uFE00',\r\n    mDDot: '\\u223A',\r\n    macr: '\\u00AF',\r\n    male: '\\u2642',\r\n    malt: '\\u2720',\r\n    maltese: '\\u2720',\r\n    map: '\\u21A6',\r\n    mapsto: '\\u21A6',\r\n    mapstodown: '\\u21A7',\r\n    mapstoleft: '\\u21A4',\r\n    mapstoup: '\\u21A5',\r\n    marker: '\\u25AE',\r\n    mcomma: '\\u2A29',\r\n    mcy: '\\u043C',\r\n    mdash: '\\u2014',\r\n    measuredangle: '\\u2221',\r\n    mfr: '\\uD835\\uDD2A',\r\n    mho: '\\u2127',\r\n    micro: '\\u00B5',\r\n    mid: '\\u2223',\r\n    midast: '\\u002A',\r\n    midcir: '\\u2AF0',\r\n    middot: '\\u00B7',\r\n    minus: '\\u2212',\r\n    minusb: '\\u229F',\r\n    minusd: '\\u2238',\r\n    minusdu: '\\u2A2A',\r\n    mlcp: '\\u2ADB',\r\n    mldr: '\\u2026',\r\n    mnplus: '\\u2213',\r\n    models: '\\u22A7',\r\n    mopf: '\\uD835\\uDD5E',\r\n    mp: '\\u2213',\r\n    mscr: '\\uD835\\uDCC2',\r\n    mstpos: '\\u223E',\r\n    mu: '\\u03BC',\r\n    multimap: '\\u22B8',\r\n    mumap: '\\u22B8',\r\n    nGg: '\\u22D9\\u0338',\r\n    nGt: '\\u226B\\u20D2',\r\n    nGtv: '\\u226B\\u0338',\r\n    nLeftarrow: '\\u21CD',\r\n    nLeftrightarrow: '\\u21CE',\r\n    nLl: '\\u22D8\\u0338',\r\n    nLt: '\\u226A\\u20D2',\r\n    nLtv: '\\u226A\\u0338',\r\n    nRightarrow: '\\u21CF',\r\n    nVDash: '\\u22AF',\r\n    nVdash: '\\u22AE',\r\n    nabla: '\\u2207',\r\n    nacute: '\\u0144',\r\n    nang: '\\u2220\\u20D2',\r\n    nap: '\\u2249',\r\n    napE: '\\u2A70\\u0338',\r\n    napid: '\\u224B\\u0338',\r\n    napos: '\\u0149',\r\n    napprox: '\\u2249',\r\n    natur: '\\u266E',\r\n    natural: '\\u266E',\r\n    naturals: '\\u2115',\r\n    nbsp: '\\u00A0',\r\n    nbump: '\\u224E\\u0338',\r\n    nbumpe: '\\u224F\\u0338',\r\n    ncap: '\\u2A43',\r\n    ncaron: '\\u0148',\r\n    ncedil: '\\u0146',\r\n    ncong: '\\u2247',\r\n    ncongdot: '\\u2A6D\\u0338',\r\n    ncup: '\\u2A42',\r\n    ncy: '\\u043D',\r\n    ndash: '\\u2013',\r\n    ne: '\\u2260',\r\n    neArr: '\\u21D7',\r\n    nearhk: '\\u2924',\r\n    nearr: '\\u2197',\r\n    nearrow: '\\u2197',\r\n    nedot: '\\u2250\\u0338',\r\n    nequiv: '\\u2262',\r\n    nesear: '\\u2928',\r\n    nesim: '\\u2242\\u0338',\r\n    nexist: '\\u2204',\r\n    nexists: '\\u2204',\r\n    nfr: '\\uD835\\uDD2B',\r\n    ngE: '\\u2267\\u0338',\r\n    nge: '\\u2271',\r\n    ngeq: '\\u2271',\r\n    ngeqq: '\\u2267\\u0338',\r\n    ngeqslant: '\\u2A7E\\u0338',\r\n    nges: '\\u2A7E\\u0338',\r\n    ngsim: '\\u2275',\r\n    ngt: '\\u226F',\r\n    ngtr: '\\u226F',\r\n    nhArr: '\\u21CE',\r\n    nharr: '\\u21AE',\r\n    nhpar: '\\u2AF2',\r\n    ni: '\\u220B',\r\n    nis: '\\u22FC',\r\n    nisd: '\\u22FA',\r\n    niv: '\\u220B',\r\n    njcy: '\\u045A',\r\n    nlArr: '\\u21CD',\r\n    nlE: '\\u2266\\u0338',\r\n    nlarr: '\\u219A',\r\n    nldr: '\\u2025',\r\n    nle: '\\u2270',\r\n    nleftarrow: '\\u219A',\r\n    nleftrightarrow: '\\u21AE',\r\n    nleq: '\\u2270',\r\n    nleqq: '\\u2266\\u0338',\r\n    nleqslant: '\\u2A7D\\u0338',\r\n    nles: '\\u2A7D\\u0338',\r\n    nless: '\\u226E',\r\n    nlsim: '\\u2274',\r\n    nlt: '\\u226E',\r\n    nltri: '\\u22EA',\r\n    nltrie: '\\u22EC',\r\n    nmid: '\\u2224',\r\n    nopf: '\\uD835\\uDD5F',\r\n    not: '\\u00AC',\r\n    notin: '\\u2209',\r\n    notinE: '\\u22F9\\u0338',\r\n    notindot: '\\u22F5\\u0338',\r\n    notinva: '\\u2209',\r\n    notinvb: '\\u22F7',\r\n    notinvc: '\\u22F6',\r\n    notni: '\\u220C',\r\n    notniva: '\\u220C',\r\n    notnivb: '\\u22FE',\r\n    notnivc: '\\u22FD',\r\n    npar: '\\u2226',\r\n    nparallel: '\\u2226',\r\n    nparsl: '\\u2AFD\\u20E5',\r\n    npart: '\\u2202\\u0338',\r\n    npolint: '\\u2A14',\r\n    npr: '\\u2280',\r\n    nprcue: '\\u22E0',\r\n    npre: '\\u2AAF\\u0338',\r\n    nprec: '\\u2280',\r\n    npreceq: '\\u2AAF\\u0338',\r\n    nrArr: '\\u21CF',\r\n    nrarr: '\\u219B',\r\n    nrarrc: '\\u2933\\u0338',\r\n    nrarrw: '\\u219D\\u0338',\r\n    nrightarrow: '\\u219B',\r\n    nrtri: '\\u22EB',\r\n    nrtrie: '\\u22ED',\r\n    nsc: '\\u2281',\r\n    nsccue: '\\u22E1',\r\n    nsce: '\\u2AB0\\u0338',\r\n    nscr: '\\uD835\\uDCC3',\r\n    nshortmid: '\\u2224',\r\n    nshortparallel: '\\u2226',\r\n    nsim: '\\u2241',\r\n    nsime: '\\u2244',\r\n    nsimeq: '\\u2244',\r\n    nsmid: '\\u2224',\r\n    nspar: '\\u2226',\r\n    nsqsube: '\\u22E2',\r\n    nsqsupe: '\\u22E3',\r\n    nsub: '\\u2284',\r\n    nsubE: '\\u2AC5\\u0338',\r\n    nsube: '\\u2288',\r\n    nsubset: '\\u2282\\u20D2',\r\n    nsubseteq: '\\u2288',\r\n    nsubseteqq: '\\u2AC5\\u0338',\r\n    nsucc: '\\u2281',\r\n    nsucceq: '\\u2AB0\\u0338',\r\n    nsup: '\\u2285',\r\n    nsupE: '\\u2AC6\\u0338',\r\n    nsupe: '\\u2289',\r\n    nsupset: '\\u2283\\u20D2',\r\n    nsupseteq: '\\u2289',\r\n    nsupseteqq: '\\u2AC6\\u0338',\r\n    ntgl: '\\u2279',\r\n    ntilde: '\\u00F1',\r\n    ntlg: '\\u2278',\r\n    ntriangleleft: '\\u22EA',\r\n    ntrianglelefteq: '\\u22EC',\r\n    ntriangleright: '\\u22EB',\r\n    ntrianglerighteq: '\\u22ED',\r\n    nu: '\\u03BD',\r\n    num: '\\u0023',\r\n    numero: '\\u2116',\r\n    numsp: '\\u2007',\r\n    nvDash: '\\u22AD',\r\n    nvHarr: '\\u2904',\r\n    nvap: '\\u224D\\u20D2',\r\n    nvdash: '\\u22AC',\r\n    nvge: '\\u2265\\u20D2',\r\n    nvgt: '\\u003E\\u20D2',\r\n    nvinfin: '\\u29DE',\r\n    nvlArr: '\\u2902',\r\n    nvle: '\\u2264\\u20D2',\r\n    nvlt: '\\u003C\\u20D2',\r\n    nvltrie: '\\u22B4\\u20D2',\r\n    nvrArr: '\\u2903',\r\n    nvrtrie: '\\u22B5\\u20D2',\r\n    nvsim: '\\u223C\\u20D2',\r\n    nwArr: '\\u21D6',\r\n    nwarhk: '\\u2923',\r\n    nwarr: '\\u2196',\r\n    nwarrow: '\\u2196',\r\n    nwnear: '\\u2927',\r\n    oS: '\\u24C8',\r\n    oacute: '\\u00F3',\r\n    oast: '\\u229B',\r\n    ocir: '\\u229A',\r\n    ocirc: '\\u00F4',\r\n    ocy: '\\u043E',\r\n    odash: '\\u229D',\r\n    odblac: '\\u0151',\r\n    odiv: '\\u2A38',\r\n    odot: '\\u2299',\r\n    odsold: '\\u29BC',\r\n    oelig: '\\u0153',\r\n    ofcir: '\\u29BF',\r\n    ofr: '\\uD835\\uDD2C',\r\n    ogon: '\\u02DB',\r\n    ograve: '\\u00F2',\r\n    ogt: '\\u29C1',\r\n    ohbar: '\\u29B5',\r\n    ohm: '\\u03A9',\r\n    oint: '\\u222E',\r\n    olarr: '\\u21BA',\r\n    olcir: '\\u29BE',\r\n    olcross: '\\u29BB',\r\n    oline: '\\u203E',\r\n    olt: '\\u29C0',\r\n    omacr: '\\u014D',\r\n    omega: '\\u03C9',\r\n    omicron: '\\u03BF',\r\n    omid: '\\u29B6',\r\n    ominus: '\\u2296',\r\n    oopf: '\\uD835\\uDD60',\r\n    opar: '\\u29B7',\r\n    operp: '\\u29B9',\r\n    oplus: '\\u2295',\r\n    or: '\\u2228',\r\n    orarr: '\\u21BB',\r\n    ord: '\\u2A5D',\r\n    order: '\\u2134',\r\n    orderof: '\\u2134',\r\n    ordf: '\\u00AA',\r\n    ordm: '\\u00BA',\r\n    origof: '\\u22B6',\r\n    oror: '\\u2A56',\r\n    orslope: '\\u2A57',\r\n    orv: '\\u2A5B',\r\n    oscr: '\\u2134',\r\n    oslash: '\\u00F8',\r\n    osol: '\\u2298',\r\n    otilde: '\\u00F5',\r\n    otimes: '\\u2297',\r\n    otimesas: '\\u2A36',\r\n    ouml: '\\u00F6',\r\n    ovbar: '\\u233D',\r\n    par: '\\u2225',\r\n    para: '\\u00B6',\r\n    parallel: '\\u2225',\r\n    parsim: '\\u2AF3',\r\n    parsl: '\\u2AFD',\r\n    part: '\\u2202',\r\n    pcy: '\\u043F',\r\n    percnt: '\\u0025',\r\n    period: '\\u002E',\r\n    permil: '\\u2030',\r\n    perp: '\\u22A5',\r\n    pertenk: '\\u2031',\r\n    pfr: '\\uD835\\uDD2D',\r\n    phi: '\\u03C6',\r\n    phiv: '\\u03D5',\r\n    phmmat: '\\u2133',\r\n    phone: '\\u260E',\r\n    pi: '\\u03C0',\r\n    pitchfork: '\\u22D4',\r\n    piv: '\\u03D6',\r\n    planck: '\\u210F',\r\n    planckh: '\\u210E',\r\n    plankv: '\\u210F',\r\n    plus: '\\u002B',\r\n    plusacir: '\\u2A23',\r\n    plusb: '\\u229E',\r\n    pluscir: '\\u2A22',\r\n    plusdo: '\\u2214',\r\n    plusdu: '\\u2A25',\r\n    pluse: '\\u2A72',\r\n    plusmn: '\\u00B1',\r\n    plussim: '\\u2A26',\r\n    plustwo: '\\u2A27',\r\n    pm: '\\u00B1',\r\n    pointint: '\\u2A15',\r\n    popf: '\\uD835\\uDD61',\r\n    pound: '\\u00A3',\r\n    pr: '\\u227A',\r\n    prE: '\\u2AB3',\r\n    prap: '\\u2AB7',\r\n    prcue: '\\u227C',\r\n    pre: '\\u2AAF',\r\n    prec: '\\u227A',\r\n    precapprox: '\\u2AB7',\r\n    preccurlyeq: '\\u227C',\r\n    preceq: '\\u2AAF',\r\n    precnapprox: '\\u2AB9',\r\n    precneqq: '\\u2AB5',\r\n    precnsim: '\\u22E8',\r\n    precsim: '\\u227E',\r\n    prime: '\\u2032',\r\n    primes: '\\u2119',\r\n    prnE: '\\u2AB5',\r\n    prnap: '\\u2AB9',\r\n    prnsim: '\\u22E8',\r\n    prod: '\\u220F',\r\n    profalar: '\\u232E',\r\n    profline: '\\u2312',\r\n    profsurf: '\\u2313',\r\n    prop: '\\u221D',\r\n    propto: '\\u221D',\r\n    prsim: '\\u227E',\r\n    prurel: '\\u22B0',\r\n    pscr: '\\uD835\\uDCC5',\r\n    psi: '\\u03C8',\r\n    puncsp: '\\u2008',\r\n    qfr: '\\uD835\\uDD2E',\r\n    qint: '\\u2A0C',\r\n    qopf: '\\uD835\\uDD62',\r\n    qprime: '\\u2057',\r\n    qscr: '\\uD835\\uDCC6',\r\n    quaternions: '\\u210D',\r\n    quatint: '\\u2A16',\r\n    quest: '\\u003F',\r\n    questeq: '\\u225F',\r\n    quot: '\\u0022',\r\n    rAarr: '\\u21DB',\r\n    rArr: '\\u21D2',\r\n    rAtail: '\\u291C',\r\n    rBarr: '\\u290F',\r\n    rHar: '\\u2964',\r\n    race: '\\u223D\\u0331',\r\n    racute: '\\u0155',\r\n    radic: '\\u221A',\r\n    raemptyv: '\\u29B3',\r\n    rang: '\\u27E9',\r\n    rangd: '\\u2992',\r\n    range: '\\u29A5',\r\n    rangle: '\\u27E9',\r\n    raquo: '\\u00BB',\r\n    rarr: '\\u2192',\r\n    rarrap: '\\u2975',\r\n    rarrb: '\\u21E5',\r\n    rarrbfs: '\\u2920',\r\n    rarrc: '\\u2933',\r\n    rarrfs: '\\u291E',\r\n    rarrhk: '\\u21AA',\r\n    rarrlp: '\\u21AC',\r\n    rarrpl: '\\u2945',\r\n    rarrsim: '\\u2974',\r\n    rarrtl: '\\u21A3',\r\n    rarrw: '\\u219D',\r\n    ratail: '\\u291A',\r\n    ratio: '\\u2236',\r\n    rationals: '\\u211A',\r\n    rbarr: '\\u290D',\r\n    rbbrk: '\\u2773',\r\n    rbrace: '\\u007D',\r\n    rbrack: '\\u005D',\r\n    rbrke: '\\u298C',\r\n    rbrksld: '\\u298E',\r\n    rbrkslu: '\\u2990',\r\n    rcaron: '\\u0159',\r\n    rcedil: '\\u0157',\r\n    rceil: '\\u2309',\r\n    rcub: '\\u007D',\r\n    rcy: '\\u0440',\r\n    rdca: '\\u2937',\r\n    rdldhar: '\\u2969',\r\n    rdquo: '\\u201D',\r\n    rdquor: '\\u201D',\r\n    rdsh: '\\u21B3',\r\n    real: '\\u211C',\r\n    realine: '\\u211B',\r\n    realpart: '\\u211C',\r\n    reals: '\\u211D',\r\n    rect: '\\u25AD',\r\n    reg: '\\u00AE',\r\n    rfisht: '\\u297D',\r\n    rfloor: '\\u230B',\r\n    rfr: '\\uD835\\uDD2F',\r\n    rhard: '\\u21C1',\r\n    rharu: '\\u21C0',\r\n    rharul: '\\u296C',\r\n    rho: '\\u03C1',\r\n    rhov: '\\u03F1',\r\n    rightarrow: '\\u2192',\r\n    rightarrowtail: '\\u21A3',\r\n    rightharpoondown: '\\u21C1',\r\n    rightharpoonup: '\\u21C0',\r\n    rightleftarrows: '\\u21C4',\r\n    rightleftharpoons: '\\u21CC',\r\n    rightrightarrows: '\\u21C9',\r\n    rightsquigarrow: '\\u219D',\r\n    rightthreetimes: '\\u22CC',\r\n    ring: '\\u02DA',\r\n    risingdotseq: '\\u2253',\r\n    rlarr: '\\u21C4',\r\n    rlhar: '\\u21CC',\r\n    rlm: '\\u200F',\r\n    rmoust: '\\u23B1',\r\n    rmoustache: '\\u23B1',\r\n    rnmid: '\\u2AEE',\r\n    roang: '\\u27ED',\r\n    roarr: '\\u21FE',\r\n    robrk: '\\u27E7',\r\n    ropar: '\\u2986',\r\n    ropf: '\\uD835\\uDD63',\r\n    roplus: '\\u2A2E',\r\n    rotimes: '\\u2A35',\r\n    rpar: '\\u0029',\r\n    rpargt: '\\u2994',\r\n    rppolint: '\\u2A12',\r\n    rrarr: '\\u21C9',\r\n    rsaquo: '\\u203A',\r\n    rscr: '\\uD835\\uDCC7',\r\n    rsh: '\\u21B1',\r\n    rsqb: '\\u005D',\r\n    rsquo: '\\u2019',\r\n    rsquor: '\\u2019',\r\n    rthree: '\\u22CC',\r\n    rtimes: '\\u22CA',\r\n    rtri: '\\u25B9',\r\n    rtrie: '\\u22B5',\r\n    rtrif: '\\u25B8',\r\n    rtriltri: '\\u29CE',\r\n    ruluhar: '\\u2968',\r\n    rx: '\\u211E',\r\n    sacute: '\\u015B',\r\n    sbquo: '\\u201A',\r\n    sc: '\\u227B',\r\n    scE: '\\u2AB4',\r\n    scap: '\\u2AB8',\r\n    scaron: '\\u0161',\r\n    sccue: '\\u227D',\r\n    sce: '\\u2AB0',\r\n    scedil: '\\u015F',\r\n    scirc: '\\u015D',\r\n    scnE: '\\u2AB6',\r\n    scnap: '\\u2ABA',\r\n    scnsim: '\\u22E9',\r\n    scpolint: '\\u2A13',\r\n    scsim: '\\u227F',\r\n    scy: '\\u0441',\r\n    sdot: '\\u22C5',\r\n    sdotb: '\\u22A1',\r\n    sdote: '\\u2A66',\r\n    seArr: '\\u21D8',\r\n    searhk: '\\u2925',\r\n    searr: '\\u2198',\r\n    searrow: '\\u2198',\r\n    sect: '\\u00A7',\r\n    semi: '\\u003B',\r\n    seswar: '\\u2929',\r\n    setminus: '\\u2216',\r\n    setmn: '\\u2216',\r\n    sext: '\\u2736',\r\n    sfr: '\\uD835\\uDD30',\r\n    sfrown: '\\u2322',\r\n    sharp: '\\u266F',\r\n    shchcy: '\\u0449',\r\n    shcy: '\\u0448',\r\n    shortmid: '\\u2223',\r\n    shortparallel: '\\u2225',\r\n    shy: '\\u00AD',\r\n    sigma: '\\u03C3',\r\n    sigmaf: '\\u03C2',\r\n    sigmav: '\\u03C2',\r\n    sim: '\\u223C',\r\n    simdot: '\\u2A6A',\r\n    sime: '\\u2243',\r\n    simeq: '\\u2243',\r\n    simg: '\\u2A9E',\r\n    simgE: '\\u2AA0',\r\n    siml: '\\u2A9D',\r\n    simlE: '\\u2A9F',\r\n    simne: '\\u2246',\r\n    simplus: '\\u2A24',\r\n    simrarr: '\\u2972',\r\n    slarr: '\\u2190',\r\n    smallsetminus: '\\u2216',\r\n    smashp: '\\u2A33',\r\n    smeparsl: '\\u29E4',\r\n    smid: '\\u2223',\r\n    smile: '\\u2323',\r\n    smt: '\\u2AAA',\r\n    smte: '\\u2AAC',\r\n    smtes: '\\u2AAC\\uFE00',\r\n    softcy: '\\u044C',\r\n    sol: '\\u002F',\r\n    solb: '\\u29C4',\r\n    solbar: '\\u233F',\r\n    sopf: '\\uD835\\uDD64',\r\n    spades: '\\u2660',\r\n    spadesuit: '\\u2660',\r\n    spar: '\\u2225',\r\n    sqcap: '\\u2293',\r\n    sqcaps: '\\u2293\\uFE00',\r\n    sqcup: '\\u2294',\r\n    sqcups: '\\u2294\\uFE00',\r\n    sqsub: '\\u228F',\r\n    sqsube: '\\u2291',\r\n    sqsubset: '\\u228F',\r\n    sqsubseteq: '\\u2291',\r\n    sqsup: '\\u2290',\r\n    sqsupe: '\\u2292',\r\n    sqsupset: '\\u2290',\r\n    sqsupseteq: '\\u2292',\r\n    squ: '\\u25A1',\r\n    square: '\\u25A1',\r\n    squarf: '\\u25AA',\r\n    squf: '\\u25AA',\r\n    srarr: '\\u2192',\r\n    sscr: '\\uD835\\uDCC8',\r\n    ssetmn: '\\u2216',\r\n    ssmile: '\\u2323',\r\n    sstarf: '\\u22C6',\r\n    star: '\\u2606',\r\n    starf: '\\u2605',\r\n    straightepsilon: '\\u03F5',\r\n    straightphi: '\\u03D5',\r\n    strns: '\\u00AF',\r\n    sub: '\\u2282',\r\n    subE: '\\u2AC5',\r\n    subdot: '\\u2ABD',\r\n    sube: '\\u2286',\r\n    subedot: '\\u2AC3',\r\n    submult: '\\u2AC1',\r\n    subnE: '\\u2ACB',\r\n    subne: '\\u228A',\r\n    subplus: '\\u2ABF',\r\n    subrarr: '\\u2979',\r\n    subset: '\\u2282',\r\n    subseteq: '\\u2286',\r\n    subseteqq: '\\u2AC5',\r\n    subsetneq: '\\u228A',\r\n    subsetneqq: '\\u2ACB',\r\n    subsim: '\\u2AC7',\r\n    subsub: '\\u2AD5',\r\n    subsup: '\\u2AD3',\r\n    succ: '\\u227B',\r\n    succapprox: '\\u2AB8',\r\n    succcurlyeq: '\\u227D',\r\n    succeq: '\\u2AB0',\r\n    succnapprox: '\\u2ABA',\r\n    succneqq: '\\u2AB6',\r\n    succnsim: '\\u22E9',\r\n    succsim: '\\u227F',\r\n    sum: '\\u2211',\r\n    sung: '\\u266A',\r\n    sup1: '\\u00B9',\r\n    sup2: '\\u00B2',\r\n    sup3: '\\u00B3',\r\n    sup: '\\u2283',\r\n    supE: '\\u2AC6',\r\n    supdot: '\\u2ABE',\r\n    supdsub: '\\u2AD8',\r\n    supe: '\\u2287',\r\n    supedot: '\\u2AC4',\r\n    suphsol: '\\u27C9',\r\n    suphsub: '\\u2AD7',\r\n    suplarr: '\\u297B',\r\n    supmult: '\\u2AC2',\r\n    supnE: '\\u2ACC',\r\n    supne: '\\u228B',\r\n    supplus: '\\u2AC0',\r\n    supset: '\\u2283',\r\n    supseteq: '\\u2287',\r\n    supseteqq: '\\u2AC6',\r\n    supsetneq: '\\u228B',\r\n    supsetneqq: '\\u2ACC',\r\n    supsim: '\\u2AC8',\r\n    supsub: '\\u2AD4',\r\n    supsup: '\\u2AD6',\r\n    swArr: '\\u21D9',\r\n    swarhk: '\\u2926',\r\n    swarr: '\\u2199',\r\n    swarrow: '\\u2199',\r\n    swnwar: '\\u292A',\r\n    szlig: '\\u00DF',\r\n    target: '\\u2316',\r\n    tau: '\\u03C4',\r\n    tbrk: '\\u23B4',\r\n    tcaron: '\\u0165',\r\n    tcedil: '\\u0163',\r\n    tcy: '\\u0442',\r\n    tdot: '\\u20DB',\r\n    telrec: '\\u2315',\r\n    tfr: '\\uD835\\uDD31',\r\n    there4: '\\u2234',\r\n    therefore: '\\u2234',\r\n    theta: '\\u03B8',\r\n    thetasym: '\\u03D1',\r\n    thetav: '\\u03D1',\r\n    thickapprox: '\\u2248',\r\n    thicksim: '\\u223C',\r\n    thinsp: '\\u2009',\r\n    thkap: '\\u2248',\r\n    thksim: '\\u223C',\r\n    thorn: '\\u00FE',\r\n    tilde: '\\u02DC',\r\n    times: '\\u00D7',\r\n    timesb: '\\u22A0',\r\n    timesbar: '\\u2A31',\r\n    timesd: '\\u2A30',\r\n    tint: '\\u222D',\r\n    toea: '\\u2928',\r\n    top: '\\u22A4',\r\n    topbot: '\\u2336',\r\n    topcir: '\\u2AF1',\r\n    topf: '\\uD835\\uDD65',\r\n    topfork: '\\u2ADA',\r\n    tosa: '\\u2929',\r\n    tprime: '\\u2034',\r\n    trade: '\\u2122',\r\n    triangle: '\\u25B5',\r\n    triangledown: '\\u25BF',\r\n    triangleleft: '\\u25C3',\r\n    trianglelefteq: '\\u22B4',\r\n    triangleq: '\\u225C',\r\n    triangleright: '\\u25B9',\r\n    trianglerighteq: '\\u22B5',\r\n    tridot: '\\u25EC',\r\n    trie: '\\u225C',\r\n    triminus: '\\u2A3A',\r\n    triplus: '\\u2A39',\r\n    trisb: '\\u29CD',\r\n    tritime: '\\u2A3B',\r\n    trpezium: '\\u23E2',\r\n    tscr: '\\uD835\\uDCC9',\r\n    tscy: '\\u0446',\r\n    tshcy: '\\u045B',\r\n    tstrok: '\\u0167',\r\n    twixt: '\\u226C',\r\n    twoheadleftarrow: '\\u219E',\r\n    twoheadrightarrow: '\\u21A0',\r\n    uArr: '\\u21D1',\r\n    uHar: '\\u2963',\r\n    uacute: '\\u00FA',\r\n    uarr: '\\u2191',\r\n    ubrcy: '\\u045E',\r\n    ubreve: '\\u016D',\r\n    ucirc: '\\u00FB',\r\n    ucy: '\\u0443',\r\n    udarr: '\\u21C5',\r\n    udblac: '\\u0171',\r\n    udhar: '\\u296E',\r\n    ufisht: '\\u297E',\r\n    ufr: '\\uD835\\uDD32',\r\n    ugrave: '\\u00F9',\r\n    uharl: '\\u21BF',\r\n    uharr: '\\u21BE',\r\n    uhblk: '\\u2580',\r\n    ulcorn: '\\u231C',\r\n    ulcorner: '\\u231C',\r\n    ulcrop: '\\u230F',\r\n    ultri: '\\u25F8',\r\n    umacr: '\\u016B',\r\n    uml: '\\u00A8',\r\n    uogon: '\\u0173',\r\n    uopf: '\\uD835\\uDD66',\r\n    uparrow: '\\u2191',\r\n    updownarrow: '\\u2195',\r\n    upharpoonleft: '\\u21BF',\r\n    upharpoonright: '\\u21BE',\r\n    uplus: '\\u228E',\r\n    upsi: '\\u03C5',\r\n    upsih: '\\u03D2',\r\n    upsilon: '\\u03C5',\r\n    upuparrows: '\\u21C8',\r\n    urcorn: '\\u231D',\r\n    urcorner: '\\u231D',\r\n    urcrop: '\\u230E',\r\n    uring: '\\u016F',\r\n    urtri: '\\u25F9',\r\n    uscr: '\\uD835\\uDCCA',\r\n    utdot: '\\u22F0',\r\n    utilde: '\\u0169',\r\n    utri: '\\u25B5',\r\n    utrif: '\\u25B4',\r\n    uuarr: '\\u21C8',\r\n    uuml: '\\u00FC',\r\n    uwangle: '\\u29A7',\r\n    vArr: '\\u21D5',\r\n    vBar: '\\u2AE8',\r\n    vBarv: '\\u2AE9',\r\n    vDash: '\\u22A8',\r\n    vangrt: '\\u299C',\r\n    varepsilon: '\\u03F5',\r\n    varkappa: '\\u03F0',\r\n    varnothing: '\\u2205',\r\n    varphi: '\\u03D5',\r\n    varpi: '\\u03D6',\r\n    varpropto: '\\u221D',\r\n    varr: '\\u2195',\r\n    varrho: '\\u03F1',\r\n    varsigma: '\\u03C2',\r\n    varsubsetneq: '\\u228A\\uFE00',\r\n    varsubsetneqq: '\\u2ACB\\uFE00',\r\n    varsupsetneq: '\\u228B\\uFE00',\r\n    varsupsetneqq: '\\u2ACC\\uFE00',\r\n    vartheta: '\\u03D1',\r\n    vartriangleleft: '\\u22B2',\r\n    vartriangleright: '\\u22B3',\r\n    vcy: '\\u0432',\r\n    vdash: '\\u22A2',\r\n    vee: '\\u2228',\r\n    veebar: '\\u22BB',\r\n    veeeq: '\\u225A',\r\n    vellip: '\\u22EE',\r\n    verbar: '\\u007C',\r\n    vert: '\\u007C',\r\n    vfr: '\\uD835\\uDD33',\r\n    vltri: '\\u22B2',\r\n    vnsub: '\\u2282\\u20D2',\r\n    vnsup: '\\u2283\\u20D2',\r\n    vopf: '\\uD835\\uDD67',\r\n    vprop: '\\u221D',\r\n    vrtri: '\\u22B3',\r\n    vscr: '\\uD835\\uDCCB',\r\n    vsubnE: '\\u2ACB\\uFE00',\r\n    vsubne: '\\u228A\\uFE00',\r\n    vsupnE: '\\u2ACC\\uFE00',\r\n    vsupne: '\\u228B\\uFE00',\r\n    vzigzag: '\\u299A',\r\n    wcirc: '\\u0175',\r\n    wedbar: '\\u2A5F',\r\n    wedge: '\\u2227',\r\n    wedgeq: '\\u2259',\r\n    weierp: '\\u2118',\r\n    wfr: '\\uD835\\uDD34',\r\n    wopf: '\\uD835\\uDD68',\r\n    wp: '\\u2118',\r\n    wr: '\\u2240',\r\n    wreath: '\\u2240',\r\n    wscr: '\\uD835\\uDCCC',\r\n    xcap: '\\u22C2',\r\n    xcirc: '\\u25EF',\r\n    xcup: '\\u22C3',\r\n    xdtri: '\\u25BD',\r\n    xfr: '\\uD835\\uDD35',\r\n    xhArr: '\\u27FA',\r\n    xharr: '\\u27F7',\r\n    xi: '\\u03BE',\r\n    xlArr: '\\u27F8',\r\n    xlarr: '\\u27F5',\r\n    xmap: '\\u27FC',\r\n    xnis: '\\u22FB',\r\n    xodot: '\\u2A00',\r\n    xopf: '\\uD835\\uDD69',\r\n    xoplus: '\\u2A01',\r\n    xotime: '\\u2A02',\r\n    xrArr: '\\u27F9',\r\n    xrarr: '\\u27F6',\r\n    xscr: '\\uD835\\uDCCD',\r\n    xsqcup: '\\u2A06',\r\n    xuplus: '\\u2A04',\r\n    xutri: '\\u25B3',\r\n    xvee: '\\u22C1',\r\n    xwedge: '\\u22C0',\r\n    yacute: '\\u00FD',\r\n    yacy: '\\u044F',\r\n    ycirc: '\\u0177',\r\n    ycy: '\\u044B',\r\n    yen: '\\u00A5',\r\n    yfr: '\\uD835\\uDD36',\r\n    yicy: '\\u0457',\r\n    yopf: '\\uD835\\uDD6A',\r\n    yscr: '\\uD835\\uDCCE',\r\n    yucy: '\\u044E',\r\n    yuml: '\\u00FF',\r\n    zacute: '\\u017A',\r\n    zcaron: '\\u017E',\r\n    zcy: '\\u0437',\r\n    zdot: '\\u017C',\r\n    zeetrf: '\\u2128',\r\n    zeta: '\\u03B6',\r\n    zfr: '\\uD835\\uDD37',\r\n    zhcy: '\\u0436',\r\n    zigrarr: '\\u21DD',\r\n    zopf: '\\uD835\\uDD6B',\r\n    zscr: '\\uD835\\uDCCF',\r\n    zwj: '\\u200D',\r\n    zwnj: '\\u200C'\r\n};\r\nconst decodeMap = {\r\n    '0': 65533,\r\n    '128': 8364,\r\n    '130': 8218,\r\n    '131': 402,\r\n    '132': 8222,\r\n    '133': 8230,\r\n    '134': 8224,\r\n    '135': 8225,\r\n    '136': 710,\r\n    '137': 8240,\r\n    '138': 352,\r\n    '139': 8249,\r\n    '140': 338,\r\n    '142': 381,\r\n    '145': 8216,\r\n    '146': 8217,\r\n    '147': 8220,\r\n    '148': 8221,\r\n    '149': 8226,\r\n    '150': 8211,\r\n    '151': 8212,\r\n    '152': 732,\r\n    '153': 8482,\r\n    '154': 353,\r\n    '155': 8250,\r\n    '156': 339,\r\n    '158': 382,\r\n    '159': 376\r\n};\r\nfunction decodeHTMLStrict(text) {\r\n    return text.replace(/&(?:[a-zA-Z]+|#[xX][\\da-fA-F]+|#\\d+);/g, (key) => {\r\n        if (key.charAt(1) === '#') {\r\n            const secondChar = key.charAt(2);\r\n            const codePoint = secondChar === 'X' || secondChar === 'x'\r\n                ? parseInt(key.slice(3), 16)\r\n                : parseInt(key.slice(2), 10);\r\n            return decodeCodePoint(codePoint);\r\n        }\r\n        return entities[key.slice(1, -1)] || key;\r\n    });\r\n}\r\nfunction decodeCodePoint(codePoint) {\r\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\r\n        return '\\uFFFD';\r\n    }\r\n    if (codePoint in decodeMap) {\r\n        codePoint = decodeMap[codePoint];\r\n    }\r\n    return String.fromCodePoint(codePoint);\r\n}\n\nfunction scanJSXAttributeValue(parser, context) {\r\n    parser.startPos = parser.tokenPos = parser.index;\r\n    parser.startColumn = parser.colPos = parser.column;\r\n    parser.startLine = parser.linePos = parser.line;\r\n    parser.token =\r\n        CharTypes[parser.currentChar] & 8192\r\n            ? scanJSXString(parser, context)\r\n            : scanSingleToken(parser, context, 0);\r\n    return parser.token;\r\n}\r\nfunction scanJSXString(parser, context) {\r\n    const quote = parser.currentChar;\r\n    let char = advanceChar(parser);\r\n    const start = parser.index;\r\n    while (char !== quote) {\r\n        if (parser.index >= parser.end)\r\n            report(parser, 14);\r\n        char = advanceChar(parser);\r\n    }\r\n    if (char !== quote)\r\n        report(parser, 14);\r\n    parser.tokenValue = parser.source.slice(start, parser.index);\r\n    advanceChar(parser);\r\n    if (context & 512)\r\n        parser.tokenRaw = parser.source.slice(parser.tokenPos, parser.index);\r\n    return 134283267;\r\n}\r\nfunction scanJSXToken(parser, context) {\r\n    parser.startPos = parser.tokenPos = parser.index;\r\n    parser.startColumn = parser.colPos = parser.column;\r\n    parser.startLine = parser.linePos = parser.line;\r\n    if (parser.index >= parser.end)\r\n        return (parser.token = 1048576);\r\n    const token = TokenLookup[parser.source.charCodeAt(parser.index)];\r\n    switch (token) {\r\n        case 8456258: {\r\n            advanceChar(parser);\r\n            if (parser.currentChar === 47) {\r\n                advanceChar(parser);\r\n                parser.token = 25;\r\n            }\r\n            else {\r\n                parser.token = 8456258;\r\n            }\r\n            break;\r\n        }\r\n        case 2162700: {\r\n            advanceChar(parser);\r\n            parser.token = 2162700;\r\n            break;\r\n        }\r\n        default: {\r\n            let state = 0;\r\n            while (parser.index < parser.end) {\r\n                const type = CharTypes[parser.source.charCodeAt(parser.index)];\r\n                if (type & 1024) {\r\n                    state |= 1 | 4;\r\n                    scanNewLine(parser);\r\n                }\r\n                else if (type & 2048) {\r\n                    consumeLineFeed(parser, state);\r\n                    state = (state & ~4) | 1;\r\n                }\r\n                else {\r\n                    advanceChar(parser);\r\n                }\r\n                if (CharTypes[parser.currentChar] & 16384)\r\n                    break;\r\n            }\r\n            const raw = parser.source.slice(parser.tokenPos, parser.index);\r\n            if (context & 512)\r\n                parser.tokenRaw = raw;\r\n            parser.tokenValue = decodeHTMLStrict(raw);\r\n            parser.token = 138;\r\n        }\r\n    }\r\n    return parser.token;\r\n}\r\nfunction scanJSXIdentifier(parser) {\r\n    if ((parser.token & 143360) === 143360) {\r\n        const { index } = parser;\r\n        let char = parser.currentChar;\r\n        while (CharTypes[char] & (32768 | 2)) {\r\n            char = advanceChar(parser);\r\n        }\r\n        parser.tokenValue += parser.source.slice(index, parser.index);\r\n    }\r\n    parser.token = 208897;\r\n    return parser.token;\r\n}\n\nfunction matchOrInsertSemicolon(parser, context, specDeviation) {\r\n    if ((parser.flags & 1) === 0 &&\r\n        (parser.token & 1048576) !== 1048576 &&\r\n        !specDeviation) {\r\n        report(parser, 28, KeywordDescTable[parser.token & 255]);\r\n    }\r\n    consumeOpt(parser, context, 1074790417);\r\n}\r\nfunction isValidStrictMode(parser, index, tokenPos, tokenValue) {\r\n    if (index - tokenPos < 13 && tokenValue === 'use strict') {\r\n        if ((parser.token & 1048576) === 1048576 || parser.flags & 1) {\r\n            return 1;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\nfunction optionalBit(parser, context, t) {\r\n    if (parser.token !== t)\r\n        return 0;\r\n    nextToken(parser, context);\r\n    return 1;\r\n}\r\nfunction consumeOpt(parser, context, t) {\r\n    if (parser.token !== t)\r\n        return false;\r\n    nextToken(parser, context);\r\n    return true;\r\n}\r\nfunction consume(parser, context, t) {\r\n    if (parser.token !== t)\r\n        report(parser, 23, KeywordDescTable[t & 255]);\r\n    nextToken(parser, context);\r\n}\r\nfunction reinterpretToPattern(state, node) {\r\n    switch (node.type) {\r\n        case 'ArrayExpression':\r\n            node.type = 'ArrayPattern';\r\n            const elements = node.elements;\r\n            for (let i = 0, n = elements.length; i < n; ++i) {\r\n                const element = elements[i];\r\n                if (element)\r\n                    reinterpretToPattern(state, element);\r\n            }\r\n            return;\r\n        case 'ObjectExpression':\r\n            node.type = 'ObjectPattern';\r\n            const properties = node.properties;\r\n            for (let i = 0, n = properties.length; i < n; ++i) {\r\n                reinterpretToPattern(state, properties[i]);\r\n            }\r\n            return;\r\n        case 'AssignmentExpression':\r\n            node.type = 'AssignmentPattern';\r\n            if (node.operator !== '=')\r\n                report(state, 69);\r\n            delete node.operator;\r\n            reinterpretToPattern(state, node.left);\r\n            return;\r\n        case 'Property':\r\n            reinterpretToPattern(state, node.value);\r\n            return;\r\n        case 'SpreadElement':\r\n            node.type = 'RestElement';\r\n            reinterpretToPattern(state, node.argument);\r\n    }\r\n}\r\nfunction validateBindingIdentifier(parser, context, kind, t, skipEvalArgCheck) {\r\n    if (context & 1024) {\r\n        if ((t & 36864) === 36864) {\r\n            report(parser, 115);\r\n        }\r\n        if (!skipEvalArgCheck && (t & 537079808) === 537079808) {\r\n            report(parser, 116);\r\n        }\r\n    }\r\n    if ((t & 20480) === 20480) {\r\n        report(parser, 100);\r\n    }\r\n    if (kind & (8 | 16) && t === 241739) {\r\n        report(parser, 98);\r\n    }\r\n    if (context & (4194304 | 2048) && t === 209008) {\r\n        report(parser, 96);\r\n    }\r\n    if (context & (2097152 | 1024) && t === 241773) {\r\n        report(parser, 95, 'yield');\r\n    }\r\n}\r\nfunction validateFunctionName(parser, context, t) {\r\n    if (context & 1024) {\r\n        if ((t & 36864) === 36864) {\r\n            report(parser, 115);\r\n        }\r\n        if ((t & 537079808) === 537079808) {\r\n            report(parser, 116);\r\n        }\r\n        if (t === 122) {\r\n            report(parser, 93);\r\n        }\r\n        if (t === 121) {\r\n            report(parser, 93);\r\n        }\r\n    }\r\n    if ((t & 20480) === 20480) {\r\n        report(parser, 100);\r\n    }\r\n    if (context & (4194304 | 2048) && t === 209008) {\r\n        report(parser, 96);\r\n    }\r\n    if (context & (2097152 | 1024) && t === 241773) {\r\n        report(parser, 95, 'yield');\r\n    }\r\n}\r\nfunction isStrictReservedWord(parser, context, t) {\r\n    if (t === 209008) {\r\n        if (context & (4194304 | 2048))\r\n            report(parser, 96);\r\n        parser.destructible |= 128;\r\n    }\r\n    if (t === 241773 && context & 2097152)\r\n        report(parser, 95, 'yield');\r\n    return ((t & 20480) === 20480 ||\r\n        (t & 36864) === 36864 ||\r\n        t == 122);\r\n}\r\nfunction isPropertyWithPrivateFieldKey(expr) {\r\n    return !expr.property ? false : expr.property.type === 'PrivateIdentifier';\r\n}\r\nfunction isValidLabel(parser, labels, name, isIterationStatement) {\r\n    while (labels) {\r\n        if (labels['$' + name]) {\r\n            if (isIterationStatement)\r\n                report(parser, 134);\r\n            return 1;\r\n        }\r\n        if (isIterationStatement && labels.loop)\r\n            isIterationStatement = 0;\r\n        labels = labels['$'];\r\n    }\r\n    return 0;\r\n}\r\nfunction validateAndDeclareLabel(parser, labels, name) {\r\n    let set = labels;\r\n    while (set) {\r\n        if (set['$' + name])\r\n            report(parser, 133, name);\r\n        set = set['$'];\r\n    }\r\n    labels['$' + name] = 1;\r\n}\r\nfunction finishNode(parser, context, start, line, column, node) {\r\n    if (context & 2) {\r\n        node.start = start;\r\n        node.end = parser.startPos;\r\n        node.range = [start, parser.startPos];\r\n    }\r\n    if (context & 4) {\r\n        node.loc = {\r\n            start: {\r\n                line,\r\n                column\r\n            },\r\n            end: {\r\n                line: parser.startLine,\r\n                column: parser.startColumn\r\n            }\r\n        };\r\n        if (parser.sourceFile) {\r\n            node.loc.source = parser.sourceFile;\r\n        }\r\n    }\r\n    return node;\r\n}\r\nfunction isEqualTagName(elementName) {\r\n    switch (elementName.type) {\r\n        case 'JSXIdentifier':\r\n            return elementName.name;\r\n        case 'JSXNamespacedName':\r\n            return elementName.namespace + ':' + elementName.name;\r\n        case 'JSXMemberExpression':\r\n            return isEqualTagName(elementName.object) + '.' + isEqualTagName(elementName.property);\r\n    }\r\n}\r\nfunction createArrowHeadParsingScope(parser, context, value) {\r\n    const scope = addChildScope(createScope(), 1024);\r\n    addBlockName(parser, context, scope, value, 1, 0);\r\n    return scope;\r\n}\r\nfunction recordScopeError(parser, type, ...params) {\r\n    const { index, line, column } = parser;\r\n    return {\r\n        type,\r\n        params,\r\n        index,\r\n        line,\r\n        column\r\n    };\r\n}\r\nfunction createScope() {\r\n    return {\r\n        parent: void 0,\r\n        type: 2\r\n    };\r\n}\r\nfunction addChildScope(parent, type) {\r\n    return {\r\n        parent,\r\n        type,\r\n        scopeError: void 0\r\n    };\r\n}\r\nfunction addVarOrBlock(parser, context, scope, name, kind, origin) {\r\n    if (kind & 4) {\r\n        addVarName(parser, context, scope, name, kind);\r\n    }\r\n    else {\r\n        addBlockName(parser, context, scope, name, kind, origin);\r\n    }\r\n    if (origin & 64) {\r\n        declareUnboundVariable(parser, name);\r\n    }\r\n}\r\nfunction addBlockName(parser, context, scope, name, kind, origin) {\r\n    const value = scope['#' + name];\r\n    if (value && (value & 2) === 0) {\r\n        if (kind & 1) {\r\n            scope.scopeError = recordScopeError(parser, 141, name);\r\n        }\r\n        else if (context & 256 &&\r\n            value & 64 &&\r\n            origin & 2) ;\r\n        else {\r\n            report(parser, 141, name);\r\n        }\r\n    }\r\n    if (scope.type & 128 &&\r\n        (scope.parent['#' + name] && (scope.parent['#' + name] & 2) === 0)) {\r\n        report(parser, 141, name);\r\n    }\r\n    if (scope.type & 1024 && value && (value & 2) === 0) {\r\n        if (kind & 1) {\r\n            scope.scopeError = recordScopeError(parser, 141, name);\r\n        }\r\n    }\r\n    if (scope.type & 64) {\r\n        if (scope.parent['#' + name] & 768)\r\n            report(parser, 154, name);\r\n    }\r\n    scope['#' + name] = kind;\r\n}\r\nfunction addVarName(parser, context, scope, name, kind) {\r\n    let currentScope = scope;\r\n    while (currentScope && (currentScope.type & 256) === 0) {\r\n        const value = currentScope['#' + name];\r\n        if (value & 248) {\r\n            if (context & 256 &&\r\n                (context & 1024) === 0 &&\r\n                ((kind & 128 && value & 68) ||\r\n                    (value & 128 && kind & 68))) ;\r\n            else {\r\n                report(parser, 141, name);\r\n            }\r\n        }\r\n        if (currentScope === scope) {\r\n            if (value & 1 && kind & 1) {\r\n                currentScope.scopeError = recordScopeError(parser, 141, name);\r\n            }\r\n        }\r\n        if (value & (512 | 256)) {\r\n            if ((value & 512) === 0 ||\r\n                (context & 256) === 0 ||\r\n                context & 1024) {\r\n                report(parser, 141, name);\r\n            }\r\n        }\r\n        currentScope['#' + name] = kind;\r\n        currentScope = currentScope.parent;\r\n    }\r\n}\r\nfunction declareUnboundVariable(parser, name) {\r\n    if (parser.exportedNames !== void 0 && name !== '') {\r\n        if (parser.exportedNames['#' + name]) {\r\n            report(parser, 142, name);\r\n        }\r\n        parser.exportedNames['#' + name] = 1;\r\n    }\r\n}\r\nfunction addBindingToExports(parser, name) {\r\n    if (parser.exportedBindings !== void 0 && name !== '') {\r\n        parser.exportedBindings['#' + name] = 1;\r\n    }\r\n}\r\nfunction pushComment(context, array) {\r\n    return function (type, value, start, end, loc) {\r\n        const comment = {\r\n            type,\r\n            value\r\n        };\r\n        if (context & 2) {\r\n            comment.start = start;\r\n            comment.end = end;\r\n            comment.range = [start, end];\r\n        }\r\n        if (context & 4) {\r\n            comment.loc = loc;\r\n        }\r\n        array.push(comment);\r\n    };\r\n}\r\nfunction pushToken(context, array) {\r\n    return function (token, start, end, loc) {\r\n        const tokens = {\r\n            token\r\n        };\r\n        if (context & 2) {\r\n            tokens.start = start;\r\n            tokens.end = end;\r\n            tokens.range = [start, end];\r\n        }\r\n        if (context & 4) {\r\n            tokens.loc = loc;\r\n        }\r\n        array.push(tokens);\r\n    };\r\n}\r\nfunction isValidIdentifier(context, t) {\r\n    if (context & (1024 | 2097152)) {\r\n        if (context & 2048 && t === 209008)\r\n            return false;\r\n        if (context & 2097152 && t === 241773)\r\n            return false;\r\n        return (t & 143360) === 143360 || (t & 12288) === 12288;\r\n    }\r\n    return ((t & 143360) === 143360 ||\r\n        (t & 12288) === 12288 ||\r\n        (t & 36864) === 36864);\r\n}\r\nfunction classifyIdentifier(parser, context, t, isArrow) {\r\n    if ((t & 537079808) === 537079808) {\r\n        if (context & 1024)\r\n            report(parser, 116);\r\n        if (isArrow)\r\n            parser.flags |= 512;\r\n    }\r\n    if (!isValidIdentifier(context, t))\r\n        report(parser, 0);\r\n}\n\nfunction create(source, sourceFile, onComment, onToken) {\r\n    return {\r\n        source,\r\n        flags: 0,\r\n        index: 0,\r\n        line: 1,\r\n        column: 0,\r\n        startPos: 0,\r\n        end: source.length,\r\n        tokenPos: 0,\r\n        startColumn: 0,\r\n        colPos: 0,\r\n        linePos: 1,\r\n        startLine: 1,\r\n        sourceFile,\r\n        tokenValue: '',\r\n        token: 1048576,\r\n        tokenRaw: '',\r\n        tokenRegExp: void 0,\r\n        currentChar: source.charCodeAt(0),\r\n        exportedNames: [],\r\n        exportedBindings: [],\r\n        assignable: 1,\r\n        destructible: 0,\r\n        onComment,\r\n        onToken,\r\n        leadingDecorators: []\r\n    };\r\n}\r\nfunction parseSource(source, options, context) {\r\n    let sourceFile = '';\r\n    let onComment;\r\n    let onToken;\r\n    if (options != null) {\r\n        if (options.module)\r\n            context |= 2048 | 1024;\r\n        if (options.next)\r\n            context |= 1;\r\n        if (options.loc)\r\n            context |= 4;\r\n        if (options.ranges)\r\n            context |= 2;\r\n        if (options.uniqueKeyInPattern)\r\n            context |= -2147483648;\r\n        if (options.lexical)\r\n            context |= 64;\r\n        if (options.webcompat)\r\n            context |= 256;\r\n        if (options.directives)\r\n            context |= 8 | 512;\r\n        if (options.globalReturn)\r\n            context |= 32;\r\n        if (options.raw)\r\n            context |= 512;\r\n        if (options.preserveParens)\r\n            context |= 128;\r\n        if (options.impliedStrict)\r\n            context |= 1024;\r\n        if (options.jsx)\r\n            context |= 16;\r\n        if (options.identifierPattern)\r\n            context |= 268435456;\r\n        if (options.specDeviation)\r\n            context |= 536870912;\r\n        if (options.source)\r\n            sourceFile = options.source;\r\n        if (options.onComment != null) {\r\n            onComment = Array.isArray(options.onComment) ? pushComment(context, options.onComment) : options.onComment;\r\n        }\r\n        if (options.onToken != null) {\r\n            onToken = Array.isArray(options.onToken) ? pushToken(context, options.onToken) : options.onToken;\r\n        }\r\n    }\r\n    const parser = create(source, sourceFile, onComment, onToken);\r\n    if (context & 1)\r\n        skipHashBang(parser);\r\n    const scope = context & 64 ? createScope() : void 0;\r\n    let body = [];\r\n    let sourceType = 'script';\r\n    if (context & 2048) {\r\n        sourceType = 'module';\r\n        body = parseModuleItemList(parser, context | 8192, scope);\r\n        if (scope) {\r\n            for (const key in parser.exportedBindings) {\r\n                if (key[0] === '#' && !scope[key])\r\n                    report(parser, 143, key.slice(1));\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        body = parseStatementList(parser, context | 8192, scope);\r\n    }\r\n    const node = {\r\n        type: 'Program',\r\n        sourceType,\r\n        body\r\n    };\r\n    if (context & 2) {\r\n        node.start = 0;\r\n        node.end = source.length;\r\n        node.range = [0, source.length];\r\n    }\r\n    if (context & 4) {\r\n        node.loc = {\r\n            start: { line: 1, column: 0 },\r\n            end: { line: parser.line, column: parser.column }\r\n        };\r\n        if (parser.sourceFile)\r\n            node.loc.source = sourceFile;\r\n    }\r\n    return node;\r\n}\r\nfunction parseStatementList(parser, context, scope) {\r\n    nextToken(parser, context | 32768 | 1073741824);\r\n    const statements = [];\r\n    while (parser.token === 134283267) {\r\n        const { index, tokenPos, tokenValue, linePos, colPos, token } = parser;\r\n        const expr = parseLiteral(parser, context);\r\n        if (isValidStrictMode(parser, index, tokenPos, tokenValue))\r\n            context |= 1024;\r\n        statements.push(parseDirective(parser, context, expr, token, tokenPos, linePos, colPos));\r\n    }\r\n    while (parser.token !== 1048576) {\r\n        statements.push(parseStatementListItem(parser, context, scope, 4, {}));\r\n    }\r\n    return statements;\r\n}\r\nfunction parseModuleItemList(parser, context, scope) {\r\n    nextToken(parser, context | 32768);\r\n    const statements = [];\r\n    if (context & 8) {\r\n        while (parser.token === 134283267) {\r\n            const { tokenPos, linePos, colPos, token } = parser;\r\n            statements.push(parseDirective(parser, context, parseLiteral(parser, context), token, tokenPos, linePos, colPos));\r\n        }\r\n    }\r\n    while (parser.token !== 1048576) {\r\n        statements.push(parseModuleItem(parser, context, scope));\r\n    }\r\n    return statements;\r\n}\r\nfunction parseModuleItem(parser, context, scope) {\r\n    parser.leadingDecorators = parseDecorators(parser, context);\r\n    let moduleItem;\r\n    switch (parser.token) {\r\n        case 20566:\r\n            moduleItem = parseExportDeclaration(parser, context, scope);\r\n            break;\r\n        case 86108:\r\n            moduleItem = parseImportDeclaration(parser, context, scope);\r\n            break;\r\n        default:\r\n            moduleItem = parseStatementListItem(parser, context, scope, 4, {});\r\n    }\r\n    if (parser.leadingDecorators.length) {\r\n        report(parser, 165);\r\n    }\r\n    return moduleItem;\r\n}\r\nfunction parseStatementListItem(parser, context, scope, origin, labels) {\r\n    const start = parser.tokenPos;\r\n    const line = parser.linePos;\r\n    const column = parser.colPos;\r\n    switch (parser.token) {\r\n        case 86106:\r\n            return parseFunctionDeclaration(parser, context, scope, origin, 1, 0, 0, start, line, column);\r\n        case 133:\r\n        case 86096:\r\n            return parseClassDeclaration(parser, context, scope, 0, start, line, column);\r\n        case 86092:\r\n            return parseLexicalDeclaration(parser, context, scope, 16, 0, start, line, column);\r\n        case 241739:\r\n            return parseLetIdentOrVarDeclarationStatement(parser, context, scope, origin, start, line, column);\r\n        case 20566:\r\n            report(parser, 101, 'export');\r\n        case 86108:\r\n            nextToken(parser, context);\r\n            switch (parser.token) {\r\n                case 67174411:\r\n                    return parseImportCallDeclaration(parser, context, start, line, column);\r\n                case 67108877:\r\n                    return parseImportMetaDeclaration(parser, context, start, line, column);\r\n                default:\r\n                    report(parser, 101, 'import');\r\n            }\r\n        case 209007:\r\n            return parseAsyncArrowOrAsyncFunctionDeclaration(parser, context, scope, origin, labels, 1, start, line, column);\r\n        default:\r\n            return parseStatement(parser, context, scope, origin, labels, 1, start, line, column);\r\n    }\r\n}\r\nfunction parseStatement(parser, context, scope, origin, labels, allowFuncDecl, start, line, column) {\r\n    switch (parser.token) {\r\n        case 86090:\r\n            return parseVariableStatement(parser, context, scope, 0, start, line, column);\r\n        case 20574:\r\n            return parseReturnStatement(parser, context, start, line, column);\r\n        case 20571:\r\n            return parseIfStatement(parser, context, scope, labels, start, line, column);\r\n        case 20569:\r\n            return parseForStatement(parser, context, scope, labels, start, line, column);\r\n        case 20564:\r\n            return parseDoWhileStatement(parser, context, scope, labels, start, line, column);\r\n        case 20580:\r\n            return parseWhileStatement(parser, context, scope, labels, start, line, column);\r\n        case 86112:\r\n            return parseSwitchStatement(parser, context, scope, labels, start, line, column);\r\n        case 1074790417:\r\n            return parseEmptyStatement(parser, context, start, line, column);\r\n        case 2162700:\r\n            return parseBlock(parser, context, scope ? addChildScope(scope, 2) : scope, labels, start, line, column);\r\n        case 86114:\r\n            return parseThrowStatement(parser, context, start, line, column);\r\n        case 20557:\r\n            return parseBreakStatement(parser, context, labels, start, line, column);\r\n        case 20561:\r\n            return parseContinueStatement(parser, context, labels, start, line, column);\r\n        case 20579:\r\n            return parseTryStatement(parser, context, scope, labels, start, line, column);\r\n        case 20581:\r\n            return parseWithStatement(parser, context, scope, labels, start, line, column);\r\n        case 20562:\r\n            return parseDebuggerStatement(parser, context, start, line, column);\r\n        case 209007:\r\n            return parseAsyncArrowOrAsyncFunctionDeclaration(parser, context, scope, origin, labels, 0, start, line, column);\r\n        case 20559:\r\n            report(parser, 157);\r\n        case 20568:\r\n            report(parser, 158);\r\n        case 86106:\r\n            report(parser, context & 1024\r\n                ? 74\r\n                : (context & 256) === 0\r\n                    ? 76\r\n                    : 75);\r\n        case 86096:\r\n            report(parser, 77);\r\n        default:\r\n            return parseExpressionOrLabelledStatement(parser, context, scope, origin, labels, allowFuncDecl, start, line, column);\r\n    }\r\n}\r\nfunction parseExpressionOrLabelledStatement(parser, context, scope, origin, labels, allowFuncDecl, start, line, column) {\r\n    const { tokenValue, token } = parser;\r\n    let expr;\r\n    switch (token) {\r\n        case 241739:\r\n            expr = parseIdentifier(parser, context, 0);\r\n            if (context & 1024)\r\n                report(parser, 83);\r\n            if (parser.token === 69271571)\r\n                report(parser, 82);\r\n            break;\r\n        default:\r\n            expr = parsePrimaryExpression(parser, context, 2, 0, 1, 0, 0, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n    }\r\n    if (token & 143360 && parser.token === 21) {\r\n        return parseLabelledStatement(parser, context, scope, origin, labels, tokenValue, expr, token, allowFuncDecl, start, line, column);\r\n    }\r\n    expr = parseMemberOrUpdateExpression(parser, context, expr, 0, 0, start, line, column);\r\n    expr = parseAssignmentExpression(parser, context, 0, 0, start, line, column, expr);\r\n    if (parser.token === 18) {\r\n        expr = parseSequenceExpression(parser, context, 0, start, line, column, expr);\r\n    }\r\n    return parseExpressionStatement(parser, context, expr, start, line, column);\r\n}\r\nfunction parseBlock(parser, context, scope, labels, start, line, column) {\r\n    const body = [];\r\n    consume(parser, context | 32768, 2162700);\r\n    while (parser.token !== 1074790415) {\r\n        body.push(parseStatementListItem(parser, context, scope, 2, { $: labels }));\r\n    }\r\n    consume(parser, context | 32768, 1074790415);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'BlockStatement',\r\n        body\r\n    });\r\n}\r\nfunction parseReturnStatement(parser, context, start, line, column) {\r\n    if ((context & 32) === 0 && context & 8192)\r\n        report(parser, 90);\r\n    nextToken(parser, context | 32768);\r\n    const argument = parser.flags & 1 || parser.token & 1048576\r\n        ? null\r\n        : parseExpressions(parser, context, 0, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n    matchOrInsertSemicolon(parser, context | 32768);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'ReturnStatement',\r\n        argument\r\n    });\r\n}\r\nfunction parseExpressionStatement(parser, context, expression, start, line, column) {\r\n    matchOrInsertSemicolon(parser, context | 32768);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'ExpressionStatement',\r\n        expression\r\n    });\r\n}\r\nfunction parseLabelledStatement(parser, context, scope, origin, labels, value, expr, token, allowFuncDecl, start, line, column) {\r\n    validateBindingIdentifier(parser, context, 0, token, 1);\r\n    validateAndDeclareLabel(parser, labels, value);\r\n    nextToken(parser, context | 32768);\r\n    const body = allowFuncDecl &&\r\n        (context & 1024) === 0 &&\r\n        context & 256 &&\r\n        parser.token === 86106\r\n        ? parseFunctionDeclaration(parser, context, addChildScope(scope, 2), origin, 0, 0, 0, parser.tokenPos, parser.linePos, parser.colPos)\r\n        : parseStatement(parser, context, scope, origin, labels, allowFuncDecl, parser.tokenPos, parser.linePos, parser.colPos);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'LabeledStatement',\r\n        label: expr,\r\n        body\r\n    });\r\n}\r\nfunction parseAsyncArrowOrAsyncFunctionDeclaration(parser, context, scope, origin, labels, allowFuncDecl, start, line, column) {\r\n    const { token, tokenValue } = parser;\r\n    let expr = parseIdentifier(parser, context, 0);\r\n    if (parser.token === 21) {\r\n        return parseLabelledStatement(parser, context, scope, origin, labels, tokenValue, expr, token, 1, start, line, column);\r\n    }\r\n    const asyncNewLine = parser.flags & 1;\r\n    if (!asyncNewLine) {\r\n        if (parser.token === 86106) {\r\n            if (!allowFuncDecl)\r\n                report(parser, 120);\r\n            return parseFunctionDeclaration(parser, context, scope, origin, 1, 0, 1, start, line, column);\r\n        }\r\n        if ((parser.token & 143360) === 143360) {\r\n            expr = parseAsyncArrowAfterIdent(parser, context, 1, start, line, column);\r\n            if (parser.token === 18)\r\n                expr = parseSequenceExpression(parser, context, 0, start, line, column, expr);\r\n            return parseExpressionStatement(parser, context, expr, start, line, column);\r\n        }\r\n    }\r\n    if (parser.token === 67174411) {\r\n        expr = parseAsyncArrowOrCallExpression(parser, context, expr, 1, 1, 0, asyncNewLine, start, line, column);\r\n    }\r\n    else {\r\n        if (parser.token === 10) {\r\n            classifyIdentifier(parser, context, token, 1);\r\n            expr = parseArrowFromIdentifier(parser, context, parser.tokenValue, expr, 0, 1, 0, start, line, column);\r\n        }\r\n        parser.assignable = 1;\r\n    }\r\n    expr = parseMemberOrUpdateExpression(parser, context, expr, 0, 0, start, line, column);\r\n    if (parser.token === 18)\r\n        expr = parseSequenceExpression(parser, context, 0, start, line, column, expr);\r\n    expr = parseAssignmentExpression(parser, context, 0, 0, start, line, column, expr);\r\n    parser.assignable = 1;\r\n    return parseExpressionStatement(parser, context, expr, start, line, column);\r\n}\r\nfunction parseDirective(parser, context, expression, token, start, line, column) {\r\n    if (token !== 1074790417) {\r\n        parser.assignable = 2;\r\n        expression = parseMemberOrUpdateExpression(parser, context, expression, 0, 0, start, line, column);\r\n        if (parser.token !== 1074790417) {\r\n            expression = parseAssignmentExpression(parser, context, 0, 0, start, line, column, expression);\r\n            if (parser.token === 18) {\r\n                expression = parseSequenceExpression(parser, context, 0, start, line, column, expression);\r\n            }\r\n        }\r\n        matchOrInsertSemicolon(parser, context | 32768);\r\n    }\r\n    return context & 8 && expression.type === 'Literal' && typeof expression.value === 'string'\r\n        ? finishNode(parser, context, start, line, column, {\r\n            type: 'ExpressionStatement',\r\n            expression,\r\n            directive: expression.raw.slice(1, -1)\r\n        })\r\n        : finishNode(parser, context, start, line, column, {\r\n            type: 'ExpressionStatement',\r\n            expression\r\n        });\r\n}\r\nfunction parseEmptyStatement(parser, context, start, line, column) {\r\n    nextToken(parser, context | 32768);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'EmptyStatement'\r\n    });\r\n}\r\nfunction parseThrowStatement(parser, context, start, line, column) {\r\n    nextToken(parser, context | 32768);\r\n    if (parser.flags & 1)\r\n        report(parser, 88);\r\n    const argument = parseExpressions(parser, context, 0, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n    matchOrInsertSemicolon(parser, context | 32768);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'ThrowStatement',\r\n        argument\r\n    });\r\n}\r\nfunction parseIfStatement(parser, context, scope, labels, start, line, column) {\r\n    nextToken(parser, context);\r\n    consume(parser, context | 32768, 67174411);\r\n    parser.assignable = 1;\r\n    const test = parseExpressions(parser, context, 0, 1, parser.tokenPos, parser.line, parser.colPos);\r\n    consume(parser, context | 32768, 16);\r\n    const consequent = parseConsequentOrAlternative(parser, context, scope, labels, parser.tokenPos, parser.linePos, parser.colPos);\r\n    let alternate = null;\r\n    if (parser.token === 20565) {\r\n        nextToken(parser, context | 32768);\r\n        alternate = parseConsequentOrAlternative(parser, context, scope, labels, parser.tokenPos, parser.linePos, parser.colPos);\r\n    }\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'IfStatement',\r\n        test,\r\n        consequent,\r\n        alternate\r\n    });\r\n}\r\nfunction parseConsequentOrAlternative(parser, context, scope, labels, start, line, column) {\r\n    return context & 1024 ||\r\n        (context & 256) === 0 ||\r\n        parser.token !== 86106\r\n        ? parseStatement(parser, context, scope, 0, { $: labels }, 0, parser.tokenPos, parser.linePos, parser.colPos)\r\n        : parseFunctionDeclaration(parser, context, addChildScope(scope, 2), 0, 0, 0, 0, start, line, column);\r\n}\r\nfunction parseSwitchStatement(parser, context, scope, labels, start, line, column) {\r\n    nextToken(parser, context);\r\n    consume(parser, context | 32768, 67174411);\r\n    const discriminant = parseExpressions(parser, context, 0, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n    consume(parser, context, 16);\r\n    consume(parser, context, 2162700);\r\n    const cases = [];\r\n    let seenDefault = 0;\r\n    if (scope)\r\n        scope = addChildScope(scope, 8);\r\n    while (parser.token !== 1074790415) {\r\n        const { tokenPos, linePos, colPos } = parser;\r\n        let test = null;\r\n        const consequent = [];\r\n        if (consumeOpt(parser, context | 32768, 20558)) {\r\n            test = parseExpressions(parser, context, 0, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n        }\r\n        else {\r\n            consume(parser, context | 32768, 20563);\r\n            if (seenDefault)\r\n                report(parser, 87);\r\n            seenDefault = 1;\r\n        }\r\n        consume(parser, context | 32768, 21);\r\n        while (parser.token !== 20558 &&\r\n            parser.token !== 1074790415 &&\r\n            parser.token !== 20563) {\r\n            consequent.push(parseStatementListItem(parser, context | 4096, scope, 2, {\r\n                $: labels\r\n            }));\r\n        }\r\n        cases.push(finishNode(parser, context, tokenPos, linePos, colPos, {\r\n            type: 'SwitchCase',\r\n            test,\r\n            consequent\r\n        }));\r\n    }\r\n    consume(parser, context | 32768, 1074790415);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'SwitchStatement',\r\n        discriminant,\r\n        cases\r\n    });\r\n}\r\nfunction parseWhileStatement(parser, context, scope, labels, start, line, column) {\r\n    nextToken(parser, context);\r\n    consume(parser, context | 32768, 67174411);\r\n    const test = parseExpressions(parser, context, 0, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n    consume(parser, context | 32768, 16);\r\n    const body = parseIterationStatementBody(parser, context, scope, labels);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'WhileStatement',\r\n        test,\r\n        body\r\n    });\r\n}\r\nfunction parseIterationStatementBody(parser, context, scope, labels) {\r\n    return parseStatement(parser, ((context | 134217728) ^ 134217728) | 131072, scope, 0, { loop: 1, $: labels }, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n}\r\nfunction parseContinueStatement(parser, context, labels, start, line, column) {\r\n    if ((context & 131072) === 0)\r\n        report(parser, 66);\r\n    nextToken(parser, context);\r\n    let label = null;\r\n    if ((parser.flags & 1) === 0 && parser.token & 143360) {\r\n        const { tokenValue } = parser;\r\n        label = parseIdentifier(parser, context | 32768, 0);\r\n        if (!isValidLabel(parser, labels, tokenValue, 1))\r\n            report(parser, 135, tokenValue);\r\n    }\r\n    matchOrInsertSemicolon(parser, context | 32768);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'ContinueStatement',\r\n        label\r\n    });\r\n}\r\nfunction parseBreakStatement(parser, context, labels, start, line, column) {\r\n    nextToken(parser, context | 32768);\r\n    let label = null;\r\n    if ((parser.flags & 1) === 0 && parser.token & 143360) {\r\n        const { tokenValue } = parser;\r\n        label = parseIdentifier(parser, context | 32768, 0);\r\n        if (!isValidLabel(parser, labels, tokenValue, 0))\r\n            report(parser, 135, tokenValue);\r\n    }\r\n    else if ((context & (4096 | 131072)) === 0) {\r\n        report(parser, 67);\r\n    }\r\n    matchOrInsertSemicolon(parser, context | 32768);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'BreakStatement',\r\n        label\r\n    });\r\n}\r\nfunction parseWithStatement(parser, context, scope, labels, start, line, column) {\r\n    nextToken(parser, context);\r\n    if (context & 1024)\r\n        report(parser, 89);\r\n    consume(parser, context | 32768, 67174411);\r\n    const object = parseExpressions(parser, context, 0, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n    consume(parser, context | 32768, 16);\r\n    const body = parseStatement(parser, context, scope, 2, labels, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'WithStatement',\r\n        object,\r\n        body\r\n    });\r\n}\r\nfunction parseDebuggerStatement(parser, context, start, line, column) {\r\n    nextToken(parser, context | 32768);\r\n    matchOrInsertSemicolon(parser, context | 32768);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'DebuggerStatement'\r\n    });\r\n}\r\nfunction parseTryStatement(parser, context, scope, labels, start, line, column) {\r\n    nextToken(parser, context | 32768);\r\n    const firstScope = scope ? addChildScope(scope, 32) : void 0;\r\n    const block = parseBlock(parser, context, firstScope, { $: labels }, parser.tokenPos, parser.linePos, parser.colPos);\r\n    const { tokenPos, linePos, colPos } = parser;\r\n    const handler = consumeOpt(parser, context | 32768, 20559)\r\n        ? parseCatchBlock(parser, context, scope, labels, tokenPos, linePos, colPos)\r\n        : null;\r\n    let finalizer = null;\r\n    if (parser.token === 20568) {\r\n        nextToken(parser, context | 32768);\r\n        const finalizerScope = firstScope ? addChildScope(scope, 4) : void 0;\r\n        finalizer = parseBlock(parser, context, finalizerScope, { $: labels }, parser.tokenPos, parser.linePos, parser.colPos);\r\n    }\r\n    if (!handler && !finalizer) {\r\n        report(parser, 86);\r\n    }\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'TryStatement',\r\n        block,\r\n        handler,\r\n        finalizer\r\n    });\r\n}\r\nfunction parseCatchBlock(parser, context, scope, labels, start, line, column) {\r\n    let param = null;\r\n    let additionalScope = scope;\r\n    if (consumeOpt(parser, context, 67174411)) {\r\n        if (scope)\r\n            scope = addChildScope(scope, 4);\r\n        param = parseBindingPattern(parser, context, scope, (parser.token & 2097152) === 2097152\r\n            ? 256\r\n            : 512, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n        if (parser.token === 18) {\r\n            report(parser, 84);\r\n        }\r\n        else if (parser.token === 1077936157) {\r\n            report(parser, 85);\r\n        }\r\n        consume(parser, context | 32768, 16);\r\n        if (scope)\r\n            additionalScope = addChildScope(scope, 64);\r\n    }\r\n    const body = parseBlock(parser, context, additionalScope, { $: labels }, parser.tokenPos, parser.linePos, parser.colPos);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'CatchClause',\r\n        param,\r\n        body\r\n    });\r\n}\r\nfunction parseStaticBlock(parser, context, scope, start, line, column) {\r\n    if (scope)\r\n        scope = addChildScope(scope, 2);\r\n    const ctorContext = 16384 | 524288;\r\n    context = ((context | ctorContext) ^ ctorContext) | 262144;\r\n    const { body } = parseBlock(parser, context, scope, {}, start, line, column);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'StaticBlock',\r\n        body\r\n    });\r\n}\r\nfunction parseDoWhileStatement(parser, context, scope, labels, start, line, column) {\r\n    nextToken(parser, context | 32768);\r\n    const body = parseIterationStatementBody(parser, context, scope, labels);\r\n    consume(parser, context, 20580);\r\n    consume(parser, context | 32768, 67174411);\r\n    const test = parseExpressions(parser, context, 0, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n    consume(parser, context | 32768, 16);\r\n    consumeOpt(parser, context, 1074790417);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'DoWhileStatement',\r\n        body,\r\n        test\r\n    });\r\n}\r\nfunction parseLetIdentOrVarDeclarationStatement(parser, context, scope, origin, start, line, column) {\r\n    const { token, tokenValue } = parser;\r\n    let expr = parseIdentifier(parser, context, 0);\r\n    if (parser.token & (143360 | 2097152)) {\r\n        const declarations = parseVariableDeclarationList(parser, context, scope, 8, 0);\r\n        matchOrInsertSemicolon(parser, context | 32768);\r\n        return finishNode(parser, context, start, line, column, {\r\n            type: 'VariableDeclaration',\r\n            kind: 'let',\r\n            declarations\r\n        });\r\n    }\r\n    parser.assignable = 1;\r\n    if (context & 1024)\r\n        report(parser, 83);\r\n    if (parser.token === 21) {\r\n        return parseLabelledStatement(parser, context, scope, origin, {}, tokenValue, expr, token, 0, start, line, column);\r\n    }\r\n    if (parser.token === 10) {\r\n        let scope = void 0;\r\n        if (context & 64)\r\n            scope = createArrowHeadParsingScope(parser, context, tokenValue);\r\n        parser.flags = (parser.flags | 128) ^ 128;\r\n        expr = parseArrowFunctionExpression(parser, context, scope, [expr], 0, start, line, column);\r\n    }\r\n    else {\r\n        expr = parseMemberOrUpdateExpression(parser, context, expr, 0, 0, start, line, column);\r\n        expr = parseAssignmentExpression(parser, context, 0, 0, start, line, column, expr);\r\n    }\r\n    if (parser.token === 18) {\r\n        expr = parseSequenceExpression(parser, context, 0, start, line, column, expr);\r\n    }\r\n    return parseExpressionStatement(parser, context, expr, start, line, column);\r\n}\r\nfunction parseLexicalDeclaration(parser, context, scope, kind, origin, start, line, column) {\r\n    nextToken(parser, context);\r\n    const declarations = parseVariableDeclarationList(parser, context, scope, kind, origin);\r\n    matchOrInsertSemicolon(parser, context | 32768);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'VariableDeclaration',\r\n        kind: kind & 8 ? 'let' : 'const',\r\n        declarations\r\n    });\r\n}\r\nfunction parseVariableStatement(parser, context, scope, origin, start, line, column) {\r\n    nextToken(parser, context);\r\n    const declarations = parseVariableDeclarationList(parser, context, scope, 4, origin);\r\n    matchOrInsertSemicolon(parser, context | 32768);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'VariableDeclaration',\r\n        kind: 'var',\r\n        declarations\r\n    });\r\n}\r\nfunction parseVariableDeclarationList(parser, context, scope, kind, origin) {\r\n    let bindingCount = 1;\r\n    const list = [parseVariableDeclaration(parser, context, scope, kind, origin)];\r\n    while (consumeOpt(parser, context, 18)) {\r\n        bindingCount++;\r\n        list.push(parseVariableDeclaration(parser, context, scope, kind, origin));\r\n    }\r\n    if (bindingCount > 1 && origin & 32 && parser.token & 262144) {\r\n        report(parser, 59, KeywordDescTable[parser.token & 255]);\r\n    }\r\n    return list;\r\n}\r\nfunction parseVariableDeclaration(parser, context, scope, kind, origin) {\r\n    const { token, tokenPos, linePos, colPos } = parser;\r\n    let init = null;\r\n    const id = parseBindingPattern(parser, context, scope, kind, origin, tokenPos, linePos, colPos);\r\n    if (parser.token === 1077936157) {\r\n        nextToken(parser, context | 32768);\r\n        init = parseExpression(parser, context, 1, 0, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n        if (origin & 32 || (token & 2097152) === 0) {\r\n            if (parser.token === 274549 ||\r\n                (parser.token === 8738868 &&\r\n                    (token & 2097152 || (kind & 4) === 0 || context & 1024))) {\r\n                reportMessageAt(tokenPos, parser.line, parser.index - 3, 58, parser.token === 274549 ? 'of' : 'in');\r\n            }\r\n        }\r\n    }\r\n    else if ((kind & 16 || (token & 2097152) > 0) &&\r\n        (parser.token & 262144) !== 262144) {\r\n        report(parser, 57, kind & 16 ? 'const' : 'destructuring');\r\n    }\r\n    return finishNode(parser, context, tokenPos, linePos, colPos, {\r\n        type: 'VariableDeclarator',\r\n        id,\r\n        init\r\n    });\r\n}\r\nfunction parseForStatement(parser, context, scope, labels, start, line, column) {\r\n    nextToken(parser, context);\r\n    const forAwait = ((context & 4194304) > 0 || ((context & 2048) > 0 && (context & 8192) > 0)) &&\r\n        consumeOpt(parser, context, 209008);\r\n    consume(parser, context | 32768, 67174411);\r\n    if (scope)\r\n        scope = addChildScope(scope, 1);\r\n    let test = null;\r\n    let update = null;\r\n    let destructible = 0;\r\n    let init = null;\r\n    let isVarDecl = parser.token === 86090 || parser.token === 241739 || parser.token === 86092;\r\n    let right;\r\n    const { token, tokenPos, linePos, colPos } = parser;\r\n    if (isVarDecl) {\r\n        if (token === 241739) {\r\n            init = parseIdentifier(parser, context, 0);\r\n            if (parser.token & (143360 | 2097152)) {\r\n                if (parser.token === 8738868) {\r\n                    if (context & 1024)\r\n                        report(parser, 65);\r\n                }\r\n                else {\r\n                    init = finishNode(parser, context, tokenPos, linePos, colPos, {\r\n                        type: 'VariableDeclaration',\r\n                        kind: 'let',\r\n                        declarations: parseVariableDeclarationList(parser, context | 134217728, scope, 8, 32)\r\n                    });\r\n                }\r\n                parser.assignable = 1;\r\n            }\r\n            else if (context & 1024) {\r\n                report(parser, 65);\r\n            }\r\n            else {\r\n                isVarDecl = false;\r\n                parser.assignable = 1;\r\n                init = parseMemberOrUpdateExpression(parser, context, init, 0, 0, tokenPos, linePos, colPos);\r\n                if (parser.token === 274549)\r\n                    report(parser, 112);\r\n            }\r\n        }\r\n        else {\r\n            nextToken(parser, context);\r\n            init = finishNode(parser, context, tokenPos, linePos, colPos, token === 86090\r\n                ? {\r\n                    type: 'VariableDeclaration',\r\n                    kind: 'var',\r\n                    declarations: parseVariableDeclarationList(parser, context | 134217728, scope, 4, 32)\r\n                }\r\n                : {\r\n                    type: 'VariableDeclaration',\r\n                    kind: 'const',\r\n                    declarations: parseVariableDeclarationList(parser, context | 134217728, scope, 16, 32)\r\n                });\r\n            parser.assignable = 1;\r\n        }\r\n    }\r\n    else if (token === 1074790417) {\r\n        if (forAwait)\r\n            report(parser, 80);\r\n    }\r\n    else if ((token & 2097152) === 2097152) {\r\n        init =\r\n            token === 2162700\r\n                ? parseObjectLiteralOrPattern(parser, context, void 0, 1, 0, 0, 2, 32, tokenPos, linePos, colPos)\r\n                : parseArrayExpressionOrPattern(parser, context, void 0, 1, 0, 0, 2, 32, tokenPos, linePos, colPos);\r\n        destructible = parser.destructible;\r\n        if (context & 256 && destructible & 64) {\r\n            report(parser, 61);\r\n        }\r\n        parser.assignable =\r\n            destructible & 16 ? 2 : 1;\r\n        init = parseMemberOrUpdateExpression(parser, context | 134217728, init, 0, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n    }\r\n    else {\r\n        init = parseLeftHandSideExpression(parser, context | 134217728, 1, 0, 1, tokenPos, linePos, colPos);\r\n    }\r\n    if ((parser.token & 262144) === 262144) {\r\n        if (parser.token === 274549) {\r\n            if (parser.assignable & 2)\r\n                report(parser, 78, forAwait ? 'await' : 'of');\r\n            reinterpretToPattern(parser, init);\r\n            nextToken(parser, context | 32768);\r\n            right = parseExpression(parser, context, 1, 0, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n            consume(parser, context | 32768, 16);\r\n            const body = parseIterationStatementBody(parser, context, scope, labels);\r\n            return finishNode(parser, context, start, line, column, {\r\n                type: 'ForOfStatement',\r\n                left: init,\r\n                right,\r\n                body,\r\n                await: forAwait\r\n            });\r\n        }\r\n        if (parser.assignable & 2)\r\n            report(parser, 78, 'in');\r\n        reinterpretToPattern(parser, init);\r\n        nextToken(parser, context | 32768);\r\n        if (forAwait)\r\n            report(parser, 80);\r\n        right = parseExpressions(parser, context, 0, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n        consume(parser, context | 32768, 16);\r\n        const body = parseIterationStatementBody(parser, context, scope, labels);\r\n        return finishNode(parser, context, start, line, column, {\r\n            type: 'ForInStatement',\r\n            body,\r\n            left: init,\r\n            right\r\n        });\r\n    }\r\n    if (forAwait)\r\n        report(parser, 80);\r\n    if (!isVarDecl) {\r\n        if (destructible & 8 && parser.token !== 1077936157) {\r\n            report(parser, 78, 'loop');\r\n        }\r\n        init = parseAssignmentExpression(parser, context | 134217728, 0, 0, tokenPos, linePos, colPos, init);\r\n    }\r\n    if (parser.token === 18)\r\n        init = parseSequenceExpression(parser, context, 0, parser.tokenPos, parser.linePos, parser.colPos, init);\r\n    consume(parser, context | 32768, 1074790417);\r\n    if (parser.token !== 1074790417)\r\n        test = parseExpressions(parser, context, 0, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n    consume(parser, context | 32768, 1074790417);\r\n    if (parser.token !== 16)\r\n        update = parseExpressions(parser, context, 0, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n    consume(parser, context | 32768, 16);\r\n    const body = parseIterationStatementBody(parser, context, scope, labels);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'ForStatement',\r\n        init,\r\n        test,\r\n        update,\r\n        body\r\n    });\r\n}\r\nfunction parseRestrictedIdentifier(parser, context, scope) {\r\n    if (!isValidIdentifier(context, parser.token))\r\n        report(parser, 115);\r\n    if ((parser.token & 537079808) === 537079808)\r\n        report(parser, 116);\r\n    if (scope)\r\n        addBlockName(parser, context, scope, parser.tokenValue, 8, 0);\r\n    return parseIdentifier(parser, context, 0);\r\n}\r\nfunction parseImportDeclaration(parser, context, scope) {\r\n    const start = parser.tokenPos;\r\n    const line = parser.linePos;\r\n    const column = parser.colPos;\r\n    nextToken(parser, context);\r\n    let source = null;\r\n    const { tokenPos, linePos, colPos } = parser;\r\n    let specifiers = [];\r\n    if (parser.token === 134283267) {\r\n        source = parseLiteral(parser, context);\r\n    }\r\n    else {\r\n        if (parser.token & 143360) {\r\n            const local = parseRestrictedIdentifier(parser, context, scope);\r\n            specifiers = [\r\n                finishNode(parser, context, tokenPos, linePos, colPos, {\r\n                    type: 'ImportDefaultSpecifier',\r\n                    local\r\n                })\r\n            ];\r\n            if (consumeOpt(parser, context, 18)) {\r\n                switch (parser.token) {\r\n                    case 8457014:\r\n                        specifiers.push(parseImportNamespaceSpecifier(parser, context, scope));\r\n                        break;\r\n                    case 2162700:\r\n                        parseImportSpecifierOrNamedImports(parser, context, scope, specifiers);\r\n                        break;\r\n                    default:\r\n                        report(parser, 105);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            switch (parser.token) {\r\n                case 8457014:\r\n                    specifiers = [parseImportNamespaceSpecifier(parser, context, scope)];\r\n                    break;\r\n                case 2162700:\r\n                    parseImportSpecifierOrNamedImports(parser, context, scope, specifiers);\r\n                    break;\r\n                case 67174411:\r\n                    return parseImportCallDeclaration(parser, context, start, line, column);\r\n                case 67108877:\r\n                    return parseImportMetaDeclaration(parser, context, start, line, column);\r\n                default:\r\n                    report(parser, 28, KeywordDescTable[parser.token & 255]);\r\n            }\r\n        }\r\n        source = parseModuleSpecifier(parser, context);\r\n    }\r\n    matchOrInsertSemicolon(parser, context | 32768);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'ImportDeclaration',\r\n        specifiers,\r\n        source\r\n    });\r\n}\r\nfunction parseImportNamespaceSpecifier(parser, context, scope) {\r\n    const { tokenPos, linePos, colPos } = parser;\r\n    nextToken(parser, context);\r\n    consume(parser, context, 77934);\r\n    if ((parser.token & 134217728) === 134217728) {\r\n        reportMessageAt(tokenPos, parser.line, parser.index, 28, KeywordDescTable[parser.token & 255]);\r\n    }\r\n    return finishNode(parser, context, tokenPos, linePos, colPos, {\r\n        type: 'ImportNamespaceSpecifier',\r\n        local: parseRestrictedIdentifier(parser, context, scope)\r\n    });\r\n}\r\nfunction parseModuleSpecifier(parser, context) {\r\n    consumeOpt(parser, context, 12404);\r\n    if (parser.token !== 134283267)\r\n        report(parser, 103, 'Import');\r\n    return parseLiteral(parser, context);\r\n}\r\nfunction parseImportSpecifierOrNamedImports(parser, context, scope, specifiers) {\r\n    nextToken(parser, context);\r\n    while (parser.token & 143360) {\r\n        let { token, tokenValue, tokenPos, linePos, colPos } = parser;\r\n        const imported = parseIdentifier(parser, context, 0);\r\n        let local;\r\n        if (consumeOpt(parser, context, 77934)) {\r\n            if ((parser.token & 134217728) === 134217728 || parser.token === 18) {\r\n                report(parser, 104);\r\n            }\r\n            else {\r\n                validateBindingIdentifier(parser, context, 16, parser.token, 0);\r\n            }\r\n            tokenValue = parser.tokenValue;\r\n            local = parseIdentifier(parser, context, 0);\r\n        }\r\n        else {\r\n            validateBindingIdentifier(parser, context, 16, token, 0);\r\n            local = imported;\r\n        }\r\n        if (scope)\r\n            addBlockName(parser, context, scope, tokenValue, 8, 0);\r\n        specifiers.push(finishNode(parser, context, tokenPos, linePos, colPos, {\r\n            type: 'ImportSpecifier',\r\n            local,\r\n            imported\r\n        }));\r\n        if (parser.token !== 1074790415)\r\n            consume(parser, context, 18);\r\n    }\r\n    consume(parser, context, 1074790415);\r\n    return specifiers;\r\n}\r\nfunction parseImportMetaDeclaration(parser, context, start, line, column) {\r\n    let expr = parseImportMetaExpression(parser, context, finishNode(parser, context, start, line, column, {\r\n        type: 'Identifier',\r\n        name: 'import'\r\n    }), start, line, column);\r\n    expr = parseMemberOrUpdateExpression(parser, context, expr, 0, 0, start, line, column);\r\n    expr = parseAssignmentExpression(parser, context, 0, 0, start, line, column, expr);\r\n    return parseExpressionStatement(parser, context, expr, start, line, column);\r\n}\r\nfunction parseImportCallDeclaration(parser, context, start, line, column) {\r\n    let expr = parseImportExpression(parser, context, 0, start, line, column);\r\n    expr = parseMemberOrUpdateExpression(parser, context, expr, 0, 0, start, line, column);\r\n    if (parser.token === 18) {\r\n        expr = parseSequenceExpression(parser, context, 0, start, line, column, expr);\r\n    }\r\n    return parseExpressionStatement(parser, context, expr, start, line, column);\r\n}\r\nfunction parseExportDeclaration(parser, context, scope) {\r\n    const start = parser.tokenPos;\r\n    const line = parser.linePos;\r\n    const column = parser.colPos;\r\n    nextToken(parser, context | 32768);\r\n    const specifiers = [];\r\n    let declaration = null;\r\n    let source = null;\r\n    let key;\r\n    if (consumeOpt(parser, context | 32768, 20563)) {\r\n        switch (parser.token) {\r\n            case 86106: {\r\n                declaration = parseFunctionDeclaration(parser, context, scope, 4, 1, 1, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n                break;\r\n            }\r\n            case 133:\r\n            case 86096:\r\n                declaration = parseClassDeclaration(parser, context, scope, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n                break;\r\n            case 209007:\r\n                const { tokenPos, linePos, colPos } = parser;\r\n                declaration = parseIdentifier(parser, context, 0);\r\n                const { flags } = parser;\r\n                if ((flags & 1) === 0) {\r\n                    if (parser.token === 86106) {\r\n                        declaration = parseFunctionDeclaration(parser, context, scope, 4, 1, 1, 1, tokenPos, linePos, colPos);\r\n                    }\r\n                    else {\r\n                        if (parser.token === 67174411) {\r\n                            declaration = parseAsyncArrowOrCallExpression(parser, context, declaration, 1, 1, 0, flags, tokenPos, linePos, colPos);\r\n                            declaration = parseMemberOrUpdateExpression(parser, context, declaration, 0, 0, tokenPos, linePos, colPos);\r\n                            declaration = parseAssignmentExpression(parser, context, 0, 0, tokenPos, linePos, colPos, declaration);\r\n                        }\r\n                        else if (parser.token & 143360) {\r\n                            if (scope)\r\n                                scope = createArrowHeadParsingScope(parser, context, parser.tokenValue);\r\n                            declaration = parseIdentifier(parser, context, 0);\r\n                            declaration = parseArrowFunctionExpression(parser, context, scope, [declaration], 1, tokenPos, linePos, colPos);\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                declaration = parseExpression(parser, context, 1, 0, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n                matchOrInsertSemicolon(parser, context | 32768);\r\n        }\r\n        if (scope)\r\n            declareUnboundVariable(parser, 'default');\r\n        return finishNode(parser, context, start, line, column, {\r\n            type: 'ExportDefaultDeclaration',\r\n            declaration\r\n        });\r\n    }\r\n    switch (parser.token) {\r\n        case 8457014: {\r\n            nextToken(parser, context);\r\n            let exported = null;\r\n            const isNamedDeclaration = consumeOpt(parser, context, 77934);\r\n            if (isNamedDeclaration) {\r\n                if (scope)\r\n                    declareUnboundVariable(parser, parser.tokenValue);\r\n                exported = parseIdentifier(parser, context, 0);\r\n            }\r\n            consume(parser, context, 12404);\r\n            if (parser.token !== 134283267)\r\n                report(parser, 103, 'Export');\r\n            source = parseLiteral(parser, context);\r\n            matchOrInsertSemicolon(parser, context | 32768);\r\n            return finishNode(parser, context, start, line, column, {\r\n                type: 'ExportAllDeclaration',\r\n                source,\r\n                exported\r\n            });\r\n        }\r\n        case 2162700: {\r\n            nextToken(parser, context);\r\n            const tmpExportedNames = [];\r\n            const tmpExportedBindings = [];\r\n            while (parser.token & 143360) {\r\n                const { tokenPos, tokenValue, linePos, colPos } = parser;\r\n                const local = parseIdentifier(parser, context, 0);\r\n                let exported;\r\n                if (parser.token === 77934) {\r\n                    nextToken(parser, context);\r\n                    if ((parser.token & 134217728) === 134217728) {\r\n                        report(parser, 104);\r\n                    }\r\n                    if (scope) {\r\n                        tmpExportedNames.push(parser.tokenValue);\r\n                        tmpExportedBindings.push(tokenValue);\r\n                    }\r\n                    exported = parseIdentifier(parser, context, 0);\r\n                }\r\n                else {\r\n                    if (scope) {\r\n                        tmpExportedNames.push(parser.tokenValue);\r\n                        tmpExportedBindings.push(parser.tokenValue);\r\n                    }\r\n                    exported = local;\r\n                }\r\n                specifiers.push(finishNode(parser, context, tokenPos, linePos, colPos, {\r\n                    type: 'ExportSpecifier',\r\n                    local,\r\n                    exported\r\n                }));\r\n                if (parser.token !== 1074790415)\r\n                    consume(parser, context, 18);\r\n            }\r\n            consume(parser, context, 1074790415);\r\n            if (consumeOpt(parser, context, 12404)) {\r\n                if (parser.token !== 134283267)\r\n                    report(parser, 103, 'Export');\r\n                source = parseLiteral(parser, context);\r\n            }\r\n            else if (scope) {\r\n                let i = 0;\r\n                let iMax = tmpExportedNames.length;\r\n                for (; i < iMax; i++) {\r\n                    declareUnboundVariable(parser, tmpExportedNames[i]);\r\n                }\r\n                i = 0;\r\n                iMax = tmpExportedBindings.length;\r\n                for (; i < iMax; i++) {\r\n                    addBindingToExports(parser, tmpExportedBindings[i]);\r\n                }\r\n            }\r\n            matchOrInsertSemicolon(parser, context | 32768);\r\n            break;\r\n        }\r\n        case 86096:\r\n            declaration = parseClassDeclaration(parser, context, scope, 2, parser.tokenPos, parser.linePos, parser.colPos);\r\n            break;\r\n        case 86106:\r\n            declaration = parseFunctionDeclaration(parser, context, scope, 4, 1, 2, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n            break;\r\n        case 241739:\r\n            declaration = parseLexicalDeclaration(parser, context, scope, 8, 64, parser.tokenPos, parser.linePos, parser.colPos);\r\n            break;\r\n        case 86092:\r\n            declaration = parseLexicalDeclaration(parser, context, scope, 16, 64, parser.tokenPos, parser.linePos, parser.colPos);\r\n            break;\r\n        case 86090:\r\n            declaration = parseVariableStatement(parser, context, scope, 64, parser.tokenPos, parser.linePos, parser.colPos);\r\n            break;\r\n        case 209007:\r\n            const { tokenPos, linePos, colPos } = parser;\r\n            nextToken(parser, context);\r\n            if ((parser.flags & 1) === 0 && parser.token === 86106) {\r\n                declaration = parseFunctionDeclaration(parser, context, scope, 4, 1, 2, 1, tokenPos, linePos, colPos);\r\n                if (scope) {\r\n                    key = declaration.id ? declaration.id.name : '';\r\n                    declareUnboundVariable(parser, key);\r\n                }\r\n                break;\r\n            }\r\n        default:\r\n            report(parser, 28, KeywordDescTable[parser.token & 255]);\r\n    }\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'ExportNamedDeclaration',\r\n        declaration,\r\n        specifiers,\r\n        source\r\n    });\r\n}\r\nfunction parseExpression(parser, context, canAssign, isPattern, inGroup, start, line, column) {\r\n    let expr = parsePrimaryExpression(parser, context, 2, 0, canAssign, isPattern, inGroup, 1, start, line, column);\r\n    expr = parseMemberOrUpdateExpression(parser, context, expr, inGroup, 0, start, line, column);\r\n    return parseAssignmentExpression(parser, context, inGroup, 0, start, line, column, expr);\r\n}\r\nfunction parseSequenceExpression(parser, context, inGroup, start, line, column, expr) {\r\n    const expressions = [expr];\r\n    while (consumeOpt(parser, context | 32768, 18)) {\r\n        expressions.push(parseExpression(parser, context, 1, 0, inGroup, parser.tokenPos, parser.linePos, parser.colPos));\r\n    }\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'SequenceExpression',\r\n        expressions\r\n    });\r\n}\r\nfunction parseExpressions(parser, context, inGroup, canAssign, start, line, column) {\r\n    const expr = parseExpression(parser, context, canAssign, 0, inGroup, start, line, column);\r\n    return parser.token === 18\r\n        ? parseSequenceExpression(parser, context, inGroup, start, line, column, expr)\r\n        : expr;\r\n}\r\nfunction parseAssignmentExpression(parser, context, inGroup, isPattern, start, line, column, left) {\r\n    const { token } = parser;\r\n    if ((token & 4194304) === 4194304) {\r\n        if (parser.assignable & 2)\r\n            report(parser, 24);\r\n        if ((!isPattern && token === 1077936157 && left.type === 'ArrayExpression') ||\r\n            left.type === 'ObjectExpression') {\r\n            reinterpretToPattern(parser, left);\r\n        }\r\n        nextToken(parser, context | 32768);\r\n        const right = parseExpression(parser, context, 1, 1, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n        parser.assignable = 2;\r\n        return finishNode(parser, context, start, line, column, isPattern\r\n            ? {\r\n                type: 'AssignmentPattern',\r\n                left,\r\n                right\r\n            }\r\n            : {\r\n                type: 'AssignmentExpression',\r\n                left,\r\n                operator: KeywordDescTable[token & 255],\r\n                right\r\n            });\r\n    }\r\n    if ((token & 8454144) === 8454144) {\r\n        left = parseBinaryExpression(parser, context, inGroup, start, line, column, 4, token, left);\r\n    }\r\n    if (consumeOpt(parser, context | 32768, 22)) {\r\n        left = parseConditionalExpression(parser, context, left, start, line, column);\r\n    }\r\n    return left;\r\n}\r\nfunction parseAssignmentExpressionOrPattern(parser, context, inGroup, isPattern, start, line, column, left) {\r\n    const { token } = parser;\r\n    nextToken(parser, context | 32768);\r\n    const right = parseExpression(parser, context, 1, 1, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n    left = finishNode(parser, context, start, line, column, isPattern\r\n        ? {\r\n            type: 'AssignmentPattern',\r\n            left,\r\n            right\r\n        }\r\n        : {\r\n            type: 'AssignmentExpression',\r\n            left,\r\n            operator: KeywordDescTable[token & 255],\r\n            right\r\n        });\r\n    parser.assignable = 2;\r\n    return left;\r\n}\r\nfunction parseConditionalExpression(parser, context, test, start, line, column) {\r\n    const consequent = parseExpression(parser, (context | 134217728) ^ 134217728, 1, 0, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n    consume(parser, context | 32768, 21);\r\n    parser.assignable = 1;\r\n    const alternate = parseExpression(parser, context, 1, 0, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n    parser.assignable = 2;\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'ConditionalExpression',\r\n        test,\r\n        consequent,\r\n        alternate\r\n    });\r\n}\r\nfunction parseBinaryExpression(parser, context, inGroup, start, line, column, minPrec, operator, left) {\r\n    const bit = -((context & 134217728) > 0) & 8738868;\r\n    let t;\r\n    let prec;\r\n    parser.assignable = 2;\r\n    while (parser.token & 8454144) {\r\n        t = parser.token;\r\n        prec = t & 3840;\r\n        if ((t & 524288 && operator & 268435456) || (operator & 524288 && t & 268435456)) {\r\n            report(parser, 160);\r\n        }\r\n        if (prec + ((t === 8457273) << 8) - ((bit === t) << 12) <= minPrec)\r\n            break;\r\n        nextToken(parser, context | 32768);\r\n        left = finishNode(parser, context, start, line, column, {\r\n            type: t & 524288 || t & 268435456 ? 'LogicalExpression' : 'BinaryExpression',\r\n            left,\r\n            right: parseBinaryExpression(parser, context, inGroup, parser.tokenPos, parser.linePos, parser.colPos, prec, t, parseLeftHandSideExpression(parser, context, 0, inGroup, 1, parser.tokenPos, parser.linePos, parser.colPos)),\r\n            operator: KeywordDescTable[t & 255]\r\n        });\r\n    }\r\n    if (parser.token === 1077936157)\r\n        report(parser, 24);\r\n    return left;\r\n}\r\nfunction parseUnaryExpression(parser, context, isLHS, start, line, column, inGroup) {\r\n    if (!isLHS)\r\n        report(parser, 0);\r\n    const unaryOperator = parser.token;\r\n    nextToken(parser, context | 32768);\r\n    const arg = parseLeftHandSideExpression(parser, context, 0, inGroup, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n    if (parser.token === 8457273)\r\n        report(parser, 31);\r\n    if (context & 1024 && unaryOperator === 16863278) {\r\n        if (arg.type === 'Identifier') {\r\n            report(parser, 118);\r\n        }\r\n        else if (isPropertyWithPrivateFieldKey(arg)) {\r\n            report(parser, 124);\r\n        }\r\n    }\r\n    parser.assignable = 2;\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'UnaryExpression',\r\n        operator: KeywordDescTable[unaryOperator & 255],\r\n        argument: arg,\r\n        prefix: true\r\n    });\r\n}\r\nfunction parseAsyncExpression(parser, context, inGroup, isLHS, canAssign, isPattern, inNew, start, line, column) {\r\n    const { token } = parser;\r\n    const expr = parseIdentifier(parser, context, isPattern);\r\n    const { flags } = parser;\r\n    if ((flags & 1) === 0) {\r\n        if (parser.token === 86106) {\r\n            return parseFunctionExpression(parser, context, 1, inGroup, start, line, column);\r\n        }\r\n        if ((parser.token & 143360) === 143360) {\r\n            if (!isLHS)\r\n                report(parser, 0);\r\n            return parseAsyncArrowAfterIdent(parser, context, canAssign, start, line, column);\r\n        }\r\n    }\r\n    if (!inNew && parser.token === 67174411) {\r\n        return parseAsyncArrowOrCallExpression(parser, context, expr, canAssign, 1, 0, flags, start, line, column);\r\n    }\r\n    if (parser.token === 10) {\r\n        classifyIdentifier(parser, context, token, 1);\r\n        if (inNew)\r\n            report(parser, 49);\r\n        return parseArrowFromIdentifier(parser, context, parser.tokenValue, expr, inNew, canAssign, 0, start, line, column);\r\n    }\r\n    return expr;\r\n}\r\nfunction parseYieldExpression(parser, context, inGroup, canAssign, start, line, column) {\r\n    if (inGroup)\r\n        parser.destructible |= 256;\r\n    if (context & 2097152) {\r\n        nextToken(parser, context | 32768);\r\n        if (context & 8388608)\r\n            report(parser, 30);\r\n        if (!canAssign)\r\n            report(parser, 24);\r\n        if (parser.token === 22)\r\n            report(parser, 121);\r\n        let argument = null;\r\n        let delegate = false;\r\n        if ((parser.flags & 1) === 0) {\r\n            delegate = consumeOpt(parser, context | 32768, 8457014);\r\n            if (parser.token & (12288 | 65536) || delegate) {\r\n                argument = parseExpression(parser, context, 1, 0, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n            }\r\n        }\r\n        parser.assignable = 2;\r\n        return finishNode(parser, context, start, line, column, {\r\n            type: 'YieldExpression',\r\n            argument,\r\n            delegate\r\n        });\r\n    }\r\n    if (context & 1024)\r\n        report(parser, 95, 'yield');\r\n    return parseIdentifierOrArrow(parser, context, start, line, column);\r\n}\r\nfunction parseAwaitExpression(parser, context, inNew, inGroup, start, line, column) {\r\n    if (inGroup)\r\n        parser.destructible |= 128;\r\n    if (context & 4194304 || (context & 2048 && context & 8192)) {\r\n        if (inNew)\r\n            report(parser, 0);\r\n        if (context & 8388608) {\r\n            reportMessageAt(parser.index, parser.line, parser.index, 29);\r\n        }\r\n        nextToken(parser, context | 32768);\r\n        const argument = parseLeftHandSideExpression(parser, context, 0, 0, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n        if (parser.token === 8457273)\r\n            report(parser, 31);\r\n        parser.assignable = 2;\r\n        return finishNode(parser, context, start, line, column, {\r\n            type: 'AwaitExpression',\r\n            argument\r\n        });\r\n    }\r\n    if (context & 2048)\r\n        report(parser, 96);\r\n    return parseIdentifierOrArrow(parser, context, start, line, column);\r\n}\r\nfunction parseFunctionBody(parser, context, scope, origin, firstRestricted, scopeError) {\r\n    const { tokenPos, linePos, colPos } = parser;\r\n    consume(parser, context | 32768, 2162700);\r\n    const body = [];\r\n    const prevContext = context;\r\n    if (parser.token !== 1074790415) {\r\n        while (parser.token === 134283267) {\r\n            const { index, tokenPos, tokenValue, token } = parser;\r\n            const expr = parseLiteral(parser, context);\r\n            if (isValidStrictMode(parser, index, tokenPos, tokenValue)) {\r\n                context |= 1024;\r\n                if (parser.flags & 128) {\r\n                    reportMessageAt(parser.index, parser.line, parser.tokenPos, 64);\r\n                }\r\n                if (parser.flags & 64) {\r\n                    reportMessageAt(parser.index, parser.line, parser.tokenPos, 8);\r\n                }\r\n            }\r\n            body.push(parseDirective(parser, context, expr, token, tokenPos, parser.linePos, parser.colPos));\r\n        }\r\n        if (context & 1024) {\r\n            if (firstRestricted) {\r\n                if ((firstRestricted & 537079808) === 537079808) {\r\n                    report(parser, 116);\r\n                }\r\n                if ((firstRestricted & 36864) === 36864) {\r\n                    report(parser, 38);\r\n                }\r\n            }\r\n            if (parser.flags & 512)\r\n                report(parser, 116);\r\n            if (parser.flags & 256)\r\n                report(parser, 115);\r\n        }\r\n        if (context & 64 &&\r\n            scope &&\r\n            scopeError !== void 0 &&\r\n            (prevContext & 1024) === 0 &&\r\n            (context & 8192) === 0) {\r\n            reportScopeError(scopeError);\r\n        }\r\n    }\r\n    parser.flags =\r\n        (parser.flags | 512 | 256 | 64) ^\r\n            (512 | 256 | 64);\r\n    parser.destructible = (parser.destructible | 256) ^ 256;\r\n    while (parser.token !== 1074790415) {\r\n        body.push(parseStatementListItem(parser, context, scope, 4, {}));\r\n    }\r\n    consume(parser, origin & (16 | 8) ? context | 32768 : context, 1074790415);\r\n    parser.flags &= ~(128 | 64);\r\n    if (parser.token === 1077936157)\r\n        report(parser, 24);\r\n    return finishNode(parser, context, tokenPos, linePos, colPos, {\r\n        type: 'BlockStatement',\r\n        body\r\n    });\r\n}\r\nfunction parseSuperExpression(parser, context, start, line, column) {\r\n    nextToken(parser, context);\r\n    switch (parser.token) {\r\n        case 67108991:\r\n            report(parser, 162);\r\n        case 67174411: {\r\n            if ((context & 524288) === 0)\r\n                report(parser, 26);\r\n            if (context & 16384)\r\n                report(parser, 27);\r\n            parser.assignable = 2;\r\n            break;\r\n        }\r\n        case 69271571:\r\n        case 67108877: {\r\n            if ((context & 262144) === 0)\r\n                report(parser, 27);\r\n            if (context & 16384)\r\n                report(parser, 27);\r\n            parser.assignable = 1;\r\n            break;\r\n        }\r\n        default:\r\n            report(parser, 28, 'super');\r\n    }\r\n    return finishNode(parser, context, start, line, column, { type: 'Super' });\r\n}\r\nfunction parseLeftHandSideExpression(parser, context, canAssign, inGroup, isLHS, start, line, column) {\r\n    const expression = parsePrimaryExpression(parser, context, 2, 0, canAssign, 0, inGroup, isLHS, start, line, column);\r\n    return parseMemberOrUpdateExpression(parser, context, expression, inGroup, 0, start, line, column);\r\n}\r\nfunction parseUpdateExpression(parser, context, expr, start, line, column) {\r\n    if (parser.assignable & 2)\r\n        report(parser, 53);\r\n    const { token } = parser;\r\n    nextToken(parser, context);\r\n    parser.assignable = 2;\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'UpdateExpression',\r\n        argument: expr,\r\n        operator: KeywordDescTable[token & 255],\r\n        prefix: false\r\n    });\r\n}\r\nfunction parseMemberOrUpdateExpression(parser, context, expr, inGroup, inChain, start, line, column) {\r\n    if ((parser.token & 33619968) === 33619968 && (parser.flags & 1) === 0) {\r\n        expr = parseUpdateExpression(parser, context, expr, start, line, column);\r\n    }\r\n    else if ((parser.token & 67108864) === 67108864) {\r\n        context = (context | 134217728) ^ 134217728;\r\n        switch (parser.token) {\r\n            case 67108877: {\r\n                nextToken(parser, (context | 1073741824 | 8192) ^ 8192);\r\n                parser.assignable = 1;\r\n                const property = parsePropertyOrPrivatePropertyName(parser, context);\r\n                expr = finishNode(parser, context, start, line, column, {\r\n                    type: 'MemberExpression',\r\n                    object: expr,\r\n                    computed: false,\r\n                    property\r\n                });\r\n                break;\r\n            }\r\n            case 69271571: {\r\n                let restoreHasOptionalChaining = false;\r\n                if ((parser.flags & 2048) === 2048) {\r\n                    restoreHasOptionalChaining = true;\r\n                    parser.flags = (parser.flags | 2048) ^ 2048;\r\n                }\r\n                nextToken(parser, context | 32768);\r\n                const { tokenPos, linePos, colPos } = parser;\r\n                const property = parseExpressions(parser, context, inGroup, 1, tokenPos, linePos, colPos);\r\n                consume(parser, context, 20);\r\n                parser.assignable = 1;\r\n                expr = finishNode(parser, context, start, line, column, {\r\n                    type: 'MemberExpression',\r\n                    object: expr,\r\n                    computed: true,\r\n                    property\r\n                });\r\n                if (restoreHasOptionalChaining) {\r\n                    parser.flags |= 2048;\r\n                }\r\n                break;\r\n            }\r\n            case 67174411: {\r\n                if ((parser.flags & 1024) === 1024) {\r\n                    parser.flags = (parser.flags | 1024) ^ 1024;\r\n                    return expr;\r\n                }\r\n                let restoreHasOptionalChaining = false;\r\n                if ((parser.flags & 2048) === 2048) {\r\n                    restoreHasOptionalChaining = true;\r\n                    parser.flags = (parser.flags | 2048) ^ 2048;\r\n                }\r\n                const args = parseArguments(parser, context, inGroup);\r\n                parser.assignable = 2;\r\n                expr = finishNode(parser, context, start, line, column, {\r\n                    type: 'CallExpression',\r\n                    callee: expr,\r\n                    arguments: args\r\n                });\r\n                if (restoreHasOptionalChaining) {\r\n                    parser.flags |= 2048;\r\n                }\r\n                break;\r\n            }\r\n            case 67108991: {\r\n                nextToken(parser, (context | 1073741824 | 8192) ^ 8192);\r\n                parser.flags |= 2048;\r\n                parser.assignable = 2;\r\n                expr = parseOptionalChain(parser, context, expr, start, line, column);\r\n                break;\r\n            }\r\n            default:\r\n                if ((parser.flags & 2048) === 2048) {\r\n                    report(parser, 161);\r\n                }\r\n                parser.assignable = 2;\r\n                expr = finishNode(parser, context, start, line, column, {\r\n                    type: 'TaggedTemplateExpression',\r\n                    tag: expr,\r\n                    quasi: parser.token === 67174408\r\n                        ? parseTemplate(parser, context | 65536)\r\n                        : parseTemplateLiteral(parser, context, parser.tokenPos, parser.linePos, parser.colPos)\r\n                });\r\n        }\r\n        expr = parseMemberOrUpdateExpression(parser, context, expr, 0, 1, start, line, column);\r\n    }\r\n    if (inChain === 0 && (parser.flags & 2048) === 2048) {\r\n        parser.flags = (parser.flags | 2048) ^ 2048;\r\n        expr = finishNode(parser, context, start, line, column, {\r\n            type: 'ChainExpression',\r\n            expression: expr\r\n        });\r\n    }\r\n    return expr;\r\n}\r\nfunction parseOptionalChain(parser, context, expr, start, line, column) {\r\n    let restoreHasOptionalChaining = false;\r\n    let node;\r\n    if (parser.token === 69271571 || parser.token === 67174411) {\r\n        if ((parser.flags & 2048) === 2048) {\r\n            restoreHasOptionalChaining = true;\r\n            parser.flags = (parser.flags | 2048) ^ 2048;\r\n        }\r\n    }\r\n    if (parser.token === 69271571) {\r\n        nextToken(parser, context | 32768);\r\n        const { tokenPos, linePos, colPos } = parser;\r\n        const property = parseExpressions(parser, context, 0, 1, tokenPos, linePos, colPos);\r\n        consume(parser, context, 20);\r\n        parser.assignable = 2;\r\n        node = finishNode(parser, context, start, line, column, {\r\n            type: 'MemberExpression',\r\n            object: expr,\r\n            computed: true,\r\n            optional: true,\r\n            property\r\n        });\r\n    }\r\n    else if (parser.token === 67174411) {\r\n        const args = parseArguments(parser, context, 0);\r\n        parser.assignable = 2;\r\n        node = finishNode(parser, context, start, line, column, {\r\n            type: 'CallExpression',\r\n            callee: expr,\r\n            arguments: args,\r\n            optional: true\r\n        });\r\n    }\r\n    else {\r\n        if ((parser.token & (143360 | 4096)) === 0)\r\n            report(parser, 155);\r\n        const property = parseIdentifier(parser, context, 0);\r\n        parser.assignable = 2;\r\n        node = finishNode(parser, context, start, line, column, {\r\n            type: 'MemberExpression',\r\n            object: expr,\r\n            computed: false,\r\n            optional: true,\r\n            property\r\n        });\r\n    }\r\n    if (restoreHasOptionalChaining) {\r\n        parser.flags |= 2048;\r\n    }\r\n    return node;\r\n}\r\nfunction parsePropertyOrPrivatePropertyName(parser, context) {\r\n    if ((parser.token & (143360 | 4096)) === 0 && parser.token !== 131) {\r\n        report(parser, 155);\r\n    }\r\n    return context & 1 && parser.token === 131\r\n        ? parsePrivateIdentifier(parser, context, parser.tokenPos, parser.linePos, parser.colPos)\r\n        : parseIdentifier(parser, context, 0);\r\n}\r\nfunction parseUpdateExpressionPrefixed(parser, context, inNew, isLHS, start, line, column) {\r\n    if (inNew)\r\n        report(parser, 54);\r\n    if (!isLHS)\r\n        report(parser, 0);\r\n    const { token } = parser;\r\n    nextToken(parser, context | 32768);\r\n    const arg = parseLeftHandSideExpression(parser, context, 0, 0, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n    if (parser.assignable & 2) {\r\n        report(parser, 53);\r\n    }\r\n    parser.assignable = 2;\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'UpdateExpression',\r\n        argument: arg,\r\n        operator: KeywordDescTable[token & 255],\r\n        prefix: true\r\n    });\r\n}\r\nfunction parsePrimaryExpression(parser, context, kind, inNew, canAssign, isPattern, inGroup, isLHS, start, line, column) {\r\n    if ((parser.token & 143360) === 143360) {\r\n        switch (parser.token) {\r\n            case 209008:\r\n                return parseAwaitExpression(parser, context, inNew, inGroup, start, line, column);\r\n            case 241773:\r\n                return parseYieldExpression(parser, context, inGroup, canAssign, start, line, column);\r\n            case 209007:\r\n                return parseAsyncExpression(parser, context, inGroup, isLHS, canAssign, isPattern, inNew, start, line, column);\r\n        }\r\n        const { token, tokenValue } = parser;\r\n        const expr = parseIdentifier(parser, context | 65536, isPattern);\r\n        if (parser.token === 10) {\r\n            if (!isLHS)\r\n                report(parser, 0);\r\n            classifyIdentifier(parser, context, token, 1);\r\n            return parseArrowFromIdentifier(parser, context, tokenValue, expr, inNew, canAssign, 0, start, line, column);\r\n        }\r\n        if (context & 16384 && token === 537079928)\r\n            report(parser, 127);\r\n        if (token === 241739) {\r\n            if (context & 1024)\r\n                report(parser, 110);\r\n            if (kind & (8 | 16))\r\n                report(parser, 98);\r\n        }\r\n        parser.assignable =\r\n            context & 1024 && (token & 537079808) === 537079808\r\n                ? 2\r\n                : 1;\r\n        return expr;\r\n    }\r\n    if ((parser.token & 134217728) === 134217728) {\r\n        return parseLiteral(parser, context);\r\n    }\r\n    switch (parser.token) {\r\n        case 33619995:\r\n        case 33619996:\r\n            return parseUpdateExpressionPrefixed(parser, context, inNew, isLHS, start, line, column);\r\n        case 16863278:\r\n        case 16842800:\r\n        case 16842801:\r\n        case 25233970:\r\n        case 25233971:\r\n        case 16863277:\r\n        case 16863279:\r\n            return parseUnaryExpression(parser, context, isLHS, start, line, column, inGroup);\r\n        case 86106:\r\n            return parseFunctionExpression(parser, context, 0, inGroup, start, line, column);\r\n        case 2162700:\r\n            return parseObjectLiteral(parser, context, canAssign ? 0 : 1, inGroup, start, line, column);\r\n        case 69271571:\r\n            return parseArrayLiteral(parser, context, canAssign ? 0 : 1, inGroup, start, line, column);\r\n        case 67174411:\r\n            return parseParenthesizedExpression(parser, context, canAssign, 1, 0, start, line, column);\r\n        case 86021:\r\n        case 86022:\r\n        case 86023:\r\n            return parseNullOrTrueOrFalseLiteral(parser, context, start, line, column);\r\n        case 86113:\r\n            return parseThisExpression(parser, context);\r\n        case 65540:\r\n            return parseRegExpLiteral(parser, context, start, line, column);\r\n        case 133:\r\n        case 86096:\r\n            return parseClassExpression(parser, context, inGroup, start, line, column);\r\n        case 86111:\r\n            return parseSuperExpression(parser, context, start, line, column);\r\n        case 67174409:\r\n            return parseTemplateLiteral(parser, context, start, line, column);\r\n        case 67174408:\r\n            return parseTemplate(parser, context);\r\n        case 86109:\r\n            return parseNewExpression(parser, context, inGroup, start, line, column);\r\n        case 134283389:\r\n            return parseBigIntLiteral(parser, context, start, line, column);\r\n        case 131:\r\n            return parsePrivateIdentifier(parser, context, start, line, column);\r\n        case 86108:\r\n            return parseImportCallOrMetaExpression(parser, context, inNew, inGroup, start, line, column);\r\n        case 8456258:\r\n            if (context & 16)\r\n                return parseJSXRootElementOrFragment(parser, context, 1, start, line, column);\r\n        default:\r\n            if (isValidIdentifier(context, parser.token))\r\n                return parseIdentifierOrArrow(parser, context, start, line, column);\r\n            report(parser, 28, KeywordDescTable[parser.token & 255]);\r\n    }\r\n}\r\nfunction parseImportCallOrMetaExpression(parser, context, inNew, inGroup, start, line, column) {\r\n    let expr = parseIdentifier(parser, context, 0);\r\n    if (parser.token === 67108877) {\r\n        return parseImportMetaExpression(parser, context, expr, start, line, column);\r\n    }\r\n    if (inNew)\r\n        report(parser, 138);\r\n    expr = parseImportExpression(parser, context, inGroup, start, line, column);\r\n    parser.assignable = 2;\r\n    return parseMemberOrUpdateExpression(parser, context, expr, inGroup, 0, start, line, column);\r\n}\r\nfunction parseImportMetaExpression(parser, context, meta, start, line, column) {\r\n    if ((context & 2048) === 0)\r\n        report(parser, 164);\r\n    nextToken(parser, context);\r\n    if (parser.token !== 143495 && parser.tokenValue !== 'meta')\r\n        report(parser, 28, KeywordDescTable[parser.token & 255]);\r\n    parser.assignable = 2;\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'MetaProperty',\r\n        meta,\r\n        property: parseIdentifier(parser, context, 0)\r\n    });\r\n}\r\nfunction parseImportExpression(parser, context, inGroup, start, line, column) {\r\n    consume(parser, context | 32768, 67174411);\r\n    if (parser.token === 14)\r\n        report(parser, 139);\r\n    const source = parseExpression(parser, context, 1, 0, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n    consume(parser, context, 16);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'ImportExpression',\r\n        source\r\n    });\r\n}\r\nfunction parseBigIntLiteral(parser, context, start, line, column) {\r\n    const { tokenRaw, tokenValue } = parser;\r\n    nextToken(parser, context);\r\n    parser.assignable = 2;\r\n    return finishNode(parser, context, start, line, column, context & 512\r\n        ? {\r\n            type: 'Literal',\r\n            value: tokenValue,\r\n            bigint: tokenRaw.slice(0, -1),\r\n            raw: tokenRaw\r\n        }\r\n        : {\r\n            type: 'Literal',\r\n            value: tokenValue,\r\n            bigint: tokenRaw.slice(0, -1)\r\n        });\r\n}\r\nfunction parseTemplateLiteral(parser, context, start, line, column) {\r\n    parser.assignable = 2;\r\n    const { tokenValue, tokenRaw, tokenPos, linePos, colPos } = parser;\r\n    consume(parser, context, 67174409);\r\n    const quasis = [parseTemplateElement(parser, context, tokenValue, tokenRaw, tokenPos, linePos, colPos, true)];\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'TemplateLiteral',\r\n        expressions: [],\r\n        quasis\r\n    });\r\n}\r\nfunction parseTemplate(parser, context) {\r\n    context = (context | 134217728) ^ 134217728;\r\n    const { tokenValue, tokenRaw, tokenPos, linePos, colPos } = parser;\r\n    consume(parser, context | 32768, 67174408);\r\n    const quasis = [\r\n        parseTemplateElement(parser, context, tokenValue, tokenRaw, tokenPos, linePos, colPos, false)\r\n    ];\r\n    const expressions = [parseExpressions(parser, context, 0, 1, parser.tokenPos, parser.linePos, parser.colPos)];\r\n    if (parser.token !== 1074790415)\r\n        report(parser, 81);\r\n    while ((parser.token = scanTemplateTail(parser, context)) !== 67174409) {\r\n        const { tokenValue, tokenRaw, tokenPos, linePos, colPos } = parser;\r\n        consume(parser, context | 32768, 67174408);\r\n        quasis.push(parseTemplateElement(parser, context, tokenValue, tokenRaw, tokenPos, linePos, colPos, false));\r\n        expressions.push(parseExpressions(parser, context, 0, 1, parser.tokenPos, parser.linePos, parser.colPos));\r\n        if (parser.token !== 1074790415)\r\n            report(parser, 81);\r\n    }\r\n    {\r\n        const { tokenValue, tokenRaw, tokenPos, linePos, colPos } = parser;\r\n        consume(parser, context, 67174409);\r\n        quasis.push(parseTemplateElement(parser, context, tokenValue, tokenRaw, tokenPos, linePos, colPos, true));\r\n    }\r\n    return finishNode(parser, context, tokenPos, linePos, colPos, {\r\n        type: 'TemplateLiteral',\r\n        expressions,\r\n        quasis\r\n    });\r\n}\r\nfunction parseTemplateElement(parser, context, cooked, raw, start, line, col, tail) {\r\n    const node = finishNode(parser, context, start, line, col, {\r\n        type: 'TemplateElement',\r\n        value: {\r\n            cooked,\r\n            raw\r\n        },\r\n        tail\r\n    });\r\n    const tailSize = tail ? 1 : 2;\r\n    if (context & 2) {\r\n        node.start += 1;\r\n        node.range[0] += 1;\r\n        node.end -= tailSize;\r\n        node.range[1] -= tailSize;\r\n    }\r\n    if (context & 4) {\r\n        node.loc.start.column += 1;\r\n        node.loc.end.column -= tailSize;\r\n    }\r\n    return node;\r\n}\r\nfunction parseSpreadElement(parser, context, start, line, column) {\r\n    context = (context | 134217728) ^ 134217728;\r\n    consume(parser, context | 32768, 14);\r\n    const argument = parseExpression(parser, context, 1, 0, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n    parser.assignable = 1;\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'SpreadElement',\r\n        argument\r\n    });\r\n}\r\nfunction parseArguments(parser, context, inGroup) {\r\n    nextToken(parser, context | 32768);\r\n    const args = [];\r\n    if (parser.token === 16) {\r\n        nextToken(parser, context);\r\n        return args;\r\n    }\r\n    while (parser.token !== 16) {\r\n        if (parser.token === 14) {\r\n            args.push(parseSpreadElement(parser, context, parser.tokenPos, parser.linePos, parser.colPos));\r\n        }\r\n        else {\r\n            args.push(parseExpression(parser, context, 1, 0, inGroup, parser.tokenPos, parser.linePos, parser.colPos));\r\n        }\r\n        if (parser.token !== 18)\r\n            break;\r\n        nextToken(parser, context | 32768);\r\n        if (parser.token === 16)\r\n            break;\r\n    }\r\n    consume(parser, context, 16);\r\n    return args;\r\n}\r\nfunction parseIdentifier(parser, context, isPattern) {\r\n    const { tokenValue, tokenPos, linePos, colPos } = parser;\r\n    nextToken(parser, context);\r\n    return finishNode(parser, context, tokenPos, linePos, colPos, context & 268435456\r\n        ? {\r\n            type: 'Identifier',\r\n            name: tokenValue,\r\n            pattern: isPattern === 1\r\n        }\r\n        : {\r\n            type: 'Identifier',\r\n            name: tokenValue\r\n        });\r\n}\r\nfunction parseLiteral(parser, context) {\r\n    const { tokenValue, tokenRaw, tokenPos, linePos, colPos } = parser;\r\n    if (parser.token === 134283389) {\r\n        return parseBigIntLiteral(parser, context, tokenPos, linePos, colPos);\r\n    }\r\n    nextToken(parser, context);\r\n    parser.assignable = 2;\r\n    return finishNode(parser, context, tokenPos, linePos, colPos, context & 512\r\n        ? {\r\n            type: 'Literal',\r\n            value: tokenValue,\r\n            raw: tokenRaw\r\n        }\r\n        : {\r\n            type: 'Literal',\r\n            value: tokenValue\r\n        });\r\n}\r\nfunction parseNullOrTrueOrFalseLiteral(parser, context, start, line, column) {\r\n    const raw = KeywordDescTable[parser.token & 255];\r\n    const value = parser.token === 86023 ? null : raw === 'true';\r\n    nextToken(parser, context);\r\n    parser.assignable = 2;\r\n    return finishNode(parser, context, start, line, column, context & 512\r\n        ? {\r\n            type: 'Literal',\r\n            value,\r\n            raw\r\n        }\r\n        : {\r\n            type: 'Literal',\r\n            value\r\n        });\r\n}\r\nfunction parseThisExpression(parser, context) {\r\n    const { tokenPos, linePos, colPos } = parser;\r\n    nextToken(parser, context);\r\n    parser.assignable = 2;\r\n    return finishNode(parser, context, tokenPos, linePos, colPos, {\r\n        type: 'ThisExpression'\r\n    });\r\n}\r\nfunction parseFunctionDeclaration(parser, context, scope, origin, allowGen, flags, isAsync, start, line, column) {\r\n    nextToken(parser, context | 32768);\r\n    const isGenerator = allowGen ? optionalBit(parser, context, 8457014) : 0;\r\n    let id = null;\r\n    let firstRestricted;\r\n    let functionScope = scope ? createScope() : void 0;\r\n    if (parser.token === 67174411) {\r\n        if ((flags & 1) === 0)\r\n            report(parser, 37, 'Function');\r\n    }\r\n    else {\r\n        const kind = origin & 4 && ((context & 8192) === 0 || (context & 2048) === 0)\r\n            ? 4\r\n            : 64;\r\n        validateFunctionName(parser, context | ((context & 3072) << 11), parser.token);\r\n        if (scope) {\r\n            if (kind & 4) {\r\n                addVarName(parser, context, scope, parser.tokenValue, kind);\r\n            }\r\n            else {\r\n                addBlockName(parser, context, scope, parser.tokenValue, kind, origin);\r\n            }\r\n            functionScope = addChildScope(functionScope, 256);\r\n            if (flags) {\r\n                if (flags & 2) {\r\n                    declareUnboundVariable(parser, parser.tokenValue);\r\n                }\r\n            }\r\n        }\r\n        firstRestricted = parser.token;\r\n        if (parser.token & 143360) {\r\n            id = parseIdentifier(parser, context, 0);\r\n        }\r\n        else {\r\n            report(parser, 28, KeywordDescTable[parser.token & 255]);\r\n        }\r\n    }\r\n    context =\r\n        ((context | 32243712) ^ 32243712) |\r\n            67108864 |\r\n            ((isAsync * 2 + isGenerator) << 21) |\r\n            (isGenerator ? 0 : 1073741824);\r\n    if (scope)\r\n        functionScope = addChildScope(functionScope, 512);\r\n    const params = parseFormalParametersOrFormalList(parser, context | 8388608, functionScope, 0, 1);\r\n    const body = parseFunctionBody(parser, (context | 8192 | 4096 | 131072) ^\r\n        (8192 | 4096 | 131072), scope ? addChildScope(functionScope, 128) : functionScope, 8, firstRestricted, scope ? functionScope.scopeError : void 0);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'FunctionDeclaration',\r\n        id,\r\n        params,\r\n        body,\r\n        async: isAsync === 1,\r\n        generator: isGenerator === 1\r\n    });\r\n}\r\nfunction parseFunctionExpression(parser, context, isAsync, inGroup, start, line, column) {\r\n    nextToken(parser, context | 32768);\r\n    const isGenerator = optionalBit(parser, context, 8457014);\r\n    const generatorAndAsyncFlags = (isAsync * 2 + isGenerator) << 21;\r\n    let id = null;\r\n    let firstRestricted;\r\n    let scope = context & 64 ? createScope() : void 0;\r\n    if ((parser.token & (143360 | 4096 | 36864)) > 0) {\r\n        validateFunctionName(parser, ((context | 0x1ec0000) ^ 0x1ec0000) | generatorAndAsyncFlags, parser.token);\r\n        if (scope)\r\n            scope = addChildScope(scope, 256);\r\n        firstRestricted = parser.token;\r\n        id = parseIdentifier(parser, context, 0);\r\n    }\r\n    context =\r\n        ((context | 32243712) ^ 32243712) |\r\n            67108864 |\r\n            generatorAndAsyncFlags |\r\n            (isGenerator ? 0 : 1073741824);\r\n    if (scope)\r\n        scope = addChildScope(scope, 512);\r\n    const params = parseFormalParametersOrFormalList(parser, context | 8388608, scope, inGroup, 1);\r\n    const body = parseFunctionBody(parser, context & ~(0x8001000 | 8192 | 4096 | 131072 | 16384), scope ? addChildScope(scope, 128) : scope, 0, firstRestricted, void 0);\r\n    parser.assignable = 2;\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'FunctionExpression',\r\n        id,\r\n        params,\r\n        body,\r\n        async: isAsync === 1,\r\n        generator: isGenerator === 1\r\n    });\r\n}\r\nfunction parseArrayLiteral(parser, context, skipInitializer, inGroup, start, line, column) {\r\n    const expr = parseArrayExpressionOrPattern(parser, context, void 0, skipInitializer, inGroup, 0, 2, 0, start, line, column);\r\n    if (context & 256 && parser.destructible & 64) {\r\n        report(parser, 61);\r\n    }\r\n    if (parser.destructible & 8) {\r\n        report(parser, 60);\r\n    }\r\n    return expr;\r\n}\r\nfunction parseArrayExpressionOrPattern(parser, context, scope, skipInitializer, inGroup, isPattern, kind, origin, start, line, column) {\r\n    nextToken(parser, context | 32768);\r\n    const elements = [];\r\n    let destructible = 0;\r\n    context = (context | 134217728) ^ 134217728;\r\n    while (parser.token !== 20) {\r\n        if (consumeOpt(parser, context | 32768, 18)) {\r\n            elements.push(null);\r\n        }\r\n        else {\r\n            let left;\r\n            const { token, tokenPos, linePos, colPos, tokenValue } = parser;\r\n            if (token & 143360) {\r\n                left = parsePrimaryExpression(parser, context, kind, 0, 1, 0, inGroup, 1, tokenPos, linePos, colPos);\r\n                if (parser.token === 1077936157) {\r\n                    if (parser.assignable & 2)\r\n                        report(parser, 24);\r\n                    nextToken(parser, context | 32768);\r\n                    if (scope)\r\n                        addVarOrBlock(parser, context, scope, tokenValue, kind, origin);\r\n                    const right = parseExpression(parser, context, 1, 1, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n                    left = finishNode(parser, context, tokenPos, linePos, colPos, isPattern\r\n                        ? {\r\n                            type: 'AssignmentPattern',\r\n                            left,\r\n                            right\r\n                        }\r\n                        : {\r\n                            type: 'AssignmentExpression',\r\n                            operator: '=',\r\n                            left,\r\n                            right\r\n                        });\r\n                    destructible |=\r\n                        parser.destructible & 256\r\n                            ? 256\r\n                            : 0 | (parser.destructible & 128)\r\n                                ? 128\r\n                                : 0;\r\n                }\r\n                else if (parser.token === 18 || parser.token === 20) {\r\n                    if (parser.assignable & 2) {\r\n                        destructible |= 16;\r\n                    }\r\n                    else if (scope) {\r\n                        addVarOrBlock(parser, context, scope, tokenValue, kind, origin);\r\n                    }\r\n                    destructible |=\r\n                        parser.destructible & 256\r\n                            ? 256\r\n                            : 0 | (parser.destructible & 128)\r\n                                ? 128\r\n                                : 0;\r\n                }\r\n                else {\r\n                    destructible |=\r\n                        kind & 1\r\n                            ? 32\r\n                            : (kind & 2) === 0\r\n                                ? 16\r\n                                : 0;\r\n                    left = parseMemberOrUpdateExpression(parser, context, left, inGroup, 0, tokenPos, linePos, colPos);\r\n                    if (parser.token !== 18 && parser.token !== 20) {\r\n                        if (parser.token !== 1077936157)\r\n                            destructible |= 16;\r\n                        left = parseAssignmentExpression(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, left);\r\n                    }\r\n                    else if (parser.token !== 1077936157) {\r\n                        destructible |=\r\n                            parser.assignable & 2\r\n                                ? 16\r\n                                : 32;\r\n                    }\r\n                }\r\n            }\r\n            else if (token & 2097152) {\r\n                left =\r\n                    parser.token === 2162700\r\n                        ? parseObjectLiteralOrPattern(parser, context, scope, 0, inGroup, isPattern, kind, origin, tokenPos, linePos, colPos)\r\n                        : parseArrayExpressionOrPattern(parser, context, scope, 0, inGroup, isPattern, kind, origin, tokenPos, linePos, colPos);\r\n                destructible |= parser.destructible;\r\n                parser.assignable =\r\n                    parser.destructible & 16\r\n                        ? 2\r\n                        : 1;\r\n                if (parser.token === 18 || parser.token === 20) {\r\n                    if (parser.assignable & 2) {\r\n                        destructible |= 16;\r\n                    }\r\n                }\r\n                else if (parser.destructible & 8) {\r\n                    report(parser, 69);\r\n                }\r\n                else {\r\n                    left = parseMemberOrUpdateExpression(parser, context, left, inGroup, 0, tokenPos, linePos, colPos);\r\n                    destructible = parser.assignable & 2 ? 16 : 0;\r\n                    if (parser.token !== 18 && parser.token !== 20) {\r\n                        left = parseAssignmentExpression(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, left);\r\n                    }\r\n                    else if (parser.token !== 1077936157) {\r\n                        destructible |=\r\n                            parser.assignable & 2\r\n                                ? 16\r\n                                : 32;\r\n                    }\r\n                }\r\n            }\r\n            else if (token === 14) {\r\n                left = parseSpreadOrRestElement(parser, context, scope, 20, kind, origin, 0, inGroup, isPattern, tokenPos, linePos, colPos);\r\n                destructible |= parser.destructible;\r\n                if (parser.token !== 18 && parser.token !== 20)\r\n                    report(parser, 28, KeywordDescTable[parser.token & 255]);\r\n            }\r\n            else {\r\n                left = parseLeftHandSideExpression(parser, context, 1, 0, 1, tokenPos, linePos, colPos);\r\n                if (parser.token !== 18 && parser.token !== 20) {\r\n                    left = parseAssignmentExpression(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, left);\r\n                    if ((kind & (2 | 1)) === 0 && token === 67174411)\r\n                        destructible |= 16;\r\n                }\r\n                else if (parser.assignable & 2) {\r\n                    destructible |= 16;\r\n                }\r\n                else if (token === 67174411) {\r\n                    destructible |=\r\n                        parser.assignable & 1 && kind & (2 | 1)\r\n                            ? 32\r\n                            : 16;\r\n                }\r\n            }\r\n            elements.push(left);\r\n            if (consumeOpt(parser, context | 32768, 18)) {\r\n                if (parser.token === 20)\r\n                    break;\r\n            }\r\n            else\r\n                break;\r\n        }\r\n    }\r\n    consume(parser, context, 20);\r\n    const node = finishNode(parser, context, start, line, column, {\r\n        type: isPattern ? 'ArrayPattern' : 'ArrayExpression',\r\n        elements\r\n    });\r\n    if (!skipInitializer && parser.token & 4194304) {\r\n        return parseArrayOrObjectAssignmentPattern(parser, context, destructible, inGroup, isPattern, start, line, column, node);\r\n    }\r\n    parser.destructible = destructible;\r\n    return node;\r\n}\r\nfunction parseArrayOrObjectAssignmentPattern(parser, context, destructible, inGroup, isPattern, start, line, column, node) {\r\n    if (parser.token !== 1077936157)\r\n        report(parser, 24);\r\n    nextToken(parser, context | 32768);\r\n    if (destructible & 16)\r\n        report(parser, 24);\r\n    if (!isPattern)\r\n        reinterpretToPattern(parser, node);\r\n    const { tokenPos, linePos, colPos } = parser;\r\n    const right = parseExpression(parser, context, 1, 1, inGroup, tokenPos, linePos, colPos);\r\n    parser.destructible =\r\n        ((destructible | 64 | 8) ^\r\n            (8 | 64)) |\r\n            (parser.destructible & 128 ? 128 : 0) |\r\n            (parser.destructible & 256 ? 256 : 0);\r\n    return finishNode(parser, context, start, line, column, isPattern\r\n        ? {\r\n            type: 'AssignmentPattern',\r\n            left: node,\r\n            right\r\n        }\r\n        : {\r\n            type: 'AssignmentExpression',\r\n            left: node,\r\n            operator: '=',\r\n            right\r\n        });\r\n}\r\nfunction parseSpreadOrRestElement(parser, context, scope, closingToken, kind, origin, isAsync, inGroup, isPattern, start, line, column) {\r\n    nextToken(parser, context | 32768);\r\n    let argument = null;\r\n    let destructible = 0;\r\n    let { token, tokenValue, tokenPos, linePos, colPos } = parser;\r\n    if (token & (4096 | 143360)) {\r\n        parser.assignable = 1;\r\n        argument = parsePrimaryExpression(parser, context, kind, 0, 1, 0, inGroup, 1, tokenPos, linePos, colPos);\r\n        token = parser.token;\r\n        argument = parseMemberOrUpdateExpression(parser, context, argument, inGroup, 0, tokenPos, linePos, colPos);\r\n        if (parser.token !== 18 && parser.token !== closingToken) {\r\n            if (parser.assignable & 2 && parser.token === 1077936157)\r\n                report(parser, 69);\r\n            destructible |= 16;\r\n            argument = parseAssignmentExpression(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, argument);\r\n        }\r\n        if (parser.assignable & 2) {\r\n            destructible |= 16;\r\n        }\r\n        else if (token === closingToken || token === 18) {\r\n            if (scope)\r\n                addVarOrBlock(parser, context, scope, tokenValue, kind, origin);\r\n        }\r\n        else {\r\n            destructible |= 32;\r\n        }\r\n        destructible |= parser.destructible & 128 ? 128 : 0;\r\n    }\r\n    else if (token === closingToken) {\r\n        report(parser, 39);\r\n    }\r\n    else if (token & 2097152) {\r\n        argument =\r\n            parser.token === 2162700\r\n                ? parseObjectLiteralOrPattern(parser, context, scope, 1, inGroup, isPattern, kind, origin, tokenPos, linePos, colPos)\r\n                : parseArrayExpressionOrPattern(parser, context, scope, 1, inGroup, isPattern, kind, origin, tokenPos, linePos, colPos);\r\n        token = parser.token;\r\n        if (token !== 1077936157 && token !== closingToken && token !== 18) {\r\n            if (parser.destructible & 8)\r\n                report(parser, 69);\r\n            argument = parseMemberOrUpdateExpression(parser, context, argument, inGroup, 0, tokenPos, linePos, colPos);\r\n            destructible |= parser.assignable & 2 ? 16 : 0;\r\n            if ((parser.token & 4194304) === 4194304) {\r\n                if (parser.token !== 1077936157)\r\n                    destructible |= 16;\r\n                argument = parseAssignmentExpression(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, argument);\r\n            }\r\n            else {\r\n                if ((parser.token & 8454144) === 8454144) {\r\n                    argument = parseBinaryExpression(parser, context, 1, tokenPos, linePos, colPos, 4, token, argument);\r\n                }\r\n                if (consumeOpt(parser, context | 32768, 22)) {\r\n                    argument = parseConditionalExpression(parser, context, argument, tokenPos, linePos, colPos);\r\n                }\r\n                destructible |=\r\n                    parser.assignable & 2\r\n                        ? 16\r\n                        : 32;\r\n            }\r\n        }\r\n        else {\r\n            destructible |=\r\n                closingToken === 1074790415 && token !== 1077936157\r\n                    ? 16\r\n                    : parser.destructible;\r\n        }\r\n    }\r\n    else {\r\n        destructible |= 32;\r\n        argument = parseLeftHandSideExpression(parser, context, 1, inGroup, 1, parser.tokenPos, parser.linePos, parser.colPos);\r\n        const { token, tokenPos, linePos, colPos } = parser;\r\n        if (token === 1077936157 && token !== closingToken && token !== 18) {\r\n            if (parser.assignable & 2)\r\n                report(parser, 24);\r\n            argument = parseAssignmentExpression(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, argument);\r\n            destructible |= 16;\r\n        }\r\n        else {\r\n            if (token === 18) {\r\n                destructible |= 16;\r\n            }\r\n            else if (token !== closingToken) {\r\n                argument = parseAssignmentExpression(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, argument);\r\n            }\r\n            destructible |=\r\n                parser.assignable & 1 ? 32 : 16;\r\n        }\r\n        parser.destructible = destructible;\r\n        if (parser.token !== closingToken && parser.token !== 18)\r\n            report(parser, 156);\r\n        return finishNode(parser, context, start, line, column, {\r\n            type: isPattern ? 'RestElement' : 'SpreadElement',\r\n            argument: argument\r\n        });\r\n    }\r\n    if (parser.token !== closingToken) {\r\n        if (kind & 1)\r\n            destructible |= isAsync ? 16 : 32;\r\n        if (consumeOpt(parser, context | 32768, 1077936157)) {\r\n            if (destructible & 16)\r\n                report(parser, 24);\r\n            reinterpretToPattern(parser, argument);\r\n            const right = parseExpression(parser, context, 1, 1, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n            argument = finishNode(parser, context, tokenPos, linePos, colPos, isPattern\r\n                ? {\r\n                    type: 'AssignmentPattern',\r\n                    left: argument,\r\n                    right\r\n                }\r\n                : {\r\n                    type: 'AssignmentExpression',\r\n                    left: argument,\r\n                    operator: '=',\r\n                    right\r\n                });\r\n            destructible = 16;\r\n        }\r\n        else {\r\n            destructible |= 16;\r\n        }\r\n    }\r\n    parser.destructible = destructible;\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: isPattern ? 'RestElement' : 'SpreadElement',\r\n        argument: argument\r\n    });\r\n}\r\nfunction parseMethodDefinition(parser, context, kind, inGroup, start, line, column) {\r\n    const modifierFlags = (kind & 64) === 0 ? 31981568 : 14680064;\r\n    context =\r\n        ((context | modifierFlags) ^ modifierFlags) |\r\n            ((kind & 88) << 18) |\r\n            100925440;\r\n    let scope = context & 64 ? addChildScope(createScope(), 512) : void 0;\r\n    const params = parseMethodFormals(parser, context | 8388608, scope, kind, 1, inGroup);\r\n    if (scope)\r\n        scope = addChildScope(scope, 128);\r\n    const body = parseFunctionBody(parser, context & ~(0x8001000 | 8192), scope, 0, void 0, void 0);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'FunctionExpression',\r\n        params,\r\n        body,\r\n        async: (kind & 16) > 0,\r\n        generator: (kind & 8) > 0,\r\n        id: null\r\n    });\r\n}\r\nfunction parseObjectLiteral(parser, context, skipInitializer, inGroup, start, line, column) {\r\n    const expr = parseObjectLiteralOrPattern(parser, context, void 0, skipInitializer, inGroup, 0, 2, 0, start, line, column);\r\n    if (context & 256 && parser.destructible & 64) {\r\n        report(parser, 61);\r\n    }\r\n    if (parser.destructible & 8) {\r\n        report(parser, 60);\r\n    }\r\n    return expr;\r\n}\r\nfunction parseObjectLiteralOrPattern(parser, context, scope, skipInitializer, inGroup, isPattern, kind, origin, start, line, column) {\r\n    nextToken(parser, context);\r\n    const properties = [];\r\n    let destructible = 0;\r\n    let prototypeCount = 0;\r\n    context = (context | 134217728) ^ 134217728;\r\n    while (parser.token !== 1074790415) {\r\n        const { token, tokenValue, linePos, colPos, tokenPos } = parser;\r\n        if (token === 14) {\r\n            properties.push(parseSpreadOrRestElement(parser, context, scope, 1074790415, kind, origin, 0, inGroup, isPattern, tokenPos, linePos, colPos));\r\n        }\r\n        else {\r\n            let state = 0;\r\n            let key = null;\r\n            let value;\r\n            const t = parser.token;\r\n            if (parser.token & (143360 | 4096) || parser.token === 121) {\r\n                key = parseIdentifier(parser, context, 0);\r\n                if (parser.token === 18 || parser.token === 1074790415 || parser.token === 1077936157) {\r\n                    state |= 4;\r\n                    if (context & 1024 && (token & 537079808) === 537079808) {\r\n                        destructible |= 16;\r\n                    }\r\n                    else {\r\n                        validateBindingIdentifier(parser, context, kind, token, 0);\r\n                    }\r\n                    if (scope)\r\n                        addVarOrBlock(parser, context, scope, tokenValue, kind, origin);\r\n                    if (consumeOpt(parser, context | 32768, 1077936157)) {\r\n                        destructible |= 8;\r\n                        const right = parseExpression(parser, context, 1, 1, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n                        destructible |=\r\n                            parser.destructible & 256\r\n                                ? 256\r\n                                : 0 | (parser.destructible & 128)\r\n                                    ? 128\r\n                                    : 0;\r\n                        value = finishNode(parser, context, tokenPos, linePos, colPos, {\r\n                            type: 'AssignmentPattern',\r\n                            left: context & -2147483648 ? Object.assign({}, key) : key,\r\n                            right\r\n                        });\r\n                    }\r\n                    else {\r\n                        destructible |=\r\n                            (token === 209008 ? 128 : 0) |\r\n                                (token === 121 ? 16 : 0);\r\n                        value = context & -2147483648 ? Object.assign({}, key) : key;\r\n                    }\r\n                }\r\n                else if (consumeOpt(parser, context | 32768, 21)) {\r\n                    const { tokenPos, linePos, colPos } = parser;\r\n                    if (tokenValue === '__proto__')\r\n                        prototypeCount++;\r\n                    if (parser.token & 143360) {\r\n                        const tokenAfterColon = parser.token;\r\n                        const valueAfterColon = parser.tokenValue;\r\n                        destructible |= t === 121 ? 16 : 0;\r\n                        value = parsePrimaryExpression(parser, context, kind, 0, 1, 0, inGroup, 1, tokenPos, linePos, colPos);\r\n                        const { token } = parser;\r\n                        value = parseMemberOrUpdateExpression(parser, context, value, inGroup, 0, tokenPos, linePos, colPos);\r\n                        if (parser.token === 18 || parser.token === 1074790415) {\r\n                            if (token === 1077936157 || token === 1074790415 || token === 18) {\r\n                                destructible |= parser.destructible & 128 ? 128 : 0;\r\n                                if (parser.assignable & 2) {\r\n                                    destructible |= 16;\r\n                                }\r\n                                else if (scope && (tokenAfterColon & 143360) === 143360) {\r\n                                    addVarOrBlock(parser, context, scope, valueAfterColon, kind, origin);\r\n                                }\r\n                            }\r\n                            else {\r\n                                destructible |=\r\n                                    parser.assignable & 1\r\n                                        ? 32\r\n                                        : 16;\r\n                            }\r\n                        }\r\n                        else if ((parser.token & 4194304) === 4194304) {\r\n                            if (parser.assignable & 2) {\r\n                                destructible |= 16;\r\n                            }\r\n                            else if (token !== 1077936157) {\r\n                                destructible |= 32;\r\n                            }\r\n                            else if (scope) {\r\n                                addVarOrBlock(parser, context, scope, valueAfterColon, kind, origin);\r\n                            }\r\n                            value = parseAssignmentExpression(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, value);\r\n                        }\r\n                        else {\r\n                            destructible |= 16;\r\n                            if ((parser.token & 8454144) === 8454144) {\r\n                                value = parseBinaryExpression(parser, context, 1, tokenPos, linePos, colPos, 4, token, value);\r\n                            }\r\n                            if (consumeOpt(parser, context | 32768, 22)) {\r\n                                value = parseConditionalExpression(parser, context, value, tokenPos, linePos, colPos);\r\n                            }\r\n                        }\r\n                    }\r\n                    else if ((parser.token & 2097152) === 2097152) {\r\n                        value =\r\n                            parser.token === 69271571\r\n                                ? parseArrayExpressionOrPattern(parser, context, scope, 0, inGroup, isPattern, kind, origin, tokenPos, linePos, colPos)\r\n                                : parseObjectLiteralOrPattern(parser, context, scope, 0, inGroup, isPattern, kind, origin, tokenPos, linePos, colPos);\r\n                        destructible = parser.destructible;\r\n                        parser.assignable =\r\n                            destructible & 16 ? 2 : 1;\r\n                        if (parser.token === 18 || parser.token === 1074790415) {\r\n                            if (parser.assignable & 2)\r\n                                destructible |= 16;\r\n                        }\r\n                        else if (parser.destructible & 8) {\r\n                            report(parser, 69);\r\n                        }\r\n                        else {\r\n                            value = parseMemberOrUpdateExpression(parser, context, value, inGroup, 0, tokenPos, linePos, colPos);\r\n                            destructible = parser.assignable & 2 ? 16 : 0;\r\n                            if ((parser.token & 4194304) === 4194304) {\r\n                                value = parseAssignmentExpressionOrPattern(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, value);\r\n                            }\r\n                            else {\r\n                                if ((parser.token & 8454144) === 8454144) {\r\n                                    value = parseBinaryExpression(parser, context, 1, tokenPos, linePos, colPos, 4, token, value);\r\n                                }\r\n                                if (consumeOpt(parser, context | 32768, 22)) {\r\n                                    value = parseConditionalExpression(parser, context, value, tokenPos, linePos, colPos);\r\n                                }\r\n                                destructible |=\r\n                                    parser.assignable & 2\r\n                                        ? 16\r\n                                        : 32;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        value = parseLeftHandSideExpression(parser, context, 1, inGroup, 1, tokenPos, linePos, colPos);\r\n                        destructible |=\r\n                            parser.assignable & 1\r\n                                ? 32\r\n                                : 16;\r\n                        if (parser.token === 18 || parser.token === 1074790415) {\r\n                            if (parser.assignable & 2)\r\n                                destructible |= 16;\r\n                        }\r\n                        else {\r\n                            value = parseMemberOrUpdateExpression(parser, context, value, inGroup, 0, tokenPos, linePos, colPos);\r\n                            destructible = parser.assignable & 2 ? 16 : 0;\r\n                            if (parser.token !== 18 && token !== 1074790415) {\r\n                                if (parser.token !== 1077936157)\r\n                                    destructible |= 16;\r\n                                value = parseAssignmentExpression(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, value);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else if (parser.token === 69271571) {\r\n                    destructible |= 16;\r\n                    if (token === 209007)\r\n                        state |= 16;\r\n                    state |=\r\n                        (token === 12402\r\n                            ? 256\r\n                            : token === 12403\r\n                                ? 512\r\n                                : 1) | 2;\r\n                    key = parseComputedPropertyName(parser, context, inGroup);\r\n                    destructible |= parser.assignable;\r\n                    value = parseMethodDefinition(parser, context, state, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n                }\r\n                else if (parser.token & (143360 | 4096)) {\r\n                    destructible |= 16;\r\n                    if (token === 121)\r\n                        report(parser, 93);\r\n                    if (token === 209007) {\r\n                        if (parser.flags & 1)\r\n                            report(parser, 129);\r\n                        state |= 16;\r\n                    }\r\n                    key = parseIdentifier(parser, context, 0);\r\n                    state |=\r\n                        token === 12402\r\n                            ? 256\r\n                            : token === 12403\r\n                                ? 512\r\n                                : 1;\r\n                    value = parseMethodDefinition(parser, context, state, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n                }\r\n                else if (parser.token === 67174411) {\r\n                    destructible |= 16;\r\n                    state |= 1;\r\n                    value = parseMethodDefinition(parser, context, state, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n                }\r\n                else if (parser.token === 8457014) {\r\n                    destructible |= 16;\r\n                    if (token === 12402) {\r\n                        report(parser, 40);\r\n                    }\r\n                    else if (token === 12403) {\r\n                        report(parser, 41);\r\n                    }\r\n                    else if (token === 143483) {\r\n                        report(parser, 93);\r\n                    }\r\n                    nextToken(parser, context);\r\n                    state |=\r\n                        8 | 1 | (token === 209007 ? 16 : 0);\r\n                    if (parser.token & 143360) {\r\n                        key = parseIdentifier(parser, context, 0);\r\n                    }\r\n                    else if ((parser.token & 134217728) === 134217728) {\r\n                        key = parseLiteral(parser, context);\r\n                    }\r\n                    else if (parser.token === 69271571) {\r\n                        state |= 2;\r\n                        key = parseComputedPropertyName(parser, context, inGroup);\r\n                        destructible |= parser.assignable;\r\n                    }\r\n                    else {\r\n                        report(parser, 28, KeywordDescTable[parser.token & 255]);\r\n                    }\r\n                    value = parseMethodDefinition(parser, context, state, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n                }\r\n                else if ((parser.token & 134217728) === 134217728) {\r\n                    if (token === 209007)\r\n                        state |= 16;\r\n                    state |=\r\n                        token === 12402\r\n                            ? 256\r\n                            : token === 12403\r\n                                ? 512\r\n                                : 1;\r\n                    destructible |= 16;\r\n                    key = parseLiteral(parser, context);\r\n                    value = parseMethodDefinition(parser, context, state, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n                }\r\n                else {\r\n                    report(parser, 130);\r\n                }\r\n            }\r\n            else if ((parser.token & 134217728) === 134217728) {\r\n                key = parseLiteral(parser, context);\r\n                if (parser.token === 21) {\r\n                    consume(parser, context | 32768, 21);\r\n                    const { tokenPos, linePos, colPos } = parser;\r\n                    if (tokenValue === '__proto__')\r\n                        prototypeCount++;\r\n                    if (parser.token & 143360) {\r\n                        value = parsePrimaryExpression(parser, context, kind, 0, 1, 0, inGroup, 1, tokenPos, linePos, colPos);\r\n                        const { token, tokenValue: valueAfterColon } = parser;\r\n                        value = parseMemberOrUpdateExpression(parser, context, value, inGroup, 0, tokenPos, linePos, colPos);\r\n                        if (parser.token === 18 || parser.token === 1074790415) {\r\n                            if (token === 1077936157 || token === 1074790415 || token === 18) {\r\n                                if (parser.assignable & 2) {\r\n                                    destructible |= 16;\r\n                                }\r\n                                else if (scope) {\r\n                                    addVarOrBlock(parser, context, scope, valueAfterColon, kind, origin);\r\n                                }\r\n                            }\r\n                            else {\r\n                                destructible |=\r\n                                    parser.assignable & 1\r\n                                        ? 32\r\n                                        : 16;\r\n                            }\r\n                        }\r\n                        else if (parser.token === 1077936157) {\r\n                            if (parser.assignable & 2)\r\n                                destructible |= 16;\r\n                            value = parseAssignmentExpression(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, value);\r\n                        }\r\n                        else {\r\n                            destructible |= 16;\r\n                            value = parseAssignmentExpression(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, value);\r\n                        }\r\n                    }\r\n                    else if ((parser.token & 2097152) === 2097152) {\r\n                        value =\r\n                            parser.token === 69271571\r\n                                ? parseArrayExpressionOrPattern(parser, context, scope, 0, inGroup, isPattern, kind, origin, tokenPos, linePos, colPos)\r\n                                : parseObjectLiteralOrPattern(parser, context, scope, 0, inGroup, isPattern, kind, origin, tokenPos, linePos, colPos);\r\n                        destructible = parser.destructible;\r\n                        parser.assignable =\r\n                            destructible & 16 ? 2 : 1;\r\n                        if (parser.token === 18 || parser.token === 1074790415) {\r\n                            if (parser.assignable & 2) {\r\n                                destructible |= 16;\r\n                            }\r\n                        }\r\n                        else if ((parser.destructible & 8) !== 8) {\r\n                            value = parseMemberOrUpdateExpression(parser, context, value, inGroup, 0, tokenPos, linePos, colPos);\r\n                            destructible = parser.assignable & 2 ? 16 : 0;\r\n                            if ((parser.token & 4194304) === 4194304) {\r\n                                value = parseAssignmentExpressionOrPattern(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, value);\r\n                            }\r\n                            else {\r\n                                if ((parser.token & 8454144) === 8454144) {\r\n                                    value = parseBinaryExpression(parser, context, 1, tokenPos, linePos, colPos, 4, token, value);\r\n                                }\r\n                                if (consumeOpt(parser, context | 32768, 22)) {\r\n                                    value = parseConditionalExpression(parser, context, value, tokenPos, linePos, colPos);\r\n                                }\r\n                                destructible |=\r\n                                    parser.assignable & 2\r\n                                        ? 16\r\n                                        : 32;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        value = parseLeftHandSideExpression(parser, context, 1, 0, 1, tokenPos, linePos, colPos);\r\n                        destructible |=\r\n                            parser.assignable & 1\r\n                                ? 32\r\n                                : 16;\r\n                        if (parser.token === 18 || parser.token === 1074790415) {\r\n                            if (parser.assignable & 2) {\r\n                                destructible |= 16;\r\n                            }\r\n                        }\r\n                        else {\r\n                            value = parseMemberOrUpdateExpression(parser, context, value, inGroup, 0, tokenPos, linePos, colPos);\r\n                            destructible = parser.assignable & 1 ? 0 : 16;\r\n                            if (parser.token !== 18 && parser.token !== 1074790415) {\r\n                                if (parser.token !== 1077936157)\r\n                                    destructible |= 16;\r\n                                value = parseAssignmentExpression(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, value);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else if (parser.token === 67174411) {\r\n                    state |= 1;\r\n                    value = parseMethodDefinition(parser, context, state, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n                    destructible = parser.assignable | 16;\r\n                }\r\n                else {\r\n                    report(parser, 131);\r\n                }\r\n            }\r\n            else if (parser.token === 69271571) {\r\n                key = parseComputedPropertyName(parser, context, inGroup);\r\n                destructible |= parser.destructible & 256 ? 256 : 0;\r\n                state |= 2;\r\n                if (parser.token === 21) {\r\n                    nextToken(parser, context | 32768);\r\n                    const { tokenPos, linePos, colPos, tokenValue, token: tokenAfterColon } = parser;\r\n                    if (parser.token & 143360) {\r\n                        value = parsePrimaryExpression(parser, context, kind, 0, 1, 0, inGroup, 1, tokenPos, linePos, colPos);\r\n                        const { token } = parser;\r\n                        value = parseMemberOrUpdateExpression(parser, context, value, inGroup, 0, tokenPos, linePos, colPos);\r\n                        if ((parser.token & 4194304) === 4194304) {\r\n                            destructible |=\r\n                                parser.assignable & 2\r\n                                    ? 16\r\n                                    : token === 1077936157\r\n                                        ? 0\r\n                                        : 32;\r\n                            value = parseAssignmentExpressionOrPattern(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, value);\r\n                        }\r\n                        else if (parser.token === 18 || parser.token === 1074790415) {\r\n                            if (token === 1077936157 || token === 1074790415 || token === 18) {\r\n                                if (parser.assignable & 2) {\r\n                                    destructible |= 16;\r\n                                }\r\n                                else if (scope && (tokenAfterColon & 143360) === 143360) {\r\n                                    addVarOrBlock(parser, context, scope, tokenValue, kind, origin);\r\n                                }\r\n                            }\r\n                            else {\r\n                                destructible |=\r\n                                    parser.assignable & 1\r\n                                        ? 32\r\n                                        : 16;\r\n                            }\r\n                        }\r\n                        else {\r\n                            destructible |= 16;\r\n                            value = parseAssignmentExpression(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, value);\r\n                        }\r\n                    }\r\n                    else if ((parser.token & 2097152) === 2097152) {\r\n                        value =\r\n                            parser.token === 69271571\r\n                                ? parseArrayExpressionOrPattern(parser, context, scope, 0, inGroup, isPattern, kind, origin, tokenPos, linePos, colPos)\r\n                                : parseObjectLiteralOrPattern(parser, context, scope, 0, inGroup, isPattern, kind, origin, tokenPos, linePos, colPos);\r\n                        destructible = parser.destructible;\r\n                        parser.assignable =\r\n                            destructible & 16 ? 2 : 1;\r\n                        if (parser.token === 18 || parser.token === 1074790415) {\r\n                            if (parser.assignable & 2)\r\n                                destructible |= 16;\r\n                        }\r\n                        else if (destructible & 8) {\r\n                            report(parser, 60);\r\n                        }\r\n                        else {\r\n                            value = parseMemberOrUpdateExpression(parser, context, value, inGroup, 0, tokenPos, linePos, colPos);\r\n                            destructible =\r\n                                parser.assignable & 2 ? destructible | 16 : 0;\r\n                            if ((parser.token & 4194304) === 4194304) {\r\n                                if (parser.token !== 1077936157)\r\n                                    destructible |= 16;\r\n                                value = parseAssignmentExpressionOrPattern(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, value);\r\n                            }\r\n                            else {\r\n                                if ((parser.token & 8454144) === 8454144) {\r\n                                    value = parseBinaryExpression(parser, context, 1, tokenPos, linePos, colPos, 4, token, value);\r\n                                }\r\n                                if (consumeOpt(parser, context | 32768, 22)) {\r\n                                    value = parseConditionalExpression(parser, context, value, tokenPos, linePos, colPos);\r\n                                }\r\n                                destructible |=\r\n                                    parser.assignable & 2\r\n                                        ? 16\r\n                                        : 32;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        value = parseLeftHandSideExpression(parser, context, 1, 0, 1, tokenPos, linePos, colPos);\r\n                        destructible |=\r\n                            parser.assignable & 1\r\n                                ? 32\r\n                                : 16;\r\n                        if (parser.token === 18 || parser.token === 1074790415) {\r\n                            if (parser.assignable & 2)\r\n                                destructible |= 16;\r\n                        }\r\n                        else {\r\n                            value = parseMemberOrUpdateExpression(parser, context, value, inGroup, 0, tokenPos, linePos, colPos);\r\n                            destructible = parser.assignable & 1 ? 0 : 16;\r\n                            if (parser.token !== 18 && parser.token !== 1074790415) {\r\n                                if (parser.token !== 1077936157)\r\n                                    destructible |= 16;\r\n                                value = parseAssignmentExpression(parser, context, inGroup, isPattern, tokenPos, linePos, colPos, value);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else if (parser.token === 67174411) {\r\n                    state |= 1;\r\n                    value = parseMethodDefinition(parser, context, state, inGroup, parser.tokenPos, linePos, colPos);\r\n                    destructible = 16;\r\n                }\r\n                else {\r\n                    report(parser, 42);\r\n                }\r\n            }\r\n            else if (token === 8457014) {\r\n                consume(parser, context | 32768, 8457014);\r\n                state |= 8;\r\n                if (parser.token & 143360) {\r\n                    const { token, line, index } = parser;\r\n                    key = parseIdentifier(parser, context, 0);\r\n                    state |= 1;\r\n                    if (parser.token === 67174411) {\r\n                        destructible |= 16;\r\n                        value = parseMethodDefinition(parser, context, state, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n                    }\r\n                    else {\r\n                        reportMessageAt(index, line, index, token === 209007\r\n                            ? 44\r\n                            : token === 12402 || parser.token === 12403\r\n                                ? 43\r\n                                : 45, KeywordDescTable[token & 255]);\r\n                    }\r\n                }\r\n                else if ((parser.token & 134217728) === 134217728) {\r\n                    destructible |= 16;\r\n                    key = parseLiteral(parser, context);\r\n                    state |= 1;\r\n                    value = parseMethodDefinition(parser, context, state, inGroup, tokenPos, linePos, colPos);\r\n                }\r\n                else if (parser.token === 69271571) {\r\n                    destructible |= 16;\r\n                    state |= 2 | 1;\r\n                    key = parseComputedPropertyName(parser, context, inGroup);\r\n                    value = parseMethodDefinition(parser, context, state, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n                }\r\n                else {\r\n                    report(parser, 123);\r\n                }\r\n            }\r\n            else {\r\n                report(parser, 28, KeywordDescTable[token & 255]);\r\n            }\r\n            destructible |= parser.destructible & 128 ? 128 : 0;\r\n            parser.destructible = destructible;\r\n            properties.push(finishNode(parser, context, tokenPos, linePos, colPos, {\r\n                type: 'Property',\r\n                key: key,\r\n                value,\r\n                kind: !(state & 768) ? 'init' : state & 512 ? 'set' : 'get',\r\n                computed: (state & 2) > 0,\r\n                method: (state & 1) > 0,\r\n                shorthand: (state & 4) > 0\r\n            }));\r\n        }\r\n        destructible |= parser.destructible;\r\n        if (parser.token !== 18)\r\n            break;\r\n        nextToken(parser, context);\r\n    }\r\n    consume(parser, context, 1074790415);\r\n    if (prototypeCount > 1)\r\n        destructible |= 64;\r\n    const node = finishNode(parser, context, start, line, column, {\r\n        type: isPattern ? 'ObjectPattern' : 'ObjectExpression',\r\n        properties\r\n    });\r\n    if (!skipInitializer && parser.token & 4194304) {\r\n        return parseArrayOrObjectAssignmentPattern(parser, context, destructible, inGroup, isPattern, start, line, column, node);\r\n    }\r\n    parser.destructible = destructible;\r\n    return node;\r\n}\r\nfunction parseMethodFormals(parser, context, scope, kind, type, inGroup) {\r\n    consume(parser, context, 67174411);\r\n    const params = [];\r\n    parser.flags = (parser.flags | 128) ^ 128;\r\n    if (parser.token === 16) {\r\n        if (kind & 512) {\r\n            report(parser, 35, 'Setter', 'one', '');\r\n        }\r\n        nextToken(parser, context);\r\n        return params;\r\n    }\r\n    if (kind & 256) {\r\n        report(parser, 35, 'Getter', 'no', 's');\r\n    }\r\n    if (kind & 512 && parser.token === 14) {\r\n        report(parser, 36);\r\n    }\r\n    context = (context | 134217728) ^ 134217728;\r\n    let setterArgs = 0;\r\n    let isSimpleParameterList = 0;\r\n    while (parser.token !== 18) {\r\n        let left = null;\r\n        const { tokenPos, linePos, colPos } = parser;\r\n        if (parser.token & 143360) {\r\n            if ((context & 1024) === 0) {\r\n                if ((parser.token & 36864) === 36864) {\r\n                    parser.flags |= 256;\r\n                }\r\n                if ((parser.token & 537079808) === 537079808) {\r\n                    parser.flags |= 512;\r\n                }\r\n            }\r\n            left = parseAndClassifyIdentifier(parser, context, scope, kind | 1, 0, tokenPos, linePos, colPos);\r\n        }\r\n        else {\r\n            if (parser.token === 2162700) {\r\n                left = parseObjectLiteralOrPattern(parser, context, scope, 1, inGroup, 1, type, 0, tokenPos, linePos, colPos);\r\n            }\r\n            else if (parser.token === 69271571) {\r\n                left = parseArrayExpressionOrPattern(parser, context, scope, 1, inGroup, 1, type, 0, tokenPos, linePos, colPos);\r\n            }\r\n            else if (parser.token === 14) {\r\n                left = parseSpreadOrRestElement(parser, context, scope, 16, type, 0, 0, inGroup, 1, tokenPos, linePos, colPos);\r\n            }\r\n            isSimpleParameterList = 1;\r\n            if (parser.destructible & (32 | 16))\r\n                report(parser, 48);\r\n        }\r\n        if (parser.token === 1077936157) {\r\n            nextToken(parser, context | 32768);\r\n            isSimpleParameterList = 1;\r\n            const right = parseExpression(parser, context, 1, 1, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n            left = finishNode(parser, context, tokenPos, linePos, colPos, {\r\n                type: 'AssignmentPattern',\r\n                left: left,\r\n                right\r\n            });\r\n        }\r\n        setterArgs++;\r\n        params.push(left);\r\n        if (!consumeOpt(parser, context, 18))\r\n            break;\r\n        if (parser.token === 16) {\r\n            break;\r\n        }\r\n    }\r\n    if (kind & 512 && setterArgs !== 1) {\r\n        report(parser, 35, 'Setter', 'one', '');\r\n    }\r\n    if (scope && scope.scopeError !== void 0)\r\n        reportScopeError(scope.scopeError);\r\n    if (isSimpleParameterList)\r\n        parser.flags |= 128;\r\n    consume(parser, context, 16);\r\n    return params;\r\n}\r\nfunction parseComputedPropertyName(parser, context, inGroup) {\r\n    nextToken(parser, context | 32768);\r\n    const key = parseExpression(parser, (context | 134217728) ^ 134217728, 1, 0, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n    consume(parser, context, 20);\r\n    return key;\r\n}\r\nfunction parseParenthesizedExpression(parser, context, canAssign, kind, origin, start, line, column) {\r\n    parser.flags = (parser.flags | 128) ^ 128;\r\n    const { tokenPos: piStart, linePos: plStart, colPos: pcStart } = parser;\r\n    nextToken(parser, context | 32768 | 1073741824);\r\n    const scope = context & 64 ? addChildScope(createScope(), 1024) : void 0;\r\n    context = (context | 134217728) ^ 134217728;\r\n    if (consumeOpt(parser, context, 16)) {\r\n        return parseParenthesizedArrow(parser, context, scope, [], canAssign, 0, start, line, column);\r\n    }\r\n    let destructible = 0;\r\n    parser.destructible &= ~(256 | 128);\r\n    let expr;\r\n    let expressions = [];\r\n    let isSequence = 0;\r\n    let isSimpleParameterList = 0;\r\n    const { tokenPos: iStart, linePos: lStart, colPos: cStart } = parser;\r\n    parser.assignable = 1;\r\n    while (parser.token !== 16) {\r\n        const { token, tokenPos, linePos, colPos } = parser;\r\n        if (token & (143360 | 4096)) {\r\n            if (scope)\r\n                addBlockName(parser, context, scope, parser.tokenValue, 1, 0);\r\n            expr = parsePrimaryExpression(parser, context, kind, 0, 1, 0, 1, 1, tokenPos, linePos, colPos);\r\n            if (parser.token === 16 || parser.token === 18) {\r\n                if (parser.assignable & 2) {\r\n                    destructible |= 16;\r\n                    isSimpleParameterList = 1;\r\n                }\r\n                else if ((token & 537079808) === 537079808 ||\r\n                    (token & 36864) === 36864) {\r\n                    isSimpleParameterList = 1;\r\n                }\r\n            }\r\n            else {\r\n                if (parser.token === 1077936157) {\r\n                    isSimpleParameterList = 1;\r\n                }\r\n                else {\r\n                    destructible |= 16;\r\n                }\r\n                expr = parseMemberOrUpdateExpression(parser, context, expr, 1, 0, tokenPos, linePos, colPos);\r\n                if (parser.token !== 16 && parser.token !== 18) {\r\n                    expr = parseAssignmentExpression(parser, context, 1, 0, tokenPos, linePos, colPos, expr);\r\n                }\r\n            }\r\n        }\r\n        else if ((token & 2097152) === 2097152) {\r\n            expr =\r\n                token === 2162700\r\n                    ? parseObjectLiteralOrPattern(parser, context | 1073741824, scope, 0, 1, 0, kind, origin, tokenPos, linePos, colPos)\r\n                    : parseArrayExpressionOrPattern(parser, context | 1073741824, scope, 0, 1, 0, kind, origin, tokenPos, linePos, colPos);\r\n            destructible |= parser.destructible;\r\n            isSimpleParameterList = 1;\r\n            parser.assignable = 2;\r\n            if (parser.token !== 16 && parser.token !== 18) {\r\n                if (destructible & 8)\r\n                    report(parser, 119);\r\n                expr = parseMemberOrUpdateExpression(parser, context, expr, 0, 0, tokenPos, linePos, colPos);\r\n                destructible |= 16;\r\n                if (parser.token !== 16 && parser.token !== 18) {\r\n                    expr = parseAssignmentExpression(parser, context, 0, 0, tokenPos, linePos, colPos, expr);\r\n                }\r\n            }\r\n        }\r\n        else if (token === 14) {\r\n            expr = parseSpreadOrRestElement(parser, context, scope, 16, kind, origin, 0, 1, 0, tokenPos, linePos, colPos);\r\n            if (parser.destructible & 16)\r\n                report(parser, 72);\r\n            isSimpleParameterList = 1;\r\n            if (isSequence && (parser.token === 16 || parser.token === 18)) {\r\n                expressions.push(expr);\r\n            }\r\n            destructible |= 8;\r\n            break;\r\n        }\r\n        else {\r\n            destructible |= 16;\r\n            expr = parseExpression(parser, context, 1, 0, 1, tokenPos, linePos, colPos);\r\n            if (isSequence && (parser.token === 16 || parser.token === 18)) {\r\n                expressions.push(expr);\r\n            }\r\n            if (parser.token === 18) {\r\n                if (!isSequence) {\r\n                    isSequence = 1;\r\n                    expressions = [expr];\r\n                }\r\n            }\r\n            if (isSequence) {\r\n                while (consumeOpt(parser, context | 32768, 18)) {\r\n                    expressions.push(parseExpression(parser, context, 1, 0, 1, parser.tokenPos, parser.linePos, parser.colPos));\r\n                }\r\n                parser.assignable = 2;\r\n                expr = finishNode(parser, context, iStart, lStart, cStart, {\r\n                    type: 'SequenceExpression',\r\n                    expressions\r\n                });\r\n            }\r\n            consume(parser, context, 16);\r\n            parser.destructible = destructible;\r\n            return expr;\r\n        }\r\n        if (isSequence && (parser.token === 16 || parser.token === 18)) {\r\n            expressions.push(expr);\r\n        }\r\n        if (!consumeOpt(parser, context | 32768, 18))\r\n            break;\r\n        if (!isSequence) {\r\n            isSequence = 1;\r\n            expressions = [expr];\r\n        }\r\n        if (parser.token === 16) {\r\n            destructible |= 8;\r\n            break;\r\n        }\r\n    }\r\n    if (isSequence) {\r\n        parser.assignable = 2;\r\n        expr = finishNode(parser, context, iStart, lStart, cStart, {\r\n            type: 'SequenceExpression',\r\n            expressions\r\n        });\r\n    }\r\n    consume(parser, context, 16);\r\n    if (destructible & 16 && destructible & 8)\r\n        report(parser, 146);\r\n    destructible |=\r\n        parser.destructible & 256\r\n            ? 256\r\n            : 0 | (parser.destructible & 128)\r\n                ? 128\r\n                : 0;\r\n    if (parser.token === 10) {\r\n        if (destructible & (32 | 16))\r\n            report(parser, 47);\r\n        if (context & (4194304 | 2048) && destructible & 128)\r\n            report(parser, 29);\r\n        if (context & (1024 | 2097152) && destructible & 256) {\r\n            report(parser, 30);\r\n        }\r\n        if (isSimpleParameterList)\r\n            parser.flags |= 128;\r\n        return parseParenthesizedArrow(parser, context, scope, isSequence ? expressions : [expr], canAssign, 0, start, line, column);\r\n    }\r\n    else if (destructible & 8) {\r\n        report(parser, 140);\r\n    }\r\n    parser.destructible = ((parser.destructible | 256) ^ 256) | destructible;\r\n    return context & 128\r\n        ? finishNode(parser, context, piStart, plStart, pcStart, {\r\n            type: 'ParenthesizedExpression',\r\n            expression: expr\r\n        })\r\n        : expr;\r\n}\r\nfunction parseIdentifierOrArrow(parser, context, start, line, column) {\r\n    const { tokenValue } = parser;\r\n    const expr = parseIdentifier(parser, context, 0);\r\n    parser.assignable = 1;\r\n    if (parser.token === 10) {\r\n        let scope = void 0;\r\n        if (context & 64)\r\n            scope = createArrowHeadParsingScope(parser, context, tokenValue);\r\n        parser.flags = (parser.flags | 128) ^ 128;\r\n        return parseArrowFunctionExpression(parser, context, scope, [expr], 0, start, line, column);\r\n    }\r\n    return expr;\r\n}\r\nfunction parseArrowFromIdentifier(parser, context, value, expr, inNew, canAssign, isAsync, start, line, column) {\r\n    if (!canAssign)\r\n        report(parser, 55);\r\n    if (inNew)\r\n        report(parser, 49);\r\n    parser.flags &= ~128;\r\n    const scope = context & 64 ? createArrowHeadParsingScope(parser, context, value) : void 0;\r\n    return parseArrowFunctionExpression(parser, context, scope, [expr], isAsync, start, line, column);\r\n}\r\nfunction parseParenthesizedArrow(parser, context, scope, params, canAssign, isAsync, start, line, column) {\r\n    if (!canAssign)\r\n        report(parser, 55);\r\n    for (let i = 0; i < params.length; ++i)\r\n        reinterpretToPattern(parser, params[i]);\r\n    return parseArrowFunctionExpression(parser, context, scope, params, isAsync, start, line, column);\r\n}\r\nfunction parseArrowFunctionExpression(parser, context, scope, params, isAsync, start, line, column) {\r\n    if (parser.flags & 1)\r\n        report(parser, 46);\r\n    consume(parser, context | 32768, 10);\r\n    context = ((context | 15728640) ^ 15728640) | (isAsync << 22);\r\n    const expression = parser.token !== 2162700;\r\n    let body;\r\n    if (scope && scope.scopeError !== void 0) {\r\n        reportScopeError(scope.scopeError);\r\n    }\r\n    if (expression) {\r\n        body = parseExpression(parser, context, 1, 0, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n    }\r\n    else {\r\n        if (scope)\r\n            scope = addChildScope(scope, 128);\r\n        body = parseFunctionBody(parser, (context | 134221824 | 8192 | 16384) ^\r\n            (134221824 | 8192 | 16384), scope, 16, void 0, void 0);\r\n        switch (parser.token) {\r\n            case 69271571:\r\n                if ((parser.flags & 1) === 0) {\r\n                    report(parser, 113);\r\n                }\r\n                break;\r\n            case 67108877:\r\n            case 67174409:\r\n            case 22:\r\n                report(parser, 114);\r\n            case 67174411:\r\n                if ((parser.flags & 1) === 0) {\r\n                    report(parser, 113);\r\n                }\r\n                parser.flags |= 1024;\r\n                break;\r\n        }\r\n        if ((parser.token & 8454144) === 8454144 && (parser.flags & 1) === 0)\r\n            report(parser, 28, KeywordDescTable[parser.token & 255]);\r\n        if ((parser.token & 33619968) === 33619968)\r\n            report(parser, 122);\r\n    }\r\n    parser.assignable = 2;\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'ArrowFunctionExpression',\r\n        params,\r\n        body,\r\n        async: isAsync === 1,\r\n        expression\r\n    });\r\n}\r\nfunction parseFormalParametersOrFormalList(parser, context, scope, inGroup, kind) {\r\n    consume(parser, context, 67174411);\r\n    parser.flags = (parser.flags | 128) ^ 128;\r\n    const params = [];\r\n    if (consumeOpt(parser, context, 16))\r\n        return params;\r\n    context = (context | 134217728) ^ 134217728;\r\n    let isSimpleParameterList = 0;\r\n    while (parser.token !== 18) {\r\n        let left;\r\n        const { tokenPos, linePos, colPos } = parser;\r\n        if (parser.token & 143360) {\r\n            if ((context & 1024) === 0) {\r\n                if ((parser.token & 36864) === 36864) {\r\n                    parser.flags |= 256;\r\n                }\r\n                if ((parser.token & 537079808) === 537079808) {\r\n                    parser.flags |= 512;\r\n                }\r\n            }\r\n            left = parseAndClassifyIdentifier(parser, context, scope, kind | 1, 0, tokenPos, linePos, colPos);\r\n        }\r\n        else {\r\n            if (parser.token === 2162700) {\r\n                left = parseObjectLiteralOrPattern(parser, context, scope, 1, inGroup, 1, kind, 0, tokenPos, linePos, colPos);\r\n            }\r\n            else if (parser.token === 69271571) {\r\n                left = parseArrayExpressionOrPattern(parser, context, scope, 1, inGroup, 1, kind, 0, tokenPos, linePos, colPos);\r\n            }\r\n            else if (parser.token === 14) {\r\n                left = parseSpreadOrRestElement(parser, context, scope, 16, kind, 0, 0, inGroup, 1, tokenPos, linePos, colPos);\r\n            }\r\n            else {\r\n                report(parser, 28, KeywordDescTable[parser.token & 255]);\r\n            }\r\n            isSimpleParameterList = 1;\r\n            if (parser.destructible & (32 | 16)) {\r\n                report(parser, 48);\r\n            }\r\n        }\r\n        if (parser.token === 1077936157) {\r\n            nextToken(parser, context | 32768);\r\n            isSimpleParameterList = 1;\r\n            const right = parseExpression(parser, context, 1, 1, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n            left = finishNode(parser, context, tokenPos, linePos, colPos, {\r\n                type: 'AssignmentPattern',\r\n                left,\r\n                right\r\n            });\r\n        }\r\n        params.push(left);\r\n        if (!consumeOpt(parser, context, 18))\r\n            break;\r\n        if (parser.token === 16) {\r\n            break;\r\n        }\r\n    }\r\n    if (isSimpleParameterList)\r\n        parser.flags |= 128;\r\n    if (scope && (isSimpleParameterList || context & 1024) && scope.scopeError !== void 0) {\r\n        reportScopeError(scope.scopeError);\r\n    }\r\n    consume(parser, context, 16);\r\n    return params;\r\n}\r\nfunction parseMembeExpressionNoCall(parser, context, expr, inGroup, start, line, column) {\r\n    const { token } = parser;\r\n    if (token & 67108864) {\r\n        if (token === 67108877) {\r\n            nextToken(parser, context | 1073741824);\r\n            parser.assignable = 1;\r\n            const property = parsePropertyOrPrivatePropertyName(parser, context);\r\n            return parseMembeExpressionNoCall(parser, context, finishNode(parser, context, start, line, column, {\r\n                type: 'MemberExpression',\r\n                object: expr,\r\n                computed: false,\r\n                property\r\n            }), 0, start, line, column);\r\n        }\r\n        else if (token === 69271571) {\r\n            nextToken(parser, context | 32768);\r\n            const { tokenPos, linePos, colPos } = parser;\r\n            const property = parseExpressions(parser, context, inGroup, 1, tokenPos, linePos, colPos);\r\n            consume(parser, context, 20);\r\n            parser.assignable = 1;\r\n            return parseMembeExpressionNoCall(parser, context, finishNode(parser, context, start, line, column, {\r\n                type: 'MemberExpression',\r\n                object: expr,\r\n                computed: true,\r\n                property\r\n            }), 0, start, line, column);\r\n        }\r\n        else if (token === 67174408 || token === 67174409) {\r\n            parser.assignable = 2;\r\n            return parseMembeExpressionNoCall(parser, context, finishNode(parser, context, start, line, column, {\r\n                type: 'TaggedTemplateExpression',\r\n                tag: expr,\r\n                quasi: parser.token === 67174408\r\n                    ? parseTemplate(parser, context | 65536)\r\n                    : parseTemplateLiteral(parser, context, parser.tokenPos, parser.linePos, parser.colPos)\r\n            }), 0, start, line, column);\r\n        }\r\n    }\r\n    return expr;\r\n}\r\nfunction parseNewExpression(parser, context, inGroup, start, line, column) {\r\n    const id = parseIdentifier(parser, context | 32768, 0);\r\n    const { tokenPos, linePos, colPos } = parser;\r\n    if (consumeOpt(parser, context, 67108877)) {\r\n        if (context & 67108864 && parser.token === 143494) {\r\n            parser.assignable = 2;\r\n            return parseMetaProperty(parser, context, id, start, line, column);\r\n        }\r\n        report(parser, 92);\r\n    }\r\n    parser.assignable = 2;\r\n    if ((parser.token & 16842752) === 16842752) {\r\n        report(parser, 63, KeywordDescTable[parser.token & 255]);\r\n    }\r\n    const expr = parsePrimaryExpression(parser, context, 2, 1, 0, 0, inGroup, 1, tokenPos, linePos, colPos);\r\n    context = (context | 134217728) ^ 134217728;\r\n    if (parser.token === 67108991)\r\n        report(parser, 163);\r\n    const callee = parseMembeExpressionNoCall(parser, context, expr, inGroup, tokenPos, linePos, colPos);\r\n    parser.assignable = 2;\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'NewExpression',\r\n        callee,\r\n        arguments: parser.token === 67174411 ? parseArguments(parser, context, inGroup) : []\r\n    });\r\n}\r\nfunction parseMetaProperty(parser, context, meta, start, line, column) {\r\n    const property = parseIdentifier(parser, context, 0);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'MetaProperty',\r\n        meta,\r\n        property\r\n    });\r\n}\r\nfunction parseAsyncArrowAfterIdent(parser, context, canAssign, start, line, column) {\r\n    if (parser.token === 209008)\r\n        report(parser, 29);\r\n    if (context & (1024 | 2097152) && parser.token === 241773) {\r\n        report(parser, 30);\r\n    }\r\n    if ((parser.token & 537079808) === 537079808) {\r\n        parser.flags |= 512;\r\n    }\r\n    return parseArrowFromIdentifier(parser, context, parser.tokenValue, parseIdentifier(parser, context, 0), 0, canAssign, 1, start, line, column);\r\n}\r\nfunction parseAsyncArrowOrCallExpression(parser, context, callee, canAssign, kind, origin, flags, start, line, column) {\r\n    nextToken(parser, context | 32768);\r\n    const scope = context & 64 ? addChildScope(createScope(), 1024) : void 0;\r\n    context = (context | 134217728) ^ 134217728;\r\n    if (consumeOpt(parser, context, 16)) {\r\n        if (parser.token === 10) {\r\n            if (flags & 1)\r\n                report(parser, 46);\r\n            return parseParenthesizedArrow(parser, context, scope, [], canAssign, 1, start, line, column);\r\n        }\r\n        return finishNode(parser, context, start, line, column, {\r\n            type: 'CallExpression',\r\n            callee,\r\n            arguments: []\r\n        });\r\n    }\r\n    let destructible = 0;\r\n    let expr = null;\r\n    let isSimpleParameterList = 0;\r\n    parser.destructible =\r\n        (parser.destructible | 256 | 128) ^\r\n            (256 | 128);\r\n    const params = [];\r\n    while (parser.token !== 16) {\r\n        const { token, tokenPos, linePos, colPos } = parser;\r\n        if (token & (143360 | 4096)) {\r\n            if (scope)\r\n                addBlockName(parser, context, scope, parser.tokenValue, kind, 0);\r\n            expr = parsePrimaryExpression(parser, context, kind, 0, 1, 0, 1, 1, tokenPos, linePos, colPos);\r\n            if (parser.token === 16 || parser.token === 18) {\r\n                if (parser.assignable & 2) {\r\n                    destructible |= 16;\r\n                    isSimpleParameterList = 1;\r\n                }\r\n                else if ((token & 537079808) === 537079808) {\r\n                    parser.flags |= 512;\r\n                }\r\n                else if ((token & 36864) === 36864) {\r\n                    parser.flags |= 256;\r\n                }\r\n            }\r\n            else {\r\n                if (parser.token === 1077936157) {\r\n                    isSimpleParameterList = 1;\r\n                }\r\n                else {\r\n                    destructible |= 16;\r\n                }\r\n                expr = parseMemberOrUpdateExpression(parser, context, expr, 1, 0, tokenPos, linePos, colPos);\r\n                if (parser.token !== 16 && parser.token !== 18) {\r\n                    expr = parseAssignmentExpression(parser, context, 1, 0, tokenPos, linePos, colPos, expr);\r\n                }\r\n            }\r\n        }\r\n        else if (token & 2097152) {\r\n            expr =\r\n                token === 2162700\r\n                    ? parseObjectLiteralOrPattern(parser, context, scope, 0, 1, 0, kind, origin, tokenPos, linePos, colPos)\r\n                    : parseArrayExpressionOrPattern(parser, context, scope, 0, 1, 0, kind, origin, tokenPos, linePos, colPos);\r\n            destructible |= parser.destructible;\r\n            isSimpleParameterList = 1;\r\n            if (parser.token !== 16 && parser.token !== 18) {\r\n                if (destructible & 8)\r\n                    report(parser, 119);\r\n                expr = parseMemberOrUpdateExpression(parser, context, expr, 0, 0, tokenPos, linePos, colPos);\r\n                destructible |= 16;\r\n                if ((parser.token & 8454144) === 8454144) {\r\n                    expr = parseBinaryExpression(parser, context, 1, start, line, column, 4, token, expr);\r\n                }\r\n                if (consumeOpt(parser, context | 32768, 22)) {\r\n                    expr = parseConditionalExpression(parser, context, expr, start, line, column);\r\n                }\r\n            }\r\n        }\r\n        else if (token === 14) {\r\n            expr = parseSpreadOrRestElement(parser, context, scope, 16, kind, origin, 1, 1, 0, tokenPos, linePos, colPos);\r\n            destructible |= (parser.token === 16 ? 0 : 16) | parser.destructible;\r\n            isSimpleParameterList = 1;\r\n        }\r\n        else {\r\n            expr = parseExpression(parser, context, 1, 0, 0, tokenPos, linePos, colPos);\r\n            destructible = parser.assignable;\r\n            params.push(expr);\r\n            while (consumeOpt(parser, context | 32768, 18)) {\r\n                params.push(parseExpression(parser, context, 1, 0, 0, tokenPos, linePos, colPos));\r\n            }\r\n            destructible |= parser.assignable;\r\n            consume(parser, context, 16);\r\n            parser.destructible = destructible | 16;\r\n            parser.assignable = 2;\r\n            return finishNode(parser, context, start, line, column, {\r\n                type: 'CallExpression',\r\n                callee,\r\n                arguments: params\r\n            });\r\n        }\r\n        params.push(expr);\r\n        if (!consumeOpt(parser, context | 32768, 18))\r\n            break;\r\n    }\r\n    consume(parser, context, 16);\r\n    destructible |=\r\n        parser.destructible & 256\r\n            ? 256\r\n            : 0 | (parser.destructible & 128)\r\n                ? 128\r\n                : 0;\r\n    if (parser.token === 10) {\r\n        if (destructible & (32 | 16))\r\n            report(parser, 25);\r\n        if (parser.flags & 1 || flags & 1)\r\n            report(parser, 46);\r\n        if (destructible & 128)\r\n            report(parser, 29);\r\n        if (context & (1024 | 2097152) && destructible & 256)\r\n            report(parser, 30);\r\n        if (isSimpleParameterList)\r\n            parser.flags |= 128;\r\n        return parseParenthesizedArrow(parser, context, scope, params, canAssign, 1, start, line, column);\r\n    }\r\n    else if (destructible & 8) {\r\n        report(parser, 60);\r\n    }\r\n    parser.assignable = 2;\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'CallExpression',\r\n        callee,\r\n        arguments: params\r\n    });\r\n}\r\nfunction parseRegExpLiteral(parser, context, start, line, column) {\r\n    const { tokenRaw, tokenRegExp, tokenValue } = parser;\r\n    nextToken(parser, context);\r\n    parser.assignable = 2;\r\n    return context & 512\r\n        ? finishNode(parser, context, start, line, column, {\r\n            type: 'Literal',\r\n            value: tokenValue,\r\n            regex: tokenRegExp,\r\n            raw: tokenRaw\r\n        })\r\n        : finishNode(parser, context, start, line, column, {\r\n            type: 'Literal',\r\n            value: tokenValue,\r\n            regex: tokenRegExp\r\n        });\r\n}\r\nfunction parseClassDeclaration(parser, context, scope, flags, start, line, column) {\r\n    context = (context | 16777216 | 1024) ^ 16777216;\r\n    let decorators = parseDecorators(parser, context);\r\n    if (decorators.length) {\r\n        start = parser.tokenPos;\r\n        line = parser.linePos;\r\n        column = parser.colPos;\r\n    }\r\n    if (parser.leadingDecorators.length) {\r\n        parser.leadingDecorators.push(...decorators);\r\n        decorators = parser.leadingDecorators;\r\n        parser.leadingDecorators = [];\r\n    }\r\n    nextToken(parser, context);\r\n    let id = null;\r\n    let superClass = null;\r\n    const { tokenValue } = parser;\r\n    if (parser.token & 4096 && parser.token !== 20567) {\r\n        if (isStrictReservedWord(parser, context, parser.token)) {\r\n            report(parser, 115);\r\n        }\r\n        if ((parser.token & 537079808) === 537079808) {\r\n            report(parser, 116);\r\n        }\r\n        if (scope) {\r\n            addBlockName(parser, context, scope, tokenValue, 32, 0);\r\n            if (flags) {\r\n                if (flags & 2) {\r\n                    declareUnboundVariable(parser, tokenValue);\r\n                }\r\n            }\r\n        }\r\n        id = parseIdentifier(parser, context, 0);\r\n    }\r\n    else {\r\n        if ((flags & 1) === 0)\r\n            report(parser, 37, 'Class');\r\n    }\r\n    let inheritedContext = context;\r\n    if (consumeOpt(parser, context | 32768, 20567)) {\r\n        superClass = parseLeftHandSideExpression(parser, context, 0, 0, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n        inheritedContext |= 524288;\r\n    }\r\n    else {\r\n        inheritedContext = (inheritedContext | 524288) ^ 524288;\r\n    }\r\n    const body = parseClassBody(parser, inheritedContext, context, scope, 2, 8, 0);\r\n    return finishNode(parser, context, start, line, column, context & 1\r\n        ? {\r\n            type: 'ClassDeclaration',\r\n            id,\r\n            superClass,\r\n            decorators,\r\n            body\r\n        }\r\n        : {\r\n            type: 'ClassDeclaration',\r\n            id,\r\n            superClass,\r\n            body\r\n        });\r\n}\r\nfunction parseClassExpression(parser, context, inGroup, start, line, column) {\r\n    let id = null;\r\n    let superClass = null;\r\n    context = (context | 1024 | 16777216) ^ 16777216;\r\n    const decorators = parseDecorators(parser, context);\r\n    if (decorators.length) {\r\n        start = parser.tokenPos;\r\n        line = parser.linePos;\r\n        column = parser.colPos;\r\n    }\r\n    nextToken(parser, context);\r\n    if (parser.token & 4096 && parser.token !== 20567) {\r\n        if (isStrictReservedWord(parser, context, parser.token))\r\n            report(parser, 115);\r\n        if ((parser.token & 537079808) === 537079808) {\r\n            report(parser, 116);\r\n        }\r\n        id = parseIdentifier(parser, context, 0);\r\n    }\r\n    let inheritedContext = context;\r\n    if (consumeOpt(parser, context | 32768, 20567)) {\r\n        superClass = parseLeftHandSideExpression(parser, context, 0, inGroup, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n        inheritedContext |= 524288;\r\n    }\r\n    else {\r\n        inheritedContext = (inheritedContext | 524288) ^ 524288;\r\n    }\r\n    const body = parseClassBody(parser, inheritedContext, context, void 0, 2, 0, inGroup);\r\n    parser.assignable = 2;\r\n    return finishNode(parser, context, start, line, column, context & 1\r\n        ? {\r\n            type: 'ClassExpression',\r\n            id,\r\n            superClass,\r\n            decorators,\r\n            body\r\n        }\r\n        : {\r\n            type: 'ClassExpression',\r\n            id,\r\n            superClass,\r\n            body\r\n        });\r\n}\r\nfunction parseDecorators(parser, context) {\r\n    const list = [];\r\n    if (context & 1) {\r\n        while (parser.token === 133) {\r\n            list.push(parseDecoratorList(parser, context, parser.tokenPos, parser.linePos, parser.colPos));\r\n        }\r\n    }\r\n    return list;\r\n}\r\nfunction parseDecoratorList(parser, context, start, line, column) {\r\n    nextToken(parser, context | 32768);\r\n    let expression = parsePrimaryExpression(parser, context, 2, 0, 1, 0, 0, 1, start, line, column);\r\n    expression = parseMemberOrUpdateExpression(parser, context, expression, 0, 0, start, line, column);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'Decorator',\r\n        expression\r\n    });\r\n}\r\nfunction parseClassBody(parser, context, inheritedContext, scope, kind, origin, inGroup) {\r\n    const { tokenPos, linePos, colPos } = parser;\r\n    consume(parser, context | 32768, 2162700);\r\n    context = (context | 134217728) ^ 134217728;\r\n    let hasConstr = parser.flags & 32;\r\n    parser.flags = (parser.flags | 32) ^ 32;\r\n    const body = [];\r\n    let decorators;\r\n    while (parser.token !== 1074790415) {\r\n        let length = 0;\r\n        decorators = parseDecorators(parser, context);\r\n        length = decorators.length;\r\n        if (length > 0 && parser.tokenValue === 'constructor') {\r\n            report(parser, 107);\r\n        }\r\n        if (parser.token === 1074790415)\r\n            report(parser, 106);\r\n        if (consumeOpt(parser, context, 1074790417)) {\r\n            if (length > 0)\r\n                report(parser, 117);\r\n            continue;\r\n        }\r\n        body.push(parseClassElementList(parser, context, scope, inheritedContext, kind, decorators, 0, inGroup, parser.tokenPos, parser.linePos, parser.colPos));\r\n    }\r\n    consume(parser, origin & 8 ? context | 32768 : context, 1074790415);\r\n    parser.flags = (parser.flags & ~32) | hasConstr;\r\n    return finishNode(parser, context, tokenPos, linePos, colPos, {\r\n        type: 'ClassBody',\r\n        body\r\n    });\r\n}\r\nfunction parseClassElementList(parser, context, scope, inheritedContext, type, decorators, isStatic, inGroup, start, line, column) {\r\n    let kind = isStatic ? 32 : 0;\r\n    let key = null;\r\n    const { token, tokenPos, linePos, colPos } = parser;\r\n    if (token & (143360 | 36864)) {\r\n        key = parseIdentifier(parser, context, 0);\r\n        switch (token) {\r\n            case 36972:\r\n                if (!isStatic &&\r\n                    parser.token !== 67174411 &&\r\n                    (parser.token & 1048576) !== 1048576 &&\r\n                    parser.token !== 1077936157) {\r\n                    return parseClassElementList(parser, context, scope, inheritedContext, type, decorators, 1, inGroup, start, line, column);\r\n                }\r\n                break;\r\n            case 209007:\r\n                if (parser.token !== 67174411 && (parser.flags & 1) === 0) {\r\n                    if (context & 1 && (parser.token & 1073741824) === 1073741824) {\r\n                        return parsePropertyDefinition(parser, context, key, kind, decorators, tokenPos, linePos, colPos);\r\n                    }\r\n                    kind |= 16 | (optionalBit(parser, context, 8457014) ? 8 : 0);\r\n                }\r\n                break;\r\n            case 12402:\r\n                if (parser.token !== 67174411) {\r\n                    if (context & 1 && (parser.token & 1073741824) === 1073741824) {\r\n                        return parsePropertyDefinition(parser, context, key, kind, decorators, tokenPos, linePos, colPos);\r\n                    }\r\n                    kind |= 256;\r\n                }\r\n                break;\r\n            case 12403:\r\n                if (parser.token !== 67174411) {\r\n                    if (context & 1 && (parser.token & 1073741824) === 1073741824) {\r\n                        return parsePropertyDefinition(parser, context, key, kind, decorators, tokenPos, linePos, colPos);\r\n                    }\r\n                    kind |= 512;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    else if (token === 69271571) {\r\n        kind |= 2;\r\n        key = parseComputedPropertyName(parser, inheritedContext, inGroup);\r\n    }\r\n    else if ((token & 134217728) === 134217728) {\r\n        key = parseLiteral(parser, context);\r\n    }\r\n    else if (token === 8457014) {\r\n        kind |= 8;\r\n        nextToken(parser, context);\r\n    }\r\n    else if (context & 1 && parser.token === 131) {\r\n        kind |= 4096;\r\n        key = parsePrivateIdentifier(parser, context | 16384, tokenPos, linePos, colPos);\r\n    }\r\n    else if (context & 1 && (parser.token & 1073741824) === 1073741824) {\r\n        kind |= 128;\r\n    }\r\n    else if (isStatic && token === 2162700) {\r\n        return parseStaticBlock(parser, context, scope, tokenPos, linePos, colPos);\r\n    }\r\n    else if (token === 122) {\r\n        key = parseIdentifier(parser, context, 0);\r\n        if (parser.token !== 67174411)\r\n            report(parser, 28, KeywordDescTable[parser.token & 255]);\r\n    }\r\n    else {\r\n        report(parser, 28, KeywordDescTable[parser.token & 255]);\r\n    }\r\n    if (kind & (8 | 16 | 768)) {\r\n        if (parser.token & 143360) {\r\n            key = parseIdentifier(parser, context, 0);\r\n        }\r\n        else if ((parser.token & 134217728) === 134217728) {\r\n            key = parseLiteral(parser, context);\r\n        }\r\n        else if (parser.token === 69271571) {\r\n            kind |= 2;\r\n            key = parseComputedPropertyName(parser, context, 0);\r\n        }\r\n        else if (parser.token === 122) {\r\n            key = parseIdentifier(parser, context, 0);\r\n        }\r\n        else if (context & 1 && parser.token === 131) {\r\n            kind |= 4096;\r\n            key = parsePrivateIdentifier(parser, context, tokenPos, linePos, colPos);\r\n        }\r\n        else\r\n            report(parser, 132);\r\n    }\r\n    if ((kind & 2) === 0) {\r\n        if (parser.tokenValue === 'constructor') {\r\n            if ((parser.token & 1073741824) === 1073741824) {\r\n                report(parser, 126);\r\n            }\r\n            else if ((kind & 32) === 0 && parser.token === 67174411) {\r\n                if (kind & (768 | 16 | 128 | 8)) {\r\n                    report(parser, 51, 'accessor');\r\n                }\r\n                else if ((context & 524288) === 0) {\r\n                    if (parser.flags & 32)\r\n                        report(parser, 52);\r\n                    else\r\n                        parser.flags |= 32;\r\n                }\r\n            }\r\n            kind |= 64;\r\n        }\r\n        else if ((kind & 4096) === 0 &&\r\n            kind & (32 | 768 | 8 | 16) &&\r\n            parser.tokenValue === 'prototype') {\r\n            report(parser, 50);\r\n        }\r\n    }\r\n    if (context & 1 && parser.token !== 67174411) {\r\n        return parsePropertyDefinition(parser, context, key, kind, decorators, tokenPos, linePos, colPos);\r\n    }\r\n    const value = parseMethodDefinition(parser, context, kind, inGroup, parser.tokenPos, parser.linePos, parser.colPos);\r\n    return finishNode(parser, context, start, line, column, context & 1\r\n        ? {\r\n            type: 'MethodDefinition',\r\n            kind: (kind & 32) === 0 && kind & 64\r\n                ? 'constructor'\r\n                : kind & 256\r\n                    ? 'get'\r\n                    : kind & 512\r\n                        ? 'set'\r\n                        : 'method',\r\n            static: (kind & 32) > 0,\r\n            computed: (kind & 2) > 0,\r\n            key,\r\n            decorators,\r\n            value\r\n        }\r\n        : {\r\n            type: 'MethodDefinition',\r\n            kind: (kind & 32) === 0 && kind & 64\r\n                ? 'constructor'\r\n                : kind & 256\r\n                    ? 'get'\r\n                    : kind & 512\r\n                        ? 'set'\r\n                        : 'method',\r\n            static: (kind & 32) > 0,\r\n            computed: (kind & 2) > 0,\r\n            key,\r\n            value\r\n        });\r\n}\r\nfunction parsePrivateIdentifier(parser, context, start, line, column) {\r\n    nextToken(parser, context);\r\n    const { tokenValue } = parser;\r\n    if (tokenValue === 'constructor')\r\n        report(parser, 125);\r\n    nextToken(parser, context);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'PrivateIdentifier',\r\n        name: tokenValue\r\n    });\r\n}\r\nfunction parsePropertyDefinition(parser, context, key, state, decorators, start, line, column) {\r\n    let value = null;\r\n    if (state & 8)\r\n        report(parser, 0);\r\n    if (parser.token === 1077936157) {\r\n        nextToken(parser, context | 32768);\r\n        const { tokenPos, linePos, colPos } = parser;\r\n        if (parser.token === 537079928)\r\n            report(parser, 116);\r\n        value = parsePrimaryExpression(parser, context | 16384, 2, 0, 1, 0, 0, 1, tokenPos, linePos, colPos);\r\n        if ((parser.token & 1073741824) !== 1073741824) {\r\n            value = parseMemberOrUpdateExpression(parser, context | 16384, value, 0, 0, tokenPos, linePos, colPos);\r\n            value = parseAssignmentExpression(parser, context | 16384, 0, 0, tokenPos, linePos, colPos, value);\r\n            if (parser.token === 18) {\r\n                value = parseSequenceExpression(parser, context, 0, start, line, column, value);\r\n            }\r\n        }\r\n    }\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'PropertyDefinition',\r\n        key,\r\n        value,\r\n        static: (state & 32) > 0,\r\n        computed: (state & 2) > 0,\r\n        decorators\r\n    });\r\n}\r\nfunction parseBindingPattern(parser, context, scope, type, origin, start, line, column) {\r\n    if (parser.token & 143360)\r\n        return parseAndClassifyIdentifier(parser, context, scope, type, origin, start, line, column);\r\n    if ((parser.token & 2097152) !== 2097152)\r\n        report(parser, 28, KeywordDescTable[parser.token & 255]);\r\n    const left = parser.token === 69271571\r\n        ? parseArrayExpressionOrPattern(parser, context, scope, 1, 0, 1, type, origin, start, line, column)\r\n        : parseObjectLiteralOrPattern(parser, context, scope, 1, 0, 1, type, origin, start, line, column);\r\n    if (parser.destructible & 16)\r\n        report(parser, 48);\r\n    if (parser.destructible & 32)\r\n        report(parser, 48);\r\n    return left;\r\n}\r\nfunction parseAndClassifyIdentifier(parser, context, scope, kind, origin, start, line, column) {\r\n    const { tokenValue, token } = parser;\r\n    if (context & 1024) {\r\n        if ((token & 537079808) === 537079808) {\r\n            report(parser, 116);\r\n        }\r\n        else if ((token & 36864) === 36864) {\r\n            report(parser, 115);\r\n        }\r\n    }\r\n    if ((token & 20480) === 20480) {\r\n        report(parser, 100);\r\n    }\r\n    if (context & (2048 | 2097152) && token === 241773) {\r\n        report(parser, 30);\r\n    }\r\n    if (token === 241739) {\r\n        if (kind & (8 | 16))\r\n            report(parser, 98);\r\n    }\r\n    if (context & (4194304 | 2048) && token === 209008) {\r\n        report(parser, 96);\r\n    }\r\n    nextToken(parser, context);\r\n    if (scope)\r\n        addVarOrBlock(parser, context, scope, tokenValue, kind, origin);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'Identifier',\r\n        name: tokenValue\r\n    });\r\n}\r\nfunction parseJSXRootElementOrFragment(parser, context, inJSXChild, start, line, column) {\r\n    nextToken(parser, context);\r\n    if (parser.token === 8456259) {\r\n        return finishNode(parser, context, start, line, column, {\r\n            type: 'JSXFragment',\r\n            openingFragment: parseOpeningFragment(parser, context, start, line, column),\r\n            children: parseJSXChildren(parser, context),\r\n            closingFragment: parseJSXClosingFragment(parser, context, inJSXChild, parser.tokenPos, parser.linePos, parser.colPos)\r\n        });\r\n    }\r\n    let closingElement = null;\r\n    let children = [];\r\n    const openingElement = parseJSXOpeningFragmentOrSelfCloseElement(parser, context, inJSXChild, start, line, column);\r\n    if (!openingElement.selfClosing) {\r\n        children = parseJSXChildren(parser, context);\r\n        closingElement = parseJSXClosingElement(parser, context, inJSXChild, parser.tokenPos, parser.linePos, parser.colPos);\r\n        const close = isEqualTagName(closingElement.name);\r\n        if (isEqualTagName(openingElement.name) !== close)\r\n            report(parser, 150, close);\r\n    }\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'JSXElement',\r\n        children,\r\n        openingElement,\r\n        closingElement\r\n    });\r\n}\r\nfunction parseOpeningFragment(parser, context, start, line, column) {\r\n    scanJSXToken(parser, context);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'JSXOpeningFragment'\r\n    });\r\n}\r\nfunction parseJSXClosingElement(parser, context, inJSXChild, start, line, column) {\r\n    consume(parser, context, 25);\r\n    const name = parseJSXElementName(parser, context, parser.tokenPos, parser.linePos, parser.colPos);\r\n    if (inJSXChild) {\r\n        consume(parser, context, 8456259);\r\n    }\r\n    else {\r\n        parser.token = scanJSXToken(parser, context);\r\n    }\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'JSXClosingElement',\r\n        name\r\n    });\r\n}\r\nfunction parseJSXClosingFragment(parser, context, inJSXChild, start, line, column) {\r\n    consume(parser, context, 25);\r\n    if (inJSXChild) {\r\n        consume(parser, context, 8456259);\r\n    }\r\n    else {\r\n        consume(parser, context, 8456259);\r\n    }\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'JSXClosingFragment'\r\n    });\r\n}\r\nfunction parseJSXChildren(parser, context) {\r\n    const children = [];\r\n    while (parser.token !== 25) {\r\n        parser.index = parser.tokenPos = parser.startPos;\r\n        parser.column = parser.colPos = parser.startColumn;\r\n        parser.line = parser.linePos = parser.startLine;\r\n        scanJSXToken(parser, context);\r\n        children.push(parseJSXChild(parser, context, parser.tokenPos, parser.linePos, parser.colPos));\r\n    }\r\n    return children;\r\n}\r\nfunction parseJSXChild(parser, context, start, line, column) {\r\n    if (parser.token === 138)\r\n        return parseJSXText(parser, context, start, line, column);\r\n    if (parser.token === 2162700)\r\n        return parseJSXExpressionContainer(parser, context, 0, 0, start, line, column);\r\n    if (parser.token === 8456258)\r\n        return parseJSXRootElementOrFragment(parser, context, 0, start, line, column);\r\n    report(parser, 0);\r\n}\r\nfunction parseJSXText(parser, context, start, line, column) {\r\n    scanJSXToken(parser, context);\r\n    const node = {\r\n        type: 'JSXText',\r\n        value: parser.tokenValue\r\n    };\r\n    if (context & 512) {\r\n        node.raw = parser.tokenRaw;\r\n    }\r\n    return finishNode(parser, context, start, line, column, node);\r\n}\r\nfunction parseJSXOpeningFragmentOrSelfCloseElement(parser, context, inJSXChild, start, line, column) {\r\n    if ((parser.token & 143360) !== 143360 && (parser.token & 4096) !== 4096)\r\n        report(parser, 0);\r\n    const tagName = parseJSXElementName(parser, context, parser.tokenPos, parser.linePos, parser.colPos);\r\n    const attributes = parseJSXAttributes(parser, context);\r\n    const selfClosing = parser.token === 8457016;\r\n    if (parser.token === 8456259) {\r\n        scanJSXToken(parser, context);\r\n    }\r\n    else {\r\n        consume(parser, context, 8457016);\r\n        if (inJSXChild) {\r\n            consume(parser, context, 8456259);\r\n        }\r\n        else {\r\n            scanJSXToken(parser, context);\r\n        }\r\n    }\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'JSXOpeningElement',\r\n        name: tagName,\r\n        attributes,\r\n        selfClosing\r\n    });\r\n}\r\nfunction parseJSXElementName(parser, context, start, line, column) {\r\n    scanJSXIdentifier(parser);\r\n    let key = parseJSXIdentifier(parser, context, start, line, column);\r\n    if (parser.token === 21)\r\n        return parseJSXNamespacedName(parser, context, key, start, line, column);\r\n    while (consumeOpt(parser, context, 67108877)) {\r\n        scanJSXIdentifier(parser);\r\n        key = parseJSXMemberExpression(parser, context, key, start, line, column);\r\n    }\r\n    return key;\r\n}\r\nfunction parseJSXMemberExpression(parser, context, object, start, line, column) {\r\n    const property = parseJSXIdentifier(parser, context, parser.tokenPos, parser.linePos, parser.colPos);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'JSXMemberExpression',\r\n        object,\r\n        property\r\n    });\r\n}\r\nfunction parseJSXAttributes(parser, context) {\r\n    const attributes = [];\r\n    while (parser.token !== 8457016 && parser.token !== 8456259 && parser.token !== 1048576) {\r\n        attributes.push(parseJsxAttribute(parser, context, parser.tokenPos, parser.linePos, parser.colPos));\r\n    }\r\n    return attributes;\r\n}\r\nfunction parseJSXSpreadAttribute(parser, context, start, line, column) {\r\n    nextToken(parser, context);\r\n    consume(parser, context, 14);\r\n    const expression = parseExpression(parser, context, 1, 0, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n    consume(parser, context, 1074790415);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'JSXSpreadAttribute',\r\n        argument: expression\r\n    });\r\n}\r\nfunction parseJsxAttribute(parser, context, start, line, column) {\r\n    if (parser.token === 2162700)\r\n        return parseJSXSpreadAttribute(parser, context, start, line, column);\r\n    scanJSXIdentifier(parser);\r\n    let value = null;\r\n    let name = parseJSXIdentifier(parser, context, start, line, column);\r\n    if (parser.token === 21) {\r\n        name = parseJSXNamespacedName(parser, context, name, start, line, column);\r\n    }\r\n    if (parser.token === 1077936157) {\r\n        const token = scanJSXAttributeValue(parser, context);\r\n        const { tokenPos, linePos, colPos } = parser;\r\n        switch (token) {\r\n            case 134283267:\r\n                value = parseLiteral(parser, context);\r\n                break;\r\n            case 8456258:\r\n                value = parseJSXRootElementOrFragment(parser, context, 1, tokenPos, linePos, colPos);\r\n                break;\r\n            case 2162700:\r\n                value = parseJSXExpressionContainer(parser, context, 1, 1, tokenPos, linePos, colPos);\r\n                break;\r\n            default:\r\n                report(parser, 149);\r\n        }\r\n    }\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'JSXAttribute',\r\n        value,\r\n        name\r\n    });\r\n}\r\nfunction parseJSXNamespacedName(parser, context, namespace, start, line, column) {\r\n    consume(parser, context, 21);\r\n    const name = parseJSXIdentifier(parser, context, parser.tokenPos, parser.linePos, parser.colPos);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'JSXNamespacedName',\r\n        namespace,\r\n        name\r\n    });\r\n}\r\nfunction parseJSXExpressionContainer(parser, context, inJSXChild, isAttr, start, line, column) {\r\n    nextToken(parser, context | 32768);\r\n    const { tokenPos, linePos, colPos } = parser;\r\n    if (parser.token === 14)\r\n        return parseJSXSpreadChild(parser, context, start, line, column);\r\n    let expression = null;\r\n    if (parser.token === 1074790415) {\r\n        if (isAttr)\r\n            report(parser, 152);\r\n        expression = parseJSXEmptyExpression(parser, context, parser.startPos, parser.startLine, parser.startColumn);\r\n    }\r\n    else {\r\n        expression = parseExpression(parser, context, 1, 0, 0, tokenPos, linePos, colPos);\r\n    }\r\n    if (inJSXChild) {\r\n        consume(parser, context, 1074790415);\r\n    }\r\n    else {\r\n        scanJSXToken(parser, context);\r\n    }\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'JSXExpressionContainer',\r\n        expression\r\n    });\r\n}\r\nfunction parseJSXSpreadChild(parser, context, start, line, column) {\r\n    consume(parser, context, 14);\r\n    const expression = parseExpression(parser, context, 1, 0, 0, parser.tokenPos, parser.linePos, parser.colPos);\r\n    consume(parser, context, 1074790415);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'JSXSpreadChild',\r\n        expression\r\n    });\r\n}\r\nfunction parseJSXEmptyExpression(parser, context, start, line, column) {\r\n    parser.startPos = parser.tokenPos;\r\n    parser.startLine = parser.linePos;\r\n    parser.startColumn = parser.colPos;\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'JSXEmptyExpression'\r\n    });\r\n}\r\nfunction parseJSXIdentifier(parser, context, start, line, column) {\r\n    const { tokenValue } = parser;\r\n    nextToken(parser, context);\r\n    return finishNode(parser, context, start, line, column, {\r\n        type: 'JSXIdentifier',\r\n        name: tokenValue\r\n    });\r\n}\n\nvar estree = /*#__PURE__*/Object.freeze({\n  __proto__: null\n});\n\nvar version$1 = \"4.3.7\";\n\nconst version = version$1;\r\nfunction parseScript(source, options) {\r\n    return parseSource(source, options, 0);\r\n}\r\nfunction parseModule(source, options) {\r\n    return parseSource(source, options, 1024 | 2048);\r\n}\r\nfunction parse(source, options) {\r\n    return parseSource(source, options, 0);\r\n}\n\nexport { estree as ESTree, parse, parseModule, parseScript, version };\n", "import { parseScript } from 'meriyah';\n// import { parse } from 'acorn-hammerhead';\nimport { generate } from 'esotope-hammerhead';\nimport EventEmitter from 'events';\n\nclass JS extends EventEmitter {\n    constructor() {\n        super();\n        /*\n        this.parseOptions = { \n            allowReturnOutsideFunction: true, \n            allowImportExportEverywhere: true, \n            ecmaVersion: 2021, \n        };\n        */\n        this.parseOptions = {\n            ranges: true,\n            module: true,\n            globalReturn: true,\n        };\n        this.generationOptions = {\n            format: {\n                quotes: 'double',\n                escapeless: true,\n                compact: true,\n            },\n        };\n        this.parse = parseScript /*parse*/;\n        this.generate = generate;\n    }\n    rewrite(str, data = {}) {\n        return this.recast(str, data, 'rewrite');\n    }\n    source(str, data = {}) {\n        return this.recast(str, data, 'source');\n    }\n    recast(str, data = {}, type = '') {\n        try {\n            const output = [];\n            const ast = this.parse(str, this.parseOptions);\n            const meta = {\n                data,\n                changes: [],\n                input: str,\n                ast,\n                get slice() {\n                    return slice;\n                },\n            };\n            let slice = 0;\n\n            this.iterate(ast, (node, parent = null) => {\n                if (parent && parent.inTransformer) node.isTransformer = true;\n                node.parent = parent;\n\n                this.emit(node.type, node, meta, type);\n            });\n\n            meta.changes.sort((a, b) => a.start - b.start || a.end - b.end);\n\n            for (const change of meta.changes) {\n                if ('start' in change && typeof change.start === 'number')\n                    output.push(str.slice(slice, change.start));\n                if (change.node)\n                    output.push(\n                        typeof change.node === 'string'\n                            ? change.node\n                            : generate(change.node, this.generationOptions)\n                    );\n                if ('end' in change && typeof change.end === 'number')\n                    slice = change.end;\n            }\n            output.push(str.slice(slice));\n            return output.join('');\n        } catch (e) {\n            return str;\n        }\n    }\n    iterate(ast, handler) {\n        if (typeof ast != 'object' || !handler) return;\n        walk(ast, null, handler);\n        function walk(node, parent, handler) {\n            if (typeof node != 'object' || !handler) return;\n            handler(node, parent, handler);\n            for (const child in node) {\n                if (child === 'parent') continue;\n                if (Array.isArray(node[child])) {\n                    node[child].forEach((entry) => {\n                        if (entry) walk(entry, node, handler);\n                    });\n                } else {\n                    if (node[child]) walk(node[child], node, handler);\n                }\n            }\n            if (typeof node.iterateEnd === 'function') node.iterateEnd();\n        }\n    }\n}\n\nexport default JS;\n", "import HTML from './html.js';\nimport CSS from './css.js';\nimport JS from './js.js';\nimport setCookie from 'set-cookie-parser';\nimport { xor, base64, plain } from './codecs.js';\nimport * as mimeTypes from './mime.js';\nimport {\n    validateCookie,\n    db,\n    getCookies,\n    setCookies,\n    serialize,\n} from './cookie.js';\nimport {\n    attributes,\n    isUrl,\n    isForbidden,\n    isHtml,\n    isSrcset,\n    isStyle,\n    text,\n    injectHead,\n    createHtmlInject,\n    createJsInject,\n} from './rewrite.html.js';\nimport { importStyle, url } from './rewrite.css.js';\n//import { call, destructureDeclaration, dynamicImport, getProperty, importDeclaration, setProperty, sourceMethods, wrapEval, wrapIdentifier } from './rewrite.script.js';\nimport {\n    dynamicImport,\n    identifier,\n    importDeclaration,\n    property,\n    unwrap,\n    wrapEval,\n} from './rewrite.script.js';\nimport { openDB } from 'idb';\nimport { BareClient } from '@tomphttp/bare-client';\nimport EventEmitter from 'events';\n\n/**\n * @typedef {import('../uv.js').UVConfig} UVConfig\n */\n\nclass Ultraviolet {\n    /**\n     *\n     * @param {UVConfig} [options]\n     */\n    constructor(options = {}) {\n        this.prefix = options.prefix || '/service/';\n        //this.urlRegex = /^(#|about:|data:|mailto:|javascript:)/;\n        this.urlRegex = /^(#|about:|data:|mailto:)/;\n        this.rewriteUrl = options.rewriteUrl || this.rewriteUrl;\n        this.rewriteImport = options.rewriteImport || this.rewriteImport;\n        this.sourceUrl = options.sourceUrl || this.sourceUrl;\n        this.encodeUrl = options.encodeUrl || this.encodeUrl;\n        this.decodeUrl = options.decodeUrl || this.decodeUrl;\n        this.vanilla = 'vanilla' in options ? options.vanilla : false;\n        this.meta = options.meta || {};\n        this.meta.base ||= undefined;\n        this.meta.origin ||= '';\n        this.bundleScript = options.bundle || '/uv.bundle.js';\n        this.handlerScript = options.handler || '/uv.handler.js';\n        this.clientScript =\n            options.client ||\n            (options.bundle &&\n                options.bundle.includes('uv.bundle.js') &&\n                options.bundle.replace('uv.bundle.js', 'uv.client.js')) ||\n            '/uv.client.js';\n        this.configScript = options.config || '/uv.config.js';\n        this.meta.url ||= this.meta.base || '';\n        this.codec = Ultraviolet.codec;\n        this.html = new HTML(this);\n        this.css = new CSS(this);\n        this.js = new JS(this);\n        this.openDB = this.constructor.openDB;\n        this.master = '__uv';\n        this.dataPrefix = '__uv$';\n        this.attributePrefix = '__uv';\n        this.createHtmlInject = createHtmlInject;\n        this.createJsInject = createJsInject;\n        this.attrs = {\n            isUrl,\n            isForbidden,\n            isHtml,\n            isSrcset,\n            isStyle,\n        };\n        if (!this.vanilla) this.implementUVMiddleware();\n        this.cookie = {\n            validateCookie,\n            db: () => {\n                return db(this.constructor.openDB);\n            },\n            getCookies,\n            setCookies,\n            serialize,\n            setCookie,\n        };\n    }\n    /**\n     *\n     * @param {string} str Script being imported\n     * @param {string} src Script that is importing\n     * @param {*} meta\n     */\n    rewriteImport(str, src, meta = this.meta) {\n        // use importiing script as the base\n        return this.rewriteUrl(str, {\n            ...meta,\n            base: src,\n        });\n    }\n    rewriteUrl(str, meta = this.meta) {\n        str = new String(str).trim();\n        if (!str || this.urlRegex.test(str)) return str;\n\n        if (str.startsWith('javascript:')) {\n            return (\n                'javascript:' + this.js.rewrite(str.slice('javascript:'.length))\n            );\n        }\n\n        try {\n            return (\n                meta.origin +\n                this.prefix +\n                this.encodeUrl(new URL(str, meta.base).href)\n            );\n        } catch (e) {\n            return meta.origin + this.prefix + this.encodeUrl(str);\n        }\n    }\n    sourceUrl(str, meta = this.meta) {\n        if (!str || this.urlRegex.test(str)) return str;\n        try {\n            return new URL(\n                this.decodeUrl(\n                    str.slice(this.prefix.length + meta.origin.length)\n                ),\n                meta.base\n            ).href;\n        } catch (e) {\n            return this.decodeUrl(\n                str.slice(this.prefix.length + meta.origin.length)\n            );\n        }\n    }\n    encodeUrl(str) {\n        return encodeURIComponent(str);\n    }\n    decodeUrl(str) {\n        return decodeURIComponent(str);\n    }\n    implementUVMiddleware() {\n        // HTML\n        attributes(this);\n        text(this);\n        injectHead(this);\n        // CSS\n        url(this);\n        importStyle(this);\n        // JS\n        importDeclaration(this);\n        dynamicImport(this);\n        property(this);\n        wrapEval(this);\n        identifier(this);\n        unwrap(this);\n    }\n    get rewriteHtml() {\n        return this.html.rewrite.bind(this.html);\n    }\n    get sourceHtml() {\n        return this.html.source.bind(this.html);\n    }\n    get rewriteCSS() {\n        return this.css.rewrite.bind(this.css);\n    }\n    get sourceCSS() {\n        return this.css.source.bind(this.css);\n    }\n    get rewriteJS() {\n        return this.js.rewrite.bind(this.js);\n    }\n    get sourceJS() {\n        return this.js.source.bind(this.js);\n    }\n    static codec = { xor, base64, plain };\n    static mime = mimeTypes;\n    static setCookie = setCookie;\n    static openDB = openDB;\n    static BareClient = BareClient;\n    static EventEmitter = EventEmitter;\n}\n\nexport default Ultraviolet;\nif (typeof self === 'object') self.Ultraviolet = Ultraviolet;\n", "// -------------------------------------------------------------\n// WARNING: this file is used by both the client and the server.\n// Do not use any browser or node-specific API!\n// -------------------------------------------------------------\nexport const xor = {\n    encode(str) {\n        if (!str) return str;\n        return encodeURIComponent(\n            str\n                .toString()\n                .split('')\n                .map((char, ind) =>\n                    ind % 2 ? String.fromCharCode(char.charCodeAt() ^ 2) : char\n                )\n                .join('')\n        );\n    },\n    decode(str) {\n        if (!str) return str;\n        let [input, ...search] = str.split('?');\n\n        return (\n            decodeURIComponent(input)\n                .split('')\n                .map((char, ind) =>\n                    ind % 2 ? String.fromCharCode(char.charCodeAt(0) ^ 2) : char\n                )\n                .join('') + (search.length ? '?' + search.join('?') : '')\n        );\n    },\n};\n\nexport const plain = {\n    encode(str) {\n        if (!str) return str;\n        return encodeURIComponent(str);\n    },\n    decode(str) {\n        if (!str) return str;\n        return decodeURIComponent(str);\n    },\n};\n\nexport const base64 = {\n    encode(str) {\n        if (!str) return str;\n        str = str.toString();\n        const b64chs = Array.from(\n            'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n        );\n        let u32;\n        let c0;\n        let c1;\n        let c2;\n        let asc = '';\n        let pad = str.length % 3;\n\n        for (let i = 0; i < str.length; ) {\n            if (\n                (c0 = str.charCodeAt(i++)) > 255 ||\n                (c1 = str.charCodeAt(i++)) > 255 ||\n                (c2 = str.charCodeAt(i++)) > 255\n            )\n                throw new TypeError('invalid character found');\n            u32 = (c0 << 16) | (c1 << 8) | c2;\n            asc +=\n                b64chs[(u32 >> 18) & 63] +\n                b64chs[(u32 >> 12) & 63] +\n                b64chs[(u32 >> 6) & 63] +\n                b64chs[u32 & 63];\n        }\n\n        return encodeURIComponent(\n            pad ? asc.slice(0, pad - 3) + '==='.substr(pad) : asc\n        );\n    },\n    decode(str) {\n        if (!str) return str;\n        str = decodeURIComponent(str.toString());\n        const b64tab = {\n            0: 52,\n            1: 53,\n            2: 54,\n            3: 55,\n            4: 56,\n            5: 57,\n            6: 58,\n            7: 59,\n            8: 60,\n            9: 61,\n            A: 0,\n            B: 1,\n            C: 2,\n            D: 3,\n            E: 4,\n            F: 5,\n            G: 6,\n            H: 7,\n            I: 8,\n            J: 9,\n            K: 10,\n            L: 11,\n            M: 12,\n            N: 13,\n            O: 14,\n            P: 15,\n            Q: 16,\n            R: 17,\n            S: 18,\n            T: 19,\n            U: 20,\n            V: 21,\n            W: 22,\n            X: 23,\n            Y: 24,\n            Z: 25,\n            a: 26,\n            b: 27,\n            c: 28,\n            d: 29,\n            e: 30,\n            f: 31,\n            g: 32,\n            h: 33,\n            i: 34,\n            j: 35,\n            k: 36,\n            l: 37,\n            m: 38,\n            n: 39,\n            o: 40,\n            p: 41,\n            q: 42,\n            r: 43,\n            s: 44,\n            t: 45,\n            u: 46,\n            v: 47,\n            w: 48,\n            x: 49,\n            y: 50,\n            z: 51,\n            '+': 62,\n            '/': 63,\n            '=': 64,\n        };\n        str = str.replace(/\\s+/g, '');\n        str += '=='.slice(2 - (str.length & 3));\n        let u24;\n        let bin = '';\n        let r1;\n        let r2;\n\n        for (let i = 0; i < str.length; ) {\n            u24 =\n                (b64tab[str.charAt(i++)] << 18) |\n                (b64tab[str.charAt(i++)] << 12) |\n                ((r1 = b64tab[str.charAt(i++)]) << 6) |\n                (r2 = b64tab[str.charAt(i++)]);\n            bin +=\n                r1 === 64\n                    ? String.fromCharCode((u24 >> 16) & 255)\n                    : r2 === 64\n                    ? String.fromCharCode((u24 >> 16) & 255, (u24 >> 8) & 255)\n                    : String.fromCharCode(\n                          (u24 >> 16) & 255,\n                          (u24 >> 8) & 255,\n                          u24 & 255\n                      );\n        }\n        return bin;\n    },\n};\n", "import db from 'mime-db';\n\nconst EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/;\nconst TEXT_TYPE_REGEXP = /^text\\//i;\nconst extensions = Object.create(null);\nconst types = Object.create(null);\nconst charsets = { lookup: charset };\n\n// Populate the extensions/types maps\npopulateMaps(extensions, types);\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset(type) {\n    if (!type || typeof type !== 'string') {\n        return false;\n    }\n\n    // TODO: use media-typer\n    const match = EXTRACT_TYPE_REGEXP.exec(type);\n    const mime = match && db[match[1].toLowerCase()];\n\n    if (mime && mime.charset) {\n        return mime.charset;\n    }\n\n    // default text/* to utf-8\n    if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n        return 'UTF-8';\n    }\n\n    return false;\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType(str) {\n    // TODO: should this even be in this module?\n    if (!str || typeof str !== 'string') {\n        return false;\n    }\n\n    let mime = str.indexOf('/') === -1 ? lookup(str) : str;\n\n    if (!mime) {\n        return false;\n    }\n\n    // TODO: use content-type or other module\n    if (mime.indexOf('charset') === -1) {\n        const detected = charset(mime);\n        if (detected) mime += '; charset=' + detected.toLowerCase();\n    }\n\n    return mime;\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension(type) {\n    if (!type || typeof type !== 'string') {\n        return false;\n    }\n\n    // TODO: use media-typer\n    const match = EXTRACT_TYPE_REGEXP.exec(type);\n\n    // get extensions\n    const exts = match && extensions[match[1].toLowerCase()];\n\n    if (!exts || !exts.length) {\n        return false;\n    }\n\n    return exts[0];\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup(path) {\n    if (!path || typeof path !== 'string') {\n        return false;\n    }\n\n    // get the extension (\"ext\" or \".ext\" or full path)\n    const extension = extname('x.' + path)\n        .toLowerCase()\n        .slice(1);\n\n    if (!extension) {\n        return false;\n    }\n\n    return types[extension] || false;\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps(extensions, types) {\n    // source preference (least -> most)\n    const preference = ['nginx', 'apache', undefined, 'iana'];\n\n    for (const type in db) {\n        const mime = db[type];\n        const exts = mime.extensions;\n\n        if (!exts || !exts.length) {\n            return;\n        }\n\n        // mime -> extensions\n        extensions[type] = exts;\n\n        // extension -> mime\n        for (let i = 0; i < exts.length; i++) {\n            const extension = exts[i];\n\n            if (types[extension]) {\n                const from = preference.indexOf(db[types[extension]].source);\n                const to = preference.indexOf(mime.source);\n\n                if (\n                    types[extension] !== 'application/octet-stream' &&\n                    (from > to ||\n                        (from === to &&\n                            types[extension].substr(0, 12) === 'application/'))\n                ) {\n                    // skip the remapping\n                    continue;\n                }\n            }\n\n            // set the extension -> mime\n            types[extension] = type;\n        }\n    }\n}\n\nfunction extname(path = '') {\n    if (!path.includes('.')) return '';\n    const map = path.split('.');\n\n    return '.' + map[map.length - 1];\n}\n\nexport { charset, charsets, contentType, extension, lookup };\n", "// -------------------------------------------------------------\n// WARNING: this file is used by both the client and the server.\n// Do not use any browser or node-specific API!\n// -------------------------------------------------------------\nimport setCookie from 'set-cookie-parser';\n\nfunction validateCookie(cookie, meta, js = false) {\n    if (cookie.httpOnly && !!js) return false;\n\n    if (cookie.domain.startsWith('.')) {\n        if (!meta.url.hostname.endsWith(cookie.domain.slice(1))) return false;\n        return true;\n    }\n\n    if (cookie.domain !== meta.url.hostname) return false;\n    if (cookie.secure && meta.url.protocol === 'http:') return false;\n    if (!meta.url.pathname.startsWith(cookie.path)) return false;\n\n    return true;\n}\n\nasync function db(openDB) {\n    const db = await openDB('__op', 1, {\n        upgrade(db) {\n            const store = db.createObjectStore('cookies', {\n                keyPath: 'id',\n            });\n            store.createIndex('path', 'path');\n        },\n    });\n    db.transaction(['cookies'], 'readwrite').store.index('path');\n    return db;\n}\n\nfunction serialize(cookies = [], meta, js) {\n    let str = '';\n    for (const cookie of cookies) {\n        if (!validateCookie(cookie, meta, js)) continue;\n        if (str.length) str += '; ';\n        str += cookie.name;\n        str += '=';\n        str += cookie.value;\n    }\n    return str;\n}\n\nasync function getCookies(db) {\n    const now = new Date();\n    return (await db.getAll('cookies')).filter((cookie) => {\n        let expired = false;\n        if (cookie.set) {\n            if (cookie.maxAge) {\n                expired = cookie.set.getTime() + cookie.maxAge * 1e3 < now;\n            } else if (cookie.expires) {\n                expired = new Date(cookie.expires.toLocaleString()) < now;\n            }\n        }\n\n        if (expired) {\n            db.delete('cookies', cookie.id);\n            return false;\n        }\n\n        return true;\n    });\n}\n\nfunction setCookies(data, db, meta) {\n    if (!db) return false;\n\n    const cookies = setCookie(data, {\n        decodeValues: false,\n    });\n\n    for (const cookie of cookies) {\n        if (!cookie.domain) cookie.domain = '.' + meta.url.hostname;\n        if (!cookie.path) cookie.path = '/';\n\n        if (!cookie.domain.startsWith('.')) {\n            cookie.domain = '.' + cookie.domain;\n        }\n\n        db.put('cookies', {\n            ...cookie,\n            id: `${cookie.domain}@${cookie.path}@${cookie.name}`,\n            set: new Date(Date.now()),\n        });\n    }\n    return true;\n}\n\nexport { validateCookie, getCookies, setCookies, db, serialize };\n", "/**\n * @typedef {import('./index').default} Ultraviolet\n */\n\n/**\n *\n * @param {Ultraviolet} ctx\n */\nexport function attributes(ctx, meta = ctx.meta) {\n    const { html, js, attributePrefix } = ctx;\n    const origPrefix = attributePrefix + '-attr-';\n\n    html.on('attr', (attr, type) => {\n        if (\n            attr.node.tagName === 'base' &&\n            attr.name === 'href' &&\n            attr.options.document\n        ) {\n            meta.base = new URL(attr.value, meta.url);\n        }\n\n        if (type === 'rewrite' && isUrl(attr.name, attr.tagName)) {\n            attr.node.setAttribute(origPrefix + attr.name, attr.value);\n            attr.value = ctx.rewriteUrl(attr.value, meta);\n        }\n\n        if (type === 'rewrite' && isSrcset(attr.name)) {\n            attr.node.setAttribute(origPrefix + attr.name, attr.value);\n            attr.value = html.wrapSrcset(attr.value, meta);\n        }\n\n        if (type === 'rewrite' && isHtml(attr.name)) {\n            attr.node.setAttribute(origPrefix + attr.name, attr.value);\n            attr.value = html.rewrite(attr.value, {\n                ...meta,\n                document: true,\n                injectHead: attr.options.injectHead || [],\n            });\n        }\n\n        if (type === 'rewrite' && isStyle(attr.name)) {\n            attr.node.setAttribute(origPrefix + attr.name, attr.value);\n            attr.value = ctx.rewriteCSS(attr.value, {\n                context: 'declarationList',\n            });\n        }\n\n        if (type === 'rewrite' && isForbidden(attr.name)) {\n            attr.name = origPrefix + attr.name;\n        }\n\n        if (type === 'rewrite' && isEvent(attr.name)) {\n            attr.node.setAttribute(origPrefix + attr.name, attr.value);\n            attr.value = js.rewrite(attr.value, meta);\n        }\n\n        if (type === 'source' && attr.name.startsWith(origPrefix)) {\n            if (attr.node.hasAttribute(attr.name.slice(origPrefix.length)))\n                attr.node.removeAttribute(attr.name.slice(origPrefix.length));\n            attr.name = attr.name.slice(origPrefix.length);\n        }\n\n        /*\n        if (isHtml(attr.name)) {\n\n        };\n\n        if (isStyle(attr.name)) {\n\n        };\n\n        if (isSrcset(attr.name)) {\n\n        };\n        */\n    });\n}\n\n/**\n *\n * @param {Ultraviolet} ctx\n */\nexport function text(ctx) {\n    const { html, js, css } = ctx;\n\n    html.on('text', (text, type) => {\n        if (text.element.tagName === 'script') {\n            text.value =\n                type === 'rewrite'\n                    ? js.rewrite(text.value)\n                    : js.source(text.value);\n        }\n\n        if (text.element.tagName === 'style') {\n            text.value =\n                type === 'rewrite'\n                    ? css.rewrite(text.value)\n                    : css.source(text.value);\n        }\n    });\n    return true;\n}\n\nexport function isUrl(name, tag) {\n    return (\n        (tag === 'object' && name === 'data') ||\n        [\n            'src',\n            'href',\n            'ping',\n            'movie',\n            'action',\n            'poster',\n            'profile',\n            'background',\n        ].indexOf(name) > -1\n    );\n}\n\nexport function isEvent(name) {\n    return (\n        [\n            'onafterprint',\n            'onbeforeprint',\n            'onbeforeunload',\n            'onerror',\n            'onhashchange',\n            'onload',\n            'onmessage',\n            'onoffline',\n            'ononline',\n            'onpagehide',\n            'onpopstate',\n            'onstorage',\n            'onunload',\n            'onblur',\n            'onchange',\n            'oncontextmenu',\n            'onfocus',\n            'oninput',\n            'oninvalid',\n            'onreset',\n            'onsearch',\n            'onselect',\n            'onsubmit',\n            'onkeydown',\n            'onkeypress',\n            'onkeyup',\n            'onclick',\n            'ondblclick',\n            'onmousedown',\n            'onmousemove',\n            'onmouseout',\n            'onmouseover',\n            'onmouseup',\n            'onmousewheel',\n            'onwheel',\n            'ondrag',\n            'ondragend',\n            'ondragenter',\n            'ondragleave',\n            'ondragover',\n            'ondragstart',\n            'ondrop',\n            'onscroll',\n            'oncopy',\n            'oncut',\n            'onpaste',\n            'onabort',\n            'oncanplay',\n            'oncanplaythrough',\n            'oncuechange',\n            'ondurationchange',\n            'onemptied',\n            'onended',\n            'onerror',\n            'onloadeddata',\n            'onloadedmetadata',\n            'onloadstart',\n            'onpause',\n            'onplay',\n            'onplaying',\n            'onprogress',\n            'onratechange',\n            'onseeked',\n            'onseeking',\n            'onstalled',\n            'onsuspend',\n            'ontimeupdate',\n            'onvolumechange',\n            'onwaiting',\n        ].indexOf(name) > -1\n    );\n}\n\n/**\n *\n * @param {Ultraviolet} ctx\n */\nexport function injectHead(ctx) {\n    const { html } = ctx;\n    html.on('element', (element, type) => {\n        if (type !== 'rewrite') return false;\n        if (element.tagName !== 'head') return false;\n        if (!('injectHead' in element.options)) return false;\n\n        element.childNodes.unshift(...element.options.injectHead);\n    });\n}\n\nexport function createJsInject(\n    bareURL = '',\n    bareData = {},\n    cookies = '',\n    referrer = ''\n) {\n    return (\n        `self.__uv$bareData = ${JSON.stringify(bareData)};` +\n        `self.__uv$cookies = ${JSON.stringify(cookies)};` +\n        `self.__uv$referrer = ${JSON.stringify(referrer)};` +\n        `self.__uv$bareURL = ${JSON.stringify(bareURL)}; `\n    );\n}\n\nexport function createHtmlInject(\n    handlerScript,\n    bundleScript,\n    clientScript,\n    configScript,\n    bareURL,\n    bareData,\n    cookies,\n    referrer\n) {\n    return [\n        {\n            tagName: 'script',\n            nodeName: 'script',\n            childNodes: [\n                {\n                    nodeName: '#text',\n                    value: createJsInject(bareURL, bareData, cookies, referrer),\n                },\n            ],\n            attrs: [\n                {\n                    name: '__uv-script',\n                    value: '1',\n                    skip: true,\n                },\n            ],\n            skip: true,\n        },\n        {\n            tagName: 'script',\n            nodeName: 'script',\n            childNodes: [],\n            attrs: [\n                { name: 'src', value: bundleScript, skip: true },\n                {\n                    name: '__uv-script',\n                    value: '1',\n                    skip: true,\n                },\n            ],\n        },\n        {\n            tagName: 'script',\n            nodeName: 'script',\n            childNodes: [],\n            attrs: [\n                { name: 'src', value: clientScript, skip: true },\n                {\n                    name: '__uv-script',\n                    value: '1',\n                    skip: true,\n                },\n            ],\n        },\n        {\n            tagName: 'script',\n            nodeName: 'script',\n            childNodes: [],\n            attrs: [\n                { name: 'src', value: configScript, skip: true },\n                {\n                    name: '__uv-script',\n                    value: '1',\n                    skip: true,\n                },\n            ],\n        },\n        {\n            tagName: 'script',\n            nodeName: 'script',\n            childNodes: [],\n            attrs: [\n                { name: 'src', value: handlerScript, skip: true },\n                {\n                    name: '__uv-script',\n                    value: '1',\n                    skip: true,\n                },\n            ],\n        },\n    ];\n}\n\nexport function isForbidden(name) {\n    return (\n        ['http-equiv', 'integrity', 'sandbox', 'nonce', 'crossorigin'].indexOf(\n            name\n        ) > -1\n    );\n}\n\nexport function isHtml(name) {\n    return name === 'srcdoc';\n}\n\nexport function isStyle(name) {\n    return name === 'style';\n}\n\nexport function isSrcset(name) {\n    return name === 'srcset' || name === 'imagesrcset';\n}\n", "/**\n * @typedef {import('./index').default} Ultraviolet\n */\n\n/**\n *\n * @param {Ultraviolet} ctx\n */\nfunction url(ctx) {\n    const { css } = ctx;\n    css.on('Url', (node, data, type) => {\n        node.value =\n            type === 'rewrite'\n                ? ctx.rewriteUrl(node.value)\n                : ctx.sourceUrl(node.value);\n    });\n}\n\n/**\n *\n * @param {Ultraviolet} ctx\n */\nfunction importStyle(ctx) {\n    const { css } = ctx;\n    css.on('Atrule', (node, data, type) => {\n        if (node.name !== 'import') return false;\n        const { data: url } = node.prelude.children.head;\n        // Already handling Url's\n        if (url.type === 'Url') return false;\n        url.value =\n            type === 'rewrite'\n                ? ctx.rewriteUrl(url.value)\n                : ctx.sourceUrl(url.value);\n    });\n}\n\nexport { url, importStyle };\n", "import { Syntax } from 'esotope-hammerhead';\n\n/**\n * @typedef {import('./index').default} Ultraviolet\n */\n\n/**\n *\n * @param {Ultraviolet} ctx\n */\nfunction property(ctx) {\n    const { js } = ctx;\n    js.on('MemberExpression', (node, data, type) => {\n        if (node.object.type === 'Super') return false;\n\n        if (type === 'rewrite' && computedProperty(node)) {\n            data.changes.push({\n                node: '__uv.$wrap((',\n                start: node.property.start,\n                end: node.property.start,\n            });\n            node.iterateEnd = function () {\n                data.changes.push({\n                    node: '))',\n                    start: node.property.end,\n                    end: node.property.end,\n                });\n            };\n        }\n\n        if (\n            (!node.computed &&\n                node.property.name === 'location' &&\n                type === 'rewrite') ||\n            (node.property.name === '__uv$location' && type === 'source')\n        ) {\n            data.changes.push({\n                start: node.property.start,\n                end: node.property.end,\n                node:\n                    type === 'rewrite'\n                        ? '__uv$setSource(__uv).__uv$location'\n                        : 'location',\n            });\n        }\n\n        if (\n            (!node.computed &&\n                node.property.name === 'top' &&\n                type === 'rewrite') ||\n            (node.property.name === '__uv$top' && type === 'source')\n        ) {\n            data.changes.push({\n                start: node.property.start,\n                end: node.property.end,\n                node:\n                    type === 'rewrite'\n                        ? '__uv$setSource(__uv).__uv$top'\n                        : 'top',\n            });\n        }\n\n        if (\n            (!node.computed &&\n                node.property.name === 'parent' &&\n                type === 'rewrite') ||\n            (node.property.name === '__uv$parent' && type === 'source')\n        ) {\n            data.changes.push({\n                start: node.property.start,\n                end: node.property.end,\n                node:\n                    type === 'rewrite'\n                        ? '__uv$setSource(__uv).__uv$parent'\n                        : 'parent',\n            });\n        }\n\n        if (\n            !node.computed &&\n            node.property.name === 'postMessage' &&\n            type === 'rewrite'\n        ) {\n            data.changes.push({\n                start: node.property.start,\n                end: node.property.end,\n                node: '__uv$setSource(__uv).postMessage',\n            });\n        }\n\n        if (\n            (!node.computed &&\n                node.property.name === 'eval' &&\n                type === 'rewrite') ||\n            (node.property.name === '__uv$eval' && type === 'source')\n        ) {\n            data.changes.push({\n                start: node.property.start,\n                end: node.property.end,\n                node:\n                    type === 'rewrite'\n                        ? '__uv$setSource(__uv).__uv$eval'\n                        : 'eval',\n            });\n        }\n\n        if (\n            !node.computed &&\n            node.property.name === '__uv$setSource' &&\n            type === 'source' &&\n            node.parent.type === Syntax.CallExpression\n        ) {\n            const { parent, property } = node;\n            data.changes.push({\n                start: property.start - 1,\n                end: parent.end,\n            });\n\n            node.iterateEnd = function () {\n                data.changes.push({\n                    start: property.start,\n                    end: parent.end,\n                });\n            };\n        }\n    });\n}\n\n/**\n *\n * @param {Ultraviolet} ctx\n */\nfunction identifier(ctx) {\n    const { js } = ctx;\n    js.on('Identifier', (node, data, type) => {\n        if (type !== 'rewrite') return false;\n        const { parent } = node;\n        if (!['location', 'eval', 'parent', 'top'].includes(node.name))\n            return false;\n        if (parent.type === Syntax.VariableDeclarator && parent.id === node)\n            return false;\n        if (\n            (parent.type === Syntax.AssignmentExpression ||\n                parent.type === Syntax.AssignmentPattern) &&\n            parent.left === node\n        )\n            return false;\n        if (\n            (parent.type === Syntax.FunctionExpression ||\n                parent.type === Syntax.FunctionDeclaration) &&\n            parent.id === node\n        )\n            return false;\n        if (\n            parent.type === Syntax.MemberExpression &&\n            parent.property === node &&\n            !parent.computed\n        )\n            return false;\n        if (\n            node.name === 'eval' &&\n            parent.type === Syntax.CallExpression &&\n            parent.callee === node\n        )\n            return false;\n        if (parent.type === Syntax.Property && parent.key === node)\n            return false;\n        if (\n            parent.type === Syntax.Property &&\n            parent.value === node &&\n            parent.shorthand\n        )\n            return false;\n        if (\n            parent.type === Syntax.UpdateExpression &&\n            (parent.operator === '++' || parent.operator === '--')\n        )\n            return false;\n        if (\n            (parent.type === Syntax.FunctionExpression ||\n                parent.type === Syntax.FunctionDeclaration ||\n                parent.type === Syntax.ArrowFunctionExpression) &&\n            parent.params.indexOf(node) !== -1\n        )\n            return false;\n        if (parent.type === Syntax.MethodDefinition) return false;\n        if (parent.type === Syntax.ClassDeclaration) return false;\n        if (parent.type === Syntax.RestElement) return false;\n        if (parent.type === Syntax.ExportSpecifier) return false;\n        if (parent.type === Syntax.ImportSpecifier) return false;\n\n        data.changes.push({\n            start: node.start,\n            end: node.end,\n            node: '__uv.$get(' + node.name + ')',\n        });\n    });\n}\n\n/**\n *\n * @param {Ultraviolet} ctx\n */\nfunction wrapEval(ctx) {\n    const { js } = ctx;\n    js.on('CallExpression', (node, data, type) => {\n        if (type !== 'rewrite') return false;\n        if (!node.arguments.length) return false;\n        if (node.callee.type !== 'Identifier') return false;\n        if (node.callee.name !== 'eval') return false;\n\n        const [script] = node.arguments;\n\n        data.changes.push({\n            node: '__uv.js.rewrite(',\n            start: script.start,\n            end: script.start,\n        });\n        node.iterateEnd = function () {\n            data.changes.push({\n                node: ')',\n                start: script.end,\n                end: script.end,\n            });\n        };\n    });\n}\n\n/**\n *\n * @param {Ultraviolet} ctx\n */\nfunction importDeclaration(ctx) {\n    const { js } = ctx;\n    js.on(Syntax.Literal, (node, data, type) => {\n        if (\n            !(\n                (node.parent.type === Syntax.ImportDeclaration ||\n                    node.parent.type === Syntax.ExportAllDeclaration ||\n                    node.parent.type === Syntax.ExportNamedDeclaration) &&\n                node.parent.source === node\n            )\n        )\n            return false;\n\n        data.changes.push({\n            start: node.start + 1,\n            end: node.end - 1,\n            node:\n                type === 'rewrite'\n                    ? ctx.rewriteUrl(node.value)\n                    : ctx.sourceUrl(node.value),\n        });\n    });\n}\n\n/**\n *\n * @param {Ultraviolet} ctx\n */\nfunction dynamicImport(ctx) {\n    const { js } = ctx;\n    js.on(Syntax.ImportExpression, (node, data, type) => {\n        if (type !== 'rewrite') return false;\n        data.changes.push({\n            // pass script URL to dynamicImport\n            // import() is always relative to script URL\n            node: `__uv.rewriteImport(${JSON.stringify(ctx.meta.url)},`,\n            start: node.source.start,\n            end: node.source.start,\n        });\n        node.iterateEnd = function () {\n            data.changes.push({\n                node: ')',\n                start: node.source.end,\n                end: node.source.end,\n            });\n        };\n    });\n}\n\n/**\n *\n * @param {Ultraviolet} ctx\n */\nfunction unwrap(ctx) {\n    const { js } = ctx;\n    js.on('CallExpression', (node, data, type) => {\n        if (type !== 'source') return false;\n        if (!isWrapped(node.callee)) return false;\n\n        switch (node.callee.property.name) {\n            case '$wrap':\n                {\n                    if (\n                        !node.arguments ||\n                        node.parent.type !== Syntax.MemberExpression ||\n                        node.parent.property !== node\n                    )\n                        return false;\n                    const [property] = node.arguments;\n\n                    data.changes.push({\n                        start: node.callee.start,\n                        end: property.start,\n                    });\n\n                    node.iterateEnd = function () {\n                        data.changes.push({\n                            start: node.end - 2,\n                            end: node.end,\n                        });\n                    };\n                }\n                break;\n            case '$get':\n            case 'rewriteUrl':\n                {\n                    const [arg] = node.arguments;\n\n                    data.changes.push({\n                        start: node.callee.start,\n                        end: arg.start,\n                    });\n\n                    node.iterateEnd = function () {\n                        data.changes.push({\n                            start: node.end - 1,\n                            end: node.end,\n                        });\n                    };\n                }\n                break;\n            case 'rewrite':\n                {\n                    const [script] = node.arguments;\n                    data.changes.push({\n                        start: node.callee.start,\n                        end: script.start,\n                    });\n                    node.iterateEnd = function () {\n                        data.changes.push({\n                            start: node.end - 1,\n                            end: node.end,\n                        });\n                    };\n                }\n                break;\n        }\n    });\n}\n\nfunction isWrapped(node) {\n    if (node.type !== Syntax.MemberExpression) return false;\n    if (node.property.name === 'rewrite' && isWrapped(node.object)) return true;\n    if (node.object.type !== Syntax.Identifier || node.object.name !== '__uv')\n        return false;\n    if (!['js', '$get', '$wrap', 'rewriteUrl'].includes(node.property.name))\n        return false;\n    return true;\n}\n\nfunction computedProperty(parent) {\n    if (!parent.computed) return false;\n    const { property: node } = parent;\n    if (node.type === 'Literal' && !['location', 'top', 'parent']) return false;\n    return true;\n}\n\nexport {\n    property,\n    wrapEval,\n    dynamicImport,\n    importDeclaration,\n    identifier,\n    unwrap,\n};\n", "const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n", "import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n", "// The user likely has overwritten all networking functions after importing bare-client\n// It is our responsibility to make sure components of Bare-Client are using native networking functions\n\n// These exports are provided to plugins by @rollup/plugin-inject\n\nexport const fetch = globalThis.fetch;\nexport const WebSocket = globalThis.WebSocket;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport const XMLHttpRequest = globalThis.XMLHttpRequest;\n\nexport const WebSocketFields = {\n\tprototype: {\n\t\tsend: WebSocket.prototype.send,\n\t},\n\tCLOSED: WebSocket.CLOSED,\n\tCLOSING: WebSocket.CLOSING,\n\tCONNECTING: WebSocket.CONNECTING,\n\tOPEN: WebSocket.OPEN,\n};\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nexport type BareMethod =\n\t| 'GET'\n\t| 'POST'\n\t| 'DELETE'\n\t| 'OPTIONS'\n\t| 'PUT'\n\t| 'PATCH'\n\t| 'UPDATE'\n\t| string;\n\nexport type BareCache =\n\t| 'default'\n\t| 'no-store'\n\t| 'reload'\n\t| 'no-cache'\n\t| 'force-cache'\n\t| 'only-if-cached'\n\t| string;\n\nexport interface BareWebSocketMeta {\n\tprotocol: string;\n\tsetCookies: string[];\n}\n\nexport type BareHTTPProtocol = 'blob:' | 'http:' | 'https:' | string;\nexport type BareWSProtocol = 'ws:' | 'wss:' | string;\n\nexport type urlLike = URL | string;\n\nexport const maxRedirects = 20;\n\nexport type BareHeaders = Record<string, string | string[]>;\n\n/**\n * A Response with additional properties.\n */\nexport interface BareResponse extends Response {\n\trawResponse: Response;\n\trawHeaders: BareHeaders;\n}\n\n/**\n * A BareResponse with additional properties.\n */\nexport interface BareResponseFetch extends BareResponse {\n\tfinalURL: string;\n}\n\nexport interface BareMaintainer {\n\temail?: string;\n\twebsite?: string;\n}\n\nexport interface BareProject {\n\tname?: string;\n\tdescription?: string;\n\temail?: string;\n\twebsite?: string;\n\trepository?: string;\n\tversion?: string;\n}\n\nexport type BareLanguage =\n\t| 'NodeJS'\n\t| 'ServiceWorker'\n\t| 'Deno'\n\t| 'Java'\n\t| 'PHP'\n\t| 'Rust'\n\t| 'C'\n\t| 'C++'\n\t| 'C#'\n\t| 'Ruby'\n\t| 'Go'\n\t| 'Crystal'\n\t| 'Shell'\n\t| string;\n\nexport interface BareManifest {\n\tmaintainer?: BareMaintainer;\n\tproject?: BareProject;\n\tversions: string[];\n\tlanguage: BareLanguage;\n\tmemoryUsage?: number;\n}\n", "import type {\n\tBareCache,\n\tBareHeaders,\n\tBareMethod,\n\tBareResponse,\n\tBareWebSocketMeta,\n} from './BareTypes.js';\n\nexport const statusEmpty = [101, 204, 205, 304];\nexport const statusRedirect = [301, 302, 303, 307, 308];\n\nexport interface BareErrorBody {\n\tcode: string;\n\tid: string;\n\tmessage?: string;\n\tstack?: string;\n}\n\nexport class BareError extends Error {\n\tstatus: number;\n\tbody: BareErrorBody;\n\tconstructor(status: number, body: BareErrorBody) {\n\t\tsuper(body.message || body.code);\n\t\tthis.status = status;\n\t\tthis.body = body;\n\t}\n}\n\nexport type MetaCallback = (meta: BareWebSocketMeta) => void;\nexport type ReadyStateCallback = (readyState: number) => void;\nexport type WebSocketImpl = {\n\tnew (...args: ConstructorParameters<typeof WebSocket>): WebSocket;\n};\nexport type GetRequestHeadersCallback = () => Promise<BareHeaders>;\n\nexport abstract class Client {\n\tabstract connect(\n\t\tremote: URL,\n\t\tprotocols: string[],\n\t\tgetRequestHeaders: GetRequestHeadersCallback,\n\t\tonMeta: MetaCallback,\n\t\tonReadyState: ReadyStateCallback,\n\t\twebSocketImpl: WebSocketImpl\n\t): WebSocket;\n\tabstract request(\n\t\tmethod: BareMethod,\n\t\trequestHeaders: BareHeaders,\n\t\tbody: BodyInit | null,\n\t\tremote: URL,\n\t\tcache: BareCache | undefined,\n\t\tduplex: string | undefined,\n\t\tsignal: AbortSignal | undefined\n\t): Promise<BareResponse>;\n\tprotected base: URL;\n\t/**\n\t *\n\t * @param version Version provided by extension\n\t * @param server Bare Server URL provided by BareClient\n\t */\n\tconstructor(version: number, server: URL) {\n\t\tthis.base = new URL(`./v${version}/`, server);\n\t}\n}\n", "/*\n * JavaScript MD5\n * Adopted from https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\n/**\n * Add integers, wrapping at 2^32.\n * This uses 16-bit operations internally to work around bugs in interpreters.\n *\n * @param x First integer\n * @param y Second integer\n * @returns Sum\n */\nfunction safeAdd(x: number, y: number): number {\n\tconst lsw = (x & 0xffff) + (y & 0xffff);\n\tconst msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n\treturn (msw << 16) | (lsw & 0xffff);\n}\n\n/**\n * Bitwise rotate a 32-bit number to the left.\n *\n * @param num 32-bit number\n * @param cnt Rotation count\n * @returns  Rotated number\n */\nfunction bitRotateLeft(num: number, cnt: number): number {\n\treturn (num << cnt) | (num >>> (32 - cnt));\n}\n\n/**\n * Basic operation the algorithm uses.\n *\n * @param q q\n * @param a a\n * @param b b\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5cmn(\n\tq: number,\n\ta: number,\n\tb: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n/**\n * Basic operation the algorithm uses.\n *\n * @param a a\n * @param b b\n * @param c c\n * @param d d\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5ff(\n\ta: number,\n\tb: number,\n\tc: number,\n\td: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn md5cmn((b & c) | (~b & d), a, b, x, s, t);\n}\n/**\n * Basic operation the algorithm uses.\n *\n * @param a a\n * @param b b\n * @param c c\n * @param d d\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5gg(\n\ta: number,\n\tb: number,\n\tc: number,\n\td: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn md5cmn((b & d) | (c & ~d), a, b, x, s, t);\n}\n/**\n * Basic operation the algorithm uses.\n *\n * @param a a\n * @param b b\n * @param c c\n * @param d d\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5hh(\n\ta: number,\n\tb: number,\n\tc: number,\n\td: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n/**\n * Basic operation the algorithm uses.\n *\n * @param a a\n * @param b b\n * @param c c\n * @param d d\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5ii(\n\ta: number,\n\tb: number,\n\tc: number,\n\td: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\n/**\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n *\n * @param x Array of little-endian words\n * @param len Bit length\n * @returns MD5 Array\n */\nfunction binlMD5(x: number[], len: number): number[] {\n\t/* append padding */\n\tx[len >> 5] |= 0x80 << len % 32;\n\tx[(((len + 64) >>> 9) << 4) + 14] = len;\n\n\tlet a = 1732584193;\n\tlet b = -271733879;\n\tlet c = -1732584194;\n\tlet d = 271733878;\n\n\tfor (let i = 0; i < x.length; i += 16) {\n\t\tconst olda = a;\n\t\tconst oldb = b;\n\t\tconst oldc = c;\n\t\tconst oldd = d;\n\n\t\ta = md5ff(a, b, c, d, x[i], 7, -680876936);\n\t\td = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n\t\tc = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n\t\tb = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n\t\ta = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n\t\td = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n\t\tc = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n\t\tb = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n\t\ta = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n\t\td = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n\t\tc = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n\t\tb = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n\t\ta = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n\t\td = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n\t\tc = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n\t\tb = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n\n\t\ta = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n\t\td = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n\t\tc = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n\t\tb = md5gg(b, c, d, a, x[i], 20, -373897302);\n\t\ta = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n\t\td = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n\t\tc = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n\t\tb = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n\t\ta = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n\t\td = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n\t\tc = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n\t\tb = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n\t\ta = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n\t\td = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n\t\tc = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n\t\tb = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\n\t\ta = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n\t\td = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n\t\tc = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n\t\tb = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n\t\ta = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n\t\td = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n\t\tc = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n\t\tb = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n\t\ta = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n\t\td = md5hh(d, a, b, c, x[i], 11, -358537222);\n\t\tc = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n\t\tb = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n\t\ta = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n\t\td = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n\t\tc = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n\t\tb = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n\n\t\ta = md5ii(a, b, c, d, x[i], 6, -198630844);\n\t\td = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n\t\tc = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n\t\tb = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n\t\ta = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n\t\td = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n\t\tc = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n\t\tb = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n\t\ta = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n\t\td = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n\t\tc = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n\t\tb = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n\t\ta = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n\t\td = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n\t\tc = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n\t\tb = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n\n\t\ta = safeAdd(a, olda);\n\t\tb = safeAdd(b, oldb);\n\t\tc = safeAdd(c, oldc);\n\t\td = safeAdd(d, oldd);\n\t}\n\treturn [a, b, c, d];\n}\n\n/**\n * Convert an array of little-endian words to a string\n *\n * @param input MD5 Array\n * @returns MD5 string\n */\nfunction binl2rstr(input: number[]): string {\n\tlet output = '';\n\tconst length32 = input.length * 32;\n\tfor (let i = 0; i < length32; i += 8) {\n\t\toutput += String.fromCharCode((input[i >> 5] >>> i % 32) & 0xff);\n\t}\n\treturn output;\n}\n\n/**\n * Convert a raw string to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n *\n * @param input Raw input string\n * @returns Array of little-endian words\n */\nfunction rstr2binl(input: string): number[] {\n\tconst output: number[] = [];\n\tconst outputLen = input.length >> 2;\n\tfor (let i = 0; i < outputLen; i += 1) {\n\t\toutput[i] = 0;\n\t}\n\tconst length8 = input.length * 8;\n\tfor (let i = 0; i < length8; i += 8) {\n\t\toutput[i >> 5]! |= (input.charCodeAt(i / 8) & 0xff) << i % 32;\n\t}\n\treturn <number[]>output;\n}\n\n/**\n * Calculate the MD5 of a raw string\n *\n * @param s Input string\n * @returns Raw MD5 string\n */\nfunction rstrMD5(s: string): string {\n\treturn binl2rstr(binlMD5(rstr2binl(s), s.length * 8));\n}\n\n/**\n * Calculates the HMAC-MD5 of a key and some data (raw strings)\n *\n * @param key HMAC key\n * @param data Raw input string\n * @returns Raw MD5 string\n */\nfunction rstrHMACMD5(key: string, data: string): string {\n\tlet bkey = rstr2binl(key);\n\tconst ipad: number[] = [];\n\tconst opad: number[] = [];\n\tif (bkey.length > 16) {\n\t\tbkey = binlMD5(bkey, key.length * 8);\n\t}\n\tfor (let i = 0; i < 16; i += 1) {\n\t\tipad[i] = bkey[i] ^ 0x36363636;\n\t\topad[i] = bkey[i] ^ 0x5c5c5c5c;\n\t}\n\tconst hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);\n\treturn binl2rstr(binlMD5(opad.concat(hash), 512 + 128));\n}\n\n/**\n * Convert a raw string to a hex string\n *\n * @param input Raw input string\n * @returns Hex encoded string\n */\nfunction rstr2hex(input: string): string {\n\tconst hexTab = '0123456789abcdef';\n\tlet output = '';\n\tfor (let i = 0; i < input.length; i += 1) {\n\t\tconst x = input.charCodeAt(i);\n\t\toutput += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f);\n\t}\n\treturn output;\n}\n\n/**\n * Encode a string as UTF-8\n *\n * @param input Input string\n * @returns UTF8 string\n */\nfunction str2rstrUTF8(input: string): string {\n\treturn unescape(encodeURIComponent(input));\n}\n\n/**\n * Encodes input string as raw MD5 string\n *\n * @param s Input string\n * @returns Raw MD5 string\n */\nfunction rawMD5(s: string): string {\n\treturn rstrMD5(str2rstrUTF8(s));\n}\n/**\n * Encodes input string as Hex encoded string\n *\n * @param s Input string\n * @returns Hex encoded string\n */\nfunction hexMD5(s: string): string {\n\treturn rstr2hex(rawMD5(s));\n}\n/**\n * Calculates the raw HMAC-MD5 for the given key and data\n *\n * @param k HMAC key\n * @param d Input string\n * @returns Raw MD5 string\n */\nfunction rawHMACMD5(k: string, d: string): string {\n\treturn rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d));\n}\n/**\n * Calculates the Hex encoded HMAC-MD5 for the given key and data\n *\n * @param k HMAC key\n * @param d Input string\n * @returns Raw MD5 string\n */\nfunction hexHMACMD5(k: string, d: string): string {\n\treturn rstr2hex(rawHMACMD5(k, d));\n}\n\n/**\n * Calculates MD5 value for a given string.\n * If a key is provided, calculates the HMAC-MD5 value.\n * Returns a Hex encoded string unless the raw argument is given.\n *\n * @param string Input string\n * @param key HMAC key\n * @param raw Raw output switch\n * @returns MD5 output\n */\nexport default function md5(\n\tstring: string,\n\tkey?: string,\n\traw?: boolean\n): string {\n\tif (!key) {\n\t\tif (!raw) {\n\t\t\treturn hexMD5(string);\n\t\t}\n\t\treturn rawMD5(string);\n\t}\n\tif (!raw) {\n\t\treturn hexHMACMD5(key, string);\n\t}\n\treturn rawHMACMD5(key, string);\n}\n", "import { BareError } from './Client';\n\nconst MAX_HEADER_VALUE = 3072;\n\n/**\n *\n * Splits headers according to spec\n * @param headers\n * @returns Split headers\n */\nexport function splitHeaders(headers: Headers): Headers {\n\tconst output = new Headers(headers);\n\n\tif (headers.has('x-bare-headers')) {\n\t\tconst value = headers.get('x-bare-headers')!;\n\n\t\tif (value.length > MAX_HEADER_VALUE) {\n\t\t\toutput.delete('x-bare-headers');\n\n\t\t\tlet split = 0;\n\n\t\t\tfor (let i = 0; i < value.length; i += MAX_HEADER_VALUE) {\n\t\t\t\tconst part = value.slice(i, i + MAX_HEADER_VALUE);\n\n\t\t\t\tconst id = split++;\n\t\t\t\toutput.set(`x-bare-headers-${id}`, `;${part}`);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn output;\n}\n\n/**\n * Joins headers according to spec\n * @param headers\n * @returns Joined headers\n */\nexport function joinHeaders(headers: Headers): Headers {\n\tconst output = new Headers(headers);\n\n\tconst prefix = 'x-bare-headers';\n\n\tif (headers.has(`${prefix}-0`)) {\n\t\tconst join: string[] = [];\n\n\t\tfor (const [header, value] of headers) {\n\t\t\tif (!header.startsWith(prefix)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!value.startsWith(';')) {\n\t\t\t\tthrow new BareError(400, {\n\t\t\t\t\tcode: 'INVALID_BARE_HEADER',\n\t\t\t\t\tid: `request.headers.${header}`,\n\t\t\t\t\tmessage: `Value didn't begin with semi-colon.`,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst id = parseInt(header.slice(prefix.length + 1));\n\n\t\t\tjoin[id] = value.slice(1);\n\n\t\t\toutput.delete(header);\n\t\t}\n\n\t\toutput.set(prefix, join.join(''));\n\t}\n\n\treturn output;\n}\n", "import type {\n\tBareCache,\n\tBareHeaders,\n\tBareMethod,\n\tBareResponse,\n} from './BareTypes.js';\nimport { BareError, Client, statusEmpty } from './Client.js';\nimport type {\n\tReadyStateCallback,\n\tMetaCallback,\n\tGetRequestHeadersCallback,\n} from './Client.js';\nimport type {\n\tBareResponseHeaders,\n\tSocketClientToServer,\n\tSocketServerToClient,\n} from './V3Types.js';\nimport md5 from './md5.js';\nimport { WebSocketFields } from './snapshot.js';\nimport { joinHeaders, splitHeaders } from './splitHeaderUtil.js';\n\nexport default class ClientV3 extends Client {\n\tws: URL;\n\thttp: URL;\n\tconstructor(server: URL) {\n\t\tsuper(3, server);\n\n\t\tthis.ws = new URL(this.base);\n\t\tthis.http = new URL(this.base);\n\n\t\tif (this.ws.protocol === 'https:') {\n\t\t\tthis.ws.protocol = 'wss:';\n\t\t} else {\n\t\t\tthis.ws.protocol = 'ws:';\n\t\t}\n\t}\n\tconnect(\n\t\tremote: URL,\n\t\tprotocols: string[],\n\t\tgetRequestHeaders: GetRequestHeadersCallback,\n\t\tonMeta: MetaCallback,\n\t\tonReadyState: ReadyStateCallback\n\t) {\n\t\tconst ws = new WebSocket(this.ws);\n\n\t\tconst cleanup = () => {\n\t\t\tws.removeEventListener('close', closeListener);\n\t\t\tws.removeEventListener('message', messageListener);\n\t\t};\n\n\t\tconst closeListener = () => {\n\t\t\tcleanup();\n\t\t};\n\n\t\tconst messageListener = (event: MessageEvent) => {\n\t\t\tcleanup();\n\n\t\t\t// ws.binaryType is irrelevant when sending text\n\t\t\tif (typeof event.data !== 'string')\n\t\t\t\tthrow new TypeError('the first websocket message was not a text frame');\n\n\t\t\tconst message = JSON.parse(event.data) as SocketServerToClient;\n\n\t\t\t// finally\n\t\t\tif (message.type !== 'open')\n\t\t\t\tthrow new TypeError('message was not of open type');\n\n\t\t\tevent.stopImmediatePropagation();\n\n\t\t\tonMeta({\n\t\t\t\tprotocol: message.protocol,\n\t\t\t\tsetCookies: message.setCookies,\n\t\t\t});\n\n\t\t\t// now we want the client to see the websocket is open and ready to communicate with the remote\n\t\t\tonReadyState(WebSocketFields.OPEN);\n\n\t\t\tws.dispatchEvent(new Event('open'));\n\t\t};\n\n\t\tws.addEventListener('close', closeListener);\n\t\tws.addEventListener('message', messageListener);\n\n\t\t// CONNECTED TO THE BARE SERVER, NOT THE REMOTE\n\t\tws.addEventListener(\n\t\t\t'open',\n\t\t\t(event) => {\n\t\t\t\t// we have to cancel this event because it doesn't reflect the connection to the remote\n\t\t\t\t// once we are actually connected to the remote, we can dispatch a fake open event.\n\t\t\t\tevent.stopImmediatePropagation();\n\n\t\t\t\t// we need to fake the readyState value again so it remains CONNECTING\n\t\t\t\t// right now, it's open because we just connected to the remote\n\t\t\t\t// but we need to fake this from the client so it thinks it's still connecting\n\t\t\t\tonReadyState(WebSocketFields.CONNECTING);\n\n\t\t\t\tgetRequestHeaders().then((headers) =>\n\t\t\t\t\tWebSocketFields.prototype.send.call(\n\t\t\t\t\t\tws,\n\t\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\t\ttype: 'connect',\n\t\t\t\t\t\t\tremote: remote.toString(),\n\t\t\t\t\t\t\tprotocols,\n\t\t\t\t\t\t\theaders,\n\t\t\t\t\t\t\tforwardHeaders: [],\n\t\t\t\t\t\t} as SocketClientToServer)\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t},\n\t\t\t// only block the open event once\n\t\t\t{ once: true }\n\t\t);\n\n\t\treturn ws;\n\t}\n\tasync request(\n\t\tmethod: BareMethod,\n\t\trequestHeaders: BareHeaders,\n\t\tbody: BodyInit | null,\n\t\tremote: URL,\n\t\tcache: BareCache | undefined,\n\t\tduplex: string | undefined,\n\t\tsignal: AbortSignal | undefined\n\t): Promise<BareResponse> {\n\t\tif (remote.protocol.startsWith('blob:')) {\n\t\t\tconst response = await fetch(remote);\n\t\t\tconst result: Response & Partial<BareResponse> = new Response(\n\t\t\t\tresponse.body,\n\t\t\t\tresponse\n\t\t\t);\n\n\t\t\tresult.rawHeaders = Object.fromEntries(response.headers);\n\t\t\tresult.rawResponse = response;\n\n\t\t\treturn result as BareResponse;\n\t\t}\n\n\t\tconst bareHeaders: BareHeaders = {};\n\n\t\tif (requestHeaders instanceof Headers) {\n\t\t\tfor (const [header, value] of requestHeaders) {\n\t\t\t\tbareHeaders[header] = value;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const header in requestHeaders) {\n\t\t\t\tbareHeaders[header] = requestHeaders[header];\n\t\t\t}\n\t\t}\n\n\t\tconst options: RequestInit = {\n\t\t\tcredentials: 'omit',\n\t\t\tmethod: method,\n\t\t\tsignal,\n\t\t};\n\n\t\tif (cache !== 'only-if-cached') {\n\t\t\toptions.cache = cache as RequestCache;\n\t\t}\n\n\t\tif (body !== undefined) {\n\t\t\toptions.body = body;\n\t\t}\n\n\t\tif (duplex !== undefined) {\n\t\t\t// @ts-ignore\n\t\t\toptions.duplex = duplex;\n\t\t}\n\n\t\toptions.headers = this.createBareHeaders(remote, bareHeaders);\n\n\t\tconst response = await fetch(\n\t\t\tthis.http + '?cache=' + md5(remote.toString()),\n\t\t\toptions\n\t\t);\n\n\t\tconst readResponse = await this.readBareResponse(response);\n\n\t\tconst result: Response & Partial<BareResponse> = new Response(\n\t\t\tstatusEmpty.includes(readResponse.status!) ? undefined : response.body,\n\t\t\t{\n\t\t\t\tstatus: readResponse.status,\n\t\t\t\tstatusText: readResponse.statusText ?? undefined,\n\t\t\t\theaders: new Headers(readResponse.headers as HeadersInit),\n\t\t\t}\n\t\t);\n\n\t\tresult.rawHeaders = readResponse.headers;\n\t\tresult.rawResponse = response;\n\n\t\treturn result as BareResponse;\n\t}\n\tprivate async readBareResponse(response: Response) {\n\t\tif (!response.ok) {\n\t\t\tthrow new BareError(response.status, await response.json());\n\t\t}\n\n\t\tconst responseHeaders = joinHeaders(response.headers);\n\n\t\tconst result: Partial<BareResponseHeaders> = {};\n\n\t\tconst xBareStatus = responseHeaders.get('x-bare-status');\n\t\tif (xBareStatus !== null) result.status = parseInt(xBareStatus);\n\n\t\tconst xBareStatusText = responseHeaders.get('x-bare-status-text');\n\t\tif (xBareStatusText !== null) result.statusText = xBareStatusText;\n\n\t\tconst xBareHeaders = responseHeaders.get('x-bare-headers');\n\t\tif (xBareHeaders !== null) result.headers = JSON.parse(xBareHeaders);\n\n\t\treturn result as BareResponseHeaders;\n\t}\n\tcreateBareHeaders(\n\t\tremote: URL,\n\t\tbareHeaders: BareHeaders,\n\t\tforwardHeaders: string[] = [],\n\t\tpassHeaders: string[] = [],\n\t\tpassStatus: number[] = []\n\t) {\n\t\tconst headers = new Headers();\n\n\t\theaders.set('x-bare-url', remote.toString());\n\t\theaders.set('x-bare-headers', JSON.stringify(bareHeaders));\n\n\t\tfor (const header of forwardHeaders) {\n\t\t\theaders.append('x-bare-forward-headers', header);\n\t\t}\n\n\t\tfor (const header of passHeaders) {\n\t\t\theaders.append('x-bare-pass-headers', header);\n\t\t}\n\n\t\tfor (const status of passStatus) {\n\t\t\theaders.append('x-bare-pass-status', status.toString());\n\t\t}\n\n\t\tsplitHeaders(headers);\n\n\t\treturn headers;\n\t}\n}\n", "/*\n * WebSocket helpers\n */\n\nconst validChars =\n\t\"!#$%&'*+-.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ^_`abcdefghijklmnopqrstuvwxyz|~\";\n\nexport function validProtocol(protocol: string): boolean {\n\tfor (let i = 0; i < protocol.length; i++) {\n\t\tconst char = protocol[i];\n\n\t\tif (!validChars.includes(char)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n", "import type {\n\tBareHeaders,\n\tBareManifest,\n\tBareResponse,\n\tBareResponseFetch,\n\turlLike,\n} from './BareTypes';\nimport { maxRedirects } from './BareTypes';\nimport type { Client, WebSocketImpl } from './Client';\nimport { statusRedirect } from './Client';\nimport ClientV3 from './V3';\nimport { WebSocketFields } from './snapshot';\nimport { validProtocol } from './webSocket';\n\nconst clientCtors: [string, { new (server: URL): Client }][] = [\n\t['v3', ClientV3],\n];\n\nexport async function fetchManifest(\n\tserver: string | URL,\n\tsignal?: AbortSignal\n): Promise<BareManifest> {\n\tconst outgoing = await fetch(server, { signal });\n\n\tif (!outgoing.ok) {\n\t\tthrow new Error(\n\t\t\t`Unable to fetch Bare meta: ${outgoing.status} ${await outgoing.text()}`\n\t\t);\n\t}\n\n\treturn await outgoing.json();\n}\n\n// get the unhooked value\nconst getRealReadyState = Object.getOwnPropertyDescriptor(\n\tWebSocket.prototype,\n\t'readyState'\n)!.get!;\n\nconst wsProtocols = ['ws:', 'wss:'];\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace BareWebSocket {\n\texport type GetReadyStateCallback = () => number;\n\texport type GetSendErrorCallback = () => Error | undefined;\n\texport type GetProtocolCallback = () => string;\n\texport type HeadersType = BareHeaders | Headers | undefined;\n\texport type HeadersProvider =\n\t\t| BareHeaders\n\t\t| (() => BareHeaders | Promise<BareHeaders>);\n\n\texport interface Options {\n\t\t/**\n\t\t * A provider of request headers to pass to the remote.\n\t\t * Usually one of `User-Agent`, `Origin`, and `Cookie`\n\t\t * Can be just the headers object or an synchronous/asynchronous function that returns the headers object\n\t\t */\n\t\theaders?: BareWebSocket.HeadersProvider;\n\t\t/**\n\t\t * A hook executed by this function with helper arguments for hooking the readyState property. If a hook isn't provided, bare-client will hook the property on the instance. Hooking it on an instance basis is good for small projects, but ideally the class should be hooked by the user of bare-client.\n\t\t */\n\t\treadyStateHook?:\n\t\t\t| ((\n\t\t\t\t\tsocket: WebSocket,\n\t\t\t\t\tgetReadyState: BareWebSocket.GetReadyStateCallback\n\t\t\t  ) => void)\n\t\t\t| undefined;\n\t\t/**\n\t\t * A hook executed by this function with helper arguments for determining if the send function should throw an error. If a hook isn't provided, bare-client will hook the function on the instance.\n\t\t */\n\t\tsendErrorHook?:\n\t\t\t| ((\n\t\t\t\t\tsocket: WebSocket,\n\t\t\t\t\tgetSendError: BareWebSocket.GetSendErrorCallback\n\t\t\t  ) => void)\n\t\t\t| undefined;\n\t\t/**\n\t\t * A hook executed by this function with the URL. If a hook isn't provided, bare-client will hook the URL.\n\t\t */\n\t\turlHook?: ((socket: WebSocket, url: URL) => void) | undefined;\n\t\t/**\n\t\t * A hook executed by this function with a helper for getting the current fake protocol. If a hook isn't provided, bare-client will hook the protocol.\n\t\t */\n\t\tprotocolHook?:\n\t\t\t| ((\n\t\t\t\t\tsocket: WebSocket,\n\t\t\t\t\tgetProtocol: BareWebSocket.GetProtocolCallback\n\t\t\t  ) => void)\n\t\t\t| undefined;\n\t\t/**\n\t\t * A callback executed by this function with an array of cookies. This is called once the metadata from the server is received.\n\t\t */\n\t\tsetCookiesCallback?: ((setCookies: string[]) => void) | undefined;\n\t\twebSocketImpl?: WebSocketImpl;\n\t}\n}\n\nexport class BareClient {\n\tmanifest?: BareManifest;\n\tprivate client?: Client;\n\tprivate server: URL;\n\tprivate working?: Promise<Client>;\n\tprivate onDemand: boolean;\n\tprivate onDemandSignal?: AbortSignal;\n\t/**\n\t * Lazily create a BareClient. Calls to fetch and connect will request the manifest once on-demand.\n\t * @param server A full URL to the bare server.\n\t * @param signal An abort signal for fetching the manifest on demand.\n\t */\n\tconstructor(server: string | URL, signal?: AbortSignal);\n\t/**\n\t * Immediately create a BareClient.\n\t * @param server A full URL to the bare server.\n\t * @param manifest A Bare server manifest.\n\t */\n\tconstructor(server: string | URL, manifest?: BareManifest);\n\tconstructor(server: string | URL, _?: BareManifest | AbortSignal) {\n\t\tthis.server = new URL(server);\n\n\t\tif (!_ || _ instanceof AbortSignal) {\n\t\t\tthis.onDemand = true;\n\t\t\tthis.onDemandSignal = _;\n\t\t} else {\n\t\t\tthis.onDemand = false;\n\t\t\tthis.loadManifest(_);\n\t\t}\n\t}\n\tprivate loadManifest(manifest: BareManifest) {\n\t\tthis.manifest = manifest;\n\t\tthis.client = this.getClient();\n\t\treturn this.client;\n\t}\n\tprivate demand() {\n\t\tif (!this.onDemand) return this.client!;\n\n\t\tif (!this.working)\n\t\t\tthis.working = fetchManifest(this.server, this.onDemandSignal)\n\t\t\t\t.then((manifest) => this.loadManifest(manifest))\n\t\t\t\t.catch((err) => {\n\t\t\t\t\t// allow the next request to re-fetch the manifest\n\t\t\t\t\t// this is to prevent BareClient from permanently failing when used on demand\n\t\t\t\t\tdelete this.working;\n\t\t\t\t\tthrow err;\n\t\t\t\t});\n\n\t\treturn this.working;\n\t}\n\tprivate getClient() {\n\t\t// newest-oldest\n\t\tfor (const [version, ctor] of clientCtors)\n\t\t\tif (this.manifest!.versions.includes(version))\n\t\t\t\treturn new ctor(this.server);\n\n\t\tthrow new Error(\n\t\t\t'Unable to find compatible client version. Starting from v2.0.0, @tomphttp/bare-client only supports Bare servers v3+. For more information, see https://github.com/tomphttp/bare-client/'\n\t\t);\n\t}\n\tcreateWebSocket(\n\t\tremote: urlLike,\n\t\tprotocols: string | string[] | undefined = [],\n\t\toptions: BareWebSocket.Options\n\t): WebSocket {\n\t\tif (!this.client)\n\t\t\tthrow new TypeError(\n\t\t\t\t'You need to wait for the client to finish fetching the manifest before creating any WebSockets. Try caching the manifest data before making this request.'\n\t\t\t);\n\n\t\ttry {\n\t\t\tremote = new URL(remote);\n\t\t} catch (err) {\n\t\t\tthrow new DOMException(\n\t\t\t\t`Faiiled to construct 'WebSocket': The URL '${remote}' is invalid.`\n\t\t\t);\n\t\t}\n\n\t\tif (!wsProtocols.includes(remote.protocol))\n\t\t\tthrow new DOMException(\n\t\t\t\t`Failed to construct 'WebSocket': The URL's scheme must be either 'ws' or 'wss'. '${remote.protocol}' is not allowed.`\n\t\t\t);\n\n\t\tif (!Array.isArray(protocols)) protocols = [protocols];\n\n\t\tprotocols = protocols.map(String);\n\n\t\tfor (const proto of protocols)\n\t\t\tif (!validProtocol(proto))\n\t\t\t\tthrow new DOMException(\n\t\t\t\t\t`Failed to construct 'WebSocket': The subprotocol '${proto}' is invalid.`\n\t\t\t\t);\n\n\t\tconst socket = this.client.connect(\n\t\t\tremote,\n\t\t\tprotocols,\n\t\t\tasync () => {\n\t\t\t\tconst resolvedHeaders =\n\t\t\t\t\ttypeof options.headers === 'function'\n\t\t\t\t\t\t? await options.headers()\n\t\t\t\t\t\t: options.headers || {};\n\n\t\t\t\tconst requestHeaders: BareHeaders =\n\t\t\t\t\tresolvedHeaders instanceof Headers\n\t\t\t\t\t\t? Object.fromEntries(resolvedHeaders)\n\t\t\t\t\t\t: resolvedHeaders;\n\n\t\t\t\t// user is expected to specify user-agent and origin\n\t\t\t\t// both are in spec\n\n\t\t\t\trequestHeaders['Host'] = (remote as URL).host;\n\t\t\t\t// requestHeaders['Origin'] = origin;\n\t\t\t\trequestHeaders['Pragma'] = 'no-cache';\n\t\t\t\trequestHeaders['Cache-Control'] = 'no-cache';\n\t\t\t\trequestHeaders['Upgrade'] = 'websocket';\n\t\t\t\t// requestHeaders['User-Agent'] = navigator.userAgent;\n\t\t\t\trequestHeaders['Connection'] = 'Upgrade';\n\n\t\t\t\treturn requestHeaders;\n\t\t\t},\n\t\t\t(meta) => {\n\t\t\t\tfakeProtocol = meta.protocol;\n\t\t\t\tif (options.setCookiesCallback)\n\t\t\t\t\toptions.setCookiesCallback(meta.setCookies);\n\t\t\t},\n\t\t\t(readyState) => {\n\t\t\t\tfakeReadyState = readyState;\n\t\t\t},\n\t\t\toptions.webSocketImpl || WebSocket\n\t\t);\n\n\t\t// protocol is always an empty before connecting\n\t\t// updated when we receive the metadata\n\t\t// this value doesn't change when it's CLOSING or CLOSED etc\n\t\tlet fakeProtocol = '';\n\n\t\tlet fakeReadyState: number = WebSocketFields.CONNECTING;\n\n\t\tconst getReadyState = () => {\n\t\t\tconst realReadyState = getRealReadyState.call(socket);\n\t\t\t// readyState should only be faked when the real readyState is OPEN\n\t\t\treturn realReadyState === WebSocketFields.OPEN\n\t\t\t\t? fakeReadyState\n\t\t\t\t: realReadyState;\n\t\t};\n\n\t\tif (options.readyStateHook) options.readyStateHook(socket, getReadyState);\n\t\telse {\n\t\t\t// we have to hook .readyState ourselves\n\n\t\t\tObject.defineProperty(socket, 'readyState', {\n\t\t\t\tget: getReadyState,\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * @returns The error that should be thrown if send() were to be called on this socket according to the fake readyState value\n\t\t */\n\t\tconst getSendError = () => {\n\t\t\tconst readyState = getReadyState();\n\n\t\t\tif (readyState === WebSocketFields.CONNECTING)\n\t\t\t\treturn new DOMException(\n\t\t\t\t\t\"Failed to execute 'send' on 'WebSocket': Still in CONNECTING state.\"\n\t\t\t\t);\n\t\t};\n\n\t\tif (options.sendErrorHook) options.sendErrorHook(socket, getSendError);\n\t\telse {\n\t\t\t// we have to hook .send ourselves\n\t\t\t// use ...args to avoid giving the number of args a quantity\n\t\t\t// no arguments will trip the following error: TypeError: Failed to execute 'send' on 'WebSocket': 1 argument required, but only 0 present.\n\t\t\tsocket.send = function (...args) {\n\t\t\t\tconst error = getSendError();\n\n\t\t\t\tif (error) throw error;\n\t\t\t\telse WebSocketFields.prototype.send.call(this, ...args);\n\t\t\t};\n\t\t}\n\n\t\tif (options.urlHook) options.urlHook(socket, remote);\n\t\telse\n\t\t\tObject.defineProperty(socket, 'url', {\n\t\t\t\tget: () => remote.toString(),\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t});\n\n\t\tconst getProtocol = () => fakeProtocol;\n\n\t\tif (options.protocolHook) options.protocolHook(socket, getProtocol);\n\t\telse\n\t\t\tObject.defineProperty(socket, 'protocol', {\n\t\t\t\tget: getProtocol,\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t});\n\n\t\treturn socket;\n\t}\n\n\tasync fetch(\n\t\turl: urlLike | Request,\n\t\tinit?: RequestInit\n\t): Promise<BareResponseFetch> {\n\t\tconst req = isUrlLike(url) ? new Request(url, init) : url;\n\n\t\t// try to use init.headers because it may contain capitalized headers\n\t\t// furthermore, important headers on the Request class are blocked...\n\t\t// we should try to preserve the capitalization due to quirks with earlier servers\n\t\tconst inputHeaders = init?.headers || req.headers;\n\n\t\tconst headers: BareHeaders =\n\t\t\tinputHeaders instanceof Headers\n\t\t\t\t? Object.fromEntries(inputHeaders)\n\t\t\t\t: (inputHeaders as BareHeaders);\n\n\t\t// @ts-ignore\n\t\tconst duplex: string | undefined = init?.duplex;\n\n\t\tconst body = init?.body || req.body;\n\n\t\tlet urlO = new URL(req.url);\n\n\t\tconst client = await this.demand();\n\n\t\tfor (let i = 0; ; i++) {\n\t\t\tif ('host' in headers) headers.host = urlO.host;\n\t\t\telse headers.Host = urlO.host;\n\n\t\t\tconst response: BareResponse & Partial<BareResponseFetch> =\n\t\t\t\tawait client.request(\n\t\t\t\t\treq.method,\n\t\t\t\t\theaders,\n\t\t\t\t\tbody,\n\t\t\t\t\turlO,\n\t\t\t\t\treq.cache,\n\t\t\t\t\tduplex,\n\t\t\t\t\treq.signal\n\t\t\t\t);\n\n\t\t\tresponse.finalURL = urlO.toString();\n\n\t\t\tconst redirect = init?.redirect || req.redirect;\n\n\t\t\tif (statusRedirect.includes(response.status)) {\n\t\t\t\tswitch (redirect) {\n\t\t\t\t\tcase 'follow': {\n\t\t\t\t\t\tconst location = response.headers.get('location');\n\t\t\t\t\t\tif (maxRedirects > i && location !== null) {\n\t\t\t\t\t\t\turlO = new URL(location, urlO);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} else throw new TypeError('Failed to fetch');\n\t\t\t\t\t}\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\tthrow new TypeError('Failed to fetch');\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\treturn response as BareResponseFetch;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn response as BareResponseFetch;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction isUrlLike(url: unknown): url is urlLike {\n\treturn typeof url === 'string' || url instanceof URL;\n}\n", "import { BareClient, fetchManifest } from './BareClient';\n\nexport * from './Client';\nexport * from './BareTypes';\nexport * from './BareClient';\n\n/**\n *\n * Facilitates fetching the Bare server and constructing a BareClient.\n * @param server Bare server\n * @param signal Abort signal when fetching the manifest\n */\nexport async function createBareClient(\n\tserver: string | URL,\n\tsignal?: AbortSignal\n): Promise<BareClient> {\n\tconst manifest = await fetchManifest(server, signal);\n\n\treturn new BareClient(server, manifest);\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAuBA,UAAIA,KAAI,OAAO,YAAY,WAAW,UAAU;AAChD,UAAI,eAAeA,MAAK,OAAOA,GAAE,UAAU,aACvCA,GAAE,QACF,SAASC,cAAa,QAAQ,UAAU,MAAM;AAC9C,eAAO,SAAS,UAAU,MAAM,KAAK,QAAQ,UAAU,IAAI;AAAA,MAC7D;AAEF,UAAI;AACJ,UAAID,MAAK,OAAOA,GAAE,YAAY,YAAY;AACxC,yBAAiBA,GAAE;AAAA,MACrB,WAAW,OAAO,uBAAuB;AACvC,yBAAiB,SAASE,gBAAe,QAAQ;AAC/C,iBAAO,OAAO,oBAAoB,MAAM,EACrC,OAAO,OAAO,sBAAsB,MAAM,CAAC;AAAA,QAChD;AAAA,MACF,OAAO;AACL,yBAAiB,SAASA,gBAAe,QAAQ;AAC/C,iBAAO,OAAO,oBAAoB,MAAM;AAAA,QAC1C;AAAA,MACF;AAEA,eAAS,mBAAmB,SAAS;AACnC,YAAI,WAAW,QAAQ;AAAM,kBAAQ,KAAK,OAAO;AAAA,MACnD;AAEA,UAAI,cAAc,OAAO,SAAS,SAASC,aAAY,OAAO;AAC5D,eAAO,UAAU;AAAA,MACnB;AAEA,eAASC,gBAAe;AACtB,QAAAA,cAAa,KAAK,KAAK,IAAI;AAAA,MAC7B;AACA,aAAO,UAAUA;AACjB,aAAO,QAAQ,OAAO;AAGtB,MAAAA,cAAa,eAAeA;AAE5B,MAAAA,cAAa,UAAU,UAAU;AACjC,MAAAA,cAAa,UAAU,eAAe;AACtC,MAAAA,cAAa,UAAU,gBAAgB;AAIvC,UAAI,sBAAsB;AAE1B,eAAS,cAAc,UAAU;AAC/B,YAAI,OAAO,aAAa,YAAY;AAClC,gBAAM,IAAI,UAAU,qEAAqE,OAAO,QAAQ;AAAA,QAC1G;AAAA,MACF;AAEA,aAAO,eAAeA,eAAc,uBAAuB;AAAA,QACzD,YAAY;AAAA,QACZ,KAAK,WAAW;AACd,iBAAO;AAAA,QACT;AAAA,QACA,KAAK,SAAS,KAAK;AACjB,cAAI,OAAO,QAAQ,YAAY,MAAM,KAAK,YAAY,GAAG,GAAG;AAC1D,kBAAM,IAAI,WAAW,oGAAoG,MAAM,GAAG;AAAA,UACpI;AACA,gCAAsB;AAAA,QACxB;AAAA,MACF,CAAC;AAED,MAAAA,cAAa,OAAO,WAAW;AAE7B,YAAI,KAAK,YAAY,UACjB,KAAK,YAAY,OAAO,eAAe,IAAI,EAAE,SAAS;AACxD,eAAK,UAAU,uBAAO,OAAO,IAAI;AACjC,eAAK,eAAe;AAAA,QACtB;AAEA,aAAK,gBAAgB,KAAK,iBAAiB;AAAA,MAC7C;AAIA,MAAAA,cAAa,UAAU,kBAAkB,SAAS,gBAAgB,GAAG;AACnE,YAAI,OAAO,MAAM,YAAY,IAAI,KAAK,YAAY,CAAC,GAAG;AACpD,gBAAM,IAAI,WAAW,kFAAkF,IAAI,GAAG;AAAA,QAChH;AACA,aAAK,gBAAgB;AACrB,eAAO;AAAA,MACT;AAEA,eAAS,iBAAiB,MAAM;AAC9B,YAAI,KAAK,kBAAkB;AACzB,iBAAOA,cAAa;AACtB,eAAO,KAAK;AAAA,MACd;AAEA,MAAAA,cAAa,UAAU,kBAAkB,SAAS,kBAAkB;AAClE,eAAO,iBAAiB,IAAI;AAAA,MAC9B;AAEA,MAAAA,cAAa,UAAU,OAAO,SAAS,KAAK,MAAM;AAChD,YAAI,OAAO,CAAC;AACZ,iBAAS,IAAI,GAAG,IAAI,UAAU,QAAQ;AAAK,eAAK,KAAK,UAAU,CAAC,CAAC;AACjE,YAAI,UAAW,SAAS;AAExB,YAAI,SAAS,KAAK;AAClB,YAAI,WAAW;AACb,oBAAW,WAAW,OAAO,UAAU;AAAA,iBAChC,CAAC;AACR,iBAAO;AAGT,YAAI,SAAS;AACX,cAAI;AACJ,cAAI,KAAK,SAAS;AAChB,iBAAK,KAAK,CAAC;AACb,cAAI,cAAc,OAAO;AAGvB,kBAAM;AAAA,UACR;AAEA,cAAI,MAAM,IAAI,MAAM,sBAAsB,KAAK,OAAO,GAAG,UAAU,MAAM,GAAG;AAC5E,cAAI,UAAU;AACd,gBAAM;AAAA,QACR;AAEA,YAAI,UAAU,OAAO,IAAI;AAEzB,YAAI,YAAY;AACd,iBAAO;AAET,YAAI,OAAO,YAAY,YAAY;AACjC,uBAAa,SAAS,MAAM,IAAI;AAAA,QAClC,OAAO;AACL,cAAI,MAAM,QAAQ;AAClB,cAAI,YAAY,WAAW,SAAS,GAAG;AACvC,mBAAS,IAAI,GAAG,IAAI,KAAK,EAAE;AACzB,yBAAa,UAAU,CAAC,GAAG,MAAM,IAAI;AAAA,QACzC;AAEA,eAAO;AAAA,MACT;AAEA,eAAS,aAAa,QAAQ,MAAM,UAAU,SAAS;AACrD,YAAI;AACJ,YAAI;AACJ,YAAI;AAEJ,sBAAc,QAAQ;AAEtB,iBAAS,OAAO;AAChB,YAAI,WAAW,QAAW;AACxB,mBAAS,OAAO,UAAU,uBAAO,OAAO,IAAI;AAC5C,iBAAO,eAAe;AAAA,QACxB,OAAO;AAGL,cAAI,OAAO,gBAAgB,QAAW;AACpC,mBAAO;AAAA,cAAK;AAAA,cAAe;AAAA,cACf,SAAS,WAAW,SAAS,WAAW;AAAA,YAAQ;AAI5D,qBAAS,OAAO;AAAA,UAClB;AACA,qBAAW,OAAO,IAAI;AAAA,QACxB;AAEA,YAAI,aAAa,QAAW;AAE1B,qBAAW,OAAO,IAAI,IAAI;AAC1B,YAAE,OAAO;AAAA,QACX,OAAO;AACL,cAAI,OAAO,aAAa,YAAY;AAElC,uBAAW,OAAO,IAAI,IACpB,UAAU,CAAC,UAAU,QAAQ,IAAI,CAAC,UAAU,QAAQ;AAAA,UAExD,WAAW,SAAS;AAClB,qBAAS,QAAQ,QAAQ;AAAA,UAC3B,OAAO;AACL,qBAAS,KAAK,QAAQ;AAAA,UACxB;AAGA,cAAI,iBAAiB,MAAM;AAC3B,cAAI,IAAI,KAAK,SAAS,SAAS,KAAK,CAAC,SAAS,QAAQ;AACpD,qBAAS,SAAS;AAGlB,gBAAI,IAAI,IAAI,MAAM,iDACE,SAAS,SAAS,MAAM,OAAO,IAAI,IAAI,mEAEvB;AACpC,cAAE,OAAO;AACT,cAAE,UAAU;AACZ,cAAE,OAAO;AACT,cAAE,QAAQ,SAAS;AACnB,+BAAmB,CAAC;AAAA,UACtB;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEA,MAAAA,cAAa,UAAU,cAAc,SAAS,YAAY,MAAM,UAAU;AACxE,eAAO,aAAa,MAAM,MAAM,UAAU,KAAK;AAAA,MACjD;AAEA,MAAAA,cAAa,UAAU,KAAKA,cAAa,UAAU;AAEnD,MAAAA,cAAa,UAAU,kBACnB,SAAS,gBAAgB,MAAM,UAAU;AACvC,eAAO,aAAa,MAAM,MAAM,UAAU,IAAI;AAAA,MAChD;AAEJ,eAAS,cAAc;AACrB,YAAI,CAAC,KAAK,OAAO;AACf,eAAK,OAAO,eAAe,KAAK,MAAM,KAAK,MAAM;AACjD,eAAK,QAAQ;AACb,cAAI,UAAU,WAAW;AACvB,mBAAO,KAAK,SAAS,KAAK,KAAK,MAAM;AACvC,iBAAO,KAAK,SAAS,MAAM,KAAK,QAAQ,SAAS;AAAA,QACnD;AAAA,MACF;AAEA,eAAS,UAAU,QAAQ,MAAM,UAAU;AACzC,YAAI,QAAQ,EAAE,OAAO,OAAO,QAAQ,QAAW,QAAgB,MAAY,SAAmB;AAC9F,YAAI,UAAU,YAAY,KAAK,KAAK;AACpC,gBAAQ,WAAW;AACnB,cAAM,SAAS;AACf,eAAO;AAAA,MACT;AAEA,MAAAA,cAAa,UAAU,OAAO,SAASC,MAAK,MAAM,UAAU;AAC1D,sBAAc,QAAQ;AACtB,aAAK,GAAG,MAAM,UAAU,MAAM,MAAM,QAAQ,CAAC;AAC7C,eAAO;AAAA,MACT;AAEA,MAAAD,cAAa,UAAU,sBACnB,SAAS,oBAAoB,MAAM,UAAU;AAC3C,sBAAc,QAAQ;AACtB,aAAK,gBAAgB,MAAM,UAAU,MAAM,MAAM,QAAQ,CAAC;AAC1D,eAAO;AAAA,MACT;AAGJ,MAAAA,cAAa,UAAU,iBACnB,SAAS,eAAe,MAAM,UAAU;AACtC,YAAI,MAAM,QAAQ,UAAU,GAAG;AAE/B,sBAAc,QAAQ;AAEtB,iBAAS,KAAK;AACd,YAAI,WAAW;AACb,iBAAO;AAET,eAAO,OAAO,IAAI;AAClB,YAAI,SAAS;AACX,iBAAO;AAET,YAAI,SAAS,YAAY,KAAK,aAAa,UAAU;AACnD,cAAI,EAAE,KAAK,iBAAiB;AAC1B,iBAAK,UAAU,uBAAO,OAAO,IAAI;AAAA,eAC9B;AACH,mBAAO,OAAO,IAAI;AAClB,gBAAI,OAAO;AACT,mBAAK,KAAK,kBAAkB,MAAM,KAAK,YAAY,QAAQ;AAAA,UAC/D;AAAA,QACF,WAAW,OAAO,SAAS,YAAY;AACrC,qBAAW;AAEX,eAAK,IAAI,KAAK,SAAS,GAAG,KAAK,GAAG,KAAK;AACrC,gBAAI,KAAK,CAAC,MAAM,YAAY,KAAK,CAAC,EAAE,aAAa,UAAU;AACzD,iCAAmB,KAAK,CAAC,EAAE;AAC3B,yBAAW;AACX;AAAA,YACF;AAAA,UACF;AAEA,cAAI,WAAW;AACb,mBAAO;AAET,cAAI,aAAa;AACf,iBAAK,MAAM;AAAA,eACR;AACH,sBAAU,MAAM,QAAQ;AAAA,UAC1B;AAEA,cAAI,KAAK,WAAW;AAClB,mBAAO,IAAI,IAAI,KAAK,CAAC;AAEvB,cAAI,OAAO,mBAAmB;AAC5B,iBAAK,KAAK,kBAAkB,MAAM,oBAAoB,QAAQ;AAAA,QAClE;AAEA,eAAO;AAAA,MACT;AAEJ,MAAAA,cAAa,UAAU,MAAMA,cAAa,UAAU;AAEpD,MAAAA,cAAa,UAAU,qBACnB,SAAS,mBAAmB,MAAM;AAChC,YAAI,WAAW,QAAQ;AAEvB,iBAAS,KAAK;AACd,YAAI,WAAW;AACb,iBAAO;AAGT,YAAI,OAAO,mBAAmB,QAAW;AACvC,cAAI,UAAU,WAAW,GAAG;AAC1B,iBAAK,UAAU,uBAAO,OAAO,IAAI;AACjC,iBAAK,eAAe;AAAA,UACtB,WAAW,OAAO,IAAI,MAAM,QAAW;AACrC,gBAAI,EAAE,KAAK,iBAAiB;AAC1B,mBAAK,UAAU,uBAAO,OAAO,IAAI;AAAA;AAEjC,qBAAO,OAAO,IAAI;AAAA,UACtB;AACA,iBAAO;AAAA,QACT;AAGA,YAAI,UAAU,WAAW,GAAG;AAC1B,cAAI,OAAO,OAAO,KAAK,MAAM;AAC7B,cAAI;AACJ,eAAK,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AAChC,kBAAM,KAAK,CAAC;AACZ,gBAAI,QAAQ;AAAkB;AAC9B,iBAAK,mBAAmB,GAAG;AAAA,UAC7B;AACA,eAAK,mBAAmB,gBAAgB;AACxC,eAAK,UAAU,uBAAO,OAAO,IAAI;AACjC,eAAK,eAAe;AACpB,iBAAO;AAAA,QACT;AAEA,oBAAY,OAAO,IAAI;AAEvB,YAAI,OAAO,cAAc,YAAY;AACnC,eAAK,eAAe,MAAM,SAAS;AAAA,QACrC,WAAW,cAAc,QAAW;AAElC,eAAK,IAAI,UAAU,SAAS,GAAG,KAAK,GAAG,KAAK;AAC1C,iBAAK,eAAe,MAAM,UAAU,CAAC,CAAC;AAAA,UACxC;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEJ,eAAS,WAAW,QAAQ,MAAME,SAAQ;AACxC,YAAI,SAAS,OAAO;AAEpB,YAAI,WAAW;AACb,iBAAO,CAAC;AAEV,YAAI,aAAa,OAAO,IAAI;AAC5B,YAAI,eAAe;AACjB,iBAAO,CAAC;AAEV,YAAI,OAAO,eAAe;AACxB,iBAAOA,UAAS,CAAC,WAAW,YAAY,UAAU,IAAI,CAAC,UAAU;AAEnE,eAAOA,UACL,gBAAgB,UAAU,IAAI,WAAW,YAAY,WAAW,MAAM;AAAA,MAC1E;AAEA,MAAAF,cAAa,UAAU,YAAY,SAAS,UAAU,MAAM;AAC1D,eAAO,WAAW,MAAM,MAAM,IAAI;AAAA,MACpC;AAEA,MAAAA,cAAa,UAAU,eAAe,SAAS,aAAa,MAAM;AAChE,eAAO,WAAW,MAAM,MAAM,KAAK;AAAA,MACrC;AAEA,MAAAA,cAAa,gBAAgB,SAAS,SAAS,MAAM;AACnD,YAAI,OAAO,QAAQ,kBAAkB,YAAY;AAC/C,iBAAO,QAAQ,cAAc,IAAI;AAAA,QACnC,OAAO;AACL,iBAAO,cAAc,KAAK,SAAS,IAAI;AAAA,QACzC;AAAA,MACF;AAEA,MAAAA,cAAa,UAAU,gBAAgB;AACvC,eAAS,cAAc,MAAM;AAC3B,YAAI,SAAS,KAAK;AAElB,YAAI,WAAW,QAAW;AACxB,cAAI,aAAa,OAAO,IAAI;AAE5B,cAAI,OAAO,eAAe,YAAY;AACpC,mBAAO;AAAA,UACT,WAAW,eAAe,QAAW;AACnC,mBAAO,WAAW;AAAA,UACpB;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEA,MAAAA,cAAa,UAAU,aAAa,SAAS,aAAa;AACxD,eAAO,KAAK,eAAe,IAAI,eAAe,KAAK,OAAO,IAAI,CAAC;AAAA,MACjE;AAEA,eAAS,WAAW,KAAK,GAAG;AAC1B,YAAI,OAAO,IAAI,MAAM,CAAC;AACtB,iBAAS,IAAI,GAAG,IAAI,GAAG,EAAE;AACvB,eAAK,CAAC,IAAI,IAAI,CAAC;AACjB,eAAO;AAAA,MACT;AAEA,eAAS,UAAU,MAAM,OAAO;AAC9B,eAAO,QAAQ,IAAI,KAAK,QAAQ;AAC9B,eAAK,KAAK,IAAI,KAAK,QAAQ,CAAC;AAC9B,aAAK,IAAI;AAAA,MACX;AAEA,eAAS,gBAAgB,KAAK;AAC5B,YAAI,MAAM,IAAI,MAAM,IAAI,MAAM;AAC9B,iBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG;AACnC,cAAI,CAAC,IAAI,IAAI,CAAC,EAAE,YAAY,IAAI,CAAC;AAAA,QACnC;AACA,eAAO;AAAA,MACT;AAEA,eAAS,KAAK,SAASG,QAAM;AAC3B,eAAO,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAC5C,mBAAS,cAAc,KAAK;AAC1B,oBAAQ,eAAeA,QAAM,QAAQ;AACrC,mBAAO,GAAG;AAAA,UACZ;AAEA,mBAAS,WAAW;AAClB,gBAAI,OAAO,QAAQ,mBAAmB,YAAY;AAChD,sBAAQ,eAAe,SAAS,aAAa;AAAA,YAC/C;AACA,oBAAQ,CAAC,EAAE,MAAM,KAAK,SAAS,CAAC;AAAA,UAClC;AAAC;AAED,yCAA+B,SAASA,QAAM,UAAU,EAAE,MAAM,KAAK,CAAC;AACtE,cAAIA,WAAS,SAAS;AACpB,0CAA8B,SAAS,eAAe,EAAE,MAAM,KAAK,CAAC;AAAA,UACtE;AAAA,QACF,CAAC;AAAA,MACH;AAEA,eAAS,8BAA8B,SAAS,SAAS,OAAO;AAC9D,YAAI,OAAO,QAAQ,OAAO,YAAY;AACpC,yCAA+B,SAAS,SAAS,SAAS,KAAK;AAAA,QACjE;AAAA,MACF;AAEA,eAAS,+BAA+B,SAASA,QAAM,UAAU,OAAO;AACtE,YAAI,OAAO,QAAQ,OAAO,YAAY;AACpC,cAAI,MAAM,MAAM;AACd,oBAAQ,KAAKA,QAAM,QAAQ;AAAA,UAC7B,OAAO;AACL,oBAAQ,GAAGA,QAAM,QAAQ;AAAA,UAC3B;AAAA,QACF,WAAW,OAAO,QAAQ,qBAAqB,YAAY;AAGzD,kBAAQ,iBAAiBA,QAAM,SAAS,aAAa,KAAK;AAGxD,gBAAI,MAAM,MAAM;AACd,sBAAQ,oBAAoBA,QAAM,YAAY;AAAA,YAChD;AACA,qBAAS,GAAG;AAAA,UACd,CAAC;AAAA,QACH,OAAO;AACL,gBAAM,IAAI,UAAU,wEAAwE,OAAO,OAAO;AAAA,QAC5G;AAAA,MACF;AAAA;AAAA;;;AChfA;AAAA;AAOA,UAAI,eAAe,mEAAmE,MAAM,EAAE;AAK9F,cAAQ,SAAS,SAAUC,SAAQ;AACjC,YAAI,KAAKA,WAAUA,UAAS,aAAa,QAAQ;AAC/C,iBAAO,aAAaA,OAAM;AAAA,QAC5B;AACA,cAAM,IAAI,UAAU,+BAA+BA,OAAM;AAAA,MAC3D;AAMA,cAAQ,SAAS,SAAU,UAAU;AACnC,YAAI,OAAO;AACX,YAAI,OAAO;AAEX,YAAI,UAAU;AACd,YAAI,UAAU;AAEd,YAAIC,QAAO;AACX,YAAI,OAAO;AAEX,YAAI,OAAO;AACX,YAAI,QAAQ;AAEZ,YAAI,eAAe;AACnB,YAAI,eAAe;AAGnB,YAAI,QAAQ,YAAY,YAAY,MAAM;AACxC,iBAAQ,WAAW;AAAA,QACrB;AAGA,YAAI,WAAW,YAAY,YAAY,SAAS;AAC9C,iBAAQ,WAAW,UAAU;AAAA,QAC/B;AAGA,YAAIA,SAAQ,YAAY,YAAY,MAAM;AACxC,iBAAQ,WAAWA,QAAO;AAAA,QAC5B;AAGA,YAAI,YAAY,MAAM;AACpB,iBAAO;AAAA,QACT;AAGA,YAAI,YAAY,OAAO;AACrB,iBAAO;AAAA,QACT;AAGA,eAAO;AAAA,MACT;AAAA;AAAA;;;AClEA;AAAA;AAqCA,UAAIC,UAAS;AAcb,UAAI,iBAAiB;AAGrB,UAAI,WAAW,KAAK;AAGpB,UAAI,gBAAgB,WAAW;AAG/B,UAAI,uBAAuB;AAQ3B,eAAS,YAAY,QAAQ;AAC3B,eAAO,SAAS,KACV,CAAC,UAAW,KAAK,KAClB,UAAU,KAAK;AAAA,MACtB;AAQA,eAAS,cAAc,QAAQ;AAC7B,YAAI,cAAc,SAAS,OAAO;AAClC,YAAI,UAAU,UAAU;AACxB,eAAO,aACH,CAAC,UACD;AAAA,MACN;AAKA,cAAQ,SAAS,SAAS,iBAAiB,QAAQ;AACjD,YAAI,UAAU;AACd,YAAI;AAEJ,YAAI,MAAM,YAAY,MAAM;AAE5B,WAAG;AACD,kBAAQ,MAAM;AACd,mBAAS;AACT,cAAI,MAAM,GAAG;AAGX,qBAAS;AAAA,UACX;AACA,qBAAWA,QAAO,OAAO,KAAK;AAAA,QAChC,SAAS,MAAM;AAEf,eAAO;AAAA,MACT;AAMA,cAAQ,SAAS,SAAS,iBAAiB,MAAM,QAAQ,WAAW;AAClE,YAAI,SAAS,KAAK;AAClB,YAAI,SAAS;AACb,YAAI,QAAQ;AACZ,YAAI,cAAc;AAElB,WAAG;AACD,cAAI,UAAU,QAAQ;AACpB,kBAAM,IAAI,MAAM,4CAA4C;AAAA,UAC9D;AAEA,kBAAQA,QAAO,OAAO,KAAK,WAAW,QAAQ,CAAC;AAC/C,cAAI,UAAU,IAAI;AAChB,kBAAM,IAAI,MAAM,2BAA2B,KAAK,OAAO,SAAS,CAAC,CAAC;AAAA,UACpE;AAEA,yBAAe,CAAC,EAAE,QAAQ;AAC1B,mBAAS;AACT,mBAAS,UAAU,SAAS;AAC5B,mBAAS;AAAA,QACX,SAAS;AAET,kBAAU,QAAQ,cAAc,MAAM;AACtC,kBAAU,OAAO;AAAA,MACnB;AAAA;AAAA;;;AC3IA;AAAA;AAiBA,eAAS,OAAO,OAAO,OAAO,eAAe;AAC3C,YAAI,SAAS,OAAO;AAClB,iBAAO,MAAM,KAAK;AAAA,QACpB,WAAW,UAAU,WAAW,GAAG;AACjC,iBAAO;AAAA,QACT,OAAO;AACL,gBAAM,IAAI,MAAM,MAAM,QAAQ,2BAA2B;AAAA,QAC3D;AAAA,MACF;AACA,cAAQ,SAAS;AAEjB,UAAI,YAAY;AAChB,UAAI,gBAAgB;AAEpB,eAAS,SAAS,MAAM;AACtB,YAAI,QAAQ,KAAK,MAAM,SAAS;AAChC,YAAI,CAAC,OAAO;AACV,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,UACL,QAAQ,MAAM,CAAC;AAAA,UACf,MAAM,MAAM,CAAC;AAAA,UACb,MAAM,MAAM,CAAC;AAAA,UACb,MAAM,MAAM,CAAC;AAAA,UACb,MAAM,MAAM,CAAC;AAAA,QACf;AAAA,MACF;AACA,cAAQ,WAAW;AAEnB,eAAS,YAAY,YAAY;AAC/B,YAAIC,OAAM;AACV,YAAI,WAAW,QAAQ;AACrB,UAAAA,QAAO,WAAW,SAAS;AAAA,QAC7B;AACA,QAAAA,QAAO;AACP,YAAI,WAAW,MAAM;AACnB,UAAAA,QAAO,WAAW,OAAO;AAAA,QAC3B;AACA,YAAI,WAAW,MAAM;AACnB,UAAAA,QAAO,WAAW;AAAA,QACpB;AACA,YAAI,WAAW,MAAM;AACnB,UAAAA,QAAO,MAAM,WAAW;AAAA,QAC1B;AACA,YAAI,WAAW,MAAM;AACnB,UAAAA,QAAO,WAAW;AAAA,QACpB;AACA,eAAOA;AAAA,MACT;AACA,cAAQ,cAAc;AAEtB,UAAI,oBAAoB;AASxB,eAAS,WAAW,GAAG;AACrB,YAAI,QAAQ,CAAC;AAEb,eAAO,SAAS,OAAO;AACrB,mBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,gBAAI,MAAM,CAAC,EAAE,UAAU,OAAO;AAC5B,kBAAI,OAAO,MAAM,CAAC;AAClB,oBAAM,CAAC,IAAI,MAAM,CAAC;AAClB,oBAAM,CAAC,IAAI;AACX,qBAAO,MAAM,CAAC,EAAE;AAAA,YAClB;AAAA,UACF;AAEA,cAAI,SAAS,EAAE,KAAK;AAEpB,gBAAM,QAAQ;AAAA,YACZ;AAAA,YACA;AAAA,UACF,CAAC;AAED,cAAI,MAAM,SAAS,mBAAmB;AACpC,kBAAM,IAAI;AAAA,UACZ;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAaA,UAAI,YAAY,WAAW,SAASC,WAAU,OAAO;AACnD,YAAI,OAAO;AACX,YAAID,OAAM,SAAS,KAAK;AACxB,YAAIA,MAAK;AACP,cAAI,CAACA,KAAI,MAAM;AACb,mBAAO;AAAA,UACT;AACA,iBAAOA,KAAI;AAAA,QACb;AACA,YAAI,aAAa,QAAQ,WAAW,IAAI;AAGxC,YAAI,QAAQ,CAAC;AACb,YAAI,QAAQ;AACZ,YAAI,IAAI;AACR,eAAO,MAAM;AACX,kBAAQ;AACR,cAAI,KAAK,QAAQ,KAAK,KAAK;AAC3B,cAAI,MAAM,IAAI;AACZ,kBAAM,KAAK,KAAK,MAAM,KAAK,CAAC;AAC5B;AAAA,UACF,OAAO;AACL,kBAAM,KAAK,KAAK,MAAM,OAAO,CAAC,CAAC;AAC/B,mBAAO,IAAI,KAAK,UAAU,KAAK,CAAC,MAAM,KAAK;AACzC;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,iBAAS,MAAM,KAAK,GAAG,IAAI,MAAM,SAAS,GAAG,KAAK,GAAG,KAAK;AACxD,iBAAO,MAAM,CAAC;AACd,cAAI,SAAS,KAAK;AAChB,kBAAM,OAAO,GAAG,CAAC;AAAA,UACnB,WAAW,SAAS,MAAM;AACxB;AAAA,UACF,WAAW,KAAK,GAAG;AACjB,gBAAI,SAAS,IAAI;AAIf,oBAAM,OAAO,IAAI,GAAG,EAAE;AACtB,mBAAK;AAAA,YACP,OAAO;AACL,oBAAM,OAAO,GAAG,CAAC;AACjB;AAAA,YACF;AAAA,UACF;AAAA,QACF;AACA,eAAO,MAAM,KAAK,GAAG;AAErB,YAAI,SAAS,IAAI;AACf,iBAAO,aAAa,MAAM;AAAA,QAC5B;AAEA,YAAIA,MAAK;AACP,UAAAA,KAAI,OAAO;AACX,iBAAO,YAAYA,IAAG;AAAA,QACxB;AACA,eAAO;AAAA,MACT,CAAC;AACD,cAAQ,YAAY;AAkBpB,eAAS,KAAK,OAAO,OAAO;AAC1B,YAAI,UAAU,IAAI;AAChB,kBAAQ;AAAA,QACV;AACA,YAAI,UAAU,IAAI;AAChB,kBAAQ;AAAA,QACV;AACA,YAAI,WAAW,SAAS,KAAK;AAC7B,YAAI,WAAW,SAAS,KAAK;AAC7B,YAAI,UAAU;AACZ,kBAAQ,SAAS,QAAQ;AAAA,QAC3B;AAGA,YAAI,YAAY,CAAC,SAAS,QAAQ;AAChC,cAAI,UAAU;AACZ,qBAAS,SAAS,SAAS;AAAA,UAC7B;AACA,iBAAO,YAAY,QAAQ;AAAA,QAC7B;AAEA,YAAI,YAAY,MAAM,MAAM,aAAa,GAAG;AAC1C,iBAAO;AAAA,QACT;AAGA,YAAI,YAAY,CAAC,SAAS,QAAQ,CAAC,SAAS,MAAM;AAChD,mBAAS,OAAO;AAChB,iBAAO,YAAY,QAAQ;AAAA,QAC7B;AAEA,YAAI,SAAS,MAAM,OAAO,CAAC,MAAM,MAC7B,QACA,UAAU,MAAM,QAAQ,QAAQ,EAAE,IAAI,MAAM,KAAK;AAErD,YAAI,UAAU;AACZ,mBAAS,OAAO;AAChB,iBAAO,YAAY,QAAQ;AAAA,QAC7B;AACA,eAAO;AAAA,MACT;AACA,cAAQ,OAAO;AAEf,cAAQ,aAAa,SAAU,OAAO;AACpC,eAAO,MAAM,OAAO,CAAC,MAAM,OAAO,UAAU,KAAK,KAAK;AAAA,MACxD;AAQA,eAAS,SAAS,OAAO,OAAO;AAC9B,YAAI,UAAU,IAAI;AAChB,kBAAQ;AAAA,QACV;AAEA,gBAAQ,MAAM,QAAQ,OAAO,EAAE;AAM/B,YAAI,QAAQ;AACZ,eAAO,MAAM,QAAQ,QAAQ,GAAG,MAAM,GAAG;AACvC,cAAI,QAAQ,MAAM,YAAY,GAAG;AACjC,cAAI,QAAQ,GAAG;AACb,mBAAO;AAAA,UACT;AAKA,kBAAQ,MAAM,MAAM,GAAG,KAAK;AAC5B,cAAI,MAAM,MAAM,mBAAmB,GAAG;AACpC,mBAAO;AAAA,UACT;AAEA,YAAE;AAAA,QACJ;AAGA,eAAO,MAAM,QAAQ,CAAC,EAAE,KAAK,KAAK,IAAI,MAAM,OAAO,MAAM,SAAS,CAAC;AAAA,MACrE;AACA,cAAQ,WAAW;AAEnB,UAAI,oBAAqB,WAAY;AACnC,YAAI,MAAM,uBAAO,OAAO,IAAI;AAC5B,eAAO,EAAE,eAAe;AAAA,MAC1B,EAAE;AAEF,eAAS,SAAU,GAAG;AACpB,eAAO;AAAA,MACT;AAWA,eAAS,YAAY,MAAM;AACzB,YAAI,cAAc,IAAI,GAAG;AACvB,iBAAO,MAAM;AAAA,QACf;AAEA,eAAO;AAAA,MACT;AACA,cAAQ,cAAc,oBAAoB,WAAW;AAErD,eAAS,cAAc,MAAM;AAC3B,YAAI,cAAc,IAAI,GAAG;AACvB,iBAAO,KAAK,MAAM,CAAC;AAAA,QACrB;AAEA,eAAO;AAAA,MACT;AACA,cAAQ,gBAAgB,oBAAoB,WAAW;AAEvD,eAAS,cAAc,GAAG;AACxB,YAAI,CAAC,GAAG;AACN,iBAAO;AAAA,QACT;AAEA,YAAIE,UAAS,EAAE;AAEf,YAAIA,UAAS,GAA4B;AACvC,iBAAO;AAAA,QACT;AAEA,YAAI,EAAE,WAAWA,UAAS,CAAC,MAAM,MAC7B,EAAE,WAAWA,UAAS,CAAC,MAAM,MAC7B,EAAE,WAAWA,UAAS,CAAC,MAAM,OAC7B,EAAE,WAAWA,UAAS,CAAC,MAAM,OAC7B,EAAE,WAAWA,UAAS,CAAC,MAAM,OAC7B,EAAE,WAAWA,UAAS,CAAC,MAAM,OAC7B,EAAE,WAAWA,UAAS,CAAC,MAAM,OAC7B,EAAE,WAAWA,UAAS,CAAC,MAAM,MAC7B,EAAE,WAAWA,UAAS,CAAC,MAAM,IAAe;AAC9C,iBAAO;AAAA,QACT;AAEA,iBAAS,IAAIA,UAAS,IAAI,KAAK,GAAG,KAAK;AACrC,cAAI,EAAE,WAAW,CAAC,MAAM,IAAc;AACpC,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAUA,eAAS,2BAA2B,UAAU,UAAU,qBAAqB;AAC3E,YAAI,MAAM,OAAO,SAAS,QAAQ,SAAS,MAAM;AACjD,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,cAAM,SAAS,eAAe,SAAS;AACvC,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,cAAM,SAAS,iBAAiB,SAAS;AACzC,YAAI,QAAQ,KAAK,qBAAqB;AACpC,iBAAO;AAAA,QACT;AAEA,cAAM,SAAS,kBAAkB,SAAS;AAC1C,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,cAAM,SAAS,gBAAgB,SAAS;AACxC,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,eAAO,OAAO,SAAS,MAAM,SAAS,IAAI;AAAA,MAC5C;AACA,cAAQ,6BAA6B;AAErC,eAAS,mCAAmC,UAAU,UAAU,qBAAqB;AACnF,YAAI;AAEJ,cAAM,SAAS,eAAe,SAAS;AACvC,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,cAAM,SAAS,iBAAiB,SAAS;AACzC,YAAI,QAAQ,KAAK,qBAAqB;AACpC,iBAAO;AAAA,QACT;AAEA,cAAM,SAAS,kBAAkB,SAAS;AAC1C,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,cAAM,SAAS,gBAAgB,SAAS;AACxC,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,eAAO,OAAO,SAAS,MAAM,SAAS,IAAI;AAAA,MAC5C;AACA,cAAQ,qCAAqC;AAW7C,eAAS,oCAAoC,UAAU,UAAU,sBAAsB;AACrF,YAAI,MAAM,SAAS,gBAAgB,SAAS;AAC5C,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,cAAM,SAAS,kBAAkB,SAAS;AAC1C,YAAI,QAAQ,KAAK,sBAAsB;AACrC,iBAAO;AAAA,QACT;AAEA,cAAM,OAAO,SAAS,QAAQ,SAAS,MAAM;AAC7C,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,cAAM,SAAS,eAAe,SAAS;AACvC,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,cAAM,SAAS,iBAAiB,SAAS;AACzC,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,eAAO,OAAO,SAAS,MAAM,SAAS,IAAI;AAAA,MAC5C;AACA,cAAQ,sCAAsC;AAE9C,eAAS,0CAA0C,UAAU,UAAU,sBAAsB;AAC3F,YAAI,MAAM,SAAS,kBAAkB,SAAS;AAC9C,YAAI,QAAQ,KAAK,sBAAsB;AACrC,iBAAO;AAAA,QACT;AAEA,cAAM,OAAO,SAAS,QAAQ,SAAS,MAAM;AAC7C,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,cAAM,SAAS,eAAe,SAAS;AACvC,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,cAAM,SAAS,iBAAiB,SAAS;AACzC,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,eAAO,OAAO,SAAS,MAAM,SAAS,IAAI;AAAA,MAC5C;AACA,cAAQ,4CAA4C;AAEpD,eAAS,OAAO,OAAO,OAAO;AAC5B,YAAI,UAAU,OAAO;AACnB,iBAAO;AAAA,QACT;AAEA,YAAI,UAAU,MAAM;AAClB,iBAAO;AAAA,QACT;AAEA,YAAI,UAAU,MAAM;AAClB,iBAAO;AAAA,QACT;AAEA,YAAI,QAAQ,OAAO;AACjB,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAMA,eAAS,oCAAoC,UAAU,UAAU;AAC/D,YAAI,MAAM,SAAS,gBAAgB,SAAS;AAC5C,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,cAAM,SAAS,kBAAkB,SAAS;AAC1C,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,cAAM,OAAO,SAAS,QAAQ,SAAS,MAAM;AAC7C,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,cAAM,SAAS,eAAe,SAAS;AACvC,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,cAAM,SAAS,iBAAiB,SAAS;AACzC,YAAI,QAAQ,GAAG;AACb,iBAAO;AAAA,QACT;AAEA,eAAO,OAAO,SAAS,MAAM,SAAS,IAAI;AAAA,MAC5C;AACA,cAAQ,sCAAsC;AAO9C,eAAS,oBAAoB,KAAK;AAChC,eAAO,KAAK,MAAM,IAAI,QAAQ,kBAAkB,EAAE,CAAC;AAAA,MACrD;AACA,cAAQ,sBAAsB;AAM9B,eAAS,iBAAiB,YAAY,WAAW,cAAc;AAC7D,oBAAY,aAAa;AAEzB,YAAI,YAAY;AAEd,cAAI,WAAW,WAAW,SAAS,CAAC,MAAM,OAAO,UAAU,CAAC,MAAM,KAAK;AACrE,0BAAc;AAAA,UAChB;AAMA,sBAAY,aAAa;AAAA,QAC3B;AAgBA,YAAI,cAAc;AAChB,cAAI,SAAS,SAAS,YAAY;AAClC,cAAI,CAAC,QAAQ;AACX,kBAAM,IAAI,MAAM,kCAAkC;AAAA,UACpD;AACA,cAAI,OAAO,MAAM;AAEf,gBAAI,QAAQ,OAAO,KAAK,YAAY,GAAG;AACvC,gBAAI,SAAS,GAAG;AACd,qBAAO,OAAO,OAAO,KAAK,UAAU,GAAG,QAAQ,CAAC;AAAA,YAClD;AAAA,UACF;AACA,sBAAY,KAAK,YAAY,MAAM,GAAG,SAAS;AAAA,QACjD;AAEA,eAAO,UAAU,SAAS;AAAA,MAC5B;AACA,cAAQ,mBAAmB;AAAA;AAAA;;;ACjlB3B;AAAA;AAOA,UAAI,OAAO;AACX,UAAI,MAAM,OAAO,UAAU;AAC3B,UAAI,eAAe,OAAO,QAAQ;AAQlC,eAAS,WAAW;AAClB,aAAK,SAAS,CAAC;AACf,aAAK,OAAO,eAAe,oBAAI,IAAI,IAAI,uBAAO,OAAO,IAAI;AAAA,MAC3D;AAKA,eAAS,YAAY,SAAS,mBAAmB,QAAQ,kBAAkB;AACzE,YAAI,MAAM,IAAI,SAAS;AACvB,iBAAS,IAAI,GAAG,MAAM,OAAO,QAAQ,IAAI,KAAK,KAAK;AACjD,cAAI,IAAI,OAAO,CAAC,GAAG,gBAAgB;AAAA,QACrC;AACA,eAAO;AAAA,MACT;AAQA,eAAS,UAAU,OAAO,SAAS,gBAAgB;AACjD,eAAO,eAAe,KAAK,KAAK,OAAO,OAAO,oBAAoB,KAAK,IAAI,EAAE;AAAA,MAC/E;AAOA,eAAS,UAAU,MAAM,SAAS,aAAa,MAAM,kBAAkB;AACrE,YAAI,OAAO,eAAe,OAAO,KAAK,YAAY,IAAI;AACtD,YAAI,cAAc,eAAe,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,MAAM,IAAI;AAC1E,YAAI,MAAM,KAAK,OAAO;AACtB,YAAI,CAAC,eAAe,kBAAkB;AACpC,eAAK,OAAO,KAAK,IAAI;AAAA,QACvB;AACA,YAAI,CAAC,aAAa;AAChB,cAAI,cAAc;AAChB,iBAAK,KAAK,IAAI,MAAM,GAAG;AAAA,UACzB,OAAO;AACL,iBAAK,KAAK,IAAI,IAAI;AAAA,UACpB;AAAA,QACF;AAAA,MACF;AAOA,eAAS,UAAU,MAAM,SAAS,aAAa,MAAM;AACnD,YAAI,cAAc;AAChB,iBAAO,KAAK,KAAK,IAAI,IAAI;AAAA,QAC3B,OAAO;AACL,cAAI,OAAO,KAAK,YAAY,IAAI;AAChC,iBAAO,IAAI,KAAK,KAAK,MAAM,IAAI;AAAA,QACjC;AAAA,MACF;AAOA,eAAS,UAAU,UAAU,SAAS,iBAAiB,MAAM;AAC3D,YAAI,cAAc;AAChB,cAAI,MAAM,KAAK,KAAK,IAAI,IAAI;AAC5B,cAAI,OAAO,GAAG;AACV,mBAAO;AAAA,UACX;AAAA,QACF,OAAO;AACL,cAAI,OAAO,KAAK,YAAY,IAAI;AAChC,cAAI,IAAI,KAAK,KAAK,MAAM,IAAI,GAAG;AAC7B,mBAAO,KAAK,KAAK,IAAI;AAAA,UACvB;AAAA,QACF;AAEA,cAAM,IAAI,MAAM,MAAM,OAAO,sBAAsB;AAAA,MACrD;AAOA,eAAS,UAAU,KAAK,SAAS,YAAY,MAAM;AACjD,YAAI,QAAQ,KAAK,OAAO,KAAK,OAAO,QAAQ;AAC1C,iBAAO,KAAK,OAAO,IAAI;AAAA,QACzB;AACA,cAAM,IAAI,MAAM,2BAA2B,IAAI;AAAA,MACjD;AAOA,eAAS,UAAU,UAAU,SAAS,mBAAmB;AACvD,eAAO,KAAK,OAAO,MAAM;AAAA,MAC3B;AAEA,cAAQ,WAAW;AAAA;AAAA;;;ACxHnB;AAAA;AAOA,UAAI,OAAO;AAMX,eAAS,uBAAuB,UAAU,UAAU;AAElD,YAAI,QAAQ,SAAS;AACrB,YAAI,QAAQ,SAAS;AACrB,YAAI,UAAU,SAAS;AACvB,YAAI,UAAU,SAAS;AACvB,eAAO,QAAQ,SAAS,SAAS,SAAS,WAAW,WAC9C,KAAK,oCAAoC,UAAU,QAAQ,KAAK;AAAA,MACzE;AAOA,eAAS,cAAc;AACrB,aAAK,SAAS,CAAC;AACf,aAAK,UAAU;AAEf,aAAK,QAAQ,EAAC,eAAe,IAAI,iBAAiB,EAAC;AAAA,MACrD;AAQA,kBAAY,UAAU,kBACpB,SAAS,oBAAoB,WAAW,UAAU;AAChD,aAAK,OAAO,QAAQ,WAAW,QAAQ;AAAA,MACzC;AAOF,kBAAY,UAAU,MAAM,SAAS,gBAAgB,UAAU;AAC7D,YAAI,uBAAuB,KAAK,OAAO,QAAQ,GAAG;AAChD,eAAK,QAAQ;AACb,eAAK,OAAO,KAAK,QAAQ;AAAA,QAC3B,OAAO;AACL,eAAK,UAAU;AACf,eAAK,OAAO,KAAK,QAAQ;AAAA,QAC3B;AAAA,MACF;AAWA,kBAAY,UAAU,UAAU,SAAS,sBAAsB;AAC7D,YAAI,CAAC,KAAK,SAAS;AACjB,eAAK,OAAO,KAAK,KAAK,mCAAmC;AACzD,eAAK,UAAU;AAAA,QACjB;AACA,eAAO,KAAK;AAAA,MACd;AAEA,cAAQ,cAAc;AAAA;AAAA;;;AC9EtB;AAAA;AAOA,UAAI,YAAY;AAChB,UAAI,OAAO;AACX,UAAI,WAAW,oBAAuB;AACtC,UAAI,cAAc,uBAA0B;AAU5C,eAASC,oBAAmB,OAAO;AACjC,YAAI,CAAC,OAAO;AACV,kBAAQ,CAAC;AAAA,QACX;AACA,aAAK,QAAQ,KAAK,OAAO,OAAO,QAAQ,IAAI;AAC5C,aAAK,cAAc,KAAK,OAAO,OAAO,cAAc,IAAI;AACxD,aAAK,kBAAkB,KAAK,OAAO,OAAO,kBAAkB,KAAK;AACjE,aAAK,WAAW,IAAI,SAAS;AAC7B,aAAK,SAAS,IAAI,SAAS;AAC3B,aAAK,YAAY,IAAI,YAAY;AACjC,aAAK,mBAAmB;AAAA,MAC1B;AAEA,MAAAA,oBAAmB,UAAU,WAAW;AAOxC,MAAAA,oBAAmB,gBACjB,SAAS,iCAAiC,oBAAoB;AAC5D,YAAI,aAAa,mBAAmB;AACpC,YAAI,YAAY,IAAIA,oBAAmB;AAAA,UACrC,MAAM,mBAAmB;AAAA,UACzB;AAAA,QACF,CAAC;AACD,2BAAmB,YAAY,SAAU,SAAS;AAChD,cAAI,aAAa;AAAA,YACf,WAAW;AAAA,cACT,MAAM,QAAQ;AAAA,cACd,QAAQ,QAAQ;AAAA,YAClB;AAAA,UACF;AAEA,cAAI,QAAQ,UAAU,MAAM;AAC1B,uBAAW,SAAS,QAAQ;AAC5B,gBAAI,cAAc,MAAM;AACtB,yBAAW,SAAS,KAAK,SAAS,YAAY,WAAW,MAAM;AAAA,YACjE;AAEA,uBAAW,WAAW;AAAA,cACpB,MAAM,QAAQ;AAAA,cACd,QAAQ,QAAQ;AAAA,YAClB;AAEA,gBAAI,QAAQ,QAAQ,MAAM;AACxB,yBAAW,OAAO,QAAQ;AAAA,YAC5B;AAAA,UACF;AAEA,oBAAU,WAAW,UAAU;AAAA,QACjC,CAAC;AACD,2BAAmB,QAAQ,QAAQ,SAAU,YAAY;AACvD,cAAI,iBAAiB;AACrB,cAAI,eAAe,MAAM;AACvB,6BAAiB,KAAK,SAAS,YAAY,UAAU;AAAA,UACvD;AAEA,cAAI,CAAC,UAAU,SAAS,IAAI,cAAc,GAAG;AAC3C,sBAAU,SAAS,IAAI,cAAc;AAAA,UACvC;AAEA,cAAI,UAAU,mBAAmB,iBAAiB,UAAU;AAC5D,cAAI,WAAW,MAAM;AACnB,sBAAU,iBAAiB,YAAY,OAAO;AAAA,UAChD;AAAA,QACF,CAAC;AACD,eAAO;AAAA,MACT;AAYF,MAAAA,oBAAmB,UAAU,aAC3B,SAAS,8BAA8B,OAAO;AAC5C,YAAI,YAAY,KAAK,OAAO,OAAO,WAAW;AAC9C,YAAI,WAAW,KAAK,OAAO,OAAO,YAAY,IAAI;AAClD,YAAI,SAAS,KAAK,OAAO,OAAO,UAAU,IAAI;AAC9C,YAAIC,SAAO,KAAK,OAAO,OAAO,QAAQ,IAAI;AAE1C,YAAI,CAAC,KAAK,iBAAiB;AACzB,eAAK,iBAAiB,WAAW,UAAU,QAAQA,MAAI;AAAA,QACzD;AAEA,YAAI,UAAU,MAAM;AAClB,mBAAS,OAAO,MAAM;AACtB,cAAI,CAAC,KAAK,SAAS,IAAI,MAAM,GAAG;AAC9B,iBAAK,SAAS,IAAI,MAAM;AAAA,UAC1B;AAAA,QACF;AAEA,YAAIA,UAAQ,MAAM;AAChB,UAAAA,SAAO,OAAOA,MAAI;AAClB,cAAI,CAAC,KAAK,OAAO,IAAIA,MAAI,GAAG;AAC1B,iBAAK,OAAO,IAAIA,MAAI;AAAA,UACtB;AAAA,QACF;AAEA,aAAK,UAAU,IAAI;AAAA,UACjB,eAAe,UAAU;AAAA,UACzB,iBAAiB,UAAU;AAAA,UAC3B,cAAc,YAAY,QAAQ,SAAS;AAAA,UAC3C,gBAAgB,YAAY,QAAQ,SAAS;AAAA,UAC7C;AAAA,UACA,MAAMA;AAAA,QACR,CAAC;AAAA,MACH;AAKF,MAAAD,oBAAmB,UAAU,mBAC3B,SAAS,oCAAoC,aAAa,gBAAgB;AACxE,YAAI,SAAS;AACb,YAAI,KAAK,eAAe,MAAM;AAC5B,mBAAS,KAAK,SAAS,KAAK,aAAa,MAAM;AAAA,QACjD;AAEA,YAAI,kBAAkB,MAAM;AAG1B,cAAI,CAAC,KAAK,kBAAkB;AAC1B,iBAAK,mBAAmB,uBAAO,OAAO,IAAI;AAAA,UAC5C;AACA,eAAK,iBAAiB,KAAK,YAAY,MAAM,CAAC,IAAI;AAAA,QACpD,WAAW,KAAK,kBAAkB;AAGhC,iBAAO,KAAK,iBAAiB,KAAK,YAAY,MAAM,CAAC;AACrD,cAAI,OAAO,KAAK,KAAK,gBAAgB,EAAE,WAAW,GAAG;AACnD,iBAAK,mBAAmB;AAAA,UAC1B;AAAA,QACF;AAAA,MACF;AAkBF,MAAAA,oBAAmB,UAAU,iBAC3B,SAAS,kCAAkC,oBAAoB,aAAa,gBAAgB;AAC1F,YAAI,aAAa;AAEjB,YAAI,eAAe,MAAM;AACvB,cAAI,mBAAmB,QAAQ,MAAM;AACnC,kBAAM,IAAI;AAAA,cACR;AAAA,YAEF;AAAA,UACF;AACA,uBAAa,mBAAmB;AAAA,QAClC;AACA,YAAI,aAAa,KAAK;AAEtB,YAAI,cAAc,MAAM;AACtB,uBAAa,KAAK,SAAS,YAAY,UAAU;AAAA,QACnD;AAGA,YAAI,aAAa,IAAI,SAAS;AAC9B,YAAI,WAAW,IAAI,SAAS;AAG5B,aAAK,UAAU,gBAAgB,SAAU,SAAS;AAChD,cAAI,QAAQ,WAAW,cAAc,QAAQ,gBAAgB,MAAM;AAEjE,gBAAI,WAAW,mBAAmB,oBAAoB;AAAA,cACpD,MAAM,QAAQ;AAAA,cACd,QAAQ,QAAQ;AAAA,YAClB,CAAC;AACD,gBAAI,SAAS,UAAU,MAAM;AAE3B,sBAAQ,SAAS,SAAS;AAC1B,kBAAI,kBAAkB,MAAM;AAC1B,wBAAQ,SAAS,KAAK,KAAK,gBAAgB,QAAQ,MAAM;AAAA,cAC3D;AACA,kBAAI,cAAc,MAAM;AACtB,wBAAQ,SAAS,KAAK,SAAS,YAAY,QAAQ,MAAM;AAAA,cAC3D;AACA,sBAAQ,eAAe,SAAS;AAChC,sBAAQ,iBAAiB,SAAS;AAClC,kBAAI,SAAS,QAAQ,MAAM;AACzB,wBAAQ,OAAO,SAAS;AAAA,cAC1B;AAAA,YACF;AAAA,UACF;AAEA,cAAI,SAAS,QAAQ;AACrB,cAAI,UAAU,QAAQ,CAAC,WAAW,IAAI,MAAM,GAAG;AAC7C,uBAAW,IAAI,MAAM;AAAA,UACvB;AAEA,cAAIC,SAAO,QAAQ;AACnB,cAAIA,UAAQ,QAAQ,CAAC,SAAS,IAAIA,MAAI,GAAG;AACvC,qBAAS,IAAIA,MAAI;AAAA,UACnB;AAAA,QAEF,GAAG,IAAI;AACP,aAAK,WAAW;AAChB,aAAK,SAAS;AAGd,2BAAmB,QAAQ,QAAQ,SAAUC,aAAY;AACvD,cAAI,UAAU,mBAAmB,iBAAiBA,WAAU;AAC5D,cAAI,WAAW,MAAM;AACnB,gBAAI,kBAAkB,MAAM;AAC1B,cAAAA,cAAa,KAAK,KAAK,gBAAgBA,WAAU;AAAA,YACnD;AACA,gBAAI,cAAc,MAAM;AACtB,cAAAA,cAAa,KAAK,SAAS,YAAYA,WAAU;AAAA,YACnD;AACA,iBAAK,iBAAiBA,aAAY,OAAO;AAAA,UAC3C;AAAA,QACF,GAAG,IAAI;AAAA,MACT;AAaF,MAAAF,oBAAmB,UAAU,mBAC3B,SAAS,mCAAmC,YAAY,WAAW,SACvB,OAAO;AAKjD,YAAI,aAAa,OAAO,UAAU,SAAS,YAAY,OAAO,UAAU,WAAW,UAAU;AACzF,gBAAM,IAAI;AAAA,YACN;AAAA,UAGJ;AAAA,QACJ;AAEA,YAAI,cAAc,UAAU,cAAc,YAAY,cAC/C,WAAW,OAAO,KAAK,WAAW,UAAU,KAC5C,CAAC,aAAa,CAAC,WAAW,CAAC,OAAO;AAEvC;AAAA,QACF,WACS,cAAc,UAAU,cAAc,YAAY,cAC/C,aAAa,UAAU,aAAa,YAAY,aAChD,WAAW,OAAO,KAAK,WAAW,UAAU,KAC5C,UAAU,OAAO,KAAK,UAAU,UAAU,KAC1C,SAAS;AAEnB;AAAA,QACF,OACK;AACH,gBAAM,IAAI,MAAM,sBAAsB,KAAK,UAAU;AAAA,YACnD,WAAW;AAAA,YACX,QAAQ;AAAA,YACR,UAAU;AAAA,YACV,MAAM;AAAA,UACR,CAAC,CAAC;AAAA,QACJ;AAAA,MACF;AAMF,MAAAA,oBAAmB,UAAU,qBAC3B,SAAS,uCAAuC;AAC9C,YAAI,0BAA0B;AAC9B,YAAI,wBAAwB;AAC5B,YAAI,yBAAyB;AAC7B,YAAI,uBAAuB;AAC3B,YAAI,eAAe;AACnB,YAAI,iBAAiB;AACrB,YAAI,SAAS;AACb,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAI;AAEJ,YAAI,WAAW,KAAK,UAAU,QAAQ;AACtC,iBAAS,IAAI,GAAG,MAAM,SAAS,QAAQ,IAAI,KAAK,KAAK;AACnD,oBAAU,SAAS,CAAC;AACpB,iBAAO;AAEP,cAAI,QAAQ,kBAAkB,uBAAuB;AACnD,sCAA0B;AAC1B,mBAAO,QAAQ,kBAAkB,uBAAuB;AACtD,sBAAQ;AACR;AAAA,YACF;AAAA,UACF,OACK;AACH,gBAAI,IAAI,GAAG;AACT,kBAAI,CAAC,KAAK,oCAAoC,SAAS,SAAS,IAAI,CAAC,CAAC,GAAG;AACvE;AAAA,cACF;AACA,sBAAQ;AAAA,YACV;AAAA,UACF;AAEA,kBAAQ,UAAU,OAAO,QAAQ,kBACJ,uBAAuB;AACpD,oCAA0B,QAAQ;AAElC,cAAI,QAAQ,UAAU,MAAM;AAC1B,wBAAY,KAAK,SAAS,QAAQ,QAAQ,MAAM;AAChD,oBAAQ,UAAU,OAAO,YAAY,cAAc;AACnD,6BAAiB;AAGjB,oBAAQ,UAAU,OAAO,QAAQ,eAAe,IACnB,oBAAoB;AACjD,mCAAuB,QAAQ,eAAe;AAE9C,oBAAQ,UAAU,OAAO,QAAQ,iBACJ,sBAAsB;AACnD,qCAAyB,QAAQ;AAEjC,gBAAI,QAAQ,QAAQ,MAAM;AACxB,wBAAU,KAAK,OAAO,QAAQ,QAAQ,IAAI;AAC1C,sBAAQ,UAAU,OAAO,UAAU,YAAY;AAC/C,6BAAe;AAAA,YACjB;AAAA,UACF;AAEA,oBAAU;AAAA,QACZ;AAEA,eAAO;AAAA,MACT;AAEF,MAAAA,oBAAmB,UAAU,0BAC3B,SAAS,0CAA0C,UAAU,aAAa;AACxE,eAAO,SAAS,IAAI,SAAU,QAAQ;AACpC,cAAI,CAAC,KAAK,kBAAkB;AAC1B,mBAAO;AAAA,UACT;AACA,cAAI,eAAe,MAAM;AACvB,qBAAS,KAAK,SAAS,aAAa,MAAM;AAAA,UAC5C;AACA,cAAI,MAAM,KAAK,YAAY,MAAM;AACjC,iBAAO,OAAO,UAAU,eAAe,KAAK,KAAK,kBAAkB,GAAG,IAClE,KAAK,iBAAiB,GAAG,IACzB;AAAA,QACN,GAAG,IAAI;AAAA,MACT;AAKF,MAAAA,oBAAmB,UAAU,SAC3B,SAAS,4BAA4B;AACnC,YAAI,MAAM;AAAA,UACR,SAAS,KAAK;AAAA,UACd,SAAS,KAAK,SAAS,QAAQ;AAAA,UAC/B,OAAO,KAAK,OAAO,QAAQ;AAAA,UAC3B,UAAU,KAAK,mBAAmB;AAAA,QACpC;AACA,YAAI,KAAK,SAAS,MAAM;AACtB,cAAI,OAAO,KAAK;AAAA,QAClB;AACA,YAAI,KAAK,eAAe,MAAM;AAC5B,cAAI,aAAa,KAAK;AAAA,QACxB;AACA,YAAI,KAAK,kBAAkB;AACzB,cAAI,iBAAiB,KAAK,wBAAwB,IAAI,SAAS,IAAI,UAAU;AAAA,QAC/E;AAEA,eAAO;AAAA,MACT;AAKF,MAAAA,oBAAmB,UAAU,WAC3B,SAAS,8BAA8B;AACrC,eAAO,KAAK,UAAU,KAAK,OAAO,CAAC;AAAA,MACrC;AAEF,cAAQ,qBAAqBA;AAAA;AAAA;;;ACxa7B;AAAA;AAAA;AAyCA,UAAI;AAAJ,UACI;AADJ,UAEI;AAFJ,UAGI;AAHJ,UAII;AAJJ,UAKI;AALJ,UAMIG;AANJ,UAOI;AAPJ,UAQI;AARJ,UASI;AATJ,UAUI;AAVJ,UAWIC;AAEJ,UAAIC,UAAS;AAAA,QACT,sBAA0B;AAAA,QAC1B,mBAA0B;AAAA,QAC1B,iBAA0B;AAAA,QAC1B,cAA0B;AAAA,QAC1B,yBAA0B;AAAA,QAC1B,iBAA0B;AAAA,QAC1B,gBAA0B;AAAA,QAC1B,kBAA0B;AAAA,QAC1B,gBAA0B;AAAA,QAC1B,gBAA0B;AAAA,QAC1B,aAA0B;AAAA,QAC1B,WAA0B;AAAA,QAC1B,kBAA0B;AAAA,QAC1B,iBAA0B;AAAA,QAC1B,oBAA0B;AAAA,QAC1B,yBAA0B;AAAA,QAC1B,uBAA0B;AAAA,QAC1B,mBAA0B;AAAA,QAC1B,oBAA0B;AAAA,QAC1B,kBAA0B;AAAA,QAC1B,mBAA0B;AAAA,QAC1B,gBAA0B;AAAA,QAC1B,sBAA0B;AAAA,QAC1B,sBAA0B;AAAA,QAC1B,mBAA0B;AAAA,QAC1B,wBAA0B;AAAA,QAC1B,iBAA0B;AAAA,QAC1B,qBAA0B;AAAA,QAC1B,cAA0B;AAAA,QAC1B,gBAA0B;AAAA,QAC1B,gBAA0B;AAAA,QAC1B,qBAA0B;AAAA,QAC1B,oBAA0B;AAAA,QAC1B,qBAA0B;AAAA,QAC1B,YAA0B;AAAA,QAC1B,aAA0B;AAAA,QAC1B,kBAA0B;AAAA,QAC1B,iBAA0B;AAAA,QAC1B,mBAA0B;AAAA,QAC1B,iBAA0B;AAAA,QAC1B,SAA0B;AAAA,QAC1B,kBAA0B;AAAA,QAC1B,mBAA0B;AAAA,QAC1B,kBAA0B;AAAA,QAC1B,cAA0B;AAAA,QAC1B,kBAA0B;AAAA,QAC1B,mBAA0B;AAAA,QAC1B,eAA0B;AAAA,QAC1B,kBAA0B;AAAA,QAC1B,eAA0B;AAAA,QAC1B,mBAA0B;AAAA,QAC1B,SAA0B;AAAA,QAC1B,UAA0B;AAAA,QAC1B,oBAA0B;AAAA,QAC1B,aAA0B;AAAA,QAC1B,iBAA0B;AAAA,QAC1B,oBAA0B;AAAA,QAC1B,eAA0B;AAAA,QAC1B,OAA0B;AAAA,QAC1B,iBAA0B;AAAA,QAC1B,YAA0B;AAAA,QAC1B,0BAA0B;AAAA,QAC1B,iBAA0B;AAAA,QAC1B,iBAA0B;AAAA,QAC1B,gBAA0B;AAAA,QAC1B,gBAA0B;AAAA,QAC1B,cAA0B;AAAA,QAC1B,iBAA0B;AAAA,QAC1B,kBAA0B;AAAA,QAC1B,qBAA0B;AAAA,QAC1B,oBAA0B;AAAA,QAC1B,gBAA0B;AAAA,QAC1B,eAA0B;AAAA,QAC1B,iBAA0B;AAAA,MAC9B;AAEA,cAAQ,SAASA;AAEjB,UAAI,aAAa;AAAA,QACb,UAAkB;AAAA,QAClB,OAAkB;AAAA,QAClB,YAAkB;AAAA,QAClB,aAAkB;AAAA,QAClB,eAAkB;AAAA,QAClB,UAAkB;AAAA,QAClB,WAAkB;AAAA,QAClB,YAAkB;AAAA,QAClB,WAAkB;AAAA,QAClB,YAAkB;AAAA,QAClB,YAAkB;AAAA,QAClB,UAAkB;AAAA,QAClB,YAAkB;AAAA,QAClB,cAAkB;AAAA,QAClB,UAAkB;AAAA,QAClB,gBAAkB;AAAA,QAClB,OAAkB;AAAA,QAClB,gBAAkB;AAAA,QAClB,SAAkB;AAAA,QAClB,OAAkB;AAAA,QAClB,MAAkB;AAAA,QAClB,KAAkB;AAAA,QAClB,gBAAkB;AAAA,QAClB,kBAAkB;AAAA,QAClB,QAAkB;AAAA,QAClB,SAAkB;AAAA,MACtB;AAEA,UAAI,mBAAmB;AAAA,QACnB,MAAc,WAAW;AAAA,QACzB,MAAc,WAAW;AAAA,QACzB,KAAc,WAAW;AAAA,QACzB,KAAc,WAAW;AAAA,QACzB,KAAc,WAAW;AAAA,QACzB,MAAc,WAAW;AAAA,QACzB,MAAc,WAAW;AAAA,QACzB,OAAc,WAAW;AAAA,QACzB,OAAc,WAAW;AAAA,QACzB,MAAc,WAAW;AAAA,QACzB,QAAc,WAAW;AAAA,QACzB,KAAc,WAAW;AAAA,QACzB,KAAc,WAAW;AAAA,QACzB,MAAc,WAAW;AAAA,QACzB,MAAc,WAAW;AAAA,QACzB,MAAc,WAAW;AAAA,QACzB,cAAc,WAAW;AAAA,QACzB,MAAc,WAAW;AAAA,QACzB,MAAc,WAAW;AAAA,QACzB,OAAc,WAAW;AAAA,QACzB,KAAc,WAAW;AAAA,QACzB,KAAc,WAAW;AAAA,QACzB,KAAc,WAAW;AAAA,QACzB,KAAc,WAAW;AAAA,QACzB,KAAc,WAAW;AAAA,QACzB,MAAc,WAAW;AAAA,QACzB,MAAc,WAAW;AAAA,MAC7B;AAEA,eAAS,oBAAqB;AAE1B,eAAO;AAAA,UACH,QAAW;AAAA,UACX,MAAW;AAAA,UACX,OAAW;AAAA,UACX,QAAW;AAAA,YACP,QAAmB;AAAA,cACf,OAAO;AAAA,cACP,MAAO;AAAA,YACX;AAAA,YACA,SAAmB;AAAA,YACnB,OAAmB;AAAA,YACnB,MAAmB;AAAA,YACnB,UAAmB;AAAA,YACnB,aAAmB;AAAA,YACnB,QAAmB;AAAA,YACnB,YAAmB;AAAA,YACnB,SAAmB;AAAA,YACnB,aAAmB;AAAA,YACnB,YAAmB;AAAA,YACnB,mBAAmB;AAAA,UACvB;AAAA,UACA,WAAW;AAAA,UACX,KAAW;AAAA,UACX,UAAW;AAAA,QACf;AAAA,MACJ;AAOA,UAAI,wBAAwB;AAAA,QACxB;AAAA,QAAQ;AAAA,QAAQ;AAAA,QAAQ;AAAA,QAAQ;AAAA,QAAQ;AAAA,QAAQ;AAAA,QAAQ;AAAA,QACxD;AAAA,QAAQ;AAAA,QAAQ;AAAA,QAAQ;AAAA,QAAQ;AAAA,QAAQ;AAAA,QAAQ;AAAA,QAAQ;AAAA,QACxD;AAAA,MACJ;AAGA,UAAI,yCAAyC,IAAI;AAAA,QAC7C;AAAA,MAkDJ;AAIA,eAAS,eAAgB,IAAI;AACzB,YAAI,KAAK,KAAM;AACX,iBAAO,MAAM,MAAM,MAAM;AAAA,UAClB,MAAM,MAAM,MAAM;AAAA,UAClB,MAAM,MAAM,MAAM;AAAA,UAClB,OAAO,MAAM,OAAO;AAAA,UACpB,OAAO;AAAA,QAClB;AAEA,YAAI,KAAK,OAAO,aAAa,EAAE;AAE/B,eAAO,uCAAuC,KAAK,EAAE;AAAA,MACzD;AAEA,eAAS,iBAAkB,IAAI;AAC3B,eAAO,OAAO,MAAQ,OAAO,MAAQ,OAAO,QAAU,OAAO;AAAA,MACjE;AAEA,eAASC,cAAc,IAAI;AACvB,eAAO,OAAO,MAAQ,OAAO,KAAQ,iBAAiB,EAAE,KAAK,OAAO,MAAQ,OAAO,MAAQ,OAAO,OAC1F,MAAM,QAAU,sBAAsB,QAAQ,EAAE,KAAK;AAAA,MACjE;AAEA,eAAS,eAAgB,IAAI;AACzB,eAAO,MAAM,MAAM,MAAM;AAAA,MAC7B;AAEA,eAAS,aAAc,KAAK,KAAK;AAC7B,YAAI,SAAS;AAEb,aAAK,OAAO,GAAG,MAAM,GAAG,SAAS,GAAG,OAAO,KAAK;AAC5C,cAAI,MAAM,GAAG;AACT,sBAAU;AAAA,UACd;AAAA,QACJ;AAEA,eAAO;AAAA,MACX;AAEA,gBAAU,MAAM;AAChB,UAAI,CAAC,SAAS;AACV,kBAAU,SAASC,SAAS,OAAO;AAC/B,iBAAO,OAAO,UAAU,SAAS,KAAK,KAAK,MAAM;AAAA,QACrD;AAAA,MACJ;AAGA,eAAS,aAAc,QAAQ,UAAU;AACrC,YAAI,KAAK;AAET,iBAAS,aAAcC,SAAQ;AAC3B,iBAAO,OAAOA,YAAW,YAAYA,mBAAkB,UAAU,EAAEA,mBAAkB;AAAA,QACzF;AAEA,aAAK,OAAO,UAAU;AAClB,cAAI,SAAS,eAAe,GAAG,GAAG;AAC9B,kBAAM,SAAS,GAAG;AAClB,gBAAI,aAAa,GAAG,GAAG;AACnB,kBAAI,aAAa,OAAO,GAAG,CAAC,GAAG;AAC3B,6BAAa,OAAO,GAAG,GAAG,GAAG;AAAA,cACjC,OACK;AACD,uBAAO,GAAG,IAAI,aAAa,CAAC,GAAG,GAAG;AAAA,cACtC;AAAA,YACJ,OACK;AACD,qBAAO,GAAG,IAAI;AAAA,YAClB;AAAA,UACJ;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAEA,eAAS,eAAgB,OAAO;AAC5B,YAAI,QAAQ,OAAO,MAAM,UAAU;AAEnC,YAAI,UAAU,IAAI,GAAG;AACjB,iBAAO,OAAO,SAAS,WAAW,UAAU;AAAA,QAChD;AAEA,iBAAS,KAAK;AACd,YAAI,CAAC,YAAY,OAAO,SAAS,GAAG;AAChC,iBAAO;AAAA,QACX;AAEA,gBAAQ,OAAO,QAAQ,GAAG;AAE1B,YAAI,CAAC,QAAQ,OAAO,WAAW,CAAC,MAAM,MAAQ,UAAU,GAAG;AACvD,kBAAS;AACT,mBAAS,OAAO,MAAM,CAAC;AAAA,QAC3B;AACA,eAAW;AACX,iBAAW,OAAO,QAAQ,MAAM,GAAG;AACnC,mBAAW;AACX,aAAK,MAAM,KAAK,QAAQ,GAAG,KAAK,GAAG;AAC/B,qBAAW,CAAC,KAAK,MAAM,MAAM,CAAC;AAC9B,iBAAW,KAAK,MAAM,GAAG,GAAG;AAAA,QAChC;AACA,YAAI,SAAS,GAAG;AACZ,sBAAY,KAAK,SAAS,QAAQ;AAClC,iBAAO,EAAE,KAAK,MAAM,GAAG,KAAK,IAAI,KAAK,MAAM,QAAQ,CAAC,KAAK;AAAA,QAC7D;AACA,cAAM;AAGN,eAAO,KAAK,WAAW,KAAK,SAAS,MAAM,CAAC,MAAM,IAAM;AACpD,YAAE;AAAA,QACN;AACA,YAAI,QAAQ,GAAG;AACX,sBAAY;AACZ,iBAAO,KAAK,MAAM,GAAG,GAAG;AAAA,QAC5B;AACA,YAAI,aAAa,GAAG;AAChB,kBAAQ,MAAM;AAAA,QAClB;AACA,aAAK,KAAK,SAAS,OAAO,UACpB,eAAe,QAAQ,QAAQ,KAAK,MAAM,KAAK,MAAM,UACpD,OAAO,OAAO,MAAM,SAAS,EAAE,GAAG,SACjC,OAAO,WACX,CAAC,SAAS,OAAO;AACjB,mBAAS;AAAA,QACb;AAEA,eAAO;AAAA,MACX;AAKA,eAAS,sBAAuB,IAAI,qBAAqB;AAErD,aAAK,KAAK,CAAC,OAAO,MAAQ;AACtB,kBAAQ,sBAAsB,MAAM,UAAW,OAAO,OAAU,SAAS;AAAA,QAC7E,WACS,OAAO,MAAM,OAAO,IAAI;AAC7B,kBAAQ,sBAAsB,KAAK,SAAU,OAAO,KAAM,MAAM;AAAA,QACpE;AACA,eAAO,OAAO,aAAa,EAAE;AAAA,MACjC;AAEA,eAAS,eAAgB,KAAK;AAC1B,YAAI,OAAO,QAAQ,OAAO,GAAG,IAAI,IAAI,kBAAkB;AAEvD,iBAAS,IAAI,SAAS;AAEtB,YAAI,IAAI,QAAQ;AAEZ,kBAAQ,OAAO,MAAM,YAAY;AACjC,cAAI,CAAC,OAAO;AACR,mBAAO;AAAA,UACX;AAEA,kBAAS,MAAM,CAAC;AAChB,mBAAS;AAET,6BAAsB;AACtB,gCAAsB;AACtB,eAAK,IAAI,GAAG,KAAK,IAAI,OAAO,QAAQ,IAAI,IAAI,EAAE,GAAG;AAC7C,iBAAK,IAAI,OAAO,WAAW,CAAC;AAE5B,gBAAI,CAAC,qBAAqB;AACtB,kBAAI,kBAAkB;AAClB,oBAAI,OAAO,IAAI;AACX,qCAAmB;AAAA,gBACvB;AAAA,cACJ,OACK;AACD,oBAAI,OAAO,IAAI;AACX,4BAAU;AAAA,gBACd,WACS,OAAO,IAAI;AAChB,qCAAmB;AAAA,gBACvB;AAAA,cACJ;AACA,wBAAU,sBAAsB,IAAI,mBAAmB;AACvD,oCAAsB,OAAO;AAAA,YACjC,OACK;AAED,wBAAU,sBAAsB,IAAI,mBAAmB;AAEvD,oCAAsB;AAAA,YAC1B;AAAA,UACJ;AAEA,iBAAO,MAAM,SAAS,MAAM;AAAA,QAChC;AAEA,eAAO;AAAA,MACX;AAEA,eAAS,uBAAwBC,OAAM,MAAM;AACzC,YAAI,KAAK,SAAS;AAElB,gBAAQA,OAAM;AAAA,UACV,KAAK;AACD,sBAAU;AACV;AAAA,UACJ,KAAK;AACD,sBAAU;AACV;AAAA,UACJ,KAAK;AACD,sBAAU;AACV;AAAA,UACJ;AACI,kBAAMA,MAAK,SAAS,EAAE,EAAE,YAAY;AACpC,gBAAI,QAAQA,QAAO,KAAM;AACrB,wBAAU,MAAM,OAAO,MAAM,IAAI,MAAM,IAAI;AAAA,YAC/C,WAESA,UAAS,KAAU,CAAC,eAAe,IAAI,GAAG;AAC/C,wBAAU;AAAA,YACd,WAESA,UAAS,IAAQ;AACtB,wBAAU;AAAA,YACd,OAEK;AACD,wBAAU,MAAM,KAAK,MAAM,IAAI,MAAM,IAAI;AAAA,YAC7C;AACA;AAAA,QACR;AAEA,eAAO;AAAA,MACX;AAEA,eAAS,0BAA2BA,OAAM;AACtC,YAAI,SAAS;AACb,gBAAQA,OAAM;AAAA,UACV,KAAK;AAED,sBAAU;AACV;AAAA,UACJ,KAAK;AAED,sBAAU;AACV;AAAA,UACJ,KAAK;AAED,sBAAU;AACV;AAAA,UACJ,KAAK;AACD,sBAAU;AACV;AAAA,UACJ,KAAK;AACD,sBAAU;AACV;AAAA,QACR;AAEA,eAAO;AAAA,MACX;AAEA,eAAS,gBAAiB,KAAK;AAC3B,YAAI,GAAG,IAAIA,OAAM;AAEjB,gBAAQ,WAAW,WAAW,MAAM;AACpC,aAAK,IAAI,GAAG,KAAK,IAAI,QAAQ,IAAI,IAAI,EAAE,GAAG;AACtC,UAAAA,QAAO,IAAI,WAAW,CAAC;AACvB,cAAIA,UAAS,IAAM;AACf,oBAAQ;AACR;AAAA,UACJ,WACSA,UAAS,IAAM;AACpB,oBAAQ;AACR;AAAA,UACJ,WACSA,UAAS,IAAM;AACpB,cAAE;AAAA,UACN;AAAA,QACJ;AAEA,eAAO,QAAQ,MAAM;AAAA,MACzB;AAEA,eAAS,aAAc,KAAK;AACxB,YAAI,SAAS,IAAI,GAAG,KAAKA,OAAM,eAAe,GAAG,eAAe,GAAG,QAAQ;AAE3E,aAAK,IAAI,GAAG,MAAM,IAAI,QAAQ,IAAI,KAAK,EAAE,GAAG;AACxC,UAAAA,QAAO,IAAI,WAAW,CAAC;AACvB,cAAIA,UAAS,IAAM;AACf,cAAE;AAAA,UACN,WACSA,UAAS,IAAM;AACpB,cAAE;AAAA,UACN,WACSA,UAAS,MAAQ,MAAM;AAC5B,sBAAU;AAAA,UACd,WACS,iBAAiBA,KAAI,KAAKA,UAAS,IAAM;AAC9C,sBAAU,0BAA0BA,KAAI;AACxC;AAAA,UACJ,WACU,QAAQA,QAAO;AAAA,UAChB,EAAE,QAAQ,cAAeA,SAAQ,MAAQA,SAAQ,MAAQ;AAC9D,sBAAU,uBAAuBA,OAAM,IAAI,WAAW,IAAI,CAAC,CAAC;AAC5D;AAAA,UACJ;AACA,oBAAU,OAAO,aAAaA,KAAI;AAAA,QACtC;AAEA,iBAAS,EAAE,WAAW,YAAa,WAAW,UAAU,eAAe;AACvE,gBAAS,SAAS,MAAO;AAEzB,YAAI,EAAE,SAAS,eAAe,eAAe;AACzC,iBAAO,QAAQ,SAAS;AAAA,QAC5B;AAEA,cAAS;AACT,iBAAS;AAET,aAAK,IAAI,GAAG,MAAM,IAAI,QAAQ,IAAI,KAAK,EAAE,GAAG;AACxC,UAAAA,QAAO,IAAI,WAAW,CAAC;AACvB,cAAKA,UAAS,MAAQ,UAAYA,UAAS,MAAQ,CAAC,QAAS;AACzD,sBAAU;AAAA,UACd;AACA,oBAAU,OAAO,aAAaA,KAAI;AAAA,QACtC;AAEA,eAAO,SAAS;AAAA,MACpB;AAGA,eAAS,KAAM,GAAG,GAAG;AACjB,YAAI,CAAC,EAAE;AACH,iBAAO;AAEX,YAAI,CAAC,EAAE;AACH,iBAAO;AAEX,YAAI,MAAM,EAAE,WAAW,EAAE,SAAS,CAAC,GAC/B,MAAM,EAAE,WAAW,CAAC;AAExB,YAAI,eAAe,GAAG,KAAK,eAAe,GAAG,KACzC,QAAQ,QAAQ,QAAQ,MAAQ,QAAQ;AAAA,QACxC,QAAQ,MAAQ,QAAQ,KAAM;AAC9B,iBAAO,IAAI,EAAE,QAAQ;AAAA,QACzB,WAESH,cAAa,GAAG,KAAKA,cAAa,GAAG;AAC1C,iBAAO,IAAI;AAEf,eAAO,IAAI,EAAE,WAAW;AAAA,MAC5B;AAEA,eAAS,cAAe;AACpB,YAAI,aAAa,EAAE;AAEnB,UAAE,UAAU,EAAE;AACd,eAAO;AAAA,MACX;AAEA,eAAS,eAAgB,OAAO;AAC5B,YAAI,MAAM,SAASD,QAAO;AACtB,iBAAO,EAAE;AAEb,YAAI,MAAM,SAASA,QAAO;AACtB,iBAAO;AAEX,eAAO,EAAE,UAAU,EAAE,SAAS,EAAE;AAAA,MACpC;AAEA,eAAS,eAAgB,OAAO;AAC5B,YAAI,MAAM,SAASA,QAAO;AACtB,iBAAO,EAAE;AAEb,eAAO,EAAE,UAAU,EAAE;AAAA,MACzB;AAGA,eAAS,iBAAkB,OAAOK,WAAU;AACxC,YAAI,WAAe,MAAM,MAAM,QAAQ,GACnC,cAAe,OAAO,aAAa,UACnC,aAAe,CAAC,eACD,SAAS,eAAe,SAAS,SAAS,aAAa,WAAW,UACjF,eAAe,aAAaA,UAAS,YACrC,UAAe,cAAc,WAAW,SAAS,SACjD,SAAe,QAAQ,MAAM,SAAS,GACtC,aAAe,OAAO;AAE1B,YAAI;AACA,YAAE,MAAM;AAEZ,UAAE,MAAM,OAAO,CAAC;AAEhB,iBAAS,IAAI,GAAG,IAAI,YAAY;AAC5B,YAAE,MAAM,EAAE,UAAU,EAAE,SAAS,OAAO,CAAC;AAE3C,YAAI;AACA,YAAE,MAAM;AAAA,MAChB;AAEA,eAAS,uBAAwB,OAAO;AACpC,YAAI,UAA8B,MAAM,QACpC,aAA8B,QAAQ,QACtC,eAA8B,aAAa,GAC3C,8BAA8B,MAAM,SAASL,QAAO,2BAA2B,eAAe,KAChE,QAAQ,CAAC,EAAE,SAASA,QAAO;AAG7D,YAAI;AACA,YAAE,MAAM,QAAQ,CAAC,EAAE;AAAA,aAElB;AACD,YAAE,MAAM;AAER,mBAAS,IAAI,GAAG,IAAI,YAAY,EAAE,GAAG;AACjC,gBAAI,SAAS,QAAQ,CAAC;AAEtB,gBAAI,QAAQ,CAAC,EAAE,SAASA,QAAO;AAC3B,gBAAE,MAAM,OAAO;AAAA;AAGf,sBAAQ,OAAO,IAAI,EAAE,QAAQ,OAAO,EAAE;AAE1C,gBAAI,MAAM;AACN,gBAAE,MAAM,MAAM,EAAE;AAAA,UACxB;AAEA,YAAE,MAAM;AAAA,QACZ;AAAA,MACJ;AAEA,eAAS,qBAAsB,OAAO;AAClC,YAAI,QAAQ,MAAM;AAElB,+BAAuB,KAAK;AAE5B,YAAI,MAAM,SAASA,QAAO;AACtB,YAAE,MAAM,EAAE,WAAW;AAEzB,YAAI,MAAM,YAAY;AAClB,YAAE,MAAM,EAAE;AAEV,cAAI,SAAS,SAAS,OAAO,OAAO,EAAE;AAEtC,cAAI,OAAO,OAAO,CAAC,MAAM;AACrB,qBAAS,MAAM,SAAS;AAE5B,YAAE,MAAM;AAAA,QACZ,OAEK;AACD,YAAE,MAAM,eAAe,KAAK;AAC5B,kBAAQ,MAAM,IAAI,EAAE,OAAO,OAAO,EAAE;AAAA,QACxC;AAAA,MACJ;AAOA,UAAI,SAAS;AAAA,QACT,IAAI,SAAU,SAAS;AACnB,iBAAO;AAAA,YACH,YAAyB,WAAW;AAAA,YACpC;AAAA,YACA,WAAyB;AAAA,YACzB,yBAAyB;AAAA,UAC7B;AAAA,QACJ;AAAA,QAEA,IAAI,SAAU,SAAS;AACnB,iBAAO;AAAA,YACH,YAAyB,WAAW;AAAA,YACpC;AAAA,YACA,WAAyB;AAAA,YACzB,yBAAyB;AAAA,UAC7B;AAAA,QACJ;AAAA,QAEA,IAAI;AAAA,UACA,YAAyB,WAAW;AAAA,UACpC,SAAyB;AAAA,UACzB,WAAyB;AAAA,UACzB,yBAAyB;AAAA,QAC7B;AAAA,QAEA,IAAI;AAAA,UACA,YAAyB,WAAW;AAAA,UACpC,SAAyB;AAAA,UACzB,WAAyB;AAAA,UACzB,yBAAyB;AAAA,QAC7B;AAAA,QAEA,IAAI;AAAA,UACA,YAAyB,WAAW;AAAA,UACpC,SAAyB;AAAA,UACzB,WAAyB;AAAA,UACzB,yBAAyB;AAAA,QAC7B;AAAA,QAEA,IAAI,SAAU,yBAAyB;AACnC,iBAAO;AAAA,YACH,YAAyB,WAAW;AAAA,YACpC,SAAyB;AAAA,YACzB,WAAyB;AAAA,YACzB;AAAA,UACJ;AAAA,QACJ;AAAA,QAEA,IAAI;AAAA,UACA,YAAyB,WAAW;AAAA,UACpC,SAAyB;AAAA,UACzB,WAAyB;AAAA,UACzB,yBAAyB;AAAA,QAC7B;AAAA,QAEA,IAAI;AAAA,UACA,YAAyB,WAAW;AAAA,UACpC,SAAyB;AAAA,UACzB,WAAyB;AAAA,UACzB,yBAAyB;AAAA,QAC7B;AAAA,QAEA,IAAI;AAAA,UACA,YAAyB;AAAA,UACzB,SAAyB;AAAA,UACzB,WAAyB;AAAA,UACzB,yBAAyB;AAAA,QAC7B;AAAA,QAEA,KAAK;AAAA,UACD,YAAyB,WAAW;AAAA,UACpC,SAAyB;AAAA,UACzB,WAAyB;AAAA,UACzB,yBAAyB;AAAA,QAC7B;AAAA,QAEA,KAAK,SAAU,WAAW;AACtB,iBAAO;AAAA,YACH,YAAyB,WAAW;AAAA,YACpC,SAAyB;AAAA,YACzB;AAAA,YACA,yBAAyB;AAAA,UAC7B;AAAA,QACJ;AAAA,QAEA,KAAK;AAAA,UACD,YAAyB,WAAW;AAAA,UACpC,SAAyB;AAAA,UACzB,WAAyB;AAAA,UACzB,yBAAyB;AAAA,QAC7B;AAAA,QAEA,KAAK;AAAA,UACD,YAAyB,WAAW;AAAA,UACpC,SAAyB;AAAA,UACzB,WAAyB;AAAA,UACzB,yBAAyB;AAAA,QAC7B;AAAA,QAGA,KAAK;AAAA,UACD,YAAyB,WAAW;AAAA,UACpC,SAAyB;AAAA,UACzB,WAAyB;AAAA,UACzB,yBAAyB;AAAA,QAC7B;AAAA,QAGA,KAAK,SAAU,WAAW;AACtB,iBAAO;AAAA,YACH,YAAyB,WAAW;AAAA,YACpC,SAAyB;AAAA,YACzB;AAAA,YACA,yBAAyB;AAAA,UAC7B;AAAA,QACJ;AAAA,QAEA,KAAK,SAAU,YAAY,SAAS;AAChC,iBAAO;AAAA,YACH;AAAA,YACA;AAAA,YACA,WAAyB;AAAA,YACzB,yBAAyB;AAAA,UAC7B;AAAA,QACJ;AAAA,QAEA,KAAK,SAAU,SAAS;AACpB,iBAAO;AAAA,YACH,YAAyB,WAAW;AAAA,YACpC;AAAA,YACA,WAAyB;AAAA,YACzB,yBAAyB;AAAA,UAC7B;AAAA,QACJ;AAAA,QAEA,KAAK,SAAU,SAAS;AACpB,iBAAO;AAAA,YACH,YAAyB,WAAW;AAAA,YACpC;AAAA,YACA,WAAyB;AAAA,YACzB,yBAAyB;AAAA,UAC7B;AAAA,QACJ;AAAA,QAEA,KAAK;AAAA,UACD,YAAmB,WAAW;AAAA,UAC9B,SAAmB;AAAA,UACnB,WAAmB;AAAA,UACnB,mBAAmB;AAAA,QACvB;AAAA,QAEA,KAAK;AAAA,UACD,YAAY,WAAW;AAAA,UACvB,WAAY;AAAA,QAChB;AAAA,QAEA,IAAI,SAAU,cAAc,mBAAmB;AAC3C,iBAAO;AAAA,YACH,SAAmB;AAAA,YACnB,cAAmB;AAAA,YACnB,kBAAmB;AAAA,YACnB;AAAA,UACJ;AAAA,QACJ;AAAA,QAEA,IAAI;AAAA,UACA,SAAmB;AAAA,UACnB,cAAmB;AAAA,UACnB,kBAAmB;AAAA,UACnB,mBAAmB;AAAA,QACvB;AAAA,QAEA,IAAI,SAAU,SAAS;AACnB,iBAAO;AAAA,YACH;AAAA,YACA,cAAmB;AAAA,YACnB,kBAAmB;AAAA,YACnB,mBAAmB;AAAA,UACvB;AAAA,QACJ;AAAA,QAEA,IAAI,SAAU,mBAAmB;AAC7B,iBAAO;AAAA,YACH,SAAmB;AAAA,YACnB,cAAmB;AAAA,YACnB,kBAAmB;AAAA,YACnB;AAAA,UACJ;AAAA,QACJ;AAAA,QAEA,IAAI,SAAU,mBAAmB;AAC7B,iBAAO;AAAA,YACH,SAAmB;AAAA,YACnB,cAAmB;AAAA,YACnB,kBAAmB;AAAA,YACnB;AAAA,UACJ;AAAA,QACJ;AAAA,QAEA,IAAI;AAAA,UACA,SAAmB;AAAA,UACnB,cAAmB;AAAA,UACnB,kBAAmB;AAAA,UACnB,mBAAmB;AAAA,QACvB;AAAA,QAEA,IAAI;AAAA,UACA,SAAmB;AAAA,UACnB,cAAmB;AAAA,UACnB,kBAAmB;AAAA,UACnB,mBAAmB;AAAA,QACvB;AAAA,QAEA,IAAI;AAAA,UACA,SAAmB;AAAA,UACnB,cAAmB;AAAA,UACnB,kBAAmB;AAAA,UACnB,mBAAmB;AAAA,QACvB;AAAA,MACJ;AAQA,UAAI,2BAA4B;AAAhC,UACI,4BAA4B;AAIhC,eAAS,oBAAoB,MAAM;AAC/B,YAAI,CAAC;AACD,iBAAO;AAEX,eAAO,KAAK,SAASA,QAAO;AAAA,MAChC;AAEA,eAAS,+BAAgC,MAAM,QAAQ;AACnD,gBAAQ,KAAK,UAAU;AAAA,UACnB,KAAK;AACD,gBAAI,CAAC,oBAAoB,MAAM;AAAG,qBAAO;AACzC,mBAAO,OAAO,aAAa,QAAQ,OAAO,aAAa;AAAA,UAE3D,KAAK;AACD,mBAAO,oBAAoB,QAAQ;AAAA,cAC/B,UAAU;AAAA,YACd,CAAC;AAAA,UAEL,KAAK;AACD,mBAAO,oBAAoB,MAAM,KAAK,OAAO,aAAa;AAAA,QAClE;AAAA,MACJ;AAEA,eAAS,kCAAmC,OAAOK,WAAU,SAAS;AAClE,YAAI,KAAqB,MAAM,UAC3B,aAAqB,iBAAiB,MAAM,QAAQ,GACpD,eAAqB,aAAaA,UAAS,YAC3C,UAAqBA,UAAS,WAAW,cACzC,qBAAqB,OAAO,IAAI,YAAY,OAAO,GACnD,SAAqB,SAAS,MAAM,MAAM,oBAAoB,KAAK;AAEvE,wBAAgB,OAAO,QAAQ,CAAC;AAEhC,YAAI,aAAa,+BAA+B,OAAO,OAAO;AAE9D,YAAI,gBAAgB;AAChB,YAAE,MAAM;AAGZ,YAAI,OAAO,WAAW,OAAO,SAAS,CAAC,MAAM,MAAQ,eAAe,GAAG,WAAW,CAAC,CAAC;AAChF,mBAAS,SAAS,EAAE,QAAQ;AAAA;AAG5B,mBAAS,KAAK,QAAQ,EAAE;AAE5B,2BAAmB;AAEnB,YAAI,UAAU,SAAS,MAAM,OAAO,oBAAoB,KAAK;AAG7D,YAAI,OAAO,OAAO,QAAQ,OAAO,CAAC,MAAM,OAAO,GAAG,MAAM,EAAE,MAAM,OAAO,QAAQ,MAAM,GAAG,CAAC,MAAM;AAC3F,oBAAU,EAAE,QAAQ;AAAA;AAGpB,mBAAS,KAAK,QAAQ,OAAO;AAEjC,UAAE,MAAM;AAER,YAAI,gBAAgB;AAChB,YAAE,MAAM;AAAA,MAChB;AAEA,eAAS,iCAAkC,OAAO;AAC9C,YAAI,SAAY,MAAM,UAClB,YAAY,OAAO;AAEvB,YAAI,WAAW;AACX,cAAI,cAAc,YAAY,GAC1B,YAAc,YAAY,GAC1B,aAAc,YAAY,GAC1B,aAAc,EAAE,UAAU,EAAE;AAEhC,YAAE,MAAM;AAER,mBAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAChC,gBAAI,QAAQ,OAAO,CAAC;AAEpB,gBAAI;AACA,gBAAE,MAAM;AAEZ,gBAAI;AACA,sBAAQ,MAAM,IAAI,EAAE,OAAO,OAAO,EAAE;AAExC,gBAAI,MAAM,eAAe,CAAC;AACtB,gBAAE,MAAM;AAAA,UAChB;AAEA,YAAE,SAAS;AAEX,cAAI;AACA,cAAE,MAAM,EAAE,UAAU,EAAE;AAE1B,YAAE,MAAM;AAAA,QACZ;AAGI,YAAE,MAAM;AAAA,MAChB;AAEA,eAAS,2CAA4C,OAAO;AAExD,YAAI,UAAc,MAAM,QACpB,UAAc,MAAM,QACpB,cAAc,MAAM,SAASL,QAAO,qBACpC,SAAc,cAAc,MAAM,KAClC,SAAc,SAAS,MAAM,MAAM,OAAO,EAAE;AAEhD,YAAI,SAAS;AACT,cAAI,aAAa,YAAY,GACzB,aAAa,QAAQ;AAEzB,mBAAS,IAAI,GAAG,IAAI,YAAY,EAAE,GAAG;AACjC,gBAAI,UAAU,SAAS,QAAQ,CAAC,GAAG,OAAO,EAAE;AAE5C,qBAAS,IAAI,IAAI,KAAK,QAAQ,OAAO,IAAK,SAAS;AAAA,UACvD;AAEA,YAAE,SAAS;AAAA,QACf;AAEA,YAAI,SAAS;AACT,cAAI,WAAW,SAAS,SAAS,OAAO,EAAE;AAE1C,mBAAS,KAAK,QAAQ,OAAO,EAAE,QAAQ;AACvC,mBAAS,KAAK,QAAQ,MAAM,WAAW,GAAG;AAAA,QAC9C;AAEA,iBAAS,KAAK,QAAQ,MAAM;AAC5B,kBAAU,cAAc,MAAM;AAE9B,UAAE,MAAM;AAAA,MACZ;AAIA,UAAI,aAAa;AAAA,QACb,oBAAoB,SAAS,2BAA4B,OAAOK,WAAU;AACtE,cAAI,YAAkB,MAAM,aACxB,gBAAkB,UAAU,QAC5B,eAAkB,gBAAgB,GAClC,eAAkB,WAAW,WAAWA,UAAS,YACjD,kBAAkB,OAAO,GAAGA,UAAS,WAAW,YAAY;AAEhE,cAAI;AACA,cAAE,MAAM;AAEZ,mBAAS,IAAI,GAAG,IAAI,eAAe,KAAK;AACpC,gBAAI,SAAS,UAAU,CAAC;AAExB,oBAAQ,OAAO,IAAI,EAAE,QAAQ,eAAe;AAE5C,gBAAI,MAAM;AACN,gBAAE,MAAM,MAAM,EAAE;AAAA,UACxB;AAEA,cAAI;AACA,cAAE,MAAM;AAAA,QAChB;AAAA,QAEA,sBAAsB,SAAS,6BAA8B,OAAOA,WAAU;AAC1E,cAAI,QAAe,MAAM,MACrB,SAAe,MAAM,OACrB,eAAe,WAAW,aAAaA,UAAS,YAChD,UAAeA,UAAS,WAAW;AAEvC,cAAI;AACA,cAAE,MAAM;AAEZ,kBAAQ,MAAM,IAAI,EAAE,OAAO,OAAO,IAAI,OAAO,CAAC;AAC9C,YAAE,MAAM,EAAE,WAAW,MAAM,WAAW,EAAE;AACxC,kBAAQ,OAAO,IAAI,EAAE,QAAQ,OAAO,IAAI,OAAO,CAAC;AAEhD,cAAI;AACA,cAAE,MAAM;AAAA,QAChB;AAAA,QAEA,mBAAmB,SAAS,0BAA2B,OAAO;AAC1D,cAAI,cAAc;AAAA,YACd,MAAU,MAAM;AAAA,YAChB,OAAU,MAAM;AAAA,YAChB,UAAU;AAAA,UACd;AAEA,kBAAQ,qBAAqB,aAAa,OAAO,EAAE;AAAA,QACvD;AAAA,QAEA,yBAAyB,SAAS,gCAAiC,OAAOA,WAAU;AAChF,cAAI,eAAe,WAAW,gBAAgBA,UAAS;AAEvD,cAAI;AACA,cAAE,MAAM;AAEZ,cAAI,MAAM;AACN,cAAE,MAAM;AAEZ,+BAAqB,KAAK;AAE1B,cAAI;AACA,cAAE,MAAM;AAAA,QAChB;AAAA,QAEA,iBAAiB,SAAS,wBAAyB,OAAOA,WAAU;AAChE,cAAI,eAAe,WAAW,QAAQA,UAAS;AAE/C,cAAI;AACA,cAAE,MAAM;AAEZ,YAAE,MAAM,MAAM,MAAM,YAAY;AAEhC,kBAAQ,MAAM,SAAS,IAAI,EAAE,MAAM,UAAU,OAAO,GAAG;AAEvD,cAAI;AACA,cAAE,MAAM;AAAA,QAChB;AAAA,QAEA,uBAAuB,SAAS,8BAA+B,OAAOA,WAAU;AAC5E,cAAI,QAAoB,MAAM,MAC1B,UAAoB,MAAM,YAC1B,OAAoB,MAAM,WAC1B,eAAoB,WAAW,cAAcA,UAAS,YACtD,UAAoBA,UAAS,WAAW,cACxC,kBAAoB,OAAO,GAAG,OAAO,GACrC,oBAAoB,OAAO,GAAG,OAAO;AAEzC,cAAI;AACA,cAAE,MAAM;AAEZ,kBAAQ,MAAM,IAAI,EAAE,OAAO,eAAe;AAC1C,YAAE,MAAM,EAAE,WAAW,MAAM,EAAE;AAC7B,kBAAQ,QAAQ,IAAI,EAAE,SAAS,iBAAiB;AAChD,YAAE,MAAM,EAAE,WAAW,MAAM,EAAE;AAC7B,kBAAQ,KAAK,IAAI,EAAE,MAAM,iBAAiB;AAE1C,cAAI;AACA,cAAE,MAAM;AAAA,QAChB;AAAA,QAEA,mBAAmB;AAAA,QAEnB,kBAAkB;AAAA,QAElB,gBAAgB,SAAS,uBAAwB,OAAOA,WAAU;AAC9D,cAAI,UAAe,MAAM,QACrB,QAAe,MAAM,WAAW,GAChC,WAAe,MAAM,QACrB,aAAe,WAAW,GAC1B,eAAe,CAACA,UAAS,aAAa,WAAW,OAAOA,UAAS;AAErE,cAAI;AACA,cAAE,MAAM;AAEZ,kBAAQ,QAAQ,IAAI,EAAE,SAAS,OAAO,EAAE;AAExC,cAAI,MAAM;AACN,cAAE,MAAM;AAEZ,YAAE,MAAM;AAER,mBAAS,IAAI,GAAG,IAAI,UAAU,EAAE,GAAG;AAC/B,gBAAI,OAAO,MAAM,CAAC;AAElB,oBAAQ,KAAK,IAAI,EAAE,MAAM,OAAO,EAAE;AAElC,gBAAI,MAAM;AACN,gBAAE,MAAM,MAAM,EAAE;AAAA,UACxB;AAEA,YAAE,MAAM;AAER,cAAI;AACA,cAAE,MAAM;AAAA,QAChB;AAAA,QAEA,eAAe,SAAS,sBAAuB,OAAOA,WAAU;AAC5D,cAAI,QAAe,MAAM,WAAW,GAChC,eAAe,WAAW,MAAMA,UAAS,YACzC,WAAe,MAAM,QACrB,aAAe,WAAW,GAC1B,WAAe,CAACA,UAAS,2BAA2BP,gBAAe,WAAW,GAC9E,WAAe,SAAS,MAAM,QAAQ,OAAO,GAAG,CAAC,QAAQ,CAAC;AAE9D,cAAI;AACA,cAAE,MAAM;AAEZ,YAAE,MAAM,KAAK,OAAO,QAAQ;AAE5B,cAAI,UAAU;AACV,cAAE,MAAM;AAER,qBAAS,IAAI,GAAG,IAAI,UAAU,EAAE,GAAG;AAC/B,kBAAI,OAAO,MAAM,CAAC;AAElB,sBAAQ,KAAK,IAAI,EAAE,MAAM,OAAO,EAAE;AAElC,kBAAI,MAAM;AACN,kBAAE,MAAM,MAAM,EAAE;AAAA,YACxB;AAEA,cAAE,MAAM;AAAA,UACZ;AAEA,cAAI;AACA,cAAE,MAAM;AAAA,QAChB;AAAA,QAEA,kBAAkB,SAAS,yBAA0B,OAAOO,WAAU;AAClE,cAAI,OAAe,MAAM,QACrB,QAAe,MAAM,UACrB,eAAe,WAAW,SAASA,UAAS,YAC5C,WAAe,CAAC,MAAM,YAAY,KAAK,SAASL,QAAO,WAAW,OAAO,KAAK,UAAU;AAE5F,cAAI;AACA,cAAE,MAAM;AAEZ,cAAI,UAAU;AASV,gBAAI,QAAY,SAAS,MAAM,OAAO,IAAIK,UAAS,SAAS,CAAC,GACzD,YAAY,0BAA0B,KAAK,KAAK,KAAK,CAAC,yBAAyB,KAAK,KAAK;AAE7F,cAAE,MAAM,YAAa,QAAQ,MAAO;AAAA,UACxC;AAGI,oBAAQ,KAAK,IAAI,EAAE,MAAM,OAAO,IAAIA,UAAS,SAAS,CAAC;AAE3D,cAAI,MAAM,UAAU;AAChB,gBAAI,MAAM;AACN,gBAAE,MAAM;AAEZ,cAAE,MAAM;AACR,oBAAQ,MAAM,IAAI,EAAE,OAAO,OAAO,IAAIA,UAAS,SAAS,CAAC;AACzD,cAAE,MAAM;AAAA,UACZ;AAGI,cAAE,OAAO,MAAM,WAAW,OAAO,OAAO,MAAM;AAElD,cAAI;AACA,cAAE,MAAM;AAAA,QAChB;AAAA,QAEA,iBAAiB,SAAS,wBAAyB,OAAOA,WAAU;AAChE,cAAI,eAAe,WAAW,QAAQA,UAAS,YAC3C,KAAe,MAAM,UACrB,QAAe,SAAS,MAAM,UAAU,OAAO,EAAE;AAErD,cAAI;AACA,cAAE,MAAM;AAIZ,cAAI,EAAE,aAAa,MAAM,GAAG,SAAS;AACjC,cAAE,MAAM,KAAK,IAAI,KAAK;AAAA,eAErB;AACD,cAAE,MAAM;AAIR,gBAAI,SAAU,GAAG,WAAW,GAAG,SAAS,CAAC,GACrC,UAAU,MAAM,WAAW,CAAC;AAGhC,gBAAI,WAAW,YAAY,WAAW,MAAQ,WAAW,OACrD,eAAe,MAAM,KAAK,eAAe,OAAO,GAAG;AACnD,gBAAE,MAAM,EAAE;AAAA,YACd;AAEA,cAAE,MAAM;AAAA,UACZ;AAEA,cAAI;AACA,cAAE,MAAM;AAAA,QAChB;AAAA,QAEA,iBAAiB,SAAS,wBAAyB,OAAOA,WAAU;AAChE,cAAI,OAAe,MAAM,UACrB,KAAe,MAAM,WAAW,WAAW,SAC3C,eAAe,WAAW,QAAQA,UAAS;AAE/C,cAAI;AACA,cAAE,MAAM;AAEZ,cAAI,MAAM;AACN,gBAAI,QAAQ,SAAS,MAAM,OAAO,EAAE;AAEpC,iBAAK,KAAK,IAAI,KAAK;AAAA,UACvB;AAEA,YAAE,MAAM;AAER,cAAI;AACA,cAAE,MAAM;AAAA,QAChB;AAAA,QAEA,kBAAkB,SAAS,yBAA0B,OAAOA,WAAU;AAClE,cAAI,OAAe,MAAM,UACrB,MAAe,MAAM,UACrB,SAAe,MAAM,QACrB,aAAe,SAAS,WAAW,QAAQ,WAAW,SACtD,eAAe,aAAaA,UAAS;AAEzC,cAAI;AACA,cAAE,MAAM;AAEZ,cAAI,QAAQ;AACR,cAAE,MAAM;AACR,oBAAQ,KAAK,IAAI,EAAE,MAAM,OAAO,EAAE;AAAA,UAEtC,OAEK;AACD,oBAAQ,KAAK,IAAI,EAAE,MAAM,OAAO,EAAE;AAClC,cAAE,MAAM;AAAA,UACZ;AAEA,cAAI;AACA,cAAE,MAAM;AAAA,QAChB;AAAA,QAEA,oBAAoB,SAAS,2BAA4B,OAAO;AAC5D,cAAI,cAAc,CAAC,CAAC,MAAM;AAE1B,cAAI,MAAM;AACN,cAAE,MAAM;AAEZ,YAAE,MAAM,cAAc,cAAc;AAEpC,cAAI,MAAM,IAAI;AACV,cAAE,MAAM,cAAc,EAAE,WAAW,EAAE;AACrC,cAAE,MAAM,MAAM,GAAG;AAAA,UACrB;AAEI,cAAE,MAAM,EAAE;AAEd,+BAAqB,KAAK;AAAA,QAC9B;AAAA,QAEA,sBAAsB,SAAS,+BAAgC;AAC3D,YAAE,MAAM;AAAA,QACZ;AAAA,QAEA,cAAc;AAAA,QAEd,iBAAiB;AAAA,QAEjB,iBAAiB,SAAS,wBAAyB,OAAO;AACtD,cAAI,MAAS,MAAM,IACf,SAAS,MAAM,YACf,QAAS,MAAM,MACf,SAAS;AAEb,cAAI,KAAK;AACL,gBAAI,OAAO,SAAS,KAAK,OAAO,EAAE;AAElC,qBAAS,KAAK,QAAQ,IAAI;AAAA,UAC9B;AAEA,cAAI,QAAQ;AACR,gBAAI,UAAU,SAAS,QAAQ,OAAO,EAAE;AAExC,sBAAU,KAAK,WAAW,OAAO;AACjC,qBAAU,KAAK,QAAQ,OAAO;AAAA,UAClC;AAEA,YAAE,MAAM,SAAS,EAAE;AACnB,kBAAQ,MAAM,IAAI,EAAE,OAAO,OAAO,EAAE;AAAA,QACxC;AAAA,QAEA,cAAc,SAAS,qBAAsB,OAAOA,WAAU;AAC1D,cAAI,QAAe,MAAM,MACrB,YAAe,MAAM,UACrB,eAAe,WAAW,SAASA,UAAS;AAEhD,cAAI;AACA,cAAE,MAAM;AAEZ,YAAE,OAAO,OAAO,UAAU,WAAW,QAAQ,MAAM,QAC/C,OAAO,OAAO,cAAc,WAAW,YAAY,UAAU;AAEjE,cAAI;AACA,cAAE,MAAM;AAAA,QAChB;AAAA,QAEA,kBAAkB,SAAS,yBAA0B,OAAO;AACxD,cAAI,SAAS,MAAM,QAAQ,IAAI,WAAW,EAAE,WAAW,IACnD,QAAS,SAAS,MAAM,KAAK,OAAO,EAAE;AAE1C,cAAI,MAAM;AACN,oBAAQ,MAAM,QAAQ;AAE1B,cAAI,MAAM,SAAS,SAAS,MAAM,SAAS,OAAO;AAC9C,oBAAQ,KAAK,MAAM,MAAM,KAAK;AAC9B,cAAE,MAAM,KAAK,QAAQ,KAAK;AAAA,UAC9B,OAEK;AACD,gBAAI,MAAM,MAAM;AACZ,gBAAE,MAAM,SAAS,MAAM;AAAA,qBAClB,MAAM,MAAM;AACjB,gBAAE,MAAM,SAAS,WAAW;AAAA;AAE5B,gBAAE,MAAM,KAAK,QAAQ,KAAK;AAAA,UAClC;AAEA,+BAAqB,MAAM,KAAK;AAAA,QACpC;AAAA,QAEA,UAAU,SAAS,iBAAkB,OAAO;AACxC,cAAI,OAAQ,MAAM,OACd,QAAQ,MAAM,MACd,QAAQ,SAAS,MAAM,KAAK,OAAO,EAAE;AAEzC,cAAI,MAAM;AACN,oBAAQ,MAAM,QAAQ;AAE1B,cAAI,UAAU,SAAS,UAAU,OAAO;AACpC,cAAE,MAAM,QAAQ,EAAE,QAAQ;AAC1B,iCAAqB,IAAI;AAAA,UAC7B,OAEK;AACD,gBAAI,MAAM;AACN,gBAAE,MAAM;AAAA,qBAEH,MAAM,QAAQ;AACnB,kBAAI,KAAK;AACL,wBAAQ,MAAM;AAAA,uBACT,KAAK;AACV,wBAAQ,WAAW;AAEvB,gBAAE,MAAM;AACR,mCAAqB,IAAI;AAAA,YAC7B,OAEK;AACD,gBAAE,MAAM,QAAQ,MAAM,EAAE;AACxB,sBAAQ,KAAK,IAAI,EAAE,MAAM,OAAO,EAAE;AAAA,YACtC;AAAA,UACJ;AAAA,QACJ;AAAA,QAEA,oBAAoB,SAAS,2BAA4B,OAAO;AAC5D,cAAI,OAAS,MAAM,OACf,SAAS,MAAM,QAAQ,IAAI,WAAW,EAAE,WAAW,IACnD,QAAS,SAAS,MAAM,KAAK,OAAO,EAAE;AAE1C,cAAI,MAAM;AACN,oBAAQ,MAAM,QAAQ;AAE1B,YAAE,MAAM,SAAS,QAAQ,MAAM,EAAE;AAEjC,kBAAQ,KAAK,IAAI,EAAE,MAAM,OAAO,EAAE;AAElC,cAAI,cAAc,CAAC,SAAS;AACxB,cAAE,MAAM;AAAA,QAChB;AAAA,QAEA,kBAAkB,SAAS,yBAA0B,OAAO;AACxD,cAAI,SAAY,MAAM,YAClB,YAAY,OAAO;AAEvB,cAAI,WAAW;AACX,gBAAI,cAAc,YAAY,GAC1B,aAAc,YAAY;AAE9B,cAAE,MAAM;AAER,qBAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAChC,kBAAI,QAAW,OAAO,CAAC,GACnB,WAAW,MAAM,QAAQL,QAAO;AAEpC,gBAAE,MAAM,EAAE,UAAU,EAAE;AACtB,sBAAQ,QAAQ,EAAE,OAAO,OAAO,EAAE;AAElC,kBAAI,MAAM;AACN,kBAAE,MAAM;AAAA,YAChB;AAEA,cAAE,SAAS;AACX,cAAE,MAAM,EAAE,UAAU,EAAE,SAAS;AAAA,UACnC;AAGI,cAAE,MAAM;AAAA,QAChB;AAAA,QAEA,eAAe,SAAS,sBAAuB,OAAO;AAClD,cAAI,SAAY,MAAM,YAClB,YAAY,OAAO;AAEvB,cAAI,WAAW;AACX,gBAAI,cAAc,YAAY,GAC1B,YAAc;AAElB,gBAAI,cAAc;AACd,0BAAY,OAAO,CAAC,EAAE,MAAM,SAASA,QAAO;AAAA,iBAE3C;AACD,uBAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAChC,oBAAI,CAAC,OAAO,CAAC,EAAE,WAAW;AACtB,8BAAY;AACZ;AAAA,gBACJ;AAAA,cACJ;AAAA,YACJ;AAEA,cAAE,MAAM,YAAa,MAAM,EAAE,UAAW;AAExC,gBAAI,aAAa,YAAY,GACzB,aAAa,OAAO,YAAY,EAAE,UAAU,EAAE;AAElD,qBAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAChC,kBAAI,QAAQ,OAAO,CAAC;AAEpB,kBAAI;AACA,kBAAE,MAAM,EAAE;AAEd,sBAAQ,MAAM,IAAI,EAAE,OAAO,OAAO,EAAE;AAEpC,kBAAI,MAAM;AACN,kBAAE,MAAM;AAAA,YAChB;AAEA,cAAE,SAAS;AACX,cAAE,MAAM,YAAa,EAAE,UAAU,EAAE,SAAS,MAAO;AAAA,UACvD;AAEI,cAAE,MAAM;AAAA,QAChB;AAAA,QAEA,gBAAgB,SAAS,yBAA0B;AAC/C,YAAE,MAAM;AAAA,QACZ;AAAA,QAEA,YAAY,SAAS,mBAAoB,OAAO,YAAY,MAAM;AAC9D,YAAE,MAAM,MAAM;AAAA,QAClB;AAAA,QAEA,mBAAmB,SAAS,0BAA2B,OAAO,YAAY,MAAM;AAC5E,YAAE,MAAM,MAAM,MAAM;AAAA,QACxB;AAAA,QAEA,kBAAkB,SAAS,yBAA0B,OAAOK,WAAU;AAClE,cAAI,eAAe,WAAW,OAAOA,UAAS;AAC9C,cAAI,UAAe,MAAM;AAEzB,cAAI;AACA,cAAE,MAAM;AAEZ,YAAE,MAAM;AAER,kBAAQ,QAAQ,IAAI,EAAE,SAAS,OAAO,EAAE;AAExC,YAAE,MAAM;AAER,cAAI;AACA,cAAE,MAAM;AAAA,QAChB;AAAA,QAEA,iBAAiB,SAAS,wBAAyB,OAAO;AACtD,YAAE,MAAM,MAAM,SAAS;AAEvB,cAAI,MAAM;AACN,cAAE,MAAM,EAAE,QAAQ,OAAO,EAAE,QAAQ,MAAM,MAAM;AAAA,QACvD;AAAA,QAEA,iBAAiB,SAAS,gCAAiC,OAAO;AAC9D,YAAE,MAAM,MAAM,MAAM;AAEpB,cAAI,MAAM;AACN,cAAE,MAAM,EAAE,QAAQ,OAAO,EAAE,QAAQ,MAAM,SAAS;AAAA,QAC1D;AAAA,QAEA,iBAAiB,SAAS,wBAAyB,OAAOA,WAAU;AAChE,cAAI,eAAe,WAAW,mBAAmBA,UAAS;AAC1D,cAAI,cAAe,MAAM;AAEzB,UAAAA,YAAWA,aAAY,CAAC;AAExB,cAAI,cAAe;AAAA,YACf,YAAY,WAAW;AAAA,YACvB,SAAYA,UAAS;AAAA,YACrB,WAAYA,UAAS;AAAA,YAErB,yBAAyBA,UAAS;AAAA,UACtC;AAEA,cAAI,cAAc;AACd,wBAAY,YAAY;AACxB,cAAE,MAAM;AAAA,UACZ;AAEA,kBAAQ,YAAY,IAAI,EAAE,aAAa,WAAW;AAElD,cAAI;AACA,cAAE,MAAM;AAAA,QAChB;AAAA,QAEA,SAAS,SAAS,gBAAiB,OAAO;AACtC,cAAI,MAAM,OAAO,MAAM,QAAQ;AAC3B,cAAE,MAAM,MAAM;AAAA,mBAET,MAAM,UAAU;AACrB,cAAE,MAAM;AAAA,eAEP;AACD,gBAAI,YAAY,OAAO,MAAM;AAE7B,gBAAI,cAAc;AACd,gBAAE,MAAM,aAAa,MAAM,KAAK;AAAA,qBAE3B,cAAc;AACnB,gBAAE,MAAM,eAAe,MAAM,KAAK;AAAA,qBAE7B,cAAc;AACnB,gBAAE,MAAM,MAAM,QAAQ,SAAS;AAAA;AAG/B,gBAAE,MAAM,eAAe,MAAM,KAAK;AAAA,UAC1C;AAAA,QACJ;AAAA,QAEA,qBAAqB;AAAA,QAErB,yBAAyB;AAAA,QAEzB,oBAAoB,SAAS,2BAA4B,OAAO;AAC5D,cAAI,QAAU,MAAM,MAChB,SAAU,QACV,UAAU,SAAS,MAAM,OAAO,OAAO,EAAE;AAE7C,cAAI,MAAM,SAASL,QAAO;AACtB,qBAAS,MAAM,OAAO,EAAE,QAAQ,SAAS,MAAM,aAAa,CAAC,GAAG,OAAO,EAAE;AAAA;AAGzE,qBAAS,SAAS,OAAO,OAAO,GAAG;AAEvC,mBAAS,KAAK,QAAQ,MAAM,KAAK,OAAO,IAAI;AAE5C,YAAE,MAAM,QAAQ,EAAE,WAAW,MAAM,KAAK,QAAQ,OAAO,IAAI;AAAA,QAC/D;AAAA,QAEA,aAAa,SAAS,oBAAqB,OAAO;AAC9C,YAAE,MAAM,QAAQ,MAAM,SAAS;AAAA,QACnC;AAAA,QAEA,eAAe,SAAS,sBAAuB,OAAO;AAClD,cAAI,OAAO,MAAM;AAEjB,YAAE,MAAM;AACR,kBAAQ,KAAK,IAAI,EAAE,MAAM,OAAO,EAAE;AAAA,QACtC;AAAA,QAEA,0BAA0B,SAAS,iCAAkC,OAAOK,WAAU;AAClF,cAAI,OAAe,MAAM,KACrB,SAAe,MAAM,OACrB,eAAe,WAAW,iBAAiBA,UAAS;AAExD,cAAI;AACA,cAAE,MAAM;AAEZ,kBAAQ,KAAK,IAAI,EAAE,MAAM,OAAO,IAAIA,UAAS,SAAS,CAAC;AACvD,kBAAQ,OAAO,IAAI,EAAE,QAAQ,OAAO,GAAG;AAEvC,cAAI;AACA,cAAE,MAAM;AAAA,QAChB;AAAA,QAEA,iBAAiB,SAAS,wBAAyB,OAAO;AAGtD,YAAE,MAAM,MAAM,MAAM;AAAA,QACxB;AAAA,QAEA,iBAAiB,SAAS,wBAAyB,OAAO;AACtD,cAAI,UAAe,MAAM,QACrB,cAAe,MAAM,aACrB,aAAe,QAAQ,QACvB,eAAe,aAAa;AAEhC,YAAE,MAAM;AAER,mBAAS,IAAI,GAAG,IAAI,YAAY,EAAE,GAAG;AACjC,gBAAI,SAAS,QAAQ,CAAC;AAEtB,oBAAQ,OAAO,IAAI,EAAE,QAAQ,OAAO,GAAG;AAEvC,gBAAI,MAAM,cAAc;AACpB,kBAAI,aAAa,YAAY,CAAC;AAE9B,gBAAE,MAAM,OAAO,EAAE;AACjB,sBAAQ,WAAW,IAAI,EAAE,YAAY,OAAO,EAAE;AAC9C,gBAAE,MAAM,EAAE,WAAW;AAAA,YACzB;AAAA,UACJ;AAEA,YAAE,MAAM;AAAA,QACZ;AAAA,QAEA,OAAO,SAAS,gBAAiB;AAC7B,YAAE,MAAM;AAAA,QACZ;AAAA,MACJ;AASA,UAAI,kCAAkC;AAItC,eAAS,6BAA8B,QAAQ,YAAY,UAAU;AACjE,YAAI,eAAiB,SAAS,QAC1B,iBAAiB,eAAe;AAEpC,iBAAS,IAAI,GAAG,IAAI,cAAc,EAAE,GAAG;AACnC,cAAI,YAAY,SAAS,SAAS,CAAC,GAAG,OAAO,EAAE;AAE/C,mBAAS,KAAK,QAAQ,SAAS;AAE/B,cAAI,cAAc,MAAM;AACpB,sBAAU,eAAe,SAAS,CAAC,EAAE,IAAI;AAAA,QACjD;AAEA,eAAO;AAAA,MACX;AAEA,eAAS,6BAA8B,KAAK,OAAOA,WAAU;AACzD,YAAI,QAAwB,MAAM,MAC9B,QAAwB,MAAM,MAC9B,wBAAwB,CAAC,cAAcA,UAAS,mBAChD,cAAwB,YAAY,GACpC,WAAwB,MAAM,QAAQ,WAAW,IACjD,SAAwB,QAAQ,WAAW,EAAE,WAAW;AAE5D,YAAI,MAAM,SAASL,QAAO,qBAAqB;AAC3C,cAAI,cAAc,YAAY;AAE9B,oBAAU,MAAM,OAAO,EAAE,QAAQ,SAAS,MAAM,aAAa,CAAC,GAAG,OAAO,EAAE;AAC1E,YAAE,SAAS;AAAA,QACf;AAGI,oBAAU,SAAS,OAAO,OAAO,GAAG;AAExC,iBAAS,KAAK,QAAQ,GAAG;AAEzB,YAAI,UAAU,SAAS,MAAM,OAAO,OAAO,EAAE;AAE7C,iBAAS,KAAK,QAAQ,OAAO,IAAI;AAEjC,UAAE,SAAS;AAEX,UAAE,MAAM,SAAS,eAAe,KAAK;AACrC,gBAAQ,MAAM,IAAI,EAAE,OAAO,OAAO,GAAG,qBAAqB,CAAC;AAAA,MAC/D;AAIA,UAAI,aAAa;AAAA,QACb,gBAAgB,SAAS,uBAAwB,OAAOK,WAAU;AAC9D,cAAI,QAAa,MAAM,MACnB,MAAa,MAAM,QACnB,UAAa,MAAM,GACnB,aAAa,YAAY;AAE7B,YAAE,MAAM,MAAM,EAAE;AAEhB,mBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC1B,gBAAI,QAAQ,MAAM,CAAC;AAEnB,cAAE,MAAM,EAAE;AACV,oBAAQ,MAAM,IAAI,EAAE,OAAO,OAAO,GAAGA,UAAS,cAAc,MAAM,OAAO,CAAC;AAC1E,cAAE,MAAM,EAAE;AAAA,UACd;AAEA,YAAE,SAAS;AACX,YAAE,MAAM,EAAE,SAAS;AAAA,QACvB;AAAA,QAEA,gBAAgB,SAAS,uBAAwB,OAAOA,WAAU;AAC9D,cAAI,MAAM;AACN,cAAE,MAAM,WAAW,MAAM,MAAM;AAAA;AAG/B,cAAE,MAAM;AAEZ,cAAI,cAAc,CAACA,UAAS;AACxB,cAAE,MAAM;AAAA,QAChB;AAAA,QAEA,mBAAmB,SAAS,0BAA2B,OAAOA,WAAU;AACpE,cAAI,MAAM;AACN,cAAE,MAAM,cAAc,MAAM,MAAM;AAAA;AAGlC,cAAE,MAAM;AAEZ,cAAI,cAAc,CAACA,UAAS;AACxB,cAAE,MAAM;AAAA,QAChB;AAAA,QAEA,WAAW,SAAS,kBAAmB,OAAO;AAC1C,cAAI,QAAc,MAAM,MACpB,YAAc,MAAM,QACpB,cAAc,YAAY,GAC1B,aAAc,YAAY;AAE9B,YAAE,MAAM,MAAM,EAAE;AAEhB,mBAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAChC,gBAAI,QAAW,MAAM,CAAC,GAClB,WAAW,MAAM,QAAQL,QAAO;AAEpC,cAAE,MAAM,EAAE;AACV,oBAAQ,QAAQ,EAAE,OAAO,OAAO,EAAE;AAElC,gBAAI,MAAM;AACN,gBAAE,MAAM,EAAE;AAAA,UAClB;AAEA,YAAE,SAAS;AACX,YAAE,MAAM,EAAE,UAAU,EAAE,SAAS;AAAA,QACnC;AAAA,QAEA,kBAAkB,SAAS,yBAA0B,OAAO;AACxD,cAAI,QAAS,MAAM,MACf,SAAS,MAAM,YACf,KAAS,WAAW,MAAM,GAAG;AAEjC,cAAI,QAAQ;AACR,gBAAI,UAAU,SAAS,QAAQ,OAAO,EAAE;AAExC,kBAAM,EAAE,QAAQ,KAAK,WAAW,OAAO;AAAA,UAC3C;AAEA,YAAE,MAAM,KAAK,EAAE;AACf,kBAAQ,MAAM,IAAI,EAAE,OAAO,OAAO,EAAE;AAAA,QACxC;AAAA,QAEA,oBAAoB,SAAS,2BAA4B,OAAOK,WAAU;AACtE,cAAI,MAAM,OAAO,MAAM;AACnB,cAAE,MAAM,MAAM;AAAA;AAGd,cAAE,MAAM,gBAAgB,MAAM,SAAS;AAE3C,cAAI,cAAc,CAACA,UAAS;AACxB,cAAE,MAAM;AAAA,QAChB;AAAA,QAEA,kBAAkB,SAAS,yBAA0B,OAAOA,WAAU;AAClE,cAAI,QAAS,MAAM,MACf,QAAS,MAAM,MACf,SAAS,eAAe,KAAK,IACpB,SAAS,OAAO,OAAO,EAAE,IACzB,eAAe,KAAK;AAGjC,cAAI,SAAS,KAAK,MAAM,MAAM;AAE9B,YAAE,MAAM,KAAK,QAAQ,UAAU,EAAE,WAAW,GAAG;AAC/C,kBAAQ,MAAM,IAAI,EAAE,OAAO,OAAO,EAAE;AACpC,YAAE,MAAM;AAER,cAAI,cAAc,CAACA,UAAS;AACxB,cAAE,MAAM;AAAA,QAChB;AAAA,QAEA,aAAa,SAAS,oBAAqB,OAAO;AAC9C,cAAI,SAAa,MAAM,OACnB,SAAa,MAAM,OACnB,QAAa,MAAM,MACnB,aAAa,YAAY;AAE7B,YAAE,MAAM,UAAU,EAAE;AAEpB,cAAI,QAAQ;AACT,cAAE,MAAM;AACR,oBAAQ,OAAO,IAAI,EAAE,QAAQ,OAAO,EAAE;AAAA,UACzC;AAEA,cAAI,QAAQ;AACR,cAAE,MAAM;AACR,oBAAQ,OAAO,IAAI,EAAE,QAAQ,OAAO,EAAE;AAAA,UAC1C;AAEA,YAAE,SAAS;AACX,cAAI,QAAQ;AACT,cAAE,MAAM;AAAA,UACX;AAEA,YAAE,MAAM,eAAe,KAAK;AAC5B,kBAAQ,MAAM,IAAI,EAAE,OAAO,OAAO,EAAE;AAAA,QACxC;AAAA,QAEA,mBAAmB,SAAS,0BAA2B,OAAOA,WAAU;AACpE,YAAE,MAAM;AAER,cAAI,cAAc,CAACA,UAAS;AACxB,cAAE,MAAM;AAAA,QAChB;AAAA,QAEA,gBAAgB,SAAS,yBAA0B;AAC/C,YAAE,MAAM;AAAA,QACZ;AAAA,QAEA,sBAAsB,SAAU,OAAOA,WAAU;AAC7C,qBAAW,kBAAkB,OAAOA,WAAU,IAAI;AAAA,QACtD;AAAA,QAEA,mBAAmB,SAAS,0BAA2B,OAAOA,WAAU,WAAW;AAC/E,cAAI,SAAgB,MAAM,YACtB,QAAgB,MAAM,aACtB,gBAAgB,cAAc,CAACA,UAAS;AAG5C,cAAI,MAAM,SAAS,GAAG;AAClB,gBAAI,SAAS,SAAS,OAAO,OAAO,EAAE;AAEtC,cAAE,MAAM,KAAK,kBAAkB,MAAM;AAErC,gBAAI;AACA,gBAAE,MAAM;AAAA,UAChB,WAKS,UAAU,WAAW;AAC1B,gBAAI,SAAS;AAEb,gBAAI;AACA,wBAAU,EAAE,WAAW;AAAA,qBAElB,OAAO,WAAW;AACvB,wBAAU,EAAE,WAAW,MAAM,EAAE,WAAW;AAAA,qBAErC,OAAO,CAAC,EAAE,SAASL,QAAO,sBAAsB;AACrD,kBAAI,SAAS,SAAS,OAAO,CAAC,GAAG,OAAO,EAAE;AAE1C,uBAAS,KAAK,QAAQ,MAAM;AAAA,YAChC,OAEK;AACD,kBAAI,aAAc,YAAY,GAC1B,YAAc,OAAO,QACrB,cAAc,YAAY;AAE9B,wBAAU,EAAE,WAAW;AAEvB,uBAAS,IAAI,GAAG,IAAI,WAAW,EAAE,GAAG;AAChC,0BAAU,EAAE,UAAU,EAAE;AACxB,0BAAU,SAAS,OAAO,CAAC,GAAG,OAAO,EAAE;AAEvC,oBAAI,MAAM;AACN,4BAAU;AAAA,cAClB;AAEA,gBAAE,SAAS;AACX,wBAAU,EAAE,UAAU,EAAE,SAAS;AAAA,YACrC;AAEA,gBAAI,MAAM,QAAQ;AACd,gBAAE,MAAM,KAAK,QAAQ,SAAS,EAAE,QAAQ;AACxC,sBAAQ,QAAQ,MAAM,MAAM;AAAA,YAChC;AAGI,gBAAE,MAAM;AAEZ,gBAAI;AACA,gBAAE,MAAM;AAAA,UAChB,WAIS,OAAO;AACZ,gBAAI,SAAS,SAAS,OAAO,OAAO,GAAG,CAAC,aAAa,CAAC;AAEtD,cAAE,MAAM,KAAK,UAAU,MAAM;AAAA,UACjC;AAAA,QACJ;AAAA,QAEA,wBAAwB,SAAU,OAAOK,WAAU;AAC/C,qBAAW,kBAAkB,OAAOA,SAAQ;AAAA,QAChD;AAAA,QAEA,qBAAqB,SAAS,4BAA6B,OAAOA,WAAU;AACxE,cAAI,SAAe,SAAS,MAAM,YAAY,OAAO,EAAE,GACnD,eAAe,gCAAgC,KAAK,MAAM,KAC1C,aACAA,UAAS,oBACT,MAAM,WAAW,SAASL,QAAO,WACjC,OAAO,MAAM,WAAW,UAAU;AAItD,cAAI;AACA,cAAE,MAAM,MAAM,SAAS;AAAA;AAGvB,cAAE,MAAM;AAEZ,cAAI,cAAc,CAACK,UAAS;AACxB,cAAE,MAAM;AAAA,QAChB;AAAA,QAEA,mBAAmB,SAAS,0BAA2B,OAAOA,WAAU;AACpE,cAAI,SAAY,MAAM,YAClB,SAAY,UACZ,YAAY,OAAO;AAKvB,cAAI,WAAW;AACX,gBAAI,aAAgB,CAAC,CAAC,OAAO,CAAC,EAAE,SAAS,GACrC,gBAAgB,aAAa,IAAI,GACjC,cAAgB,YAAY;AAGhC,gBAAI;AACA,uBAAS,KAAK,QAAQ,OAAO,CAAC,EAAE,GAAG,IAAI;AAG3C,gBAAI,gBAAgB,WAAW;AAC3B,kBAAI;AACA,0BAAU;AAEd,wBAAU,EAAE,WAAW;AAGvB,kBAAI,kBAAkB;AAClB,0BAAU,EAAE,WAAW,SAAS,OAAO,aAAa,GAAG,OAAO,EAAE,IAAI,EAAE;AAAA,mBAErE;AACD,oBAAI,aAAa,YAAY;AAM7B,yBAAS,IAAI,eAAe,IAAI,WAAW,KAAK;AAC5C,4BAAU,EAAE,UAAU,EAAE,SAAS,SAAS,OAAO,CAAC,GAAG,OAAO,EAAE;AAE9D,sBAAI,MAAM;AACN,8BAAU;AAAA,gBAClB;AAEA,kBAAE,SAAS;AACX,0BAAU,EAAE,UAAU,EAAE;AAAA,cAC5B;AAEA,wBAAU,MAAM,EAAE;AAAA,YACtB;AAEA,qBAAS,KAAK,QAAQ,MAAM;AAAA,UAChC;AAEA,YAAE,MAAM,SAAS,EAAE;AACnB,kBAAQ,QAAQ,MAAM,MAAM;AAE5B,cAAI,cAAc,CAACA,UAAS;AACxB,cAAE,MAAM;AAAA,QAChB;AAAA,QAEA,oBAAoB,SAAS,2BAA4B,OAAOA,WAAU;AACtE,cAAI,MAAc,MAAM,IACpB,QAAc,MAAM,MACpB,cAAc,OAAO,GAAGA,UAAS,OAAO;AAE5C,cAAI,OAAO;AACP,oBAAQ,IAAI,IAAI,EAAE,KAAK,WAAW;AAClC,cAAE,MAAM,EAAE,WAAW,MAAM,EAAE;AAC7B,oBAAQ,MAAM,IAAI,EAAE,OAAO,aAAa,KAAK;AAAA,UACjD,OAEK;AACD,gBAAI,IAAI,SAASL,QAAO;AACpB,gBAAE,MAAM,IAAI;AAAA;AAGZ,sBAAQ,IAAI,IAAI,EAAE,KAAK,WAAW;AAAA,UAC1C;AAAA,QACJ;AAAA,QAEA,qBAAqB,SAAS,4BAA6B,OAAOK,WAAU;AACxE,cAAI,SAAkB,MAAM,cACxB,MAAkB,OAAO,QACzB,aAAkB,MAAM,IAAI,YAAY,IAAI,EAAE,QAC9C,kBAAkB,OAAO,GAAGA,UAAS,OAAO;AAEhD,YAAE,MAAM,MAAM;AAEd,mBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC1B,gBAAI,QAAQ,OAAO,CAAC;AAEpB,cAAE,MAAM,MAAM,IAAI,EAAE,QAAS,MAAM,EAAE;AACrC,oBAAQ,MAAM,IAAI,EAAE,OAAO,eAAe;AAAA,UAC9C;AAEA,cAAI,cAAc,CAACA,UAAS;AACxB,cAAE,MAAM;AAEZ,YAAE,SAAS;AAAA,QACf;AAAA,QAEA,gBAAgB,SAAS,uBAAwB,OAAOA,WAAU;AAC9D,cAAI,QAAQ,SAAS,MAAM,UAAU,OAAO,EAAE;AAE9C,YAAE,MAAM,KAAK,SAAS,KAAK;AAE3B,cAAI,cAAc,CAACA,UAAS;AACxB,cAAE,MAAM;AAAA,QAChB;AAAA,QAEA,cAAc,SAAS,qBAAsB,OAAO;AAChD,cAAI,SAAa,MAAM,OACnB,aAAa,MAAM,WACnB,SAAa,QACA,eAAe,MAAM,IACrB,SAAS,QAAQ,OAAO,EAAE,IAC1B,eAAe,MAAM;AAEtC,cAAI,YAAY,MAAM,YAAY,MAAM;AAExC,cAAI;AACA,qBAAS,6BAA6B,QAAQ,YAAY,SAAS;AAEvE,cAAI,MAAM,SAAS;AACf,wBAAY,QAAQ,MAAM,OAAO,IAAI,MAAM,UAAU,CAAC,MAAM,OAAO;AACnE,qBAAY,6BAA6B,QAAQ,YAAY,SAAS;AAAA,UAC1E;AAEA,cAAI,YAAY;AACZ,qBAAS,KAAK,QAAQ,YAAY,eAAe,UAAU,CAAC;AAC5D,sBAAU,SAAS,YAAY,OAAO,EAAE;AAAA,UAC5C;AAEA,YAAE,MAAM;AAAA,QACZ;AAAA,QAEA,iBAAiB,SAAS,wBAAyB,OAAO;AACtD,cAAI,SAAa,MAAM,OACnB,SAAa,MAAM,cACnB,aAAa,YAAY;AAE7B,YAAE,MAAM,WAAW,EAAE,WAAW;AAChC,kBAAQ,OAAO,IAAI,EAAE,QAAQ,OAAO,EAAE;AACtC,YAAE,MAAM,MAAM,EAAE,WAAW,MAAM,EAAE;AACnC,YAAE,SAAS;AAEX,cAAI,QAAQ;AACR,gBAAI,YAAc,OAAO,QACrB,cAAc,YAAY;AAE9B,qBAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAChC,kBAAI,QAAQ,OAAO,CAAC;AAEpB,gBAAE,MAAM,EAAE;AACV,sBAAQ,MAAM,IAAI,EAAE,OAAO,OAAO,GAAG,MAAM,WAAW,CAAC;AACvD,gBAAE,MAAM,EAAE;AAAA,YACd;AAAA,UACJ;AAEA,YAAE,MAAM,EAAE,SAAS;AAAA,QACvB;AAAA,QAEA,YAAY,SAAS,mBAAoB,OAAOA,WAAU;AACtD,cAAI,WAA0B,MAAM,YAChC,eAA0B,SAAS,CAAC,GACpC,QAA0B,MAAM,MAChC,IAA0B,GAC1B,0BAA0B,CAAC,cAAcA,UAAS,mBAClD,cAA0B,SAAS,QACnC,gBAA0B,cAAc,GACxC,aAA0B,YAAY;AAE1C,cAAI,OAAO;AACP,gBAAI,SAAS,SAAS,OAAO,OAAO,EAAE;AAEtC,cAAE,MAAM,KAAK,QAAQ,MAAM,IAAI;AAAA,UACnC;AAGI,cAAE,MAAM;AAGZ,cAAI,eAAe,aAAa,SAASL,QAAO,gBAAgB;AAC5D;AACA,cAAE,MAAM,eAAe,YAAY;AACnC,oBAAQ,aAAa,IAAI,EAAE,cAAc,OAAO,EAAE;AAAA,UACtD;AAEA,iBAAO,IAAI,aAAa,KAAK;AACzB,gBAAI,UAAoB,SAAS,CAAC,GAC9B,oBAAoB,MAAM,iBAAiB;AAE/C,cAAE,MAAM,EAAE,UAAU,EAAE;AACtB,oBAAQ,QAAQ,IAAI,EAAE,SAAS,OAAO,GAAG,iBAAiB,CAAC;AAAA,UAC/D;AAEA,YAAE,SAAS;AAAA,QACf;AAAA,QAEA,aAAa,SAAS,oBAAqB,OAAOK,WAAU;AACxD,cAAI,UAAoB,MAAM,YAC1B,QAAoB,MAAM,MAC1B,aAAoB,YAAY,GAChC,oBAAoB,CAAC,cAAcA,UAAS;AAEhD,YAAE,MAAM,OAAO,EAAE,WAAW;AAC5B,kBAAQ,MAAM,IAAI,EAAE,OAAO,OAAO,EAAE;AACpC,YAAE,MAAM;AACR,YAAE,SAAS;AACX,YAAE,MAAM,eAAe,OAAO;AAE9B,cAAI,MAAM,WAAW;AACjB,gBAAI,SAAS,SAAS,SAAS,OAAO,EAAE,IAAI,eAAe,OAAO,GAC9D,MAAS,SAAS,MAAM,WAAW,OAAO,GAAG,iBAAiB,CAAC;AAEnE,gBAAI,MAAM,UAAU,SAASL,QAAO;AAChC,oBAAM,UAAU;AAAA;AAGhB,oBAAM,KAAK,QAAQ,eAAe,MAAM,SAAS,IAAI,GAAG;AAE5D,cAAE,MAAM,KAAK,QAAQ,GAAG;AAAA,UAC5B;AAGI,oBAAQ,QAAQ,IAAI,EAAE,SAAS,OAAO,GAAG,iBAAiB,CAAC;AAAA,QACnE;AAAA,QAEA,cAAc,SAAS,qBAAsB,OAAOK,WAAU;AAC1D,cAAI,QAAwB,MAAM,MAC9B,QAAwB,MAAM,MAC9B,QAAwB,MAAM,MAC9B,UAAwB,MAAM,QAC9B,wBAAwB,CAAC,cAAcA,UAAS,mBAChD,aAAwB,YAAY;AAExC,YAAE,MAAM,QAAQ,EAAE,WAAW;AAE7B,cAAI,OAAO;AACP,gBAAI,MAAM,SAASL,QAAO;AACtB,sBAAQ,MAAM,IAAI,EAAE,OAAO,OAAO,EAAE;AAAA,iBAEnC;AACD,sBAAQ,MAAM,IAAI,EAAE,OAAO,OAAO,GAAG;AACrC,gBAAE,MAAM;AAAA,YACZ;AAAA,UACJ;AAGI,cAAE,MAAM;AAEZ,cAAI,OAAO;AACP,cAAE,MAAM,EAAE;AACV,oBAAQ,MAAM,IAAI,EAAE,OAAO,OAAO,EAAE;AAAA,UACxC;AAEA,YAAE,MAAM;AAER,cAAI,SAAS;AACT,cAAE,MAAM,EAAE;AACV,oBAAQ,QAAQ,IAAI,EAAE,SAAS,OAAO,EAAE;AAAA,UAC5C;AAEA,YAAE,MAAM;AACR,YAAE,SAAS;AACX,YAAE,MAAM,eAAe,KAAK;AAC5B,kBAAQ,MAAM,IAAI,EAAE,OAAO,OAAO,GAAG,qBAAqB,CAAC;AAAA,QAC/D;AAAA,QAEA,gBAAgB,SAAS,uBAAwB,OAAOK,WAAU;AAC9D,uCAA6B,MAAM,OAAOA,SAAQ;AAAA,QACtD;AAAA,QAEA,gBAAgB,SAAS,uBAAwB,OAAOA,WAAU;AAC9D,uCAA6B,MAAM,OAAOA,SAAQ;AAAA,QACtD;AAAA,QAEA,kBAAkB,SAAS,yBAA0B,OAAOA,WAAU;AAClE,cAAI,QAAwB,MAAM,MAC9B,wBAAwB,CAAC,cAAcA,UAAS,mBAChD,aAAwB,EAAE;AAE9B,YAAE,MAAM,MAAM,MAAM,OAAO,MAAM,eAAe,KAAK;AAErD,cAAI,MAAM,SAASL,QAAO;AACtB,yBAAa,YAAY;AAE7B,kBAAQ,MAAM,IAAI,EAAE,OAAO,OAAO,GAAG,qBAAqB,CAAC;AAC3D,YAAE,SAAe;AAAA,QACrB;AAAA,QAEA,mBAAmB,SAAS,0BAA2B,OAAOK,WAAU;AACpE,YAAE,MAAM,WAAW,EAAE,QAAQ,MAAM,GAAG,OAAO,EAAE,QAAQ,SAAS,EAAE;AAElE,kBAAQ,QAAQ,MAAM,MAAM;AAE5B,cAAI,cAAc,CAACA,UAAS;AACxB,cAAE,MAAM;AAAA,QAChB;AAAA,QAEA,SAAS,SAAS,gBAAiB,OAAO;AACtC,cAAI,QAAU,MAAM,MAChB,MAAU,MAAM,QAChB,UAAU,MAAM;AAEpB,cAAI,qBAAqB,MAAM;AAC3B,cAAE,MAAM;AAEZ,mBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC1B,gBAAI,QAAQ,MAAM,CAAC;AAEnB,cAAE,MAAM,EAAE;AACV,oBAAQ,MAAM,IAAI,EAAE,OAAO,OAAO,GAAG,CAAC,qBAAqB,MAAM,OAAO,CAAC;AAEzE,gBAAI,MAAM;AACN,gBAAE,MAAM,EAAE;AAAA,UAClB;AAAA,QACJ;AAAA,QAEA,qBAAqB,SAAS,4BAA6B,OAAO;AAC9D,cAAI,cAAc,CAAC,CAAC,MAAM;AAE1B,cAAI,MAAM;AACN,cAAE,MAAM;AAEZ,YAAE,MAAM,cAAe,cAAc,EAAE,WAAa,aAAa,EAAE;AACnE,YAAE,MAAM,MAAM,GAAG;AACjB,+BAAqB,KAAK;AAAA,QAC9B;AAAA,QAEA,iBAAiB,SAAS,wBAAyB,OAAOA,WAAU;AAChE,cAAI,OAAO,MAAM;AAEjB,cAAI,MAAM;AACN,gBAAI,QAAQ,SAAS,MAAM,OAAO,EAAE;AAEpC,cAAE,MAAM,KAAK,UAAU,KAAK;AAAA,UAChC;AAGI,cAAE,MAAM;AAEZ,cAAI,cAAc,CAACA,UAAS;AACxB,cAAE,MAAM;AAAA,QAChB;AAAA,QAEA,gBAAgB,SAAS,uBAAwB,OAAOA,WAAU;AAC9D,cAAI,QAAwB,MAAM,MAC9B,QAAwB,MAAM,MAC9B,wBAAwB,CAAC,cAAcA,UAAS,mBAChD,aAAwB,YAAY;AAExC,YAAE,MAAM,UAAU,EAAE,WAAW;AAC/B,kBAAQ,MAAM,IAAI,EAAE,OAAO,OAAO,EAAE;AACpC,YAAE,MAAM;AACR,YAAE,SAAS;AAEX,YAAE,MAAM,eAAe,KAAK;AAC5B,kBAAQ,MAAM,IAAI,EAAE,OAAO,OAAO,GAAG,qBAAqB,CAAC;AAAA,QAC/D;AAAA,QAEA,eAAe,SAAS,sBAAuB,OAAOA,WAAU;AAC5D,cAAI,QAAwB,MAAM,MAC9B,OAAwB,MAAM,QAC9B,wBAAwB,CAAC,cAAcA,UAAS,mBAChD,aAAwB,YAAY;AAExC,YAAE,MAAM,SAAS,EAAE,WAAW;AAC9B,kBAAQ,KAAK,IAAI,EAAE,MAAM,OAAO,EAAE;AAClC,YAAE,MAAM;AACR,YAAE,SAAS;AACX,YAAE,MAAM,eAAe,KAAK;AAC5B,kBAAQ,MAAM,IAAI,EAAE,OAAO,OAAO,GAAG,qBAAqB,CAAC;AAAA,QAC/D;AAAA,MACJ;AAQA,eAAS,SAAU,OAAOA,WAAU,SAAS;AACzC,YAAI,UAAU,EAAE;AAChB,UAAE,KAAY;AAEd,gBAAQ,MAAM,IAAI,EAAE,OAAOA,WAAU,OAAO;AAE5C,YAAI,MAAM,EAAE;AACZ,UAAE,KAAQ;AAEV,eAAO;AAAA,MACX;AAEA,eAAS,SAAU,OAAOA,WAAU;AAChC,YAAI,UAAU,EAAE;AAChB,UAAE,KAAY;AAEd,gBAAQ,MAAM,IAAI,EAAE,OAAOA,SAAQ;AAEnC,YAAI,MAAM,EAAE;AACZ,UAAE,KAAQ;AAEV,eAAO;AAAA,MACX;AAEA,eAAS,IAAK,OAAO;AACjB,UAAE,KAAK;AAEP,YAAI,QAAQ,MAAM,IAAI;AAClB,kBAAQ,MAAM,IAAI,EAAE,OAAO,OAAO,EAAE;AAAA;AAGpC,kBAAQ,MAAM,IAAI,EAAE,OAAO,OAAO,GAAG;AAEzC,eAAO,EAAE;AAAA,MACb;AAEA,eAAS,YAAa,KAAK;AACvB,eAAO,SAAU,OAAOA,WAAU;AAC9B,cAAI,MAAM,YAAY,MAAM,eAAe,MAAM,QAAQ;AACrD,6BAAiB,OAAOA,SAAQ;AAAA;AAGhC,gBAAI,OAAOA,SAAQ;AAAA,QAC3B;AAAA,MACJ;AAEA,eAAS,0BAA2B;AAChC,YAAI,OAAO,CAAC;AAEZ,iBAAS,OAAO,YAAY;AACxB,cAAI,WAAW,eAAe,GAAG;AAC7B,iBAAK,GAAG,IAAI,YAAY,WAAW,GAAG,CAAC;AAAA,QAC/C;AAEA,eAAO;AAAA,MACX;AAIA,UAAI,IAAI;AAAA,QACJ,IAAY;AAAA,QACZ,SAAY;AAAA,QACZ,UAAY;AAAA,QACZ,OAAY;AAAA,QACZ,YAAY;AAAA,QACZ,QAAY;AAAA,MAChB;AAIA,UAAI,UAAU;AAAd,UACI,UAAU;AAGd,cAAQ,WAAW,SAAU,OAAO,SAAS;AACzC,YAAI,iBAAiB,kBAAkB,GAAG,QAAQ;AAElD,YAAI,WAAW,MAAM;AAOjB,cAAI,OAAO,QAAQ,WAAW,UAAU;AACpC,2BAAe,OAAO,OAAO,QAAQ,QAAQ;AAAA,UACjD;AACA,cAAI,OAAO,QAAQ,SAAS,UAAU;AAClC,2BAAe,OAAO,OAAO,OAAO,QAAQ;AAAA,UAChD;AACA,oBAAe,aAAa,gBAAgB,OAAO;AACnD,YAAE,aAAa,QAAQ,OAAO,OAAO;AACrC,cAAI,OAAO,QAAQ,SAAS,UAAU;AAClC,cAAE,SAAS,QAAQ;AAAA,UACvB,OACK;AACD,cAAE,SAAS,aAAa,EAAE,YAAY,QAAQ,OAAO,OAAO,IAAI;AAAA,UACpE;AAAA,QACJ,OACK;AACD,oBAAe;AACf,YAAE,aAAa,QAAQ,OAAO,OAAO;AACrC,YAAE,SAAa,aAAa,EAAE,YAAY,QAAQ,OAAO,OAAO,IAAI;AAAA,QACxE;AACA,eAAc,QAAQ,OAAO;AAC7B,mBAAc,QAAQ,OAAO;AAC7B,sBAAc,OAAO,QAAQ,QAAQ,OAAO;AAC5C,iBAAc,OAAO,WAAW,QAAQ,OAAO;AAC/C,qBAAc,QAAQ,OAAO;AAE7B,UAAE,UAAW,QAAQ,OAAO;AAC5B,UAAE,WAAW,QAAQ,OAAO;AAE5B,YAAI,QAAQ,OAAO;AACf,YAAE,UAAU,EAAE,WAAW,EAAE,aAAa,EAAE,SAAS;AAEvD,UAAE,QAAkB,EAAE,WAAW,EAAE,WAAW;AAC9C,QAAAP,eAAoB,QAAQ,OAAO;AACnC,qBAAoB,QAAQ,OAAO;AACnC,4BAAoB,QAAQ,OAAO;AACnC,oBAAoB,QAAQ;AAC5B,QAAAC,UAAoB,OAAO,OAAO,QAAQ;AAC1C,gBAAoB;AAEpB,YAAI,MAAM;AACN,oBAAU,wBAAwB;AAAA;AAGlC,oBAAU;AAEd,eAAO,IAAI,KAAK;AAAA,MACpB;AAAA;AAAA;;;AC9iFA;AAAA;AAAA;AAEA,UAAI,sBAAsB;AAAA,QACxB,cAAc;AAAA,QACd,KAAK;AAAA,QACL,QAAQ;AAAA,MACV;AAEA,eAAS,iBAAiB,KAAK;AAC7B,eAAO,OAAO,QAAQ,YAAY,CAAC,CAAC,IAAI,KAAK;AAAA,MAC/C;AAEA,eAAS,YAAY,gBAAgB,SAAS;AAC5C,YAAI,QAAQ,eAAe,MAAM,GAAG,EAAE,OAAO,gBAAgB;AAE7D,YAAI,mBAAmB,MAAM,MAAM;AACnC,YAAI,SAAS,mBAAmB,gBAAgB;AAChD,YAAIO,SAAO,OAAO;AAClB,YAAI,QAAQ,OAAO;AAEnB,kBAAU,UACN,OAAO,OAAO,CAAC,GAAG,qBAAqB,OAAO,IAC9C;AAEJ,YAAI;AACF,kBAAQ,QAAQ,eAAe,mBAAmB,KAAK,IAAI;AAAA,QAC7D,SAAS,GAAG;AACV,kBAAQ;AAAA,YACN,gFACE,QACA;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,YAAI,SAAS;AAAA,UACX,MAAMA;AAAA,UACN;AAAA,QACF;AAEA,cAAM,QAAQ,SAAU,MAAM;AAC5B,cAAI,QAAQ,KAAK,MAAM,GAAG;AAC1B,cAAI,MAAM,MAAM,MAAM,EAAE,SAAS,EAAE,YAAY;AAC/C,cAAIC,SAAQ,MAAM,KAAK,GAAG;AAC1B,cAAI,QAAQ,WAAW;AACrB,mBAAO,UAAU,IAAI,KAAKA,MAAK;AAAA,UACjC,WAAW,QAAQ,WAAW;AAC5B,mBAAO,SAAS,SAASA,QAAO,EAAE;AAAA,UACpC,WAAW,QAAQ,UAAU;AAC3B,mBAAO,SAAS;AAAA,UAClB,WAAW,QAAQ,YAAY;AAC7B,mBAAO,WAAW;AAAA,UACpB,WAAW,QAAQ,YAAY;AAC7B,mBAAO,WAAWA;AAAA,UACpB,OAAO;AACL,mBAAO,GAAG,IAAIA;AAAA,UAChB;AAAA,QACF,CAAC;AAED,eAAO;AAAA,MACT;AAEA,eAAS,mBAAmB,kBAAkB;AAG5C,YAAID,SAAO;AACX,YAAI,QAAQ;AACZ,YAAI,eAAe,iBAAiB,MAAM,GAAG;AAC7C,YAAI,aAAa,SAAS,GAAG;AAC3B,UAAAA,SAAO,aAAa,MAAM;AAC1B,kBAAQ,aAAa,KAAK,GAAG;AAAA,QAC/B,OAAO;AACL,kBAAQ;AAAA,QACV;AAEA,eAAO,EAAE,MAAMA,QAAM,MAAa;AAAA,MACpC;AAEA,eAASE,QAAM,OAAO,SAAS;AAC7B,kBAAU,UACN,OAAO,OAAO,CAAC,GAAG,qBAAqB,OAAO,IAC9C;AAEJ,YAAI,CAAC,OAAO;AACV,cAAI,CAAC,QAAQ,KAAK;AAChB,mBAAO,CAAC;AAAA,UACV,OAAO;AACL,mBAAO,CAAC;AAAA,UACV;AAAA,QACF;AAEA,YAAI,MAAM,SAAS;AACjB,cAAI,OAAO,MAAM,QAAQ,iBAAiB,YAAY;AAGpD,oBAAQ,MAAM,QAAQ,aAAa;AAAA,UACrC,WAAW,MAAM,QAAQ,YAAY,GAAG;AAEtC,oBAAQ,MAAM,QAAQ,YAAY;AAAA,UACpC,OAAO;AAEL,gBAAI,MACF,MAAM,QACJ,OAAO,KAAK,MAAM,OAAO,EAAE,KAAK,SAAU,KAAK;AAC7C,qBAAO,IAAI,YAAY,MAAM;AAAA,YAC/B,CAAC,CACH;AAEF,gBAAI,CAAC,OAAO,MAAM,QAAQ,UAAU,CAAC,QAAQ,QAAQ;AACnD,sBAAQ;AAAA,gBACN;AAAA,cACF;AAAA,YACF;AACA,oBAAQ;AAAA,UACV;AAAA,QACF;AACA,YAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AACzB,kBAAQ,CAAC,KAAK;AAAA,QAChB;AAEA,kBAAU,UACN,OAAO,OAAO,CAAC,GAAG,qBAAqB,OAAO,IAC9C;AAEJ,YAAI,CAAC,QAAQ,KAAK;AAChB,iBAAO,MAAM,OAAO,gBAAgB,EAAE,IAAI,SAAU,KAAK;AACvD,mBAAO,YAAY,KAAK,OAAO;AAAA,UACjC,CAAC;AAAA,QACH,OAAO;AACL,cAAI,UAAU,CAAC;AACf,iBAAO,MAAM,OAAO,gBAAgB,EAAE,OAAO,SAAUC,UAAS,KAAK;AACnE,gBAAI,SAAS,YAAY,KAAK,OAAO;AACrC,YAAAA,SAAQ,OAAO,IAAI,IAAI;AACvB,mBAAOA;AAAA,UACT,GAAG,OAAO;AAAA,QACZ;AAAA,MACF;AAaA,eAAS,mBAAmB,eAAe;AACzC,YAAI,MAAM,QAAQ,aAAa,GAAG;AAChC,iBAAO;AAAA,QACT;AACA,YAAI,OAAO,kBAAkB,UAAU;AACrC,iBAAO,CAAC;AAAA,QACV;AAEA,YAAI,iBAAiB,CAAC;AACtB,YAAI,MAAM;AACV,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAI;AAEJ,iBAAS,iBAAiB;AACxB,iBAAO,MAAM,cAAc,UAAU,KAAK,KAAK,cAAc,OAAO,GAAG,CAAC,GAAG;AACzE,mBAAO;AAAA,UACT;AACA,iBAAO,MAAM,cAAc;AAAA,QAC7B;AAEA,iBAAS,iBAAiB;AACxB,eAAK,cAAc,OAAO,GAAG;AAE7B,iBAAO,OAAO,OAAO,OAAO,OAAO,OAAO;AAAA,QAC5C;AAEA,eAAO,MAAM,cAAc,QAAQ;AACjC,kBAAQ;AACR,kCAAwB;AAExB,iBAAO,eAAe,GAAG;AACvB,iBAAK,cAAc,OAAO,GAAG;AAC7B,gBAAI,OAAO,KAAK;AAEd,0BAAY;AACZ,qBAAO;AAEP,6BAAe;AACf,0BAAY;AAEZ,qBAAO,MAAM,cAAc,UAAU,eAAe,GAAG;AACrD,uBAAO;AAAA,cACT;AAGA,kBAAI,MAAM,cAAc,UAAU,cAAc,OAAO,GAAG,MAAM,KAAK;AAEnE,wCAAwB;AAExB,sBAAM;AACN,+BAAe,KAAK,cAAc,UAAU,OAAO,SAAS,CAAC;AAC7D,wBAAQ;AAAA,cACV,OAAO;AAGL,sBAAM,YAAY;AAAA,cACpB;AAAA,YACF,OAAO;AACL,qBAAO;AAAA,YACT;AAAA,UACF;AAEA,cAAI,CAAC,yBAAyB,OAAO,cAAc,QAAQ;AACzD,2BAAe,KAAK,cAAc,UAAU,OAAO,cAAc,MAAM,CAAC;AAAA,UAC1E;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEA,aAAO,UAAUD;AACjB,aAAO,QAAQ,QAAQA;AACvB,aAAO,QAAQ,cAAc;AAC7B,aAAO,QAAQ,qBAAqB;AAAA;AAAA;;;ACjOpC;AAAA;AAAA;AAAA,QACE,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6CAA6C;AAAA,UAC3C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,aAAa;AAAA,QAC9B;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,UAAU;AAAA,QAC3B;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAK,MAAM;AAAA,QAC5B;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,6CAA6C;AAAA,UAC3C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6CAA6C;AAAA,UAC3C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,QACZ;AAAA,QACA,kDAAkD;AAAA,UAChD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iDAAiD;AAAA,UAC/C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oDAAoD;AAAA,UAClD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,WAAW;AAAA,QAC5B;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,sCAAsC;AAAA,UACpC,cAAgB;AAAA,QAClB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qBAAqB;AAAA,UACnB,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,OAAO;AAAA,QAC9B;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,OAAM,KAAK;AAAA,QAClC;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAK,KAAK;AAAA,QAC3B;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAO,KAAK;AAAA,QAC7B;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,UAChB,YAAc,CAAC,aAAa;AAAA,QAC9B;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,MAAK,MAAK,IAAI;AAAA,QAC/B;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yDAAyD;AAAA,UACvD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iDAAiD;AAAA,UAC/C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,UAAU;AAAA,QAC3B;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,QAAO,KAAK;AAAA,QAC7B;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,SAAW;AAAA,QACb;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,SAAW;AAAA,QACb;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,OAAM,OAAM,OAAM,MAAK,QAAO,SAAQ,OAAM,OAAM,QAAO,OAAM,UAAS,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,QAAQ;AAAA,QAC7J;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,UAAS,WAAU,UAAS,QAAQ;AAAA,QACrD;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAK,OAAM,IAAI;AAAA,QAChC;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,SAAW;AAAA,QACb;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAO;AAAA,QAC9B;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,6CAA6C;AAAA,UAC3C,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,cAAgB;AAAA,QAClB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,WAAW;AAAA,QAClC;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sDAAsD;AAAA,UACpD,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,mDAAmD;AAAA,UACjD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,uDAAuD;AAAA,UACrD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,kDAAkD;AAAA,UAChD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,6CAA6C;AAAA,UAC3C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sDAAsD;AAAA,UACpD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kDAAkD;AAAA,UAChD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iDAAiD;AAAA,UAC/C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iDAAiD;AAAA,UAC/C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wDAAwD;AAAA,UACtD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qDAAqD;AAAA,UACnD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kDAAkD;AAAA,UAChD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oDAAoD;AAAA,UAClD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mDAAmD;AAAA,UACjD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yDAAyD;AAAA,UACvD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iDAAiD;AAAA,UAC/C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iDAAiD;AAAA,UAC/C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,6CAA6C;AAAA,UAC3C,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAO;AAAA,QAC9B;AAAA,QACA,+DAA+D;AAAA,UAC7D,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,0DAA0D;AAAA,UACxD,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uDAAuD;AAAA,UACrD,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,gCAAgC;AAAA,UAC9B,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,QACZ;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAM,OAAM,OAAM,KAAK;AAAA,QAC9C;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,UACV,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,oDAAoD;AAAA,UAClD,QAAU;AAAA,UACV,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,iDAAiD;AAAA,UAC/C,QAAU;AAAA,QACZ;AAAA,QACA,0DAA0D;AAAA,UACxD,QAAU;AAAA,QACZ;AAAA,QACA,qDAAqD;AAAA,UACnD,QAAU;AAAA,QACZ;AAAA,QACA,8DAA8D;AAAA,UAC5D,QAAU;AAAA,QACZ;AAAA,QACA,oDAAoD;AAAA,UAClD,QAAU;AAAA,QACZ;AAAA,QACA,6DAA6D;AAAA,UAC3D,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,QAAO,OAAM,MAAM;AAAA,QAC1C;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,YAAc,CAAC,WAAW;AAAA,QAC5B;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,sDAAsD;AAAA,UACpD,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,QACZ;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yDAAyD;AAAA,UACvD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0DAA0D;AAAA,UACxD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,4DAA4D;AAAA,UAC1D,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,QAAO,UAAU;AAAA,QAClC;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,MAAK,SAAQ,SAAQ,MAAM;AAAA,QAC5C;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,QACZ;AAAA,QACA,mDAAmD;AAAA,UACjD,QAAU;AAAA,QACZ;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iDAAiD;AAAA,UAC/C,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,mDAAmD;AAAA,UACjD,QAAU;AAAA,QACZ;AAAA,QACA,4DAA4D;AAAA,UAC1D,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wCAAwC;AAAA,UACtC,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,4CAA4C;AAAA,UAC1C,cAAgB;AAAA,UAChB,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,2CAA2C;AAAA,UACzC,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,YAAc,CAAC,WAAW;AAAA,QAC5B;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,WAAU,UAAU;AAAA,QAC3C;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uDAAuD;AAAA,UACrD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6CAA6C;AAAA,UAC3C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uDAAuD;AAAA,UACrD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6CAA6C;AAAA,UAC3C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,YAAc,CAAC,WAAW;AAAA,QAC5B;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,QACZ;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,QACZ;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,QACZ;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAM,OAAM,KAAK;AAAA,QACxC;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sDAAsD;AAAA,UACpD,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2DAA2D;AAAA,UACzD,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iDAAiD;AAAA,UAC/C,QAAU;AAAA,QACZ;AAAA,QACA,qDAAqD;AAAA,UACnD,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,mDAAmD;AAAA,UACjD,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,QACZ;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,QACZ;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,OAAM,OAAM,OAAM,OAAM,KAAK;AAAA,QACpD;AAAA,QACA,kDAAkD;AAAA,UAChD,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,yDAAyD;AAAA,UACvD,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,kDAAkD;AAAA,UAChD,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,qDAAqD;AAAA,UACnD,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kDAAkD;AAAA,UAChD,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,OAAM,KAAK;AAAA,QAClC;AAAA,QACA,uDAAuD;AAAA,UACrD,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,8DAA8D;AAAA,UAC5D,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,uDAAuD;AAAA,UACrD,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,2DAA2D;AAAA,UACzD,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,0DAA0D;AAAA,UACxD,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,kDAAkD;AAAA,UAChD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,QACZ;AAAA,QACA,6CAA6C;AAAA,UAC3C,QAAU;AAAA,QACZ;AAAA,QACA,6CAA6C;AAAA,UAC3C,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,QACZ;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,oDAAoD;AAAA,UAClD,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,oDAAoD;AAAA,UAClD,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAM,OAAM,KAAK;AAAA,QACxC;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,UACV,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,QACZ;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,QACZ;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,QACZ;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,QACZ;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,QACZ;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qDAAqD;AAAA,UACnD,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uDAAuD;AAAA,UACrD,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wDAAwD;AAAA,UACtD,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qDAAqD;AAAA,UACnD,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mDAAmD;AAAA,UACjD,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4DAA4D;AAAA,UAC1D,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kDAAkD;AAAA,UAChD,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2DAA2D;AAAA,UACzD,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kDAAkD;AAAA,UAChD,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oDAAoD;AAAA,UAClD,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kDAAkD;AAAA,UAChD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mDAAmD;AAAA,UACjD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,gEAAgE;AAAA,UAC9D,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6CAA6C;AAAA,UAC3C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iDAAiD;AAAA,UAC/C,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,qDAAqD;AAAA,UACnD,QAAU;AAAA,QACZ;AAAA,QACA,mDAAmD;AAAA,UACjD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wDAAwD;AAAA,UACtD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qDAAqD;AAAA,UACnD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yDAAyD;AAAA,UACvD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,uEAAuE;AAAA,UACrE,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yEAAyE;AAAA,UACvE,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6DAA6D;AAAA,UAC3D,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qEAAqE;AAAA,UACnE,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2EAA2E;AAAA,UACzE,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6EAA6E;AAAA,UAC3E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2EAA2E;AAAA,UACzE,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6EAA6E;AAAA,UAC3E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4EAA4E;AAAA,UAC1E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yEAAyE;AAAA,UACvE,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mFAAmF;AAAA,UACjF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6EAA6E;AAAA,UAC3E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kFAAkF;AAAA,UAChF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gFAAgF;AAAA,UAC9E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+EAA+E;AAAA,UAC7E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6EAA6E;AAAA,UAC3E,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,sFAAsF;AAAA,UACpF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8EAA8E;AAAA,UAC5E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sEAAsE;AAAA,UACpE,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,0EAA0E;AAAA,UACxE,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gFAAgF;AAAA,UAC9E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gFAAgF;AAAA,UAC9E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0EAA0E;AAAA,UACxE,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,mFAAmF;AAAA,UACjF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oFAAoF;AAAA,UAClF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gFAAgF;AAAA,UAC9E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yEAAyE;AAAA,UACvE,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yEAAyE;AAAA,UACvE,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,kFAAkF;AAAA,UAChF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8EAA8E;AAAA,UAC5E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6EAA6E;AAAA,UAC3E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8EAA8E;AAAA,UAC5E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4EAA4E;AAAA,UAC1E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+EAA+E;AAAA,UAC7E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+EAA+E;AAAA,UAC7E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gFAAgF;AAAA,UAC9E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wFAAwF;AAAA,UACtF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qFAAqF;AAAA,UACnF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8EAA8E;AAAA,UAC5E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8EAA8E;AAAA,UAC5E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mFAAmF;AAAA,UACjF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+EAA+E;AAAA,UAC7E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iFAAiF;AAAA,UAC/E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qEAAqE;AAAA,UACnE,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,8EAA8E;AAAA,UAC5E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iFAAiF;AAAA,UAC/E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0EAA0E;AAAA,UACxE,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yEAAyE;AAAA,UACvE,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oFAAoF;AAAA,UAClF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wEAAwE;AAAA,UACtE,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,iFAAiF;AAAA,UAC/E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6EAA6E;AAAA,UAC3E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wFAAwF;AAAA,UACtF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6EAA6E;AAAA,UAC3E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2DAA2D;AAAA,UACzD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mEAAmE;AAAA,UACjE,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4DAA4D;AAAA,UAC1D,QAAU;AAAA,QACZ;AAAA,QACA,+EAA+E;AAAA,UAC7E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2EAA2E;AAAA,UACzE,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,wFAAwF;AAAA,UACtF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oFAAoF;AAAA,UAClF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+EAA+E;AAAA,UAC7E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gFAAgF;AAAA,UAC9E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6EAA6E;AAAA,UAC3E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gFAAgF;AAAA,UAC9E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gFAAgF;AAAA,UAC9E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+EAA+E;AAAA,UAC7E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6EAA6E;AAAA,UAC3E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2EAA2E;AAAA,UACzE,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,oFAAoF;AAAA,UAClF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kFAAkF;AAAA,UAChF,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8DAA8D;AAAA,UAC5D,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6EAA6E;AAAA,UAC3E,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,4DAA4D;AAAA,UAC1D,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAM,MAAM;AAAA,QACnC;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAM,OAAM,OAAM,OAAM,KAAK;AAAA,QACpD;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iDAAiD;AAAA,UAC/C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iDAAiD;AAAA,UAC/C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gDAAgD;AAAA,UAC9C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,sDAAsD;AAAA,UACpD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wDAAwD;AAAA,UACtD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iDAAiD;AAAA,UAC/C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kDAAkD;AAAA,UAChD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qDAAqD;AAAA,UACnD,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,UAAU;AAAA,QAC3B;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,YAAY;AAAA,QAC7B;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,6CAA6C;AAAA,UAC3C,QAAU;AAAA,QACZ;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,mDAAmD;AAAA,UACjD,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAO,MAAM;AAAA,QAC9B;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,8CAA8C;AAAA,UAC5C,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4CAA4C;AAAA,UAC1C,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,SAAW;AAAA,UACX,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,QAClB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6CAA6C;AAAA,UAC3C,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,QAAO,OAAM,KAAK;AAAA,QACnC;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,UAAU;AAAA,QAC3B;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAM,OAAM,KAAK;AAAA,QACxC;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,SAAW;AAAA,UACX,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,+CAA+C;AAAA,UAC7C,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qDAAqD;AAAA,UACnD,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,UAAU;AAAA,QAC3B;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAM,OAAM,KAAK;AAAA,QACxC;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,sBAAsB;AAAA,UACpB,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAO;AAAA,QAC9B;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAM,OAAM,OAAM,KAAK;AAAA,QAC9C;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,cAAgB;AAAA,QAClB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,OAAM,KAAK;AAAA,QACtE;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAM,OAAM,KAAK;AAAA,QACxC;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,UAAU;AAAA,QAC3B;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0CAA0C;AAAA,UACxC,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,sCAAsC;AAAA,UACpC,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,4BAA4B;AAAA,UAC1B,cAAgB;AAAA,QAClB;AAAA,QACA,0BAA0B;AAAA,UACxB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,8BAA8B;AAAA,UAC5B,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,yBAAyB;AAAA,UACvB,cAAgB;AAAA,QAClB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,aAAa;AAAA,QAC9B;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAM,OAAM,OAAM,KAAK;AAAA,QAC9C;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAM,KAAK;AAAA,QAClC;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAM,OAAM,KAAK;AAAA,QACxC;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,MAAK,KAAK;AAAA,QAC3B;AAAA,QACA,qCAAqC;AAAA,UACnC,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,MAAK,IAAI;AAAA,QAC1B;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,SAAS;AAAA,QAC1B;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,IAAI;AAAA,QAC3B;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,WAAU,MAAM;AAAA,QACjC;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,gCAAgC;AAAA,UAC9B,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,yCAAyC;AAAA,UACvC,cAAgB;AAAA,UAChB,YAAc,CAAC,cAAc;AAAA,QAC/B;AAAA,QACA,gCAAgC;AAAA,UAC9B,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iCAAiC;AAAA,UAC/B,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uCAAuC;AAAA,UACrC,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAQ;AAAA,QACzB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,OAAM,KAAK;AAAA,QAClC;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,MAAK,IAAI;AAAA,QACxD;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6CAA6C;AAAA,UAC3C,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,SAAQ,KAAK;AAAA,QAC9B;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,OAAM,OAAM,KAAK;AAAA,QACxC;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAO,SAAQ,QAAO,KAAK;AAAA,QAC5C;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAK,KAAK;AAAA,QAC3B;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,QAAO,OAAM,KAAK;AAAA,QACzC;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,aAAa;AAAA,UACX,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAO,OAAM,QAAO,OAAM,OAAM,KAAK;AAAA,QACtD;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,OAAM,OAAM,MAAM;AAAA,QACzC;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,WAAW;AAAA,QAC5B;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,WAAW;AAAA,QAC5B;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,YAAc,CAAC,WAAW;AAAA,QAC5B;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,cAAgB;AAAA,QAClB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,cAAgB;AAAA,QAClB;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,QAAO,MAAM;AAAA,QACpC;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,IAAI;AAAA,QAC3B;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAO,OAAM,KAAK;AAAA,QACnC;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,cAAgB;AAAA,QAClB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,QAAO,OAAM,MAAM;AAAA,QAC1C;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,QAAO,KAAK;AAAA,QAC7B;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,MAAK,OAAM,OAAM,OAAM,KAAK;AAAA,QAC7C;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,eAAe;AAAA,UACb,cAAgB;AAAA,QAClB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc;AAAA,YACZ;AAAA,UACF;AAAA,QACF;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,2CAA2C;AAAA,UACzC,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,QAAO,MAAM;AAAA,QACpC;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qCAAqC;AAAA,UACnC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,uCAAuC;AAAA,UACrC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAO,OAAO;AAAA,QAC/B;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAO,OAAO;AAAA,QAC/B;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,iCAAiC;AAAA,UAC/B,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,YAAW,UAAU;AAAA,QACtC;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,iBAAiB;AAAA,UACf,cAAgB;AAAA,QAClB;AAAA,QACA,YAAY;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,qBAAqB;AAAA,UACnB,YAAc,CAAC,UAAS,WAAW;AAAA,QACrC;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAO,OAAM,OAAO;AAAA,QACrC;AAAA,QACA,aAAa;AAAA,UACX,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,cAAgB;AAAA,QAClB;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,YAAY;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,YAAW,IAAI;AAAA,QAChC;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,YAAY;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,WAAW;AAAA,UACT,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,UAChB,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,SAAW;AAAA,QACb;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,QAAO,QAAO,OAAM,QAAO,OAAM,MAAK,KAAK;AAAA,QAClE;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,UACV,SAAW;AAAA,QACb;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,QACZ;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,QAAO,KAAK;AAAA,QAC7B;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,aAAa;AAAA,UACX,YAAc,CAAC,QAAO,KAAK;AAAA,QAC7B;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,YAAc,CAAC,UAAS,MAAM;AAAA,QAChC;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,KAAI,MAAK,QAAO,OAAM,MAAK,IAAI;AAAA,QAChD;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,SAAW;AAAA,UACX,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,QAAO,MAAM;AAAA,QACpC;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,UACV,SAAW;AAAA,QACb;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,UACV,SAAW;AAAA,QACb;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,yCAAyC;AAAA,UACvC,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,SAAW;AAAA,UACX,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,+BAA+B;AAAA,UAC7B,QAAU;AAAA,UACV,SAAW;AAAA,QACb;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,UACV,SAAW;AAAA,UACX,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,KAAI,KAAK;AAAA,QAC1B;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,UACV,YAAc,CAAC,KAAI,MAAK,OAAM,OAAM,KAAI,MAAK,KAAK;AAAA,QACpD;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,KAAI,OAAM,OAAM,KAAK;AAAA,QACtC;AAAA,QACA,kBAAkB;AAAA,UAChB,cAAgB;AAAA,QAClB;AAAA,QACA,8BAA8B;AAAA,UAC5B,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,sBAAsB;AAAA,UACpB,cAAgB;AAAA,QAClB;AAAA,QACA,cAAc;AAAA,UACZ,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,cAAc;AAAA,UACZ,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAI,KAAK;AAAA,QAC1B;AAAA,QACA,qBAAqB;AAAA,UACnB,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,eAAe;AAAA,UACb,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,eAAe;AAAA,UACb,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAO,KAAK;AAAA,QAC7B;AAAA,QACA,kCAAkC;AAAA,UAChC,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,QAAO,MAAM;AAAA,QACpC;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,QAAO,OAAM,OAAM,OAAM,KAAK;AAAA,QAC/C;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,YAAY;AAAA,UACV,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAK,KAAK;AAAA,QAC3B;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,QACZ;AAAA,QACA,gBAAgB;AAAA,UACd,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,wCAAwC;AAAA,UACtC,QAAU;AAAA,QACZ;AAAA,QACA,8BAA8B;AAAA,UAC5B,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,4BAA4B;AAAA,UAC1B,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,oCAAoC;AAAA,UAClC,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,0CAA0C;AAAA,UACxC,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,6BAA6B;AAAA,UAC3B,QAAU;AAAA,QACZ;AAAA,QACA,yBAAyB;AAAA,UACvB,QAAU;AAAA,QACZ;AAAA,QACA,gCAAgC;AAAA,UAC9B,QAAU;AAAA,QACZ;AAAA,QACA,mCAAmC;AAAA,UACjC,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,0BAA0B;AAAA,UACxB,QAAU;AAAA,QACZ;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,sCAAsC;AAAA,UACpC,QAAU;AAAA,QACZ;AAAA,QACA,sBAAsB;AAAA,UACpB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,MAAM;AAAA,QAC7B;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,wBAAwB;AAAA,UACtB,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,aAAa;AAAA,UACX,QAAU;AAAA,QACZ;AAAA,QACA,cAAc;AAAA,UACZ,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,MAAM;AAAA,QACvB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,oBAAoB;AAAA,UAClB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,OAAM,QAAO,KAAK;AAAA,QACnC;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,OAAM,KAAK;AAAA,QAC5B;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,iBAAiB;AAAA,UACf,QAAU;AAAA,UACV,YAAc,CAAC,IAAI;AAAA,QACrB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,cAAgB;AAAA,UAChB,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,kBAAkB;AAAA,UAChB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,mBAAmB;AAAA,UACjB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,qBAAqB;AAAA,UACnB,QAAU;AAAA,UACV,YAAc,CAAC,OAAO;AAAA,QACxB;AAAA,QACA,eAAe;AAAA,UACb,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,2BAA2B;AAAA,UACzB,QAAU;AAAA,UACV,YAAc,CAAC,KAAK;AAAA,QACtB;AAAA,QACA,uBAAuB;AAAA,UACrB,cAAgB;AAAA,QAClB;AAAA,QACA,qBAAqB;AAAA,UACnB,cAAgB;AAAA,QAClB;AAAA,MACF;AAAA;AAAA;;;ACt0QA;AAAA;AAWA,aAAO,UAAU;AAAA;AAAA;;;ACXjB,sBAAyB;;;ACAzB,MAAM,wBAAwB,oBAAI,IAAI;AAAA,IAClC;AAAA,IAAO;AAAA,IAAO;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAC9E;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IACxE;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IAAQ;AAAA,IACxE;AAAA,IAAS;AAAA,IAAS;AAAA,EACtB,CAAC;AACM,MAAM,wBAAwB;AAC9B,MAAI;AACX,GAAC,SAAUE,cAAa;AACpB,IAAAA,aAAYA,aAAY,KAAK,IAAI,EAAE,IAAI;AACvC,IAAAA,aAAYA,aAAY,MAAM,IAAI,CAAC,IAAI;AACvC,IAAAA,aAAYA,aAAY,YAAY,IAAI,CAAC,IAAI;AAC7C,IAAAA,aAAYA,aAAY,iBAAiB,IAAI,EAAE,IAAI;AACnD,IAAAA,aAAYA,aAAY,WAAW,IAAI,EAAE,IAAI;AAC7C,IAAAA,aAAYA,aAAY,WAAW,IAAI,EAAE,IAAI;AAC7C,IAAAA,aAAYA,aAAY,OAAO,IAAI,EAAE,IAAI;AACzC,IAAAA,aAAYA,aAAY,kBAAkB,IAAI,EAAE,IAAI;AACpD,IAAAA,aAAYA,aAAY,gBAAgB,IAAI,EAAE,IAAI;AAClD,IAAAA,aAAYA,aAAY,aAAa,IAAI,EAAE,IAAI;AAC/C,IAAAA,aAAYA,aAAY,WAAW,IAAI,EAAE,IAAI;AAC7C,IAAAA,aAAYA,aAAY,YAAY,IAAI,EAAE,IAAI;AAC9C,IAAAA,aAAYA,aAAY,cAAc,IAAI,EAAE,IAAI;AAChD,IAAAA,aAAYA,aAAY,SAAS,IAAI,EAAE,IAAI;AAC3C,IAAAA,aAAYA,aAAY,SAAS,IAAI,EAAE,IAAI;AAC3C,IAAAA,aAAYA,aAAY,SAAS,IAAI,EAAE,IAAI;AAC3C,IAAAA,aAAYA,aAAY,WAAW,IAAI,EAAE,IAAI;AAC7C,IAAAA,aAAYA,aAAY,gBAAgB,IAAI,EAAE,IAAI;AAClD,IAAAA,aAAYA,aAAY,aAAa,IAAI,EAAE,IAAI;AAC/C,IAAAA,aAAYA,aAAY,mBAAmB,IAAI,EAAE,IAAI;AACrD,IAAAA,aAAYA,aAAY,eAAe,IAAI,EAAE,IAAI;AACjD,IAAAA,aAAYA,aAAY,iBAAiB,IAAI,EAAE,IAAI;AACnD,IAAAA,aAAYA,aAAY,iBAAiB,IAAI,EAAE,IAAI;AACnD,IAAAA,aAAYA,aAAY,iBAAiB,IAAI,EAAE,IAAI;AACnD,IAAAA,aAAYA,aAAY,iBAAiB,IAAI,EAAE,IAAI;AACnD,IAAAA,aAAYA,aAAY,sBAAsB,IAAI,EAAE,IAAI;AACxD,IAAAA,aAAYA,aAAY,cAAc,IAAI,EAAE,IAAI;AAChD,IAAAA,aAAYA,aAAY,eAAe,IAAI,EAAE,IAAI;AACjD,IAAAA,aAAYA,aAAY,eAAe,IAAI,GAAG,IAAI;AAClD,IAAAA,aAAYA,aAAY,eAAe,IAAI,GAAG,IAAI;AAClD,IAAAA,aAAYA,aAAY,eAAe,IAAI,GAAG,IAAI;AAClD,IAAAA,aAAYA,aAAY,uBAAuB,IAAI,KAAK,IAAI;AAAA,EAChE,GAAG,cAAc,gBAAgB,cAAc,CAAC,EAAE;AAC3C,MAAM,YAAY;AAAA,IACrB,WAAW;AAAA,IACX,aAAa;AAAA,IACb,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,EACZ;AAEO,WAAS,YAAY,IAAI;AAC5B,WAAO,MAAM,SAAS,MAAM;AAAA,EAChC;AACO,WAAS,gBAAgB,IAAI;AAChC,WAAO,MAAM,SAAS,MAAM;AAAA,EAChC;AACO,WAAS,0BAA0B,KAAK,KAAK;AAChD,YAAQ,MAAM,SAAS,OAAO,OAAO;AAAA,EACzC;AAEO,WAAS,mBAAmB,IAAI;AACnC,WAAS,OAAO,MAAQ,OAAO,MAAQ,OAAO,MAAQ,OAAO,KAAQ,OAAO,MAAQ,MAAM,KAAQ,MAAM,MACnG,MAAM,OAAQ,MAAM;AAAA,EAC7B;AACO,WAAS,qBAAqB,IAAI;AACrC,WAAQ,MAAM,SAAS,MAAM,SAAU,sBAAsB,IAAI,EAAE;AAAA,EACvE;;;ACnEO,MAAI;AACX,GAAC,SAAUC,MAAK;AACZ,IAAAA,KAAI,+BAA+B,IAAI;AACvC,IAAAA,KAAI,2BAA2B,IAAI;AACnC,IAAAA,KAAI,wBAAwB,IAAI;AAChC,IAAAA,KAAI,+CAA+C,IAAI;AACvD,IAAAA,KAAI,sBAAsB,IAAI;AAC9B,IAAAA,KAAI,2BAA2B,IAAI;AACnC,IAAAA,KAAI,wBAAwB,IAAI;AAChC,IAAAA,KAAI,yBAAyB,IAAI;AACjC,IAAAA,KAAI,wCAAwC,IAAI;AAChD,IAAAA,KAAI,gCAAgC,IAAI;AACxC,IAAAA,KAAI,yCAAyC,IAAI;AACjD,IAAAA,KAAI,mBAAmB,IAAI;AAC3B,IAAAA,KAAI,oCAAoC,IAAI;AAC5C,IAAAA,KAAI,gCAAgC,IAAI;AACxC,IAAAA,KAAI,yCAAyC,IAAI;AACjD,IAAAA,KAAI,iDAAiD,IAAI;AACzD,IAAAA,KAAI,6CAA6C,IAAI;AACrD,IAAAA,KAAI,kBAAkB,IAAI;AAC1B,IAAAA,KAAI,UAAU,IAAI;AAClB,IAAAA,KAAI,uBAAuB,IAAI;AAC/B,IAAAA,KAAI,oCAAoC,IAAI;AAC5C,IAAAA,KAAI,4CAA4C,IAAI;AACpD,IAAAA,KAAI,2DAA2D,IAAI;AACnE,IAAAA,KAAI,4CAA4C,IAAI;AACpD,IAAAA,KAAI,2CAA2C,IAAI;AACnD,IAAAA,KAAI,2CAA2C,IAAI;AACnD,IAAAA,KAAI,gCAAgC,IAAI;AACxC,IAAAA,KAAI,gCAAgC,IAAI;AACxC,IAAAA,KAAI,+BAA+B,IAAI;AACvC,IAAAA,KAAI,+BAA+B,IAAI;AACvC,IAAAA,KAAI,oBAAoB,IAAI;AAC5B,IAAAA,KAAI,0BAA0B,IAAI;AAClC,IAAAA,KAAI,gCAAgC,IAAI;AACxC,IAAAA,KAAI,cAAc,IAAI;AACtB,IAAAA,KAAI,eAAe,IAAI;AACvB,IAAAA,KAAI,6BAA6B,IAAI;AACrC,IAAAA,KAAI,cAAc,IAAI;AACtB,IAAAA,KAAI,0BAA0B,IAAI;AAClC,IAAAA,KAAI,YAAY,IAAI;AACpB,IAAAA,KAAI,4CAA4C,IAAI;AACpD,IAAAA,KAAI,wBAAwB,IAAI;AAChC,IAAAA,KAAI,6BAA6B,IAAI;AACrC,IAAAA,KAAI,uCAAuC,IAAI;AAC/C,IAAAA,KAAI,2BAA2B,IAAI;AACnC,IAAAA,KAAI,gCAAgC,IAAI;AACxC,IAAAA,KAAI,oCAAoC,IAAI;AAC5C,IAAAA,KAAI,oBAAoB,IAAI;AAC5B,IAAAA,KAAI,0CAA0C,IAAI;AAClD,IAAAA,KAAI,oBAAoB,IAAI;AAC5B,IAAAA,KAAI,sBAAsB,IAAI;AAC9B,IAAAA,KAAI,gBAAgB,IAAI;AACxB,IAAAA,KAAI,kBAAkB,IAAI;AAC1B,IAAAA,KAAI,kCAAkC,IAAI;AAC1C,IAAAA,KAAI,uCAAuC,IAAI;AAC/C,IAAAA,KAAI,mCAAmC,IAAI;AAC3C,IAAAA,KAAI,0BAA0B,IAAI;AAClC,IAAAA,KAAI,2BAA2B,IAAI;AACnC,IAAAA,KAAI,iCAAiC,IAAI;AACzC,IAAAA,KAAI,sBAAsB,IAAI;AAC9B,IAAAA,KAAI,oCAAoC,IAAI;AAAA,EAChD,GAAG,MAAM,QAAQ,MAAM,CAAC,EAAE;;;AC3D1B,MAAM,2BAA2B,KAAK;AAI/B,MAAM,eAAN,MAAmB;AAAA,IACtB,YAAY,SAAS;AACjB,WAAK,UAAU;AACf,WAAK,OAAO;AACZ,WAAK,MAAM;AAEX,WAAK,aAAa;AAClB,WAAK,WAAW,CAAC;AACjB,WAAK,kBAAkB;AACvB,WAAK,mBAAmB;AACxB,WAAK,gBAAgB;AACrB,WAAK,kBAAkB;AACvB,WAAK,QAAQ;AACb,WAAK,eAAe;AACpB,WAAK,oBAAoB;AACzB,WAAK,OAAO;AAEZ,WAAK,gBAAgB;AAAA,IACzB;AAAA;AAAA,IAEA,IAAI,MAAM;AACN,aAAO,KAAK,MAAM,KAAK,eAAe,OAAO,KAAK,eAAe,KAAK,GAAG;AAAA,IAC7E;AAAA,IACA,IAAI,SAAS;AACT,aAAO,KAAK,oBAAoB,KAAK;AAAA,IACzC;AAAA,IACA,SAASC,OAAM;AACX,YAAM,EAAE,MAAM,KAAK,OAAO,IAAI;AAC9B,aAAO;AAAA,QACH,MAAAA;AAAA,QACA,WAAW;AAAA,QACX,SAAS;AAAA,QACT,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,aAAa;AAAA,QACb,WAAW;AAAA,MACf;AAAA,IACJ;AAAA,IACA,KAAKA,OAAM;AACP,UAAI,KAAK,QAAQ,gBAAgB,KAAK,kBAAkB,KAAK,QAAQ;AACjE,aAAK,gBAAgB,KAAK;AAC1B,aAAK,QAAQ,aAAa,KAAK,SAASA,KAAI,CAAC;AAAA,MACjD;AAAA,IACJ;AAAA,IACA,UAAU;AACN,WAAK,SAAS,KAAK,KAAK,UAAU;AAClC,WAAK,aAAa,KAAK;AAAA,IAC3B;AAAA,IACA,kBAAkB,IAAI;AAElB,UAAI,KAAK,QAAQ,KAAK,KAAK,SAAS,GAAG;AACnC,cAAM,SAAS,KAAK,KAAK,WAAW,KAAK,MAAM,CAAC;AAChD,YAAI,gBAAgB,MAAM,GAAG;AAEzB,eAAK;AAEL,eAAK,QAAQ;AACb,iBAAO,0BAA0B,IAAI,MAAM;AAAA,QAC/C;AAAA,MACJ,WAES,CAAC,KAAK,kBAAkB;AAC7B,aAAK,gBAAgB;AACrB,eAAO,YAAE;AAAA,MACb;AAEA,WAAK,KAAK,IAAI,sBAAsB;AACpC,aAAO;AAAA,IACX;AAAA,IACA,sBAAsB;AAClB,aAAO,KAAK,MAAM,KAAK;AAAA,IAC3B;AAAA,IACA,kBAAkB;AACd,UAAI,KAAK,oBAAoB,GAAG;AAC5B,aAAK,OAAO,KAAK,KAAK,UAAU,KAAK,GAAG;AACxC,aAAK,gBAAgB,KAAK;AAC1B,aAAK,qBAAqB,KAAK;AAC/B,aAAK,MAAM;AACX,aAAK,aAAa;AAClB,aAAK,SAAS,SAAS;AAAA,MAC3B;AAAA,IACJ;AAAA,IACA,MAAM,OAAO,aAAa;AACtB,UAAI,KAAK,KAAK,SAAS,GAAG;AACtB,aAAK,QAAQ;AAAA,MACjB,OACK;AACD,aAAK,OAAO;AAAA,MAChB;AACA,WAAK,gBAAgB;AACrB,WAAK,mBAAmB;AAAA,IAC5B;AAAA,IACA,uBAAuB,OAAO;AAC1B,WAAK,OAAO,KAAK,KAAK,UAAU,GAAG,KAAK,MAAM,CAAC,IAAI,QAAQ,KAAK,KAAK,UAAU,KAAK,MAAM,CAAC;AAC3F,WAAK,gBAAgB;AAAA,IACzB;AAAA,IACA,WAAW,SAAS,eAAe;AAE/B,UAAI,KAAK,MAAM,QAAQ,SAAS,KAAK,KAAK,QAAQ;AAC9C,aAAK,gBAAgB,CAAC,KAAK;AAC3B,eAAO;AAAA,MACX;AACA,UAAI,eAAe;AACf,eAAO,KAAK,KAAK,WAAW,SAAS,KAAK,GAAG;AAAA,MACjD;AACA,eAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACrC,cAAM,KAAK,KAAK,KAAK,WAAW,KAAK,MAAM,CAAC,IAAI;AAChD,YAAI,OAAO,QAAQ,WAAW,CAAC,GAAG;AAC9B,iBAAO;AAAA,QACX;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAAA,IACA,KAAK,QAAQ;AACT,YAAM,MAAM,KAAK,MAAM;AACvB,UAAI,OAAO,KAAK,KAAK,QAAQ;AACzB,aAAK,gBAAgB,CAAC,KAAK;AAC3B,eAAO,YAAE;AAAA,MACb;AACA,YAAMA,QAAO,KAAK,KAAK,WAAW,GAAG;AACrC,aAAOA,UAAS,YAAE,kBAAkB,YAAE,YAAYA;AAAA,IACtD;AAAA,IACA,UAAU;AACN,WAAK;AAEL,UAAI,KAAK,OAAO;AACZ,aAAK,QAAQ;AACb,aAAK;AACL,aAAK,eAAe,KAAK;AAAA,MAC7B;AACA,UAAI,KAAK,OAAO,KAAK,KAAK,QAAQ;AAC9B,aAAK,gBAAgB,CAAC,KAAK;AAC3B,eAAO,YAAE;AAAA,MACb;AACA,UAAI,KAAK,KAAK,KAAK,WAAW,KAAK,GAAG;AAEtC,UAAI,OAAO,YAAE,iBAAiB;AAC1B,aAAK,QAAQ;AACb,aAAK,kBAAkB;AACvB,eAAO,YAAE;AAAA,MACb;AAGA,UAAI,OAAO,YAAE,WAAW;AACpB,aAAK,QAAQ;AACb,YAAI,KAAK,iBAAiB;AAEtB,eAAK;AACL,eAAK,kBAAkB;AACvB,eAAK,QAAQ;AACb,iBAAO,KAAK,QAAQ;AAAA,QACxB;AAAA,MACJ;AACA,WAAK,kBAAkB;AACvB,UAAI,YAAY,EAAE,GAAG;AACjB,aAAK,KAAK,kBAAkB,EAAE;AAAA,MAClC;AAIA,YAAM,qBAAqB,KAAK,QAAQ,iBAAiB,QACpD,KAAK,MAAQ,KAAK,OACnB,OAAO,YAAE,aACT,OAAO,YAAE,mBACR,KAAK,OAAQ,KAAK;AACvB,UAAI,CAAC,oBAAoB;AACrB,aAAK,+BAA+B,EAAE;AAAA,MAC1C;AACA,aAAO;AAAA,IACX;AAAA,IACA,+BAA+B,IAAI;AAC/B,UAAI,mBAAmB,EAAE,GAAG;AACxB,aAAK,KAAK,IAAI,6BAA6B;AAAA,MAC/C,WACS,qBAAqB,EAAE,GAAG;AAC/B,aAAK,KAAK,IAAI,yBAAyB;AAAA,MAC3C;AAAA,IACJ;AAAA,IACA,QAAQ,OAAO;AACX,WAAK,OAAO;AACZ,aAAO,KAAK,MAAM,KAAK,YAAY;AAC/B,aAAK,aAAa,KAAK,SAAS,IAAI;AACpC,aAAK;AAAA,MACT;AACA,WAAK,QAAQ;AAAA,IACjB;AAAA,EACJ;;;ACjMO,MAAI;AACX,GAAC,SAAUC,YAAW;AAClB,IAAAA,WAAUA,WAAU,WAAW,IAAI,CAAC,IAAI;AACxC,IAAAA,WAAUA,WAAU,gBAAgB,IAAI,CAAC,IAAI;AAC7C,IAAAA,WAAUA,WAAU,sBAAsB,IAAI,CAAC,IAAI;AACnD,IAAAA,WAAUA,WAAU,WAAW,IAAI,CAAC,IAAI;AACxC,IAAAA,WAAUA,WAAU,SAAS,IAAI,CAAC,IAAI;AACtC,IAAAA,WAAUA,WAAU,SAAS,IAAI,CAAC,IAAI;AACtC,IAAAA,WAAUA,WAAU,SAAS,IAAI,CAAC,IAAI;AACtC,IAAAA,WAAUA,WAAU,KAAK,IAAI,CAAC,IAAI;AAClC,IAAAA,WAAUA,WAAU,aAAa,IAAI,CAAC,IAAI;AAAA,EAC9C,GAAG,YAAY,cAAc,YAAY,CAAC,EAAE;AACrC,WAAS,aAAa,OAAO,UAAU;AAC1C,aAAS,IAAI,MAAM,MAAM,SAAS,GAAG,KAAK,GAAG,KAAK;AAC9C,UAAI,MAAM,MAAM,CAAC,EAAE,SAAS,UAAU;AAClC,eAAO,MAAM,MAAM,CAAC,EAAE;AAAA,MAC1B;AAAA,IACJ;AACA,WAAO;AAAA,EACX;;;ACjBA,MAAA,2BAAe,IAAI;;IAEf,4h8CACK,MAAM,EAAE,EACR,IAAI,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;EAAC;;;ACJpC,MAAA,0BAAe,IAAI;;IAEf,2EACK,MAAM,EAAE,EACR,IAAI,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;EAAC;;;;ACJpC,MAAM,YAAY,oBAAI,IAAI;IACtB,CAAC,GAAG,KAAK;IACT,CAAC,KAAK,IAAI;IACV,CAAC,KAAK,IAAI;IACV,CAAC,KAAK,GAAG;IACT,CAAC,KAAK,IAAI;IACV,CAAC,KAAK,IAAI;IACV,CAAC,KAAK,IAAI;IACV,CAAC,KAAK,IAAI;IACV,CAAC,KAAK,GAAG;IACT,CAAC,KAAK,IAAI;IACV,CAAC,KAAK,GAAG;IACT,CAAC,KAAK,IAAI;IACV,CAAC,KAAK,GAAG;IACT,CAAC,KAAK,GAAG;IACT,CAAC,KAAK,IAAI;IACV,CAAC,KAAK,IAAI;IACV,CAAC,KAAK,IAAI;IACV,CAAC,KAAK,IAAI;IACV,CAAC,KAAK,IAAI;IACV,CAAC,KAAK,IAAI;IACV,CAAC,KAAK,IAAI;IACV,CAAC,KAAK,GAAG;IACT,CAAC,KAAK,IAAI;IACV,CAAC,KAAK,GAAG;IACT,CAAC,KAAK,IAAI;IACV,CAAC,KAAK,GAAG;IACT,CAAC,KAAK,GAAG;IACT,CAAC,KAAK,GAAG;GACZ;AAEM,MAAM;;KAET,KAAA,OAAO,mBAAa,QAAA,OAAA,SAAA,KACpB,SAAU,WAAiB;AACvB,UAAI,SAAS;AAEb,UAAI,YAAY,OAAQ;AACpB,qBAAa;AACb,kBAAU,OAAO,aACX,cAAc,KAAM,OAAS,KAAM;AAEzC,oBAAY,QAAU,YAAY;;AAGtC,gBAAU,OAAO,aAAa,SAAS;AACvC,aAAO;IACX;;AAEE,WAAU,iBAAiB,WAAiB;;AAC9C,QAAK,aAAa,SAAU,aAAa,SAAW,YAAY,SAAU;AACtE,aAAO;;AAGX,YAAOC,MAAA,UAAU,IAAI,SAAS,OAAC,QAAAA,QAAA,SAAAA,MAAI;EACvC;AAEc,WAAP,gBAAiC,WAAiB;AACrD,WAAO,cAAc,iBAAiB,SAAS,CAAC;EACpD;;;ACrDA,MAAW;AAAX,GAAA,SAAWC,YAAS;AAChB,IAAAA,WAAAA,WAAA,KAAA,IAAA,EAAA,IAAA;AACA,IAAAA,WAAAA,WAAA,MAAA,IAAA,EAAA,IAAA;AACA,IAAAA,WAAAA,WAAA,MAAA,IAAA,EAAA,IAAA;AACA,IAAAA,WAAAA,WAAA,MAAA,IAAA,EAAA,IAAA;AACA,IAAAA,WAAAA,WAAA,SAAA,IAAA,EAAA,IAAA;AACA,IAAAA,WAAAA,WAAA,SAAA,IAAA,GAAA,IAAA;AACA,IAAAA,WAAAA,WAAA,SAAA,IAAA,GAAA,IAAA;AAEA,IAAAA,WAAAA,WAAA,cAAA,IAAA,EAAA,IAAA;EACJ,GAVW,cAAA,YAAS,CAAA,EAAA;AAYpB,MAAY;AAAZ,GAAA,SAAYC,eAAY;AACpB,IAAAA,cAAAA,cAAA,cAAA,IAAA,KAAA,IAAA;AACA,IAAAA,cAAAA,cAAA,eAAA,IAAA,KAAA,IAAA;AACA,IAAAA,cAAAA,cAAA,YAAA,IAAA,GAAA,IAAA;EACJ,GAJY,iBAAA,eAAY,CAAA,EAAA;AAMxB,WAAS,WAAW,YAAuB;AACvC,WAAO,SAAS,iBAAiB,KAAa,QAAe;AACzD,UAAI,MAAM;AACV,UAAI,UAAU;AACd,UAAI,SAAS;AAEb,cAAQ,SAAS,IAAI,QAAQ,KAAK,MAAM,MAAM,GAAG;AAC7C,eAAO,IAAI,MAAM,SAAS,MAAM;AAChC,kBAAU;AAEV,kBAAU;AAGV,YAAI,IAAI,WAAW,MAAM,MAAM,UAAU,KAAK;AAE1C,cAAI,QAAQ,SAAS;AACrB,cAAI,OAAO;AAEX,cAAI,KAAK,IAAI,WAAW,KAAK;AAC7B,eAAK,KAAK,UAAU,kBAAkB,UAAU,SAAS;AACrD,mBAAO;AACP,sBAAU;AACV,qBAAS;;AAGb;AAAG,iBAAK,IAAI,WAAW,EAAE,MAAM;iBAE1B,MAAM,UAAU,QAAQ,MAAM,UAAU,QACxC,SAAS,OACL,KAAK,UAAU,iBAAiB,UAAU,YAC1C,KAAK,UAAU,iBAAiB,UAAU;AAGnD,cAAI,UAAU,QAAQ;AAClB,kBAAM,SAAS,IAAI,UAAU,OAAO,MAAM;AAC1C,kBAAM,SAAS,SAAS,QAAQ,IAAI;AAEpC,gBAAI,IAAI,WAAW,MAAM,MAAM,UAAU,MAAM;AAC3C,wBAAU;uBACH,QAAQ;AACf;;AAGJ,mBAAO,gBAAgB,MAAM;AAC7B,sBAAU;;AAGd;;AAGJ,YAAI,YAAY;AAChB,YAAI,SAAS;AACb,YAAI,UAAU;AACd,YAAI,UAAU,WAAW,OAAO;AAEhC,eAAO,SAAS,IAAI,QAAQ,UAAU,UAAU;AAC5C,oBAAU,gBACN,YACA,SACA,UAAU,GACV,IAAI,WAAW,MAAM,CAAC;AAG1B,cAAI,UAAU;AAAG;AAEjB,oBAAU,WAAW,OAAO;AAE5B,gBAAM,SAAS,UAAU,aAAa;AAGtC,cAAI,QAAQ;AAER,gBAAI,CAAC,UAAU,IAAI,WAAW,MAAM,MAAM,UAAU,MAAM;AACtD,0BAAY;AACZ,uBAAS;;AAIb,kBAAM,eAAe,UAAU,MAAM;AAErC,gBAAI,gBAAgB;AAAG;AAEvB,uBAAW;;;AAInB,YAAI,cAAc,GAAG;AACjB,gBAAM,eACD,WAAW,SAAS,IAAI,aAAa,iBAAiB;AAC3D,iBACI,gBAAgB,IACV,OAAO,aACH,WAAW,SAAS,IAAI,CAAC,aAAa,YAAY,IAEtD,gBAAgB,IAChB,OAAO,aAAa,WAAW,YAAY,CAAC,CAAC,IAC7C,OAAO,aACH,WAAW,YAAY,CAAC,GACxB,WAAW,YAAY,CAAC,CAAC;AAEvC,oBAAU,SAAS,SAAS;;;AAIpC,aAAO,MAAM,IAAI,MAAM,OAAO;IAClC;EACJ;AAEM,WAAU,gBACZ,YACA,SACA,SACA,MAAY;AAEZ,UAAM,eAAe,UAAU,aAAa,kBAAkB;AAC9D,UAAM,aAAa,UAAU,aAAa;AAG1C,QAAI,gBAAgB,GAAG;AACnB,aAAO,eAAe,KAAK,SAAS,aAAa,UAAU;;AAI/D,QAAI,YAAY;AACZ,YAAM,QAAQ,OAAO;AAErB,aAAO,QAAQ,KAAK,SAAS,cACvB,KACA,WAAW,UAAU,KAAK,IAAI;;AAMxC,QAAI,KAAK;AACT,QAAI,KAAK,KAAK,cAAc;AAE5B,WAAO,MAAM,IAAI;AACb,YAAM,MAAO,KAAK,OAAQ;AAC1B,YAAM,SAAS,WAAW,GAAG;AAE7B,UAAI,SAAS,MAAM;AACf,aAAK,MAAM;iBACJ,SAAS,MAAM;AACtB,aAAK,MAAM;aACR;AACH,eAAO,WAAW,MAAM,WAAW;;;AAI3C,WAAO;EACX;AAEA,MAAM,cAAc,WAAW,wBAAc;AAC7C,MAAM,aAAa,WAAW,uBAAa;;;ACnLpC,MAAI;AACX,GAAC,SAAUC,KAAI;AACX,IAAAA,IAAG,MAAM,IAAI;AACb,IAAAA,IAAG,QAAQ,IAAI;AACf,IAAAA,IAAG,KAAK,IAAI;AACZ,IAAAA,IAAG,OAAO,IAAI;AACd,IAAAA,IAAG,KAAK,IAAI;AACZ,IAAAA,IAAG,OAAO,IAAI;AAAA,EAClB,GAAG,KAAK,OAAO,KAAK,CAAC,EAAE;AAChB,MAAI;AACX,GAAC,SAAUC,QAAO;AACd,IAAAA,OAAM,MAAM,IAAI;AAChB,IAAAA,OAAM,QAAQ,IAAI;AAClB,IAAAA,OAAM,UAAU,IAAI;AACpB,IAAAA,OAAM,QAAQ,IAAI;AAClB,IAAAA,OAAM,MAAM,IAAI;AAChB,IAAAA,OAAM,OAAO,IAAI;AACjB,IAAAA,OAAM,MAAM,IAAI;AAChB,IAAAA,OAAM,MAAM,IAAI;AAAA,EACpB,GAAG,QAAQ,UAAU,QAAQ,CAAC,EAAE;AAMzB,MAAI;AACX,GAAC,SAAUC,gBAAe;AACtB,IAAAA,eAAc,WAAW,IAAI;AAC7B,IAAAA,eAAc,QAAQ,IAAI;AAC1B,IAAAA,eAAc,gBAAgB,IAAI;AAAA,EACtC,GAAG,gBAAgB,kBAAkB,gBAAgB,CAAC,EAAE;AACjD,MAAI;AACX,GAAC,SAAUC,YAAW;AAClB,IAAAA,WAAU,GAAG,IAAI;AACjB,IAAAA,WAAU,SAAS,IAAI;AACvB,IAAAA,WAAU,gBAAgB,IAAI;AAC9B,IAAAA,WAAU,QAAQ,IAAI;AACtB,IAAAA,WAAU,MAAM,IAAI;AACpB,IAAAA,WAAU,SAAS,IAAI;AACvB,IAAAA,WAAU,OAAO,IAAI;AACrB,IAAAA,WAAU,GAAG,IAAI;AACjB,IAAAA,WAAU,MAAM,IAAI;AACpB,IAAAA,WAAU,UAAU,IAAI;AACxB,IAAAA,WAAU,SAAS,IAAI;AACvB,IAAAA,WAAU,KAAK,IAAI;AACnB,IAAAA,WAAU,YAAY,IAAI;AAC1B,IAAAA,WAAU,MAAM,IAAI;AACpB,IAAAA,WAAU,IAAI,IAAI;AAClB,IAAAA,WAAU,QAAQ,IAAI;AACtB,IAAAA,WAAU,SAAS,IAAI;AACvB,IAAAA,WAAU,QAAQ,IAAI;AACtB,IAAAA,WAAU,MAAM,IAAI;AACpB,IAAAA,WAAU,KAAK,IAAI;AACnB,IAAAA,WAAU,UAAU,IAAI;AACxB,IAAAA,WAAU,IAAI,IAAI;AAClB,IAAAA,WAAU,MAAM,IAAI;AACpB,IAAAA,WAAU,SAAS,IAAI;AACvB,IAAAA,WAAU,QAAQ,IAAI;AACtB,IAAAA,WAAU,KAAK,IAAI;AACnB,IAAAA,WAAU,KAAK,IAAI;AACnB,IAAAA,WAAU,IAAI,IAAI;AAClB,IAAAA,WAAU,IAAI,IAAI;AAClB,IAAAA,WAAU,IAAI,IAAI;AAClB,IAAAA,WAAU,OAAO,IAAI;AACrB,IAAAA,WAAU,UAAU,IAAI;AACxB,IAAAA,WAAU,YAAY,IAAI;AAC1B,IAAAA,WAAU,QAAQ,IAAI;AACtB,IAAAA,WAAU,MAAM,IAAI;AACpB,IAAAA,WAAU,QAAQ,IAAI;AACtB,IAAAA,WAAU,gBAAgB,IAAI;AAC9B,IAAAA,WAAU,MAAM,IAAI;AACpB,IAAAA,WAAU,OAAO,IAAI;AACrB,IAAAA,WAAU,UAAU,IAAI;AACxB,IAAAA,WAAU,IAAI,IAAI;AAClB,IAAAA,WAAU,IAAI,IAAI;AAClB,IAAAA,WAAU,IAAI,IAAI;AAClB,IAAAA,WAAU,IAAI,IAAI;AAClB,IAAAA,WAAU,IAAI,IAAI;AAClB,IAAAA,WAAU,IAAI,IAAI;AAClB,IAAAA,WAAU,MAAM,IAAI;AACpB,IAAAA,WAAU,QAAQ,IAAI;AACtB,IAAAA,WAAU,QAAQ,IAAI;AACtB,IAAAA,WAAU,IAAI,IAAI;AAClB,IAAAA,WAAU,MAAM,IAAI;AACpB,IAAAA,WAAU,GAAG,IAAI;AACjB,IAAAA,WAAU,KAAK,IAAI;AACnB,IAAAA,WAAU,OAAO,IAAI;AACrB,IAAAA,WAAU,OAAO,IAAI;AACrB,IAAAA,WAAU,QAAQ,IAAI;AACtB,IAAAA,WAAU,QAAQ,IAAI;AACtB,IAAAA,WAAU,OAAO,IAAI;AACrB,IAAAA,WAAU,IAAI,IAAI;AAClB,IAAAA,WAAU,MAAM,IAAI;AACpB,IAAAA,WAAU,SAAS,IAAI;AACvB,IAAAA,WAAU,MAAM,IAAI;AACpB,IAAAA,WAAU,YAAY,IAAI;AAC1B,IAAAA,WAAU,SAAS,IAAI;AACvB,IAAAA,WAAU,MAAM,IAAI;AACpB,IAAAA,WAAU,MAAM,IAAI;AACpB,IAAAA,WAAU,MAAM,IAAI;AACpB,IAAAA,WAAU,QAAQ,IAAI;AACtB,IAAAA,WAAU,IAAI,IAAI;AAClB,IAAAA,WAAU,IAAI,IAAI;AAClB,IAAAA,WAAU,IAAI,IAAI;AAClB,IAAAA,WAAU,IAAI,IAAI;AAClB,IAAAA,WAAU,OAAO,IAAI;AACrB,IAAAA,WAAU,KAAK,IAAI;AACnB,IAAAA,WAAU,MAAM,IAAI;AACpB,IAAAA,WAAU,UAAU,IAAI;AACxB,IAAAA,WAAU,SAAS,IAAI;AACvB,IAAAA,WAAU,UAAU,IAAI;AACxB,IAAAA,WAAU,QAAQ,IAAI;AACtB,IAAAA,WAAU,IAAI,IAAI;AAClB,IAAAA,WAAU,UAAU,IAAI;AACxB,IAAAA,WAAU,QAAQ,IAAI;AACtB,IAAAA,WAAU,GAAG,IAAI;AACjB,IAAAA,WAAU,OAAO,IAAI;AACrB,IAAAA,WAAU,WAAW,IAAI;AACzB,IAAAA,WAAU,KAAK,IAAI;AACnB,IAAAA,WAAU,IAAI,IAAI;AAClB,IAAAA,WAAU,IAAI,IAAI;AAClB,IAAAA,WAAU,IAAI,IAAI;AAClB,IAAAA,WAAU,KAAK,IAAI;AACnB,IAAAA,WAAU,MAAM,IAAI;AACpB,IAAAA,WAAU,GAAG,IAAI;AACjB,IAAAA,WAAU,QAAQ,IAAI;AACtB,IAAAA,WAAU,SAAS,IAAI;AACvB,IAAAA,WAAU,QAAQ,IAAI;AACtB,IAAAA,WAAU,QAAQ,IAAI;AACtB,IAAAA,WAAU,OAAO,IAAI;AACrB,IAAAA,WAAU,MAAM,IAAI;AACpB,IAAAA,WAAU,QAAQ,IAAI;AACtB,IAAAA,WAAU,QAAQ,IAAI;AACtB,IAAAA,WAAU,OAAO,IAAI;AACrB,IAAAA,WAAU,KAAK,IAAI;AACnB,IAAAA,WAAU,SAAS,IAAI;AACvB,IAAAA,WAAU,KAAK,IAAI;AACnB,IAAAA,WAAU,OAAO,IAAI;AACrB,IAAAA,WAAU,OAAO,IAAI;AACrB,IAAAA,WAAU,UAAU,IAAI;AACxB,IAAAA,WAAU,UAAU,IAAI;AACxB,IAAAA,WAAU,OAAO,IAAI;AACrB,IAAAA,WAAU,IAAI,IAAI;AAClB,IAAAA,WAAU,IAAI,IAAI;AAClB,IAAAA,WAAU,OAAO,IAAI;AACrB,IAAAA,WAAU,OAAO,IAAI;AACrB,IAAAA,WAAU,IAAI,IAAI;AAClB,IAAAA,WAAU,OAAO,IAAI;AACrB,IAAAA,WAAU,IAAI,IAAI;AAClB,IAAAA,WAAU,GAAG,IAAI;AACjB,IAAAA,WAAU,IAAI,IAAI;AAClB,IAAAA,WAAU,KAAK,IAAI;AACnB,IAAAA,WAAU,KAAK,IAAI;AACnB,IAAAA,WAAU,KAAK,IAAI;AACnB,IAAAA,WAAU,KAAK,IAAI;AAAA,EACvB,GAAG,YAAY,cAAc,YAAY,CAAC,EAAE;AAMrC,MAAI;AACX,GAAC,SAAUC,SAAQ;AACf,IAAAA,QAAOA,QAAO,SAAS,IAAI,CAAC,IAAI;AAChC,IAAAA,QAAOA,QAAO,GAAG,IAAI,CAAC,IAAI;AAC1B,IAAAA,QAAOA,QAAO,SAAS,IAAI,CAAC,IAAI;AAChC,IAAAA,QAAOA,QAAO,gBAAgB,IAAI,CAAC,IAAI;AACvC,IAAAA,QAAOA,QAAO,QAAQ,IAAI,CAAC,IAAI;AAC/B,IAAAA,QAAOA,QAAO,MAAM,IAAI,CAAC,IAAI;AAC7B,IAAAA,QAAOA,QAAO,SAAS,IAAI,CAAC,IAAI;AAChC,IAAAA,QAAOA,QAAO,OAAO,IAAI,CAAC,IAAI;AAC9B,IAAAA,QAAOA,QAAO,GAAG,IAAI,CAAC,IAAI;AAC1B,IAAAA,QAAOA,QAAO,MAAM,IAAI,CAAC,IAAI;AAC7B,IAAAA,QAAOA,QAAO,UAAU,IAAI,EAAE,IAAI;AAClC,IAAAA,QAAOA,QAAO,SAAS,IAAI,EAAE,IAAI;AACjC,IAAAA,QAAOA,QAAO,KAAK,IAAI,EAAE,IAAI;AAC7B,IAAAA,QAAOA,QAAO,YAAY,IAAI,EAAE,IAAI;AACpC,IAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,IAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,IAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,IAAAA,QAAOA,QAAO,SAAS,IAAI,EAAE,IAAI;AACjC,IAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,IAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,IAAAA,QAAOA,QAAO,KAAK,IAAI,EAAE,IAAI;AAC7B,IAAAA,QAAOA,QAAO,UAAU,IAAI,EAAE,IAAI;AAClC,IAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,IAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,IAAAA,QAAOA,QAAO,SAAS,IAAI,EAAE,IAAI;AACjC,IAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,IAAAA,QAAOA,QAAO,KAAK,IAAI,EAAE,IAAI;AAC7B,IAAAA,QAAOA,QAAO,KAAK,IAAI,EAAE,IAAI;AAC7B,IAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,IAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,IAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,IAAAA,QAAOA,QAAO,OAAO,IAAI,EAAE,IAAI;AAC/B,IAAAA,QAAOA,QAAO,UAAU,IAAI,EAAE,IAAI;AAClC,IAAAA,QAAOA,QAAO,YAAY,IAAI,EAAE,IAAI;AACpC,IAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,IAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,IAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,IAAAA,QAAOA,QAAO,gBAAgB,IAAI,EAAE,IAAI;AACxC,IAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,IAAAA,QAAOA,QAAO,OAAO,IAAI,EAAE,IAAI;AAC/B,IAAAA,QAAOA,QAAO,UAAU,IAAI,EAAE,IAAI;AAClC,IAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,IAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,IAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,IAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,IAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,IAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,IAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,IAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,IAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,IAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,IAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,IAAAA,QAAOA,QAAO,GAAG,IAAI,EAAE,IAAI;AAC3B,IAAAA,QAAOA,QAAO,KAAK,IAAI,EAAE,IAAI;AAC7B,IAAAA,QAAOA,QAAO,OAAO,IAAI,EAAE,IAAI;AAC/B,IAAAA,QAAOA,QAAO,OAAO,IAAI,EAAE,IAAI;AAC/B,IAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,IAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,IAAAA,QAAOA,QAAO,OAAO,IAAI,EAAE,IAAI;AAC/B,IAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,IAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,IAAAA,QAAOA,QAAO,SAAS,IAAI,EAAE,IAAI;AACjC,IAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,IAAAA,QAAOA,QAAO,YAAY,IAAI,EAAE,IAAI;AACpC,IAAAA,QAAOA,QAAO,SAAS,IAAI,EAAE,IAAI;AACjC,IAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,IAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,IAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,IAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,IAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,IAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,IAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,IAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,IAAAA,QAAOA,QAAO,OAAO,IAAI,EAAE,IAAI;AAC/B,IAAAA,QAAOA,QAAO,KAAK,IAAI,EAAE,IAAI;AAC7B,IAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,IAAAA,QAAOA,QAAO,UAAU,IAAI,EAAE,IAAI;AAClC,IAAAA,QAAOA,QAAO,SAAS,IAAI,EAAE,IAAI;AACjC,IAAAA,QAAOA,QAAO,UAAU,IAAI,EAAE,IAAI;AAClC,IAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,IAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,IAAAA,QAAOA,QAAO,UAAU,IAAI,EAAE,IAAI;AAClC,IAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,IAAAA,QAAOA,QAAO,GAAG,IAAI,EAAE,IAAI;AAC3B,IAAAA,QAAOA,QAAO,OAAO,IAAI,EAAE,IAAI;AAC/B,IAAAA,QAAOA,QAAO,WAAW,IAAI,EAAE,IAAI;AACnC,IAAAA,QAAOA,QAAO,KAAK,IAAI,EAAE,IAAI;AAC7B,IAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,IAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,IAAAA,QAAOA,QAAO,IAAI,IAAI,EAAE,IAAI;AAC5B,IAAAA,QAAOA,QAAO,KAAK,IAAI,EAAE,IAAI;AAC7B,IAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,IAAAA,QAAOA,QAAO,GAAG,IAAI,EAAE,IAAI;AAC3B,IAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,IAAAA,QAAOA,QAAO,SAAS,IAAI,EAAE,IAAI;AACjC,IAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,IAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,IAAAA,QAAOA,QAAO,OAAO,IAAI,EAAE,IAAI;AAC/B,IAAAA,QAAOA,QAAO,MAAM,IAAI,EAAE,IAAI;AAC9B,IAAAA,QAAOA,QAAO,QAAQ,IAAI,EAAE,IAAI;AAChC,IAAAA,QAAOA,QAAO,QAAQ,IAAI,GAAG,IAAI;AACjC,IAAAA,QAAOA,QAAO,OAAO,IAAI,GAAG,IAAI;AAChC,IAAAA,QAAOA,QAAO,KAAK,IAAI,GAAG,IAAI;AAC9B,IAAAA,QAAOA,QAAO,SAAS,IAAI,GAAG,IAAI;AAClC,IAAAA,QAAOA,QAAO,KAAK,IAAI,GAAG,IAAI;AAC9B,IAAAA,QAAOA,QAAO,OAAO,IAAI,GAAG,IAAI;AAChC,IAAAA,QAAOA,QAAO,OAAO,IAAI,GAAG,IAAI;AAChC,IAAAA,QAAOA,QAAO,UAAU,IAAI,GAAG,IAAI;AACnC,IAAAA,QAAOA,QAAO,UAAU,IAAI,GAAG,IAAI;AACnC,IAAAA,QAAOA,QAAO,OAAO,IAAI,GAAG,IAAI;AAChC,IAAAA,QAAOA,QAAO,IAAI,IAAI,GAAG,IAAI;AAC7B,IAAAA,QAAOA,QAAO,IAAI,IAAI,GAAG,IAAI;AAC7B,IAAAA,QAAOA,QAAO,OAAO,IAAI,GAAG,IAAI;AAChC,IAAAA,QAAOA,QAAO,OAAO,IAAI,GAAG,IAAI;AAChC,IAAAA,QAAOA,QAAO,IAAI,IAAI,GAAG,IAAI;AAC7B,IAAAA,QAAOA,QAAO,OAAO,IAAI,GAAG,IAAI;AAChC,IAAAA,QAAOA,QAAO,IAAI,IAAI,GAAG,IAAI;AAC7B,IAAAA,QAAOA,QAAO,GAAG,IAAI,GAAG,IAAI;AAC5B,IAAAA,QAAOA,QAAO,IAAI,IAAI,GAAG,IAAI;AAC7B,IAAAA,QAAOA,QAAO,KAAK,IAAI,GAAG,IAAI;AAC9B,IAAAA,QAAOA,QAAO,KAAK,IAAI,GAAG,IAAI;AAC9B,IAAAA,QAAOA,QAAO,KAAK,IAAI,GAAG,IAAI;AAC9B,IAAAA,QAAOA,QAAO,KAAK,IAAI,GAAG,IAAI;AAAA,EAClC,GAAG,SAAS,WAAW,SAAS,CAAC,EAAE;AACnC,MAAM,iBAAiB,oBAAI,IAAI;AAAA,IAC3B,CAAC,UAAU,GAAG,OAAO,CAAC;AAAA,IACtB,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,IAClC,CAAC,UAAU,gBAAgB,OAAO,cAAc;AAAA,IAChD,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,IAChC,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,IAC5B,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,IAClC,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,IAC9B,CAAC,UAAU,GAAG,OAAO,CAAC;AAAA,IACtB,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,IAC5B,CAAC,UAAU,UAAU,OAAO,QAAQ;AAAA,IACpC,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,IAClC,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,IAC1B,CAAC,UAAU,YAAY,OAAO,UAAU;AAAA,IACxC,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,IAC5B,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,IACxB,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,IAChC,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,IAClC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,IAChC,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,IAC5B,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,IAC1B,CAAC,UAAU,UAAU,OAAO,QAAQ;AAAA,IACpC,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,IACxB,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,IAC5B,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,IAClC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,IAChC,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,IAC1B,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,IAC1B,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,IACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,IACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,IACxB,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,IAC9B,CAAC,UAAU,UAAU,OAAO,QAAQ;AAAA,IACpC,CAAC,UAAU,YAAY,OAAO,UAAU;AAAA,IACxC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,IAChC,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,IAC5B,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,IAChC,CAAC,UAAU,gBAAgB,OAAO,cAAc;AAAA,IAChD,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,IAC5B,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,IAC9B,CAAC,UAAU,UAAU,OAAO,QAAQ;AAAA,IACpC,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,IACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,IACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,IACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,IACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,IACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,IACxB,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,IAC5B,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,IAChC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,IAChC,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,IACxB,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,IAC5B,CAAC,UAAU,GAAG,OAAO,CAAC;AAAA,IACtB,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,IAC1B,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,IAC9B,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,IAC9B,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,IAChC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,IAChC,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,IAC9B,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,IACxB,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,IAC5B,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,IAClC,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,IAC5B,CAAC,UAAU,YAAY,OAAO,UAAU;AAAA,IACxC,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,IAClC,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,IAC5B,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,IAC5B,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,IAC5B,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,IAChC,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,IACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,IACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,IACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,IACxB,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,IAC9B,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,IAC1B,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,IAC5B,CAAC,UAAU,UAAU,OAAO,QAAQ;AAAA,IACpC,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,IAClC,CAAC,UAAU,UAAU,OAAO,QAAQ;AAAA,IACpC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,IAChC,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,IACxB,CAAC,UAAU,UAAU,OAAO,QAAQ;AAAA,IACpC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,IAChC,CAAC,UAAU,GAAG,OAAO,CAAC;AAAA,IACtB,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,IAC9B,CAAC,UAAU,WAAW,OAAO,SAAS;AAAA,IACtC,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,IAC1B,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,IACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,IACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,IACxB,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,IAC1B,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,IAC5B,CAAC,UAAU,GAAG,OAAO,CAAC;AAAA,IACtB,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,IAChC,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,IAClC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,IAChC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,IAChC,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,IAC9B,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,IAC5B,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,IAChC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,IAChC,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,IAC9B,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,IAC1B,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,IAClC,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,IAC1B,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,IAC9B,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,IAC9B,CAAC,UAAU,UAAU,OAAO,QAAQ;AAAA,IACpC,CAAC,UAAU,UAAU,OAAO,QAAQ;AAAA,IACpC,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,IAC9B,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,IACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,IACxB,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,IAC9B,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,IAC9B,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,IACxB,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,IAC9B,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,IACxB,CAAC,UAAU,GAAG,OAAO,CAAC;AAAA,IACtB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,IACxB,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,IAC1B,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,IAC1B,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,IAC1B,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,EAC9B,CAAC;AACM,WAAS,SAAS,SAAS;AAC9B,QAAIC;AACJ,YAAQA,MAAK,eAAe,IAAI,OAAO,OAAO,QAAQA,QAAO,SAASA,MAAK,OAAO;AAAA,EACtF;AACA,MAAM,IAAI;AACH,MAAM,mBAAmB;AAAA,IAC5B,CAAC,GAAG,IAAI,GAAG,oBAAI,IAAI;AAAA,MACfoBAAI,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,cAAc,CAAC;AAAA,IACxE,CAAC,GAAG,GAAG,GAAG,oBAAI,IAAI,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,IAAI,CAAC;AAAA,IACrD,CAAC,GAAG,KAAK,GAAG,oBAAI,IAAI;AAAA,IACpB,CAAC,GAAG,GAAG,GAAG,oBAAI,IAAI;AAAA,IAClB,CAAC,GAAG,KAAK,GAAG,oBAAI,IAAI;AAAA,EACxB;AACO,WAAS,iBAAiB,IAAI;AACjC,WAAO,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE;AAAA,EAC/F;AACA,MAAM,iBAAiB,oBAAI,IAAI;AAAA,IAC3B,UAAU;AAAA,IACV,UAAU;AAAA,IACV,UAAU;AAAA,IACV,UAAU;AAAA,IACV,UAAU;AAAA,IACV,UAAU;AAAA,IACV,UAAU;AAAA,EACd,CAAC;AACM,WAAS,iBAAiB,IAAI,kBAAkB;AACnD,WAAO,eAAe,IAAI,EAAE,KAAM,oBAAoB,OAAO,UAAU;AAAA,EAC3E;;;AClgBA,MAAM,qCAAqC,oBAAI,IAAI;AAAA,IAC/C,CAAC,KAAM,IAAI;AAAA,IACX,CAAC,KAAM,IAAI;AAAA,IACX,CAAC,KAAM,GAAG;AAAA,IACV,CAAC,KAAM,IAAI;AAAA,IACX,CAAC,KAAM,IAAI;AAAA,IACX,CAAC,KAAM,IAAI;AAAA,IACX,CAAC,KAAM,IAAI;AAAA,IACX,CAAC,KAAM,GAAG;AAAA,IACV,CAAC,KAAM,IAAI;AAAA,IACX,CAAC,KAAM,GAAG;AAAA,IACV,CAAC,KAAM,IAAI;AAAA,IACX,CAAC,KAAM,GAAG;AAAA,IACV,CAAC,KAAM,GAAG;AAAA,IACV,CAAC,KAAM,IAAI;AAAA,IACX,CAAC,KAAM,IAAI;AAAA,IACX,CAAC,KAAM,IAAI;AAAA,IACX,CAAC,KAAM,IAAI;AAAA,IACX,CAAC,KAAM,IAAI;AAAA,IACX,CAAC,KAAM,IAAI;AAAA,IACX,CAAC,KAAM,IAAI;AAAA,IACX,CAAC,KAAM,GAAG;AAAA,IACV,CAAC,KAAM,IAAI;AAAA,IACX,CAAC,KAAM,GAAG;AAAA,IACV,CAAC,KAAM,IAAI;AAAA,IACX,CAAC,KAAM,GAAG;AAAA,IACV,CAAC,KAAM,GAAG;AAAA,IACV,CAAC,KAAM,GAAG;AAAA,EACd,CAAC;AAED,MAAI;AACJ,GAAC,SAAUC,QAAO;AACd,IAAAA,OAAMA,OAAM,MAAM,IAAI,CAAC,IAAI;AAC3B,IAAAA,OAAMA,OAAM,QAAQ,IAAI,CAAC,IAAI;AAC7B,IAAAA,OAAMA,OAAM,SAAS,IAAI,CAAC,IAAI;AAC9B,IAAAA,OAAMA,OAAM,aAAa,IAAI,CAAC,IAAI;AAClC,IAAAA,OAAMA,OAAM,WAAW,IAAI,CAAC,IAAI;AAChC,IAAAA,OAAMA,OAAM,UAAU,IAAI,CAAC,IAAI;AAC/B,IAAAA,OAAMA,OAAM,cAAc,IAAI,CAAC,IAAI;AACnC,IAAAA,OAAMA,OAAM,UAAU,IAAI,CAAC,IAAI;AAC/B,IAAAA,OAAMA,OAAM,uBAAuB,IAAI,CAAC,IAAI;AAC5C,IAAAA,OAAMA,OAAM,qBAAqB,IAAI,CAAC,IAAI;AAC1C,IAAAA,OAAMA,OAAM,qBAAqB,IAAI,EAAE,IAAI;AAC3C,IAAAA,OAAMA,OAAM,wBAAwB,IAAI,EAAE,IAAI;AAC9C,IAAAA,OAAMA,OAAM,sBAAsB,IAAI,EAAE,IAAI;AAC5C,IAAAA,OAAMA,OAAM,sBAAsB,IAAI,EAAE,IAAI;AAC5C,IAAAA,OAAMA,OAAM,4BAA4B,IAAI,EAAE,IAAI;AAClD,IAAAA,OAAMA,OAAM,0BAA0B,IAAI,EAAE,IAAI;AAChD,IAAAA,OAAMA,OAAM,0BAA0B,IAAI,EAAE,IAAI;AAChD,IAAAA,OAAMA,OAAM,0BAA0B,IAAI,EAAE,IAAI;AAChD,IAAAA,OAAMA,OAAM,+BAA+B,IAAI,EAAE,IAAI;AACrD,IAAAA,OAAMA,OAAM,qBAAqB,IAAI,EAAE,IAAI;AAC3C,IAAAA,OAAMA,OAAM,0BAA0B,IAAI,EAAE,IAAI;AAChD,IAAAA,OAAMA,OAAM,+BAA+B,IAAI,EAAE,IAAI;AACrD,IAAAA,OAAMA,OAAM,oCAAoC,IAAI,EAAE,IAAI;AAC1D,IAAAA,OAAMA,OAAM,kCAAkC,IAAI,EAAE,IAAI;AACxD,IAAAA,OAAMA,OAAM,kCAAkC,IAAI,EAAE,IAAI;AACxD,IAAAA,OAAMA,OAAM,iCAAiC,IAAI,EAAE,IAAI;AACvD,IAAAA,OAAMA,OAAM,4BAA4B,IAAI,EAAE,IAAI;AAClD,IAAAA,OAAMA,OAAM,iCAAiC,IAAI,EAAE,IAAI;AACvD,IAAAA,OAAMA,OAAM,sCAAsC,IAAI,EAAE,IAAI;AAC5D,IAAAA,OAAMA,OAAM,2CAA2C,IAAI,EAAE,IAAI;AACjE,IAAAA,OAAMA,OAAM,+BAA+B,IAAI,EAAE,IAAI;AACrD,IAAAA,OAAMA,OAAM,uBAAuB,IAAI,EAAE,IAAI;AAC7C,IAAAA,OAAMA,OAAM,gBAAgB,IAAI,EAAE,IAAI;AACtC,IAAAA,OAAMA,OAAM,sBAAsB,IAAI,EAAE,IAAI;AAC5C,IAAAA,OAAMA,OAAM,wBAAwB,IAAI,EAAE,IAAI;AAC9C,IAAAA,OAAMA,OAAM,+BAA+B,IAAI,EAAE,IAAI;AACrD,IAAAA,OAAMA,OAAM,+BAA+B,IAAI,EAAE,IAAI;AACrD,IAAAA,OAAMA,OAAM,0BAA0B,IAAI,EAAE,IAAI;AAChD,IAAAA,OAAMA,OAAM,8BAA8B,IAAI,EAAE,IAAI;AACpD,IAAAA,OAAMA,OAAM,wBAAwB,IAAI,EAAE,IAAI;AAC9C,IAAAA,OAAMA,OAAM,eAAe,IAAI,EAAE,IAAI;AACrC,IAAAA,OAAMA,OAAM,yBAAyB,IAAI,EAAE,IAAI;AAC/C,IAAAA,OAAMA,OAAM,eAAe,IAAI,EAAE,IAAI;AACrC,IAAAA,OAAMA,OAAM,oBAAoB,IAAI,EAAE,IAAI;AAC1C,IAAAA,OAAMA,OAAM,SAAS,IAAI,EAAE,IAAI;AAC/B,IAAAA,OAAMA,OAAM,wBAAwB,IAAI,EAAE,IAAI;AAC9C,IAAAA,OAAMA,OAAM,6BAA6B,IAAI,EAAE,IAAI;AACnD,IAAAA,OAAMA,OAAM,kCAAkC,IAAI,EAAE,IAAI;AACxD,IAAAA,OAAMA,OAAM,uCAAuC,IAAI,EAAE,IAAI;AAC7D,IAAAA,OAAMA,OAAM,kBAAkB,IAAI,EAAE,IAAI;AACxC,IAAAA,OAAMA,OAAM,aAAa,IAAI,EAAE,IAAI;AACnC,IAAAA,OAAMA,OAAM,kBAAkB,IAAI,EAAE,IAAI;AACxC,IAAAA,OAAMA,OAAM,SAAS,IAAI,EAAE,IAAI;AAC/B,IAAAA,OAAMA,OAAM,qBAAqB,IAAI,EAAE,IAAI;AAC3C,IAAAA,OAAMA,OAAM,cAAc,IAAI,EAAE,IAAI;AACpC,IAAAA,OAAMA,OAAM,oBAAoB,IAAI,EAAE,IAAI;AAC1C,IAAAA,OAAMA,OAAM,8BAA8B,IAAI,EAAE,IAAI;AACpD,IAAAA,OAAMA,OAAM,kCAAkC,IAAI,EAAE,IAAI;AACxD,IAAAA,OAAMA,OAAM,yCAAyC,IAAI,EAAE,IAAI;AAC/D,IAAAA,OAAMA,OAAM,yCAAyC,IAAI,EAAE,IAAI;AAC/D,IAAAA,OAAMA,OAAM,iCAAiC,IAAI,EAAE,IAAI;AACvD,IAAAA,OAAMA,OAAM,+CAA+C,IAAI,EAAE,IAAI;AACrE,IAAAA,OAAMA,OAAM,8BAA8B,IAAI,EAAE,IAAI;AACpD,IAAAA,OAAMA,OAAM,kCAAkC,IAAI,EAAE,IAAI;AACxD,IAAAA,OAAMA,OAAM,yCAAyC,IAAI,EAAE,IAAI;AAC/D,IAAAA,OAAMA,OAAM,yCAAyC,IAAI,EAAE,IAAI;AAC/D,IAAAA,OAAMA,OAAM,iCAAiC,IAAI,EAAE,IAAI;AACvD,IAAAA,OAAMA,OAAM,eAAe,IAAI,EAAE,IAAI;AACrC,IAAAA,OAAMA,OAAM,eAAe,IAAI,EAAE,IAAI;AACrC,IAAAA,OAAMA,OAAM,uBAAuB,IAAI,EAAE,IAAI;AAC7C,IAAAA,OAAMA,OAAM,mBAAmB,IAAI,EAAE,IAAI;AACzC,IAAAA,OAAMA,OAAM,qBAAqB,IAAI,EAAE,IAAI;AAC3C,IAAAA,OAAMA,OAAM,2BAA2B,IAAI,EAAE,IAAI;AACjD,IAAAA,OAAMA,OAAM,qBAAqB,IAAI,EAAE,IAAI;AAC3C,IAAAA,OAAMA,OAAM,6BAA6B,IAAI,EAAE,IAAI;AACnD,IAAAA,OAAMA,OAAM,uCAAuC,IAAI,EAAE,IAAI;AAC7D,IAAAA,OAAMA,OAAM,iCAAiC,IAAI,EAAE,IAAI;AACvD,IAAAA,OAAMA,OAAM,6BAA6B,IAAI,EAAE,IAAI;AACnD,IAAAA,OAAMA,OAAM,iCAAiC,IAAI,EAAE,IAAI;AAAA,EAC3D,GAAG,UAAU,QAAQ,CAAC,EAAE;AAEjB,MAAM,gBAAgB;AAAA,IACzB,MAAM,MAAM;AAAA,IACZ,QAAQ,MAAM;AAAA,IACd,SAAS,MAAM;AAAA,IACf,aAAa,MAAM;AAAA,IACnB,WAAW,MAAM;AAAA,IACjB,eAAe,MAAM;AAAA,EACzB;AAKA,WAAS,aAAa,IAAI;AACtB,WAAO,MAAM,YAAE,WAAW,MAAM,YAAE;AAAA,EACtC;AACA,WAAS,aAAa,IAAI;AACtB,WAAO,MAAM,YAAE,mBAAmB,MAAM,YAAE;AAAA,EAC9C;AACA,WAAS,aAAa,IAAI;AACtB,WAAO,MAAM,YAAE,iBAAiB,MAAM,YAAE;AAAA,EAC5C;AACA,WAAS,cAAc,IAAI;AACvB,WAAO,aAAa,EAAE,KAAK,aAAa,EAAE;AAAA,EAC9C;AACA,WAAS,oBAAoB,IAAI;AAC7B,WAAO,cAAc,EAAE,KAAK,aAAa,EAAE;AAAA,EAC/C;AACA,WAAS,qBAAqB,IAAI;AAC9B,WAAO,MAAM,YAAE,mBAAmB,MAAM,YAAE;AAAA,EAC9C;AACA,WAAS,qBAAqB,IAAI;AAC9B,WAAO,MAAM,YAAE,iBAAiB,MAAM,YAAE;AAAA,EAC5C;AACA,WAAS,gBAAgB,IAAI;AACzB,WAAO,aAAa,EAAE,KAAK,qBAAqB,EAAE,KAAK,qBAAqB,EAAE;AAAA,EAClF;AACA,WAAS,aAAa,IAAI;AACtB,WAAO,KAAK;AAAA,EAChB;AACA,WAAS,aAAa,IAAI;AACtB,WAAO,OAAO,YAAE,SAAS,OAAO,YAAE,aAAa,OAAO,YAAE,cAAc,OAAO,YAAE;AAAA,EACnF;AACA,WAAS,8BAA8B,QAAQ;AAC3C,WAAO,WAAW,YAAE,eAAe,oBAAoB,MAAM;AAAA,EACjE;AACA,WAAS,oCAAoC,IAAI;AAC7C,WAAO,aAAa,EAAE,KAAK,OAAO,YAAE,WAAW,OAAO,YAAE;AAAA,EAC5D;AAEO,MAAM,YAAN,MAAgB;AAAA,IACnB,YAAY,SAAS,SAAS;AAC1B,WAAK,UAAU;AACf,WAAK,UAAU;AACf,WAAK,SAAS;AAEd,WAAK,SAAS;AAOd,WAAK,gBAAgB;AACrB,WAAK,mBAAmB;AACxB,WAAK,SAAS;AACd,WAAK,QAAQ,MAAM;AACnB,WAAK,cAAc,MAAM;AACzB,WAAK,cAAc;AACnB,WAAK,wBAAwB;AAC7B,WAAK,wBAAwB;AAC7B,WAAK,eAAe;AACpB,WAAK,cAAc,EAAE,MAAM,IAAI,OAAO,GAAG;AACzC,WAAK,eAAe,IAAI,aAAa,OAAO;AAC5C,WAAK,kBAAkB,KAAK,mBAAmB,EAAE;AAAA,IACrD;AAAA;AAAA,IAEA,KAAKC,OAAM;AACP,UAAIC,KAAI;AACR,OAAC,MAAMA,MAAK,KAAK,SAAS,kBAAkB,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAKA,KAAI,KAAK,aAAa,SAASD,KAAI,CAAC;AAAA,IAC7H;AAAA;AAAA,IAEA,mBAAmB,QAAQ;AACvB,UAAI,CAAC,KAAK,QAAQ,wBAAwB;AACtC,eAAO;AAAA,MACX;AACA,aAAO;AAAA,QACH,WAAW,KAAK,aAAa;AAAA,QAC7B,UAAU,KAAK,aAAa,MAAM;AAAA,QAClC,aAAa,KAAK,aAAa,SAAS;AAAA,QACxC,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,WAAW;AAAA,MACf;AAAA,IACJ;AAAA,IACA,kBAAkB;AACd,UAAI,KAAK;AACL;AACJ,WAAK,SAAS;AACd,aAAO,KAAK,UAAU,CAAC,KAAK,QAAQ;AAChC,aAAK,wBAAwB;AAC7B,cAAM,KAAK,KAAK,SAAS;AACzB,YAAI,CAAC,KAAK,mBAAmB,GAAG;AAC5B,eAAK,WAAW,EAAE;AAAA,QACtB;AAAA,MACJ;AACA,WAAK,SAAS;AAAA,IAClB;AAAA;AAAA,IAEA,QAAQ;AACJ,WAAK,SAAS;AAAA,IAClB;AAAA,IACA,OAAO,eAAe;AAClB,UAAI,CAAC,KAAK,QAAQ;AACd,cAAM,IAAI,MAAM,4BAA4B;AAAA,MAChD;AACA,WAAK,SAAS;AAEd,UAAI,KAAK;AACL;AACJ,WAAK,gBAAgB;AACrB,UAAI,CAAC,KAAK,QAAQ;AACd,0BAAkB,QAAQ,kBAAkB,SAAS,SAAS,cAAc;AAAA,MAChF;AAAA,IACJ;AAAA,IACA,MAAM,OAAO,aAAa,eAAe;AACrC,WAAK,SAAS;AACd,WAAK,aAAa,MAAM,OAAO,WAAW;AAC1C,WAAK,gBAAgB;AACrB,UAAI,CAAC,KAAK,QAAQ;AACd,0BAAkB,QAAQ,kBAAkB,SAAS,SAAS,cAAc;AAAA,MAChF;AAAA,IACJ;AAAA,IACA,uBAAuB,OAAO;AAC1B,WAAK,SAAS;AACd,WAAK,aAAa,uBAAuB,KAAK;AAC9C,WAAK,gBAAgB;AAAA,IACzB;AAAA;AAAA,IAEA,qBAAqB;AACjB,UAAI,KAAK,aAAa,eAAe;AACjC,aAAK,WAAW,KAAK,qBAAqB;AAC1C,aAAK,SAAS;AACd,eAAO;AAAA,MACX;AACA,aAAO;AAAA,IACX;AAAA;AAAA,IAEA,WAAW;AACP,WAAK;AACL,aAAO,KAAK,aAAa,QAAQ;AAAA,IACrC;AAAA,IACA,WAAW,OAAO;AACd,WAAK,yBAAyB;AAC9B,WAAK,aAAa,QAAQ,KAAK;AAAA,IACnC;AAAA,IACA,kBAAkB,OAAO,IAAI;AACzB,WAAK,QAAQ;AACb,WAAK,WAAW,EAAE;AAAA,IACtB;AAAA,IACA,WAAW,OAAO;AACd,WAAK,yBAAyB;AAC9B,eAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC5B,aAAK,aAAa,QAAQ;AAAA,MAC9B;AAAA,IACJ;AAAA,IACA,wBAAwB,SAAS,eAAe;AAC5C,UAAI,KAAK,aAAa,WAAW,SAAS,aAAa,GAAG;AAEtD,aAAK,WAAW,QAAQ,SAAS,CAAC;AAClC,eAAO;AAAA,MACX;AACA,aAAO;AAAA,IACX;AAAA;AAAA,IAEA,uBAAuB;AACnB,WAAK,eAAe;AAAA,QAChB,MAAM,UAAU;AAAA,QAChB,SAAS;AAAA,QACT,OAAO,OAAO;AAAA,QACd,aAAa;AAAA,QACb,gBAAgB;AAAA,QAChB,OAAO,CAAC;AAAA,QACR,UAAU,KAAK,mBAAmB,CAAC;AAAA,MACvC;AAAA,IACJ;AAAA,IACA,qBAAqB;AACjB,WAAK,eAAe;AAAA,QAChB,MAAM,UAAU;AAAA,QAChB,SAAS;AAAA,QACT,OAAO,OAAO;AAAA,QACd,aAAa;AAAA,QACb,gBAAgB;AAAA,QAChB,OAAO,CAAC;AAAA,QACR,UAAU,KAAK,mBAAmB,CAAC;AAAA,MACvC;AAAA,IACJ;AAAA,IACA,oBAAoB,QAAQ;AACxB,WAAK,eAAe;AAAA,QAChB,MAAM,UAAU;AAAA,QAChB,MAAM;AAAA,QACN,UAAU,KAAK,mBAAmB,MAAM;AAAA,MAC5C;AAAA,IACJ;AAAA,IACA,oBAAoB,aAAa;AAC7B,WAAK,eAAe;AAAA,QAChB,MAAM,UAAU;AAAA,QAChB,MAAM;AAAA,QACN,aAAa;AAAA,QACb,UAAU;AAAA,QACV,UAAU;AAAA,QACV,UAAU,KAAK;AAAA,MACnB;AAAA,IACJ;AAAA,IACA,sBAAsB,MAAM,OAAO;AAC/B,WAAK,wBAAwB;AAAA,QACzB;AAAA,QACA;AAAA,QACA,UAAU,KAAK;AAAA,MACnB;AAAA,IACJ;AAAA;AAAA,IAEA,YAAY,iBAAiB;AACzB,WAAK,cAAc;AAAA,QACf,MAAM;AAAA,QACN,OAAO;AAAA,MACX;AACA,WAAK,kBAAkB,KAAK,mBAAmB,CAAC;AAAA,IACpD;AAAA,IACA,iBAAiB;AACb,UAAIC;AACJ,UAAI;AACJ,YAAM,QAAQ,KAAK;AACnB,UAAI,aAAa,OAAO,KAAK,YAAY,IAAI,MAAM,MAAM;AACrD,cAAM,MAAM,KAAK,KAAK,WAAW;AACjC,YAAI,MAAM,YAAY,KAAK,iBAAiB;AACxC,gBAAM,iBAAkBA,OAAM,KAAK,MAAM,UAAU,WAAW,QAAQA,QAAO,SAASA,MAAM,GAAG,QAAQ,uBAAO,OAAO,IAAI;AACzH,wBAAc,KAAK,YAAY,IAAI,IAAI,KAAK;AAE5C,eAAK,gBAAgB;AAAA,QACzB;AAAA,MACJ,OACK;AACD,aAAK,KAAK,IAAI,kBAAkB;AAAA,MACpC;AAAA,IACJ;AAAA,IACA,kBAAkB;AACd,UAAI,KAAK,iBAAiB;AACtB,aAAK,gBAAgB,UAAU,KAAK,aAAa;AACjD,aAAK,gBAAgB,SAAS,KAAK,aAAa;AAChD,aAAK,gBAAgB,YAAY,KAAK,aAAa;AAAA,MACvD;AAAA,IACJ;AAAA;AAAA,IAEA,aAAa,IAAI;AACb,WAAK,2BAA2B,GAAG,QAAQ;AAC3C,WAAK,eAAe;AACpB,UAAI,GAAG,UAAU;AACb,WAAG,SAAS,UAAU,KAAK,aAAa;AACxC,WAAG,SAAS,SAAS,KAAK,aAAa,MAAM;AAC7C,WAAG,SAAS,YAAY,KAAK,aAAa,SAAS;AAAA,MACvD;AACA,WAAK,kBAAkB,KAAK,mBAAmB,EAAE;AAAA,IACrD;AAAA,IACA,sBAAsB;AAClB,YAAM,KAAK,KAAK;AAChB,WAAK,aAAa,EAAE;AACpB,SAAG,QAAQ,SAAS,GAAG,OAAO;AAC9B,UAAI,GAAG,SAAS,UAAU,WAAW;AACjC,aAAK,mBAAmB,GAAG;AAC3B,aAAK,QAAQ,WAAW,EAAE;AAAA,MAC9B,OACK;AACD,YAAI,GAAG,MAAM,SAAS,GAAG;AACrB,eAAK,KAAK,IAAI,oBAAoB;AAAA,QACtC;AACA,YAAI,GAAG,aAAa;AAChB,eAAK,KAAK,IAAI,yBAAyB;AAAA,QAC3C;AACA,aAAK,QAAQ,SAAS,EAAE;AAAA,MAC5B;AACA,WAAK,aAAa,gBAAgB;AAAA,IACtC;AAAA,IACA,mBAAmB,IAAI;AACnB,WAAK,aAAa,EAAE;AACpB,WAAK,QAAQ,UAAU,EAAE;AACzB,WAAK,aAAa,gBAAgB;AAAA,IACtC;AAAA,IACA,mBAAmB,IAAI;AACnB,WAAK,aAAa,EAAE;AACpB,WAAK,QAAQ,UAAU,EAAE;AACzB,WAAK,aAAa,gBAAgB;AAAA,IACtC;AAAA,IACA,2BAA2B,cAAc;AACrC,UAAI,KAAK,uBAAuB;AAG5B,YAAI,gBAAgB,KAAK,sBAAsB,UAAU;AACrD,eAAK,sBAAsB,SAAS,UAAU,aAAa;AAC3D,eAAK,sBAAsB,SAAS,SAAS,aAAa;AAC1D,eAAK,sBAAsB,SAAS,YAAY,aAAa;AAAA,QACjE;AACA,gBAAQ,KAAK,sBAAsB,MAAM;AAAA,UACrC,KAAK,UAAU,WAAW;AACtB,iBAAK,QAAQ,YAAY,KAAK,qBAAqB;AACnD;AAAA,UACJ;AAAA,UACA,KAAK,UAAU,gBAAgB;AAC3B,iBAAK,QAAQ,gBAAgB,KAAK,qBAAqB;AACvD;AAAA,UACJ;AAAA,UACA,KAAK,UAAU,sBAAsB;AACjC,iBAAK,QAAQ,sBAAsB,KAAK,qBAAqB;AAC7D;AAAA,UACJ;AAAA,QACJ;AACA,aAAK,wBAAwB;AAAA,MACjC;AAAA,IACJ;AAAA,IACA,gBAAgB;AACZ,YAAM,WAAW,KAAK,mBAAmB,CAAC;AAC1C,UAAI,UAAU;AACV,iBAAS,UAAU,SAAS;AAC5B,iBAAS,SAAS,SAAS;AAC3B,iBAAS,YAAY,SAAS;AAAA,MAClC;AACA,WAAK,2BAA2B,QAAQ;AACxC,WAAK,QAAQ,MAAM,EAAE,MAAM,UAAU,KAAK,SAAS,CAAC;AACpD,WAAK,SAAS;AAAA,IAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUA,mCAAmC,MAAM,IAAI;AACzC,UAAI,KAAK,uBAAuB;AAC5B,YAAI,KAAK,sBAAsB,SAAS,MAAM;AAC1C,eAAK,kBAAkB,KAAK,mBAAmB,CAAC;AAChD,eAAK,2BAA2B,KAAK,eAAe;AACpD,eAAK,aAAa,gBAAgB;AAAA,QACtC,OACK;AACD,eAAK,sBAAsB,SAAS;AACpC;AAAA,QACJ;AAAA,MACJ;AACA,WAAK,sBAAsB,MAAM,EAAE;AAAA,IACvC;AAAA,IACA,eAAe,IAAI;AACf,YAAM,OAAO,aAAa,EAAE,IACtB,UAAU,uBACV,OAAO,YAAE,OACL,UAAU,iBACV,UAAU;AACpB,WAAK,mCAAmC,MAAM,OAAO,cAAc,EAAE,CAAC;AAAA,IAC1E;AAAA;AAAA;AAAA,IAGA,WAAW,IAAI;AACX,WAAK,mCAAmC,UAAU,WAAW,EAAE;AAAA,IACnE;AAAA;AAAA,IAEA,8BAA8B,IAAI;AAC9B,UAAI,SAAS;AACb,UAAI,SAAS;AACb,UAAI,mBAAmB;AACvB,eAAS,IAAI,GAAG,UAAU,yBAAe,CAAC,GAAG,KAAK,GAAG,KAAK,KAAK,SAAS,GAAG;AACvE,YAAI,gBAAgB,0BAAgB,SAAS,IAAI,GAAG,EAAE;AACtD,YAAI,IAAI;AACJ;AACJ,kBAAU;AACV,kBAAU,yBAAe,CAAC;AAC1B,cAAM,SAAS,UAAU,aAAa;AAEtC,YAAI,QAAQ;AAER,gBAAM,eAAe,UAAU,MAAM;AAGrC,cAAI,OAAO,YAAE,aACT,KAAK,iCAAiC,KACtC,8BAA8B,KAAK,aAAa,KAAK,CAAC,CAAC,GAAG;AAG1D,qBAAS,CAAC,YAAE,SAAS;AAErB,iBAAK;AAAA,UACT,OACK;AAED,qBACI,gBAAgB,IACV,CAAC,yBAAe,CAAC,IAAI,CAAC,aAAa,YAAY,IAC/C,gBAAgB,IACZ,CAAC,yBAAe,EAAE,CAAC,CAAC,IACpB,CAAC,yBAAe,EAAE,CAAC,GAAG,yBAAe,EAAE,CAAC,CAAC;AACvD,qBAAS;AACT,+BAAmB,OAAO,YAAE;AAAA,UAChC;AACA,cAAI,gBAAgB,GAAG;AAEnB,iBAAK,SAAS;AACd;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AACA,WAAK,WAAW,MAAM;AACtB,UAAI,oBAAoB,CAAC,KAAK,aAAa,eAAe;AACtD,aAAK,KAAK,IAAI,uCAAuC;AAAA,MACzD;AAIA,WAAK,WAAW,CAAC;AACjB,aAAO;AAAA,IACX;AAAA,IACA,mCAAmC;AAC/B,aAAQ,KAAK,gBAAgB,MAAM,iCAC/B,KAAK,gBAAgB,MAAM,iCAC3B,KAAK,gBAAgB,MAAM;AAAA,IACnC;AAAA,IACA,4CAA4C,IAAI;AAC5C,UAAI,KAAK,iCAAiC,GAAG;AACzC,aAAK,YAAY,SAAS,OAAO,cAAc,EAAE;AAAA,MACrD,OACK;AACD,aAAK,eAAe,EAAE;AAAA,MAC1B;AAAA,IACJ;AAAA;AAAA,IAEA,WAAW,IAAI;AACX,cAAQ,KAAK,OAAO;AAAA,QAChB,KAAK,MAAM,MAAM;AACb,eAAK,WAAW,EAAE;AAClB;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,QAAQ;AACf,eAAK,aAAa,EAAE;AACpB;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,SAAS;AAChB,eAAK,cAAc,EAAE;AACrB;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,aAAa;AACpB,eAAK,iBAAiB,EAAE;AACxB;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,WAAW;AAClB,eAAK,gBAAgB,EAAE;AACvB;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,UAAU;AACjB,eAAK,cAAc,EAAE;AACrB;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,cAAc;AACrB,eAAK,iBAAiB,EAAE;AACxB;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,UAAU;AACjB,eAAK,cAAc,EAAE;AACrB;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,uBAAuB;AAC9B,eAAK,yBAAyB,EAAE;AAChC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,qBAAqB;AAC5B,eAAK,uBAAuB,EAAE;AAC9B;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,qBAAqB;AAC5B,eAAK,uBAAuB,EAAE;AAC9B;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,wBAAwB;AAC/B,eAAK,0BAA0B,EAAE;AACjC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,sBAAsB;AAC7B,eAAK,wBAAwB,EAAE;AAC/B;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,sBAAsB;AAC7B,eAAK,wBAAwB,EAAE;AAC/B;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,4BAA4B;AACnC,eAAK,6BAA6B,EAAE;AACpC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,0BAA0B;AACjC,eAAK,2BAA2B,EAAE;AAClC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,0BAA0B;AACjC,eAAK,2BAA2B,EAAE;AAClC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,0BAA0B;AACjC,eAAK,4BAA4B,EAAE;AACnC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,+BAA+B;AACtC,eAAK,gCAAgC,EAAE;AACvC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,qBAAqB;AAC5B,eAAK,wBAAwB,EAAE;AAC/B;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,0BAA0B;AACjC,eAAK,4BAA4B,EAAE;AACnC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,+BAA+B;AACtC,eAAK,gCAAgC,EAAE;AACvC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,oCAAoC;AAC3C,eAAK,oCAAoC,EAAE;AAC3C;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,kCAAkC;AACzC,eAAK,kCAAkC,EAAE;AACzC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,kCAAkC;AACzC,eAAK,kCAAkC,EAAE;AACzC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,iCAAiC;AACxC,eAAK,kCAAkC,EAAE;AACzC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,4BAA4B;AACnC,eAAK,8BAA8B,EAAE;AACrC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,iCAAiC;AACxC,eAAK,kCAAkC,EAAE;AACzC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,sCAAsC;AAC7C,eAAK,sCAAsC,EAAE;AAC7C;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,2CAA2C;AAClD,eAAK,0CAA0C,EAAE;AACjD;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,+BAA+B;AACtC,eAAK,gCAAgC,EAAE;AACvC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,uBAAuB;AAC9B,eAAK,0BAA0B,EAAE;AACjC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,gBAAgB;AACvB,eAAK,oBAAoB,EAAE;AAC3B;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,sBAAsB;AAC7B,eAAK,yBAAyB,EAAE;AAChC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,wBAAwB;AAC/B,eAAK,2BAA2B,EAAE;AAClC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,+BAA+B;AACtC,eAAK,iCAAiC,EAAE;AACxC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,+BAA+B;AACtC,eAAK,iCAAiC,EAAE;AACxC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,0BAA0B;AACjC,eAAK,6BAA6B,EAAE;AACpC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,8BAA8B;AACrC,eAAK,gCAAgC,EAAE;AACvC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,wBAAwB;AAC/B,eAAK,0BAA0B,EAAE;AACjC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,eAAe;AACtB,eAAK,mBAAmB,EAAE;AAC1B;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,yBAAyB;AAChC,eAAK,4BAA4B,EAAE;AACnC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,eAAe;AACtB,eAAK,mBAAmB,EAAE;AAC1B;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,oBAAoB;AAC3B,eAAK,uBAAuB,EAAE;AAC9B;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,SAAS;AAChB,eAAK,cAAc,EAAE;AACrB;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,wBAAwB;AAC/B,eAAK,0BAA0B,EAAE;AACjC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,6BAA6B;AACpC,eAAK,8BAA8B,EAAE;AACrC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,kCAAkC;AACzC,eAAK,kCAAkC,EAAE;AACzC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,uCAAuC;AAC9C,eAAK,sCAAsC,EAAE;AAC7C;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,kBAAkB;AACzB,eAAK,qBAAqB,EAAE;AAC5B;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,aAAa;AACpB,eAAK,iBAAiB,EAAE;AACxB;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,kBAAkB;AACzB,eAAK,qBAAqB,EAAE;AAC5B;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,SAAS;AAChB,eAAK,cAAc,EAAE;AACrB;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,qBAAqB;AAC5B,eAAK,wBAAwB,EAAE;AAC/B;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,cAAc;AACrB,eAAK,kBAAkB,EAAE;AACzB;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,oBAAoB;AAC3B,eAAK,uBAAuB,EAAE;AAC9B;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,8BAA8B;AACrC,eAAK,gCAAgC,EAAE;AACvC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,kCAAkC;AACzC,eAAK,oCAAoC,EAAE;AAC3C;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,yCAAyC;AAChD,eAAK,0CAA0C,EAAE;AACjD;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,yCAAyC;AAChD,eAAK,0CAA0C,EAAE;AACjD;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,iCAAiC;AACxC,eAAK,mCAAmC,EAAE;AAC1C;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,+CAA+C;AACtD,eAAK,+CAA+C,EAAE;AACtD;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,8BAA8B;AACrC,eAAK,gCAAgC,EAAE;AACvC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,kCAAkC;AACzC,eAAK,oCAAoC,EAAE;AAC3C;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,yCAAyC;AAChD,eAAK,0CAA0C,EAAE;AACjD;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,yCAAyC;AAChD,eAAK,0CAA0C,EAAE;AACjD;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,iCAAiC;AACxC,eAAK,mCAAmC,EAAE;AAC1C;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,eAAe;AACtB,eAAK,mBAAmB,EAAE;AAC1B;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,eAAe;AACtB,eAAK,mBAAmB,EAAE;AAC1B;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,uBAAuB;AAC9B,eAAK,0BAA0B,EAAE;AACjC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,mBAAmB;AAC1B,eAAK,sBAAsB,EAAE;AAC7B;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,qBAAqB;AAC5B,eAAK,yBAAyB,EAAE;AAChC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,2BAA2B;AAClC,eAAK,8BAA8B,EAAE;AACrC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,qBAAqB;AAC5B,eAAK,yBAAyB,EAAE;AAChC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,6BAA6B;AACpC,eAAK,gCAAgC,EAAE;AACvC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,uCAAuC;AAC9C,eAAK,yCAAyC,EAAE;AAChD;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,iCAAiC;AACxC,eAAK,oCAAoC,EAAE;AAC3C;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,6BAA6B;AACpC,eAAK,gCAAgC,EAAE;AACvC;AAAA,QACJ;AAAA,QACA,KAAK,MAAM,iCAAiC;AACxC,eAAK,mCAAmC,EAAE;AAC1C;AAAA,QACJ;AAAA,QACA,SAAS;AACL,gBAAM,IAAI,MAAM,eAAe;AAAA,QACnC;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA,IAIA,WAAW,IAAI;AACX,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,gBAAgB;AACnB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,WAAW;AACd,eAAK,cAAc,MAAM;AACzB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,MAAM;AACT,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,eAAe,EAAE;AACtB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,eAAe,EAAE;AAAA,QAC1B;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,aAAa,IAAI;AACb,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,WAAW;AACd,eAAK,cAAc,MAAM;AACzB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,gBAAgB;AACnB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,MAAM;AACT,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,WAAW,qBAAqB;AACrC;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,eAAe,EAAE;AAAA,QAC1B;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,cAAc,IAAI;AACd,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,gBAAgB;AACnB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,MAAM;AACT,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,WAAW,qBAAqB;AACrC;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,eAAe,EAAE;AAAA,QAC1B;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,iBAAiB,IAAI;AACjB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,gBAAgB;AACnB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,MAAM;AACT,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,WAAW,qBAAqB;AACrC;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,eAAe,EAAE;AAAA,QAC1B;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,gBAAgB,IAAI;AAChB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,MAAM;AACT,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,WAAW,qBAAqB;AACrC;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,eAAe,EAAE;AAAA,QAC1B;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,cAAc,IAAI;AACd,UAAI,cAAc,EAAE,GAAG;AACnB,aAAK,qBAAqB;AAC1B,aAAK,QAAQ,MAAM;AACnB,aAAK,cAAc,EAAE;AAAA,MACzB;AAEI,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,kBAAkB;AACrB,iBAAK,QAAQ,MAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,SAAS;AACZ,iBAAK,QAAQ,MAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,eAAe;AAClB,iBAAK,KAAK,IAAI,sCAAsC;AACpD,iBAAK,oBAAoB,CAAC;AAC1B,iBAAK,QAAQ,MAAM;AACnB,iBAAK,mBAAmB,EAAE;AAC1B;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,gBAAgB;AAC9B,iBAAK,WAAW,GAAG;AACnB,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,KAAK,IAAI,8BAA8B;AAC5C,iBAAK,WAAW,GAAG;AACnB,iBAAK,QAAQ,MAAM;AACnB,iBAAK,WAAW,EAAE;AAAA,UACtB;AAAA,QACJ;AAAA,IACR;AAAA;AAAA;AAAA,IAGA,iBAAiB,IAAI;AACjB,UAAI,cAAc,EAAE,GAAG;AACnB,aAAK,mBAAmB;AACxB,aAAK,QAAQ,MAAM;AACnB,aAAK,cAAc,EAAE;AAAA,MACzB;AAEI,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,mBAAmB;AACtB,iBAAK,KAAK,IAAI,iBAAiB;AAC/B,iBAAK,QAAQ,MAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,gBAAgB;AAC9B,iBAAK,WAAW,IAAI;AACpB,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,KAAK,IAAI,8BAA8B;AAC5C,iBAAK,oBAAoB,CAAC;AAC1B,iBAAK,QAAQ,MAAM;AACnB,iBAAK,mBAAmB,EAAE;AAAA,UAC9B;AAAA,QACJ;AAAA,IACR;AAAA;AAAA;AAAA,IAGA,cAAc,IAAI;AACd,YAAM,QAAQ,KAAK;AACnB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE,WAAW;AACd,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,SAAS;AACZ,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,mBAAmB;AACtB,eAAK,QAAQ,MAAM;AACnB,eAAK,oBAAoB;AACzB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,MAAM;AACT,eAAK,KAAK,IAAI,uBAAuB;AACrC,gBAAM,WAAW;AACjB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,QAAQ;AACtB,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,gBAAM,WAAW,OAAO,cAAc,aAAa,EAAE,IAAI,aAAa,EAAE,IAAI,EAAE;AAAA,QAClF;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,yBAAyB,IAAI;AACzB,UAAI,OAAO,YAAE,SAAS;AAClB,aAAK,QAAQ,MAAM;AAAA,MACvB,OACK;AACD,aAAK,WAAW,GAAG;AACnB,aAAK,QAAQ,MAAM;AACnB,aAAK,aAAa,EAAE;AAAA,MACxB;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,uBAAuB,IAAI;AACvB,UAAI,cAAc,EAAE,GAAG;AACnB,aAAK,QAAQ,MAAM;AACnB,aAAK,uBAAuB,EAAE;AAAA,MAClC,OACK;AACD,aAAK,WAAW,IAAI;AACpB,aAAK,QAAQ,MAAM;AACnB,aAAK,aAAa,EAAE;AAAA,MACxB;AAAA,IACJ;AAAA,IACA,oBAAoB,KAAK;AACrB,UAAI,CAAC,KAAK,aAAa,WAAW,KAAK,kBAAkB,KAAK,GAAG;AAC7D,eAAO,CAAC,KAAK,mBAAmB;AAAA,MACpC;AACA,WAAK,mBAAmB;AACxB,YAAM,QAAQ,KAAK;AACnB,YAAM,UAAU,KAAK;AACrB,YAAM,KAAK,KAAK,aAAa,KAAK,KAAK,iBAAiB,MAAM;AAC9D,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE,WAAW;AACd,eAAK,WAAW,KAAK,iBAAiB,MAAM;AAC5C,eAAK,QAAQ,MAAM;AACnB,iBAAO;AAAA,QACX;AAAA,QACA,KAAK,YAAE,SAAS;AACZ,eAAK,WAAW,KAAK,iBAAiB,MAAM;AAC5C,eAAK,QAAQ,MAAM;AACnB,iBAAO;AAAA,QACX;AAAA,QACA,KAAK,YAAE,mBAAmB;AACtB,eAAK,WAAW,KAAK,iBAAiB,MAAM;AAC5C,eAAK,oBAAoB;AACzB,eAAK,QAAQ,MAAM;AACnB,iBAAO;AAAA,QACX;AAAA,QACA,SAAS;AACL,iBAAO,CAAC,KAAK,mBAAmB;AAAA,QACpC;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,uBAAuB,IAAI;AACvB,UAAI,KAAK,oBAAoB,EAAE,GAAG;AAC9B,aAAK,WAAW,IAAI;AACpB,aAAK,QAAQ,MAAM;AACnB,aAAK,aAAa,EAAE;AAAA,MACxB;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,0BAA0B,IAAI;AAC1B,UAAI,OAAO,YAAE,SAAS;AAClB,aAAK,QAAQ,MAAM;AAAA,MACvB,OACK;AACD,aAAK,WAAW,GAAG;AACnB,aAAK,QAAQ,MAAM;AACnB,aAAK,cAAc,EAAE;AAAA,MACzB;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,wBAAwB,IAAI;AACxB,UAAI,cAAc,EAAE,GAAG;AACnB,aAAK,QAAQ,MAAM;AACnB,aAAK,wBAAwB,EAAE;AAAA,MACnC,OACK;AACD,aAAK,WAAW,IAAI;AACpB,aAAK,QAAQ,MAAM;AACnB,aAAK,cAAc,EAAE;AAAA,MACzB;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,wBAAwB,IAAI;AACxB,UAAI,KAAK,oBAAoB,EAAE,GAAG;AAC9B,aAAK,WAAW,IAAI;AACpB,aAAK,QAAQ,MAAM;AACnB,aAAK,cAAc,EAAE;AAAA,MACzB;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,6BAA6B,IAAI;AAC7B,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,SAAS;AACZ,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,kBAAkB;AACrB,eAAK,QAAQ,MAAM;AACnB,eAAK,WAAW,IAAI;AACpB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,WAAW,GAAG;AACnB,eAAK,QAAQ,MAAM;AACnB,eAAK,iBAAiB,EAAE;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,2BAA2B,IAAI;AAC3B,UAAI,cAAc,EAAE,GAAG;AACnB,aAAK,QAAQ,MAAM;AACnB,aAAK,2BAA2B,EAAE;AAAA,MACtC,OACK;AACD,aAAK,WAAW,IAAI;AACpB,aAAK,QAAQ,MAAM;AACnB,aAAK,iBAAiB,EAAE;AAAA,MAC5B;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,2BAA2B,IAAI;AAC3B,UAAI,KAAK,oBAAoB,EAAE,GAAG;AAC9B,aAAK,WAAW,IAAI;AACpB,aAAK,QAAQ,MAAM;AACnB,aAAK,iBAAiB,EAAE;AAAA,MAC5B;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,4BAA4B,IAAI;AAC5B,UAAI,OAAO,YAAE,cAAc;AACvB,aAAK,QAAQ,MAAM;AACnB,aAAK,WAAW,GAAG;AAAA,MACvB,OACK;AACD,aAAK,QAAQ,MAAM;AACnB,aAAK,iBAAiB,EAAE;AAAA,MAC5B;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,gCAAgC,IAAI;AAChC,UAAI,OAAO,YAAE,cAAc;AACvB,aAAK,QAAQ,MAAM;AACnB,aAAK,WAAW,GAAG;AAAA,MACvB,OACK;AACD,aAAK,QAAQ,MAAM;AACnB,aAAK,iBAAiB,EAAE;AAAA,MAC5B;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,wBAAwB,IAAI;AACxB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,cAAc;AACjB,eAAK,QAAQ,MAAM;AACnB,eAAK,WAAW,GAAG;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,gBAAgB;AACnB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,MAAM;AACT,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,WAAW,qBAAqB;AACrC;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,8BAA8B;AAC5C,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,eAAe,EAAE;AAAA,QAC1B;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,4BAA4B,IAAI;AAC5B,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,cAAc;AACjB,eAAK,QAAQ,MAAM;AACnB,eAAK,WAAW,GAAG;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,gBAAgB;AACnB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,MAAM;AACT,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,QAAQ,MAAM;AACnB,eAAK,WAAW,qBAAqB;AACrC;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,8BAA8B;AAC5C,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,QAAQ,MAAM;AACnB,eAAK,eAAe,EAAE;AAAA,QAC1B;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,gCAAgC,IAAI;AAChC,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,cAAc;AACjB,eAAK,WAAW,GAAG;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,gBAAgB;AACnB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,mBAAmB;AACtB,eAAK,QAAQ,MAAM;AACnB,eAAK,WAAW,GAAG;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,MAAM;AACT,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,QAAQ,MAAM;AACnB,eAAK,WAAW,qBAAqB;AACrC;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,8BAA8B;AAC5C,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,QAAQ,MAAM;AACnB,eAAK,eAAe,EAAE;AAAA,QAC1B;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,oCAAoC,IAAI;AACpC,UAAI,OAAO,YAAE,SAAS;AAClB,aAAK,QAAQ,MAAM;AAAA,MACvB,WACS,cAAc,EAAE,GAAG;AACxB,aAAK,WAAW,GAAG;AACnB,aAAK,QAAQ,MAAM;AACnB,aAAK,kCAAkC,EAAE;AAAA,MAC7C,OACK;AACD,aAAK,WAAW,GAAG;AACnB,aAAK,QAAQ,MAAM;AACnB,aAAK,wBAAwB,EAAE;AAAA,MACnC;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,kCAAkC,IAAI;AAClC,UAAI,cAAc,EAAE,GAAG;AACnB,aAAK,QAAQ,MAAM;AACnB,aAAK,kCAAkC,EAAE;AAAA,MAC7C,OACK;AACD,aAAK,WAAW,IAAI;AACpB,aAAK,QAAQ,MAAM;AACnB,aAAK,wBAAwB,EAAE;AAAA,MACnC;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,kCAAkC,IAAI;AAClC,UAAI,KAAK,oBAAoB,EAAE,GAAG;AAC9B,aAAK,WAAW,IAAI;AACpB,aAAK,QAAQ,MAAM;AACnB,aAAK,wBAAwB,EAAE;AAAA,MACnC;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,kCAAkC,IAAI;AAClC,UAAI,KAAK,aAAa,WAAW,UAAG,QAAQ,KAAK,KAC7C,oCAAoC,KAAK,aAAa,KAAK,UAAG,OAAO,MAAM,CAAC,GAAG;AAC/E,aAAK,eAAe,EAAE;AACtB,iBAAS,IAAI,GAAG,IAAI,UAAG,OAAO,QAAQ,KAAK;AACvC,eAAK,eAAe,KAAK,SAAS,CAAC;AAAA,QACvC;AACA,aAAK,QAAQ,MAAM;AAAA,MACvB,WACS,CAAC,KAAK,mBAAmB,GAAG;AACjC,aAAK,QAAQ,MAAM;AACnB,aAAK,wBAAwB,EAAE;AAAA,MACnC;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,8BAA8B,IAAI;AAC9B,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,cAAc;AACjB,eAAK,QAAQ,MAAM;AACnB,eAAK,WAAW,GAAG;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,gBAAgB;AACnB,eAAK,QAAQ,MAAM;AACnB,eAAK,WAAW,GAAG;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,MAAM;AACT,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,WAAW,qBAAqB;AACrC;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,8BAA8B;AAC5C,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,eAAe,EAAE;AAAA,QAC1B;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,kCAAkC,IAAI;AAClC,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,cAAc;AACjB,eAAK,QAAQ,MAAM;AACnB,eAAK,WAAW,GAAG;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,gBAAgB;AACnB,eAAK,QAAQ,MAAM;AACnB,eAAK,WAAW,GAAG;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,MAAM;AACT,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,QAAQ,MAAM;AACnB,eAAK,WAAW,qBAAqB;AACrC;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,8BAA8B;AAC5C,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,QAAQ,MAAM;AACnB,eAAK,eAAe,EAAE;AAAA,QAC1B;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,sCAAsC,IAAI;AACtC,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,cAAc;AACjB,eAAK,WAAW,GAAG;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,gBAAgB;AACnB,eAAK,QAAQ,MAAM;AACnB,eAAK,WAAW,GAAG;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,mBAAmB;AACtB,eAAK,QAAQ,MAAM;AACnB,eAAK,WAAW,GAAG;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,MAAM;AACT,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,QAAQ,MAAM;AACnB,eAAK,WAAW,qBAAqB;AACrC;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,8BAA8B;AAC5C,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,QAAQ,MAAM;AACnB,eAAK,eAAe,EAAE;AAAA,QAC1B;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,0CAA0C,IAAI;AAC1C,UAAI,OAAO,YAAE,SAAS;AAClB,aAAK,QAAQ,MAAM;AACnB,aAAK,WAAW,GAAG;AAAA,MACvB,OACK;AACD,aAAK,QAAQ,MAAM;AACnB,aAAK,8BAA8B,EAAE;AAAA,MACzC;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,gCAAgC,IAAI;AAChC,UAAI,KAAK,aAAa,WAAW,UAAG,QAAQ,KAAK,KAC7C,oCAAoC,KAAK,aAAa,KAAK,UAAG,OAAO,MAAM,CAAC,GAAG;AAC/E,aAAK,eAAe,EAAE;AACtB,iBAAS,IAAI,GAAG,IAAI,UAAG,OAAO,QAAQ,KAAK;AACvC,eAAK,eAAe,KAAK,SAAS,CAAC;AAAA,QACvC;AACA,aAAK,QAAQ,MAAM;AAAA,MACvB,WACS,CAAC,KAAK,mBAAmB,GAAG;AACjC,aAAK,QAAQ,MAAM;AACnB,aAAK,8BAA8B,EAAE;AAAA,MACzC;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,0BAA0B,IAAI;AAC1B,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE,WAAW;AAEd;AAAA,QACJ;AAAA,QACA,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE,KAAK;AACR,eAAK,QAAQ,MAAM;AACnB,eAAK,yBAAyB,EAAE;AAChC;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,aAAa;AAChB,eAAK,KAAK,IAAI,uCAAuC;AACrD,eAAK,YAAY,GAAG;AACpB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,YAAY,EAAE;AACnB,eAAK,QAAQ,MAAM;AACnB,eAAK,oBAAoB,EAAE;AAAA,QAC/B;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,oBAAoB,IAAI;AACpB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE,KAAK;AACR,eAAK,eAAe;AACpB,eAAK,QAAQ,MAAM;AACnB,eAAK,yBAAyB,EAAE;AAChC;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,aAAa;AAChB,eAAK,eAAe;AACpB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE,gBAAgB;AACnB,eAAK,KAAK,IAAI,kCAAkC;AAChD,eAAK,YAAY,QAAQ,OAAO,cAAc,EAAE;AAChD;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,MAAM;AACT,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,YAAY,QAAQ;AACzB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,YAAY,QAAQ,OAAO,cAAc,aAAa,EAAE,IAAI,aAAa,EAAE,IAAI,EAAE;AAAA,QAC1F;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,yBAAyB,IAAI;AACzB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE,WAAW;AAEd;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,SAAS;AACZ,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,aAAa;AAChB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,mBAAmB;AACtB,eAAK,QAAQ,MAAM;AACnB,eAAK,oBAAoB;AACzB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,QAAQ;AACtB,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,YAAY,EAAE;AACnB,eAAK,QAAQ,MAAM;AACnB,eAAK,oBAAoB,EAAE;AAAA,QAC/B;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,2BAA2B,IAAI;AAC3B,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE,WAAW;AAEd;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,gBAAgB;AACnB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,YAAY;AACf,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,mBAAmB;AACtB,eAAK,KAAK,IAAI,qBAAqB;AACnC,eAAK,QAAQ,MAAM;AACnB,eAAK,oBAAoB;AACzB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,QAAQ,MAAM;AACnB,eAAK,6BAA6B,EAAE;AAAA,QACxC;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,iCAAiC,IAAI;AACjC,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,gBAAgB;AACnB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,WAAW;AACd,eAAK,cAAc,MAAM;AACzB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,MAAM;AACT,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,YAAY,SAAS;AAC1B;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,QAAQ;AACtB,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,YAAY,SAAS,OAAO,cAAc,EAAE;AAAA,QACrD;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,iCAAiC,IAAI;AACjC,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,YAAY;AACf,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,WAAW;AACd,eAAK,cAAc,MAAM;AACzB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,MAAM;AACT,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,YAAY,SAAS;AAC1B;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,QAAQ;AACtB,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,YAAY,SAAS,OAAO,cAAc,EAAE;AAAA,QACrD;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,6BAA6B,IAAI;AAC7B,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE,WAAW;AACd,eAAK,gBAAgB;AACrB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,WAAW;AACd,eAAK,cAAc,MAAM;AACzB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,mBAAmB;AACtB,eAAK,gBAAgB;AACrB,eAAK,QAAQ,MAAM;AACnB,eAAK,oBAAoB;AACzB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,MAAM;AACT,eAAK,KAAK,IAAI,uBAAuB;AACrC,eAAK,YAAY,SAAS;AAC1B;AAAA,QACJ;AAAA,QACA,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE,cAAc;AACjB,eAAK,KAAK,IAAI,2CAA2C;AACzD,eAAK,YAAY,SAAS,OAAO,cAAc,EAAE;AACjD;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,QAAQ;AACtB,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,YAAY,SAAS,OAAO,cAAc,EAAE;AAAA,QACrD;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,gCAAgC,IAAI;AAChC,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE,WAAW;AACd,eAAK,gBAAgB;AACrB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,SAAS;AACZ,eAAK,gBAAgB;AACrB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,mBAAmB;AACtB,eAAK,gBAAgB;AACrB,eAAK,QAAQ,MAAM;AACnB,eAAK,oBAAoB;AACzB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,QAAQ;AACtB,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,KAAK,IAAI,kCAAkC;AAChD,eAAK,QAAQ,MAAM;AACnB,eAAK,0BAA0B,EAAE;AAAA,QACrC;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,0BAA0B,IAAI;AAC1B,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,mBAAmB;AACtB,gBAAM,QAAQ,KAAK;AACnB,gBAAM,cAAc;AACpB,eAAK,QAAQ,MAAM;AACnB,eAAK,oBAAoB;AACzB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,QAAQ;AACtB,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,KAAK,IAAI,sBAAsB;AACpC,eAAK,QAAQ,MAAM;AACnB,eAAK,0BAA0B,EAAE;AAAA,QACrC;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,mBAAmB,IAAI;AACnB,YAAM,QAAQ,KAAK;AACnB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,mBAAmB;AACtB,eAAK,QAAQ,MAAM;AACnB,eAAK,mBAAmB,KAAK;AAC7B;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,mBAAmB,KAAK;AAC7B,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,MAAM;AACT,eAAK,KAAK,IAAI,uBAAuB;AACrC,gBAAM,QAAQ;AACd;AAAA,QACJ;AAAA,QACA,SAAS;AACL,gBAAM,QAAQ,OAAO,cAAc,EAAE;AAAA,QACzC;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,4BAA4B,IAAI;AAC5B,UAAI,KAAK,wBAAwB,UAAG,WAAW,IAAI,GAAG;AAClD,aAAK,oBAAoB,UAAG,UAAU,SAAS,CAAC;AAChD,aAAK,QAAQ,MAAM;AAAA,MACvB,WACS,KAAK,wBAAwB,UAAG,SAAS,KAAK,GAAG;AAEtD,aAAK,kBAAkB,KAAK,mBAAmB,UAAG,QAAQ,SAAS,CAAC;AACpE,aAAK,QAAQ,MAAM;AAAA,MACvB,WACS,KAAK,wBAAwB,UAAG,aAAa,IAAI,GAAG;AACzD,YAAI,KAAK,eAAe;AACpB,eAAK,QAAQ,MAAM;AAAA,QACvB,OACK;AACD,eAAK,KAAK,IAAI,kBAAkB;AAChC,eAAK,oBAAoB,UAAG,YAAY,SAAS,CAAC;AAClD,eAAK,aAAa,OAAO;AACzB,eAAK,QAAQ,MAAM;AAAA,QACvB;AAAA,MACJ,WAGS,CAAC,KAAK,mBAAmB,GAAG;AACjC,aAAK,KAAK,IAAI,wBAAwB;AACtC,aAAK,oBAAoB,CAAC;AAC1B,aAAK,QAAQ,MAAM;AACnB,aAAK,mBAAmB,EAAE;AAAA,MAC9B;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,mBAAmB,IAAI;AACnB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,cAAc;AACjB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,mBAAmB;AACtB,eAAK,KAAK,IAAI,2BAA2B;AACzC,eAAK,QAAQ,MAAM;AACnB,gBAAM,QAAQ,KAAK;AACnB,eAAK,mBAAmB,KAAK;AAC7B;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,QAAQ,MAAM;AACnB,eAAK,cAAc,EAAE;AAAA,QACzB;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,uBAAuB,IAAI;AACvB,YAAM,QAAQ,KAAK;AACnB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,cAAc;AACjB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,mBAAmB;AACtB,eAAK,KAAK,IAAI,2BAA2B;AACzC,eAAK,QAAQ,MAAM;AACnB,eAAK,mBAAmB,KAAK;AAC7B;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,YAAY;AAC1B,eAAK,mBAAmB,KAAK;AAC7B,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,gBAAM,QAAQ;AACd,eAAK,QAAQ,MAAM;AACnB,eAAK,cAAc,EAAE;AAAA,QACzB;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,cAAc,IAAI;AACd,YAAM,QAAQ,KAAK;AACnB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,cAAc;AACjB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,gBAAgB;AACnB,gBAAM,QAAQ;AACd,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,MAAM;AACT,eAAK,KAAK,IAAI,uBAAuB;AACrC,gBAAM,QAAQ;AACd;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,YAAY;AAC1B,eAAK,mBAAmB,KAAK;AAC7B,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,gBAAM,QAAQ,OAAO,cAAc,EAAE;AAAA,QACzC;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,0BAA0B,IAAI;AAC1B,YAAM,QAAQ,KAAK;AACnB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,kBAAkB;AACrB,gBAAM,QAAQ;AACd,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,gBAAgB;AACnB,gBAAM,QAAQ;AACd;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,QAAQ,MAAM;AACnB,eAAK,cAAc,EAAE;AAAA,QACzB;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,8BAA8B,IAAI;AAC9B,UAAI,OAAO,YAAE,cAAc;AACvB,aAAK,QAAQ,MAAM;AAAA,MACvB,OACK;AACD,aAAK,QAAQ,MAAM;AACnB,aAAK,cAAc,EAAE;AAAA,MACzB;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,kCAAkC,IAAI;AAClC,UAAI,OAAO,YAAE,cAAc;AACvB,aAAK,QAAQ,MAAM;AAAA,MACvB,OACK;AACD,aAAK,QAAQ,MAAM;AACnB,aAAK,qBAAqB,EAAE;AAAA,MAChC;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,sCAAsC,IAAI;AACtC,UAAI,OAAO,YAAE,qBAAqB,OAAO,YAAE,KAAK;AAC5C,aAAK,KAAK,IAAI,aAAa;AAAA,MAC/B;AACA,WAAK,QAAQ,MAAM;AACnB,WAAK,iBAAiB,EAAE;AAAA,IAC5B;AAAA;AAAA;AAAA,IAGA,qBAAqB,IAAI;AACrB,YAAM,QAAQ,KAAK;AACnB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,cAAc;AACjB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,YAAY;AAC1B,eAAK,mBAAmB,KAAK;AAC7B,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,gBAAM,QAAQ;AACd,eAAK,QAAQ,MAAM;AACnB,eAAK,cAAc,EAAE;AAAA,QACzB;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,iBAAiB,IAAI;AACjB,YAAM,QAAQ,KAAK;AACnB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,mBAAmB;AACtB,eAAK,QAAQ,MAAM;AACnB,eAAK,mBAAmB,KAAK;AAC7B;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,kBAAkB;AACrB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,cAAc;AACjB,gBAAM,QAAQ;AACd;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,YAAY;AAC1B,eAAK,mBAAmB,KAAK;AAC7B,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,gBAAM,QAAQ;AACd,eAAK,QAAQ,MAAM;AACnB,eAAK,cAAc,EAAE;AAAA,QACzB;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,qBAAqB,IAAI;AACrB,YAAM,QAAQ,KAAK;AACnB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,cAAc;AACjB,gBAAM,QAAQ;AACd,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,mBAAmB;AACtB,eAAK,KAAK,IAAI,wBAAwB;AACtC,eAAK,QAAQ,MAAM;AACnB,eAAK,mBAAmB,KAAK;AAC7B;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,YAAY;AAC1B,eAAK,mBAAmB,KAAK;AAC7B,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,gBAAM,QAAQ;AACd,eAAK,QAAQ,MAAM;AACnB,eAAK,cAAc,EAAE;AAAA,QACzB;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,cAAc,IAAI;AACd,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE,WAAW;AACd,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,mBAAmB;AACtB,eAAK,QAAQ,MAAM;AACnB,eAAK,wBAAwB,EAAE;AAC/B;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,YAAY;AAC1B,eAAK,oBAAoB,IAAI;AAC7B,gBAAM,QAAQ,KAAK;AACnB,gBAAM,cAAc;AACpB,eAAK,mBAAmB,KAAK;AAC7B,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,KAAK,IAAI,kCAAkC;AAChD,eAAK,QAAQ,MAAM;AACnB,eAAK,wBAAwB,EAAE;AAAA,QACnC;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,wBAAwB,IAAI;AACxB,UAAI,aAAa,EAAE,GAAG;AAClB,aAAK,oBAAoB,OAAO,aAAa,aAAa,EAAE,CAAC,CAAC;AAC9D,aAAK,QAAQ,MAAM;AAAA,MACvB;AAEI,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE,WAAW;AAEd;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,MAAM;AACT,iBAAK,KAAK,IAAI,uBAAuB;AACrC,iBAAK,oBAAoB,qBAAqB;AAC9C,iBAAK,QAAQ,MAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,mBAAmB;AACtB,iBAAK,KAAK,IAAI,kBAAkB;AAChC,iBAAK,oBAAoB,IAAI;AAC7B,kBAAM,QAAQ,KAAK;AACnB,kBAAM,cAAc;AACpB,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,QAAQ,MAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,YAAY;AAC1B,iBAAK,oBAAoB,IAAI;AAC7B,kBAAM,QAAQ,KAAK;AACnB,kBAAM,cAAc;AACpB,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,oBAAoB,OAAO,cAAc,EAAE,CAAC;AACjD,iBAAK,QAAQ,MAAM;AAAA,UACvB;AAAA,QACJ;AAAA,IACR;AAAA;AAAA;AAAA,IAGA,kBAAkB,IAAI;AAClB,YAAM,QAAQ,KAAK;AACnB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE,WAAW;AACd,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,mBAAmB;AACtB,eAAK,QAAQ,MAAM;AACnB,eAAK,mBAAmB,KAAK;AAC7B;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,MAAM;AACT,eAAK,KAAK,IAAI,uBAAuB;AACrC,gBAAM,QAAQ;AACd;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,YAAY;AAC1B,gBAAM,cAAc;AACpB,eAAK,mBAAmB,KAAK;AAC7B,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,gBAAM,QAAQ,OAAO,cAAc,aAAa,EAAE,IAAI,aAAa,EAAE,IAAI,EAAE;AAAA,QAC/E;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,uBAAuB,IAAI;AACvB,YAAM,QAAQ,KAAK;AACnB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE,WAAW;AAEd;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,mBAAmB;AACtB,eAAK,QAAQ,MAAM;AACnB,eAAK,mBAAmB,KAAK;AAC7B;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,YAAY;AAC1B,gBAAM,cAAc;AACpB,eAAK,mBAAmB,KAAK;AAC7B,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,cAAI,KAAK,wBAAwB,UAAG,QAAQ,KAAK,GAAG;AAChD,iBAAK,QAAQ,MAAM;AAAA,UACvB,WACS,KAAK,wBAAwB,UAAG,QAAQ,KAAK,GAAG;AACrD,iBAAK,QAAQ,MAAM;AAAA,UACvB,WAGS,CAAC,KAAK,mBAAmB,GAAG;AACjC,iBAAK,KAAK,IAAI,wCAAwC;AACtD,kBAAM,cAAc;AACpB,iBAAK,QAAQ,MAAM;AACnB,iBAAK,mBAAmB,EAAE;AAAA,UAC9B;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,gCAAgC,IAAI;AAChC,YAAM,QAAQ,KAAK;AACnB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE,WAAW;AACd,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,gBAAgB;AACnB,eAAK,KAAK,IAAI,0CAA0C;AACxD,gBAAM,WAAW;AACjB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,YAAY;AACf,eAAK,KAAK,IAAI,0CAA0C;AACxD,gBAAM,WAAW;AACjB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,mBAAmB;AACtB,eAAK,KAAK,IAAI,8BAA8B;AAC5C,gBAAM,cAAc;AACpB,eAAK,QAAQ,MAAM;AACnB,eAAK,mBAAmB,KAAK;AAC7B;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,YAAY;AAC1B,gBAAM,cAAc;AACpB,eAAK,mBAAmB,KAAK;AAC7B,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,KAAK,IAAI,yCAAyC;AACvD,gBAAM,cAAc;AACpB,eAAK,QAAQ,MAAM;AACnB,eAAK,mBAAmB,EAAE;AAAA,QAC9B;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,oCAAoC,IAAI;AACpC,YAAM,QAAQ,KAAK;AACnB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE,WAAW;AAEd;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,gBAAgB;AACnB,gBAAM,WAAW;AACjB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,YAAY;AACf,gBAAM,WAAW;AACjB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,mBAAmB;AACtB,eAAK,KAAK,IAAI,8BAA8B;AAC5C,gBAAM,cAAc;AACpB,eAAK,QAAQ,MAAM;AACnB,eAAK,mBAAmB,KAAK;AAC7B;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,YAAY;AAC1B,gBAAM,cAAc;AACpB,eAAK,mBAAmB,KAAK;AAC7B,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,KAAK,IAAI,yCAAyC;AACvD,gBAAM,cAAc;AACpB,eAAK,QAAQ,MAAM;AACnB,eAAK,mBAAmB,EAAE;AAAA,QAC9B;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,0CAA0C,IAAI;AAC1C,YAAM,QAAQ,KAAK;AACnB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,gBAAgB;AACnB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,MAAM;AACT,eAAK,KAAK,IAAI,uBAAuB;AACrC,gBAAM,YAAY;AAClB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,mBAAmB;AACtB,eAAK,KAAK,IAAI,6BAA6B;AAC3C,gBAAM,cAAc;AACpB,eAAK,mBAAmB,KAAK;AAC7B,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,YAAY;AAC1B,gBAAM,cAAc;AACpB,eAAK,mBAAmB,KAAK;AAC7B,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,gBAAM,YAAY,OAAO,cAAc,EAAE;AAAA,QAC7C;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,0CAA0C,IAAI;AAC1C,YAAM,QAAQ,KAAK;AACnB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,YAAY;AACf,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,MAAM;AACT,eAAK,KAAK,IAAI,uBAAuB;AACrC,gBAAM,YAAY;AAClB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,mBAAmB;AACtB,eAAK,KAAK,IAAI,6BAA6B;AAC3C,gBAAM,cAAc;AACpB,eAAK,mBAAmB,KAAK;AAC7B,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,YAAY;AAC1B,gBAAM,cAAc;AACpB,eAAK,mBAAmB,KAAK;AAC7B,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,gBAAM,YAAY,OAAO,cAAc,EAAE;AAAA,QAC7C;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,mCAAmC,IAAI;AACnC,YAAM,QAAQ,KAAK;AACnB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE,WAAW;AACd,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,mBAAmB;AACtB,eAAK,QAAQ,MAAM;AACnB,eAAK,mBAAmB,KAAK;AAC7B;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,gBAAgB;AACnB,eAAK,KAAK,IAAI,yDAAyD;AACvE,gBAAM,WAAW;AACjB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,YAAY;AACf,eAAK,KAAK,IAAI,yDAAyD;AACvE,gBAAM,WAAW;AACjB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,YAAY;AAC1B,gBAAM,cAAc;AACpB,eAAK,mBAAmB,KAAK;AAC7B,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,KAAK,IAAI,yCAAyC;AACvD,gBAAM,cAAc;AACpB,eAAK,QAAQ,MAAM;AACnB,eAAK,mBAAmB,EAAE;AAAA,QAC9B;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,+CAA+C,IAAI;AAC/C,YAAM,QAAQ,KAAK;AACnB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE,WAAW;AAEd;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,mBAAmB;AACtB,eAAK,mBAAmB,KAAK;AAC7B,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,gBAAgB;AACnB,gBAAM,WAAW;AACjB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,YAAY;AACf,gBAAM,WAAW;AACjB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,YAAY;AAC1B,gBAAM,cAAc;AACpB,eAAK,mBAAmB,KAAK;AAC7B,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,KAAK,IAAI,yCAAyC;AACvD,gBAAM,cAAc;AACpB,eAAK,QAAQ,MAAM;AACnB,eAAK,mBAAmB,EAAE;AAAA,QAC9B;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,gCAAgC,IAAI;AAChC,YAAM,QAAQ,KAAK;AACnB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE,WAAW;AACd,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,gBAAgB;AACnB,eAAK,KAAK,IAAI,0CAA0C;AACxD,gBAAM,WAAW;AACjB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,YAAY;AACf,eAAK,KAAK,IAAI,0CAA0C;AACxD,gBAAM,WAAW;AACjB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,mBAAmB;AACtB,eAAK,KAAK,IAAI,8BAA8B;AAC5C,gBAAM,cAAc;AACpB,eAAK,QAAQ,MAAM;AACnB,eAAK,mBAAmB,KAAK;AAC7B;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,YAAY;AAC1B,gBAAM,cAAc;AACpB,eAAK,mBAAmB,KAAK;AAC7B,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,KAAK,IAAI,yCAAyC;AACvD,gBAAM,cAAc;AACpB,eAAK,QAAQ,MAAM;AACnB,eAAK,mBAAmB,EAAE;AAAA,QAC9B;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,oCAAoC,IAAI;AACpC,YAAM,QAAQ,KAAK;AACnB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE,WAAW;AAEd;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,gBAAgB;AACnB,gBAAM,WAAW;AACjB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,YAAY;AACf,gBAAM,WAAW;AACjB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,mBAAmB;AACtB,eAAK,KAAK,IAAI,8BAA8B;AAC5C,gBAAM,cAAc;AACpB,eAAK,QAAQ,MAAM;AACnB,eAAK,mBAAmB,KAAK;AAC7B;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,YAAY;AAC1B,gBAAM,cAAc;AACpB,eAAK,mBAAmB,KAAK;AAC7B,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,KAAK,IAAI,yCAAyC;AACvD,gBAAM,cAAc;AACpB,eAAK,QAAQ,MAAM;AACnB,eAAK,mBAAmB,EAAE;AAAA,QAC9B;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,0CAA0C,IAAI;AAC1C,YAAM,QAAQ,KAAK;AACnB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,gBAAgB;AACnB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,MAAM;AACT,eAAK,KAAK,IAAI,uBAAuB;AACrC,gBAAM,YAAY;AAClB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,mBAAmB;AACtB,eAAK,KAAK,IAAI,6BAA6B;AAC3C,gBAAM,cAAc;AACpB,eAAK,mBAAmB,KAAK;AAC7B,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,YAAY;AAC1B,gBAAM,cAAc;AACpB,eAAK,mBAAmB,KAAK;AAC7B,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,gBAAM,YAAY,OAAO,cAAc,EAAE;AAAA,QAC7C;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,0CAA0C,IAAI;AAC1C,YAAM,QAAQ,KAAK;AACnB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,YAAY;AACf,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,MAAM;AACT,eAAK,KAAK,IAAI,uBAAuB;AACrC,gBAAM,YAAY;AAClB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,mBAAmB;AACtB,eAAK,KAAK,IAAI,6BAA6B;AAC3C,gBAAM,cAAc;AACpB,eAAK,mBAAmB,KAAK;AAC7B,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,YAAY;AAC1B,gBAAM,cAAc;AACpB,eAAK,mBAAmB,KAAK;AAC7B,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,gBAAM,YAAY,OAAO,cAAc,EAAE;AAAA,QAC7C;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,mCAAmC,IAAI;AACnC,YAAM,QAAQ,KAAK;AACnB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE;AAAA,QACP,KAAK,YAAE,WAAW;AAEd;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,mBAAmB;AACtB,eAAK,mBAAmB,KAAK;AAC7B,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,YAAY;AAC1B,gBAAM,cAAc;AACpB,eAAK,mBAAmB,KAAK;AAC7B,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,KAAK,IAAI,+CAA+C;AAC7D,eAAK,QAAQ,MAAM;AACnB,eAAK,mBAAmB,EAAE;AAAA,QAC9B;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,mBAAmB,IAAI;AACnB,YAAM,QAAQ,KAAK;AACnB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,mBAAmB;AACtB,eAAK,mBAAmB,KAAK;AAC7B,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,MAAM;AACT,eAAK,KAAK,IAAI,uBAAuB;AACrC;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,mBAAmB,KAAK;AAC7B,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA;AAAA,MAEJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,mBAAmB,IAAI;AACnB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,sBAAsB;AACzB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,KAAK;AACR,eAAK,KAAK,IAAI,UAAU;AACxB,eAAK,cAAc;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,eAAe,EAAE;AAAA,QAC1B;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,0BAA0B,IAAI;AAC1B,UAAI,OAAO,YAAE,sBAAsB;AAC/B,aAAK,QAAQ,MAAM;AAAA,MACvB,OACK;AACD,aAAK,WAAW,GAAG;AACnB,aAAK,QAAQ,MAAM;AACnB,aAAK,mBAAmB,EAAE;AAAA,MAC9B;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,sBAAsB,IAAI;AACtB,cAAQ,IAAI;AAAA,QACR,KAAK,YAAE,mBAAmB;AACtB,eAAK,QAAQ,MAAM;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,YAAE,sBAAsB;AACzB,eAAK,WAAW,GAAG;AACnB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,eAAK,WAAW,IAAI;AACpB,eAAK,QAAQ,MAAM;AACnB,eAAK,mBAAmB,EAAE;AAAA,QAC9B;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,yBAAyB,IAAI;AACzB,UAAI,OAAO,YAAE,aAAa;AACtB,aAAK,QAAQ,MAAM;AAAA,MACvB,WACS,oBAAoB,EAAE,GAAG;AAC9B,aAAK,QAAQ,MAAM;AACnB,aAAK,8BAA8B,EAAE;AAAA,MACzC,OACK;AACD,aAAK,4CAA4C,YAAE,SAAS;AAC5D,aAAK,kBAAkB,KAAK,aAAa,EAAE;AAAA,MAC/C;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,8BAA8B,IAAI;AAC9B,YAAM,cAAc,KAAK,8BAA8B,EAAE;AAGzD,UAAI,KAAK,mBAAmB,GAAG;AAAA,MAE/B,WACS,aAAa;AAClB,iBAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AACzC,eAAK,4CAA4C,YAAY,CAAC,CAAC;AAAA,QACnE;AACA,aAAK,QAAQ,KAAK;AAAA,MACtB,OACK;AACD,aAAK,4CAA4C,YAAE,SAAS;AAC5D,aAAK,QAAQ,MAAM;AAAA,MACvB;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,yBAAyB,IAAI;AACzB,UAAI,oBAAoB,EAAE,GAAG;AACzB,aAAK,4CAA4C,EAAE;AAAA,MACvD,OACK;AACD,YAAI,OAAO,YAAE,WAAW;AACpB,eAAK,KAAK,IAAI,8BAA8B;AAAA,QAChD;AACA,aAAK,kBAAkB,KAAK,aAAa,EAAE;AAAA,MAC/C;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,gCAAgC,IAAI;AAChC,WAAK,cAAc;AACnB,UAAI,OAAO,YAAE,iBAAiB,OAAO,YAAE,iBAAiB;AACpD,aAAK,QAAQ,MAAM;AAAA,MACvB,WAES,aAAa,EAAE,GAAG;AACvB,aAAK,QAAQ,MAAM;AACnB,aAAK,gCAAgC,EAAE;AAAA,MAC3C,OACK;AACD,aAAK,KAAK,IAAI,0CAA0C;AACxD,aAAK,4CAA4C,YAAE,SAAS;AAC5D,aAAK,4CAA4C,YAAE,WAAW;AAC9D,aAAK,kBAAkB,KAAK,aAAa,EAAE;AAAA,MAC/C;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,yCAAyC,IAAI;AACzC,UAAI,gBAAgB,EAAE,GAAG;AACrB,aAAK,QAAQ,MAAM;AACnB,aAAK,oCAAoC,EAAE;AAAA,MAC/C,OACK;AACD,aAAK,KAAK,IAAI,0CAA0C;AACxD,aAAK,4CAA4C,YAAE,SAAS;AAC5D,aAAK,4CAA4C,YAAE,WAAW;AAC9D,aAAK,WAAW,CAAC;AACjB,aAAK,QAAQ,KAAK;AAAA,MACtB;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,oCAAoC,IAAI;AACpC,UAAI,qBAAqB,EAAE,GAAG;AAC1B,aAAK,cAAc,KAAK,cAAc,KAAK,KAAK;AAAA,MACpD,WACS,qBAAqB,EAAE,GAAG;AAC/B,aAAK,cAAc,KAAK,cAAc,KAAK,KAAK;AAAA,MACpD,WACS,aAAa,EAAE,GAAG;AACvB,aAAK,cAAc,KAAK,cAAc,KAAK,KAAK;AAAA,MACpD,WACS,OAAO,YAAE,WAAW;AACzB,aAAK,QAAQ,MAAM;AAAA,MACvB,OACK;AACD,aAAK,KAAK,IAAI,uCAAuC;AACrD,aAAK,QAAQ,MAAM;AACnB,aAAK,mCAAmC,EAAE;AAAA,MAC9C;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,gCAAgC,IAAI;AAChC,UAAI,aAAa,EAAE,GAAG;AAClB,aAAK,cAAc,KAAK,cAAc,KAAK,KAAK;AAAA,MACpD,WACS,OAAO,YAAE,WAAW;AACzB,aAAK,QAAQ,MAAM;AAAA,MACvB,OACK;AACD,aAAK,KAAK,IAAI,uCAAuC;AACrD,aAAK,QAAQ,MAAM;AACnB,aAAK,mCAAmC,EAAE;AAAA,MAC9C;AAAA,IACJ;AAAA;AAAA;AAAA,IAGA,mCAAmC,IAAI;AACnC,UAAI,KAAK,gBAAgB,YAAE,MAAM;AAC7B,aAAK,KAAK,IAAI,sBAAsB;AACpC,aAAK,cAAc,YAAE;AAAA,MACzB,WACS,KAAK,cAAc,SAAS;AACjC,aAAK,KAAK,IAAI,qCAAqC;AACnD,aAAK,cAAc,YAAE;AAAA,MACzB,WACS,YAAY,KAAK,WAAW,GAAG;AACpC,aAAK,KAAK,IAAI,2BAA2B;AACzC,aAAK,cAAc,YAAE;AAAA,MACzB,WACS,qBAAqB,KAAK,WAAW,GAAG;AAC7C,aAAK,KAAK,IAAI,8BAA8B;AAAA,MAChD,WACS,mBAAmB,KAAK,WAAW,KAAK,KAAK,gBAAgB,YAAE,iBAAiB;AACrF,aAAK,KAAK,IAAI,yBAAyB;AACvC,cAAM,cAAc,mCAAmC,IAAI,KAAK,WAAW;AAC3E,YAAI,gBAAgB,QAAW;AAC3B,eAAK,cAAc;AAAA,QACvB;AAAA,MACJ;AACA,WAAK,4CAA4C,KAAK,WAAW;AACjE,WAAK,kBAAkB,KAAK,aAAa,EAAE;AAAA,IAC/C;AAAA,EACJ;;;ACp1FA,MAAM,4BAA4B,oBAAI,IAAI,CAAC,OAAE,IAAI,OAAE,IAAI,OAAE,IAAI,OAAE,UAAU,OAAE,QAAQ,OAAE,GAAG,OAAE,IAAI,OAAE,IAAI,OAAE,IAAI,OAAE,GAAG,CAAC;AAChH,MAAM,uCAAuC,oBAAI,IAAI;AAAA,IACjD,GAAG;AAAA,IACH,OAAE;AAAA,IACF,OAAE;AAAA,IACF,OAAE;AAAA,IACF,OAAE;AAAA,IACF,OAAE;AAAA,IACF,OAAE;AAAA,IACF,OAAE;AAAA,IACF,OAAE;AAAA,EACN,CAAC;AACD,MAAM,qBAAqB,oBAAI,IAAI;AAAA,IAC/B,CAAC,OAAE,QAAQ,GAAG,IAAI;AAAA,IAClB,CAAC,OAAE,SAAS,GAAG,IAAI;AAAA,IACnB,CAAC,OAAE,MAAM,GAAG,IAAI;AAAA,IAChB,CAAC,OAAE,SAAS,GAAG,IAAI;AAAA,IACnB,CAAC,OAAE,QAAQ,GAAG,IAAI;AAAA,IAClB,CAAC,OAAE,OAAO,GAAG,IAAI;AAAA,IACjB,CAAC,OAAE,IAAI,GAAG,IAAI;AAAA,IACd,CAAC,OAAE,UAAU,GAAG,IAAI;AAAA,IACpB,CAAC,OAAE,IAAI,GAAG,IAAI;AAAA,IACd,CAAC,OAAE,gBAAgB,GAAG,MAAM;AAAA,IAC5B,CAAC,OAAE,IAAI,GAAG,MAAM;AAAA,IAChB,CAAC,OAAE,IAAI,GAAG,MAAM;AAAA,IAChB,CAAC,OAAE,IAAI,GAAG,MAAM;AAAA,IAChB,CAAC,OAAE,IAAI,GAAG,MAAM;AAAA,IAChB,CAAC,OAAE,OAAO,GAAG,MAAM;AAAA,IACnB,CAAC,OAAE,MAAM,GAAG,GAAG;AAAA,IACf,CAAC,OAAE,gBAAgB,GAAG,GAAG;AAAA,IACzB,CAAC,OAAE,OAAO,GAAG,GAAG;AAAA,EACpB,CAAC;AACD,MAAM,gBAAgB,CAAC,OAAE,IAAI,OAAE,IAAI,OAAE,IAAI,OAAE,IAAI,OAAE,IAAI,OAAE,EAAE;AACzD,MAAM,oBAAoB,CAAC,OAAE,IAAI,OAAE,UAAU,OAAE,IAAI;AACnD,MAAM,qBAAqB,CAAC,OAAE,OAAO,OAAE,OAAO,OAAE,OAAO,OAAE,UAAU,OAAE,IAAI;AACzE,MAAM,gBAAgB,CAAC,OAAE,OAAO,OAAE,UAAU,OAAE,IAAI;AAClD,MAAM,cAAc,CAAC,OAAE,IAAI,OAAE,EAAE;AAExB,MAAM,mBAAN,MAAuB;AAAA,IAC1B,IAAI,2BAA2B;AAC3B,aAAO,KAAK,cAAc,IAAI,KAAK,YAAY,mBAAmB,KAAK,OAAO,IAAI,KAAK;AAAA,IAC3F;AAAA,IACA,YAAY,UAAU,aAAa,SAAS;AACxC,WAAK,cAAc;AACnB,WAAK,UAAU;AACf,WAAK,QAAQ,CAAC;AACd,WAAK,SAAS,CAAC;AACf,WAAK,WAAW;AAChB,WAAK,YAAY;AACjB,WAAK,eAAe,OAAE;AACtB,WAAK,UAAU;AAAA,IACnB;AAAA;AAAA,IAEA,SAAS,SAAS;AACd,aAAO,KAAK,MAAM,YAAY,SAAS,KAAK,QAAQ;AAAA,IACxD;AAAA;AAAA,IAEA,gBAAgB;AACZ,aAAO,KAAK,iBAAiB,OAAE,YAAY,KAAK,YAAY,gBAAgB,KAAK,OAAO,MAAM,GAAG;AAAA,IACrG;AAAA,IACA,wBAAwB;AACpB,WAAK,UAAU,KAAK,MAAM,KAAK,QAAQ;AACvC,WAAK,eAAe,KAAK,OAAO,KAAK,QAAQ;AAAA,IACjD;AAAA;AAAA,IAEA,KAAK,SAAS,OAAO;AACjB,WAAK;AACL,WAAK,MAAM,KAAK,QAAQ,IAAI;AAC5B,WAAK,UAAU;AACf,WAAK,OAAO,KAAK,QAAQ,IAAI;AAC7B,WAAK,eAAe;AACpB,UAAI,KAAK,cAAc,GAAG;AACtB,aAAK;AAAA,MACT;AACA,WAAK,QAAQ,WAAW,SAAS,OAAO,IAAI;AAAA,IAChD;AAAA,IACA,MAAM;AACF,YAAM,SAAS,KAAK;AACpB,UAAI,KAAK,YAAY,KAAK,KAAK,cAAc,GAAG;AAC5C,aAAK;AAAA,MACT;AACA,WAAK;AACL,WAAK,sBAAsB;AAC3B,WAAK,QAAQ,UAAU,QAAQ,IAAI;AAAA,IACvC;AAAA,IACA,QAAQ,YAAY,YAAY;AAC5B,YAAM,MAAM,KAAK,SAAS,UAAU;AACpC,WAAK,MAAM,GAAG,IAAI;AAClB,UAAI,QAAQ,KAAK,UAAU;AACvB,aAAK,UAAU;AAAA,MACnB;AAAA,IACJ;AAAA,IACA,YAAY,kBAAkB,YAAY,cAAc;AACpD,YAAM,eAAe,KAAK,SAAS,gBAAgB,IAAI;AACvD,WAAK,MAAM,OAAO,cAAc,GAAG,UAAU;AAC7C,WAAK,OAAO,OAAO,cAAc,GAAG,YAAY;AAChD,WAAK;AACL,UAAI,iBAAiB,KAAK,UAAU;AAChC,aAAK,sBAAsB;AAAA,MAC/B;AACA,WAAK,QAAQ,WAAW,KAAK,SAAS,KAAK,cAAc,iBAAiB,KAAK,QAAQ;AAAA,IAC3F;AAAA,IACA,sBAAsB,SAAS;AAC3B,UAAI,YAAY,KAAK,WAAW;AAChC,SAAG;AACC,oBAAY,KAAK,OAAO,YAAY,SAAS,YAAY,CAAC;AAAA,MAC9D,SAAS,YAAY,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAM,SAAS,CAAC,MAAM,GAAG;AACzF,WAAK,gBAAgB,YAAY,IAAI,IAAI,SAAS;AAAA,IACtD;AAAA,IACA,gBAAgB,KAAK;AACjB,aAAO,KAAK,YAAY,KAAK;AACzB,cAAM,SAAS,KAAK;AACpB,YAAI,KAAK,YAAY,KAAK,KAAK,cAAc,GAAG;AAC5C,eAAK,aAAa;AAAA,QACtB;AACA,aAAK;AACL,aAAK,sBAAsB;AAC3B,aAAK,QAAQ,UAAU,QAAQ,KAAK,WAAW,GAAG;AAAA,MACtD;AAAA,IACJ;AAAA,IACA,sBAAsB,SAAS;AAC3B,YAAM,MAAM,KAAK,SAAS,OAAO;AACjC,WAAK,gBAAgB,MAAM,IAAI,IAAI,GAAG;AAAA,IAC1C;AAAA,IACA,eAAe,UAAU,UAAU;AAC/B,YAAM,MAAM,KAAK,iBAAiB,UAAU,QAAQ;AACpD,WAAK,gBAAgB,MAAM,IAAI,IAAI,GAAG;AAAA,IAC1C;AAAA,IACA,+BAA+B;AAC3B,WAAK,eAAe,eAAe,GAAG,IAAI;AAAA,IAC9C;AAAA,IACA,0BAA0B;AACtB,WAAK,eAAe,aAAa,GAAG,IAAI;AAAA,IAC5C;AAAA,IACA,wBAAwB;AAGpB,WAAK,YAAY;AACjB,WAAK,gBAAgB,CAAC;AAAA,IAC1B;AAAA,IACA,iBAAiB,UAAU,WAAW;AAClC,eAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,YAAI,SAAS,SAAS,KAAK,OAAO,CAAC,CAAC,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAM,CAAC,CAAC,MAAM,WAAW;AACpG,iBAAO;AAAA,QACX;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAAA,IACA,YAAY,UAAU,UAAU;AAC5B,YAAM,MAAM,KAAK,iBAAiB,UAAU,QAAQ;AACpD,WAAK,gBAAgB,MAAM,CAAC;AAAA,IAChC;AAAA,IACA,0BAA0B;AACtB,WAAK,YAAY,eAAe,GAAG,IAAI;AAAA,IAC3C;AAAA,IACA,8BAA8B;AAC1B,WAAK,YAAY,oBAAoB,GAAG,IAAI;AAAA,IAChD;AAAA,IACA,6BAA6B;AACzB,WAAK,YAAY,mBAAmB,GAAG,IAAI;AAAA,IAC/C;AAAA,IACA,OAAO,SAAS;AACZ,YAAM,MAAM,KAAK,SAAS,OAAO;AACjC,UAAI,OAAO,GAAG;AACV,YAAI,QAAQ,KAAK,UAAU;AACvB,eAAK,IAAI;AAAA,QACb,OACK;AACD,eAAK,MAAM,OAAO,KAAK,CAAC;AACxB,eAAK,OAAO,OAAO,KAAK,CAAC;AACzB,eAAK;AACL,eAAK,sBAAsB;AAC3B,eAAK,QAAQ,UAAU,SAAS,KAAK;AAAA,QACzC;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA,IAEA,mCAAmC;AAE/B,aAAO,KAAK,YAAY,KAAK,KAAK,OAAO,CAAC,MAAM,OAAE,OAAO,KAAK,MAAM,CAAC,IAAI;AAAA,IAC7E;AAAA,IACA,SAAS,SAAS;AACd,aAAO,KAAK,SAAS,OAAO,IAAI;AAAA,IACpC;AAAA,IACA,kBAAkB,SAAS;AACvB,YAAM,aAAa,KAAK,SAAS,OAAO,IAAI;AAC5C,aAAO,cAAc,IAAI,KAAK,MAAM,UAAU,IAAI;AAAA,IACtD;AAAA,IACA,2BAA2B;AACvB,aAAO,KAAK,aAAa,KAAK,KAAK,OAAO,CAAC,MAAM,OAAE;AAAA,IACvD;AAAA;AAAA,IAEA,WAAW,SAAS;AAChB,eAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,cAAM,KAAK,KAAK,OAAO,CAAC;AACxB,cAAM,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAM,CAAC,CAAC;AACzD,YAAI,OAAO,WAAW,OAAO,GAAG,MAAM;AAClC,iBAAO;AAAA,QACX;AACA,YAAI,mBAAmB,IAAI,EAAE,MAAM,IAAI;AACnC,iBAAO;AAAA,QACX;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAAA,IACA,2BAA2B;AACvB,eAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,cAAM,KAAK,KAAK,OAAO,CAAC;AACxB,cAAM,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAM,CAAC,CAAC;AACzD,YAAI,iBAAiB,EAAE,KAAK,OAAO,GAAG,MAAM;AACxC,iBAAO;AAAA,QACX;AACA,YAAI,mBAAmB,IAAI,EAAE,MAAM,IAAI;AACnC,iBAAO;AAAA,QACX;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAAA,IACA,mBAAmB,SAAS;AACxB,eAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,cAAM,KAAK,KAAK,OAAO,CAAC;AACxB,cAAM,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAM,CAAC,CAAC;AACzD,YAAI,OAAO,WAAW,OAAO,GAAG,MAAM;AAClC,iBAAO;AAAA,QACX;AACA,aAAM,OAAO,OAAE,MAAM,OAAO,OAAE,OAAO,OAAO,GAAG,QAAS,mBAAmB,IAAI,EAAE,MAAM,IAAI;AACvF,iBAAO;AAAA,QACX;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAAA,IACA,iBAAiB,SAAS;AACtB,eAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,cAAM,KAAK,KAAK,OAAO,CAAC;AACxB,cAAM,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAM,CAAC,CAAC;AACzD,YAAI,OAAO,WAAW,OAAO,GAAG,MAAM;AAClC,iBAAO;AAAA,QACX;AACA,YAAK,OAAO,OAAE,UAAU,OAAO,GAAG,QAAS,mBAAmB,IAAI,EAAE,MAAM,IAAI;AAC1E,iBAAO;AAAA,QACX;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAAA,IACA,gBAAgB,SAAS;AACrB,eAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,cAAM,KAAK,KAAK,OAAO,CAAC;AACxB,cAAM,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAM,CAAC,CAAC;AACzD,YAAI,OAAO,GAAG,MAAM;AAChB;AAAA,QACJ;AACA,YAAI,OAAO,SAAS;AAChB,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,OAAE,SAAS,OAAO,OAAE,YAAY,OAAO,OAAE,MAAM;AACtD,iBAAO;AAAA,QACX;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAAA,IACA,kCAAkC;AAC9B,eAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,cAAM,KAAK,KAAK,OAAO,CAAC;AACxB,cAAM,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAM,CAAC,CAAC;AACzD,YAAI,OAAO,GAAG,MAAM;AAChB;AAAA,QACJ;AACA,YAAI,OAAO,OAAE,SAAS,OAAO,OAAE,SAAS,OAAO,OAAE,OAAO;AACpD,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,OAAE,SAAS,OAAO,OAAE,MAAM;AACjC,iBAAO;AAAA,QACX;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAAA,IACA,iBAAiB,SAAS;AACtB,eAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,cAAM,KAAK,KAAK,OAAO,CAAC;AACxB,cAAM,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAM,CAAC,CAAC;AACzD,YAAI,OAAO,GAAG,MAAM;AAChB;AAAA,QACJ;AACA,YAAI,OAAO,SAAS;AAChB,iBAAO;AAAA,QACX;AACA,YAAI,OAAO,OAAE,UAAU,OAAO,OAAE,UAAU;AACtC,iBAAO;AAAA,QACX;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAAA;AAAA,IAEA,yBAAyB;AACrB,aAAO,0BAA0B,IAAI,KAAK,YAAY,GAAG;AACrD,aAAK,IAAI;AAAA,MACb;AAAA,IACJ;AAAA,IACA,mCAAmC;AAC/B,aAAO,qCAAqC,IAAI,KAAK,YAAY,GAAG;AAChE,aAAK,IAAI;AAAA,MACb;AAAA,IACJ;AAAA,IACA,oCAAoC,aAAa;AAC7C,aAAO,KAAK,iBAAiB,eAAe,qCAAqC,IAAI,KAAK,YAAY,GAAG;AACrG,aAAK,IAAI;AAAA,MACb;AAAA,IACJ;AAAA,EACJ;;;ACrTA,MAAM,oBAAoB;AACnB,MAAI;AACX,GAAC,SAAUC,YAAW;AAClB,IAAAA,WAAUA,WAAU,QAAQ,IAAI,CAAC,IAAI;AACrC,IAAAA,WAAUA,WAAU,SAAS,IAAI,CAAC,IAAI;AAAA,EAC1C,GAAG,YAAY,cAAc,YAAY,CAAC,EAAE;AAC5C,MAAM,SAAS,EAAE,MAAM,UAAU,OAAO;AAEjC,MAAM,wBAAN,MAA4B;AAAA,IAC/B,YAAY,aAAa;AACrB,WAAK,cAAc;AACnB,WAAK,UAAU,CAAC;AAChB,WAAK,WAAW;AAAA,IACpB;AAAA;AAAA;AAAA;AAAA,IAIA,+BAA+B,YAAY,SAAS;AAChD,YAAM,aAAa,CAAC;AACpB,YAAM,gBAAgB,QAAQ;AAC9B,YAAM,YAAY,KAAK,YAAY,WAAW,UAAU;AACxD,YAAM,iBAAiB,KAAK,YAAY,gBAAgB,UAAU;AAClE,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,QAAQ,KAAK;AAC1C,cAAM,QAAQ,KAAK,QAAQ,CAAC;AAC5B,YAAI,MAAM,SAAS,UAAU,QAAQ;AACjC;AAAA,QACJ;AACA,cAAM,EAAE,QAAQ,IAAI;AACpB,YAAI,KAAK,YAAY,WAAW,OAAO,MAAM,aACzC,KAAK,YAAY,gBAAgB,OAAO,MAAM,gBAAgB;AAC9D,gBAAM,eAAe,KAAK,YAAY,YAAY,OAAO;AACzD,cAAI,aAAa,WAAW,eAAe;AACvC,uBAAW,KAAK,EAAE,KAAK,GAAG,OAAO,aAAa,CAAC;AAAA,UACnD;AAAA,QACJ;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAAA,IACA,wBAAwB,YAAY;AAChC,UAAI,KAAK,QAAQ,SAAS;AACtB;AACJ,YAAM,UAAU,KAAK,YAAY,YAAY,UAAU;AACvD,YAAM,aAAa,KAAK,+BAA+B,YAAY,OAAO;AAC1E,UAAI,WAAW,SAAS;AACpB;AAEJ,YAAM,aAAa,IAAI,IAAI,QAAQ,IAAI,CAAC,WAAW,CAAC,OAAO,MAAM,OAAO,KAAK,CAAC,CAAC;AAC/E,UAAI,kBAAkB;AAEtB,eAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AACxC,cAAM,YAAY,WAAW,CAAC;AAE9B,YAAI,UAAU,MAAM,MAAM,CAAC,UAAU,WAAW,IAAI,MAAM,IAAI,MAAM,MAAM,KAAK,GAAG;AAC9E,6BAAmB;AACnB,cAAI,mBAAmB,mBAAmB;AACtC,iBAAK,QAAQ,OAAO,UAAU,KAAK,CAAC;AAAA,UACxC;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA,IAEA,eAAe;AACX,WAAK,QAAQ,QAAQ,MAAM;AAAA,IAC/B;AAAA,IACA,YAAY,SAAS,OAAO;AACxB,WAAK,wBAAwB,OAAO;AACpC,WAAK,QAAQ,QAAQ;AAAA,QACjB,MAAM,UAAU;AAAA,QAChB;AAAA,QACA;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,IACA,2BAA2B,SAAS,OAAO;AACvC,YAAM,cAAc,KAAK,QAAQ,QAAQ,KAAK,QAAQ;AACtD,WAAK,QAAQ,OAAO,aAAa,GAAG;AAAA,QAChC,MAAM,UAAU;AAAA,QAChB;AAAA,QACA;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,IACA,YAAY,OAAO;AACf,YAAM,aAAa,KAAK,QAAQ,QAAQ,KAAK;AAC7C,UAAI,cAAc,GAAG;AACjB,aAAK,QAAQ,OAAO,YAAY,CAAC;AAAA,MACrC;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,oBAAoB;AAChB,YAAM,YAAY,KAAK,QAAQ,QAAQ,MAAM;AAC7C,UAAI,aAAa,GAAG;AAChB,aAAK,QAAQ,OAAO,GAAG,YAAY,CAAC;AAAA,MACxC,OACK;AACD,aAAK,QAAQ,SAAS;AAAA,MAC1B;AAAA,IACJ;AAAA;AAAA,IAEA,kCAAkC,SAAS;AACvC,YAAM,QAAQ,KAAK,QAAQ,KAAK,CAACC,WAAUA,OAAM,SAAS,UAAU,UAAU,KAAK,YAAY,WAAWA,OAAM,OAAO,MAAM,OAAO;AACpI,aAAO,SAAS,MAAM,SAAS,UAAU,UAAU,QAAQ;AAAA,IAC/D;AAAA,IACA,gBAAgB,SAAS;AACrB,aAAO,KAAK,QAAQ,KAAK,CAAC,UAAU,MAAM,SAAS,UAAU,WAAW,MAAM,YAAY,OAAO;AAAA,IACrG;AAAA,EACJ;;;AC5GA,WAAS,eAAe,OAAO;AAC3B,WAAO;AAAA,MACH,UAAU;AAAA,MACV;AAAA,MACA,YAAY;AAAA,IAChB;AAAA,EACJ;AACO,MAAM,qBAAqB;AAAA;AAAA,IAE9B,iBAAiB;AACb,aAAO;AAAA,QACH,UAAU;AAAA,QACV,MAAM,cAAc;AAAA,QACpB,YAAY,CAAC;AAAA,MACjB;AAAA,IACJ;AAAA,IACA,yBAAyB;AACrB,aAAO;AAAA,QACH,UAAU;AAAA,QACV,YAAY,CAAC;AAAA,MACjB;AAAA,IACJ;AAAA,IACA,cAAc,SAAS,cAAc,OAAO;AACxC,aAAO;AAAA,QACH,UAAU;AAAA,QACV;AAAA,QACA;AAAA,QACA;AAAA,QACA,YAAY,CAAC;AAAA,QACb,YAAY;AAAA,MAChB;AAAA,IACJ;AAAA,IACA,kBAAkB,MAAM;AACpB,aAAO;AAAA,QACH,UAAU;AAAA,QACV;AAAA,QACA,YAAY;AAAA,MAChB;AAAA,IACJ;AAAA;AAAA,IAEA,YAAY,YAAY,SAAS;AAC7B,iBAAW,WAAW,KAAK,OAAO;AAClC,cAAQ,aAAa;AAAA,IACzB;AAAA,IACA,aAAa,YAAY,SAAS,eAAe;AAC7C,YAAM,eAAe,WAAW,WAAW,QAAQ,aAAa;AAChE,iBAAW,WAAW,OAAO,cAAc,GAAG,OAAO;AACrD,cAAQ,aAAa;AAAA,IACzB;AAAA,IACA,mBAAmB,iBAAiB,gBAAgB;AAChD,sBAAgB,UAAU;AAAA,IAC9B;AAAA,IACA,mBAAmB,iBAAiB;AAChC,aAAO,gBAAgB;AAAA,IAC3B;AAAA,IACA,gBAAgB,UAAUC,QAAM,UAAU,UAAU;AAChD,YAAM,cAAc,SAAS,WAAW,KAAK,CAAC,SAAS,KAAK,aAAa,eAAe;AACxF,UAAI,aAAa;AACb,oBAAY,OAAOA;AACnB,oBAAY,WAAW;AACvB,oBAAY,WAAW;AAAA,MAC3B,OACK;AACD,cAAM,OAAO;AAAA,UACT,UAAU;AAAA,UACV,MAAAA;AAAA,UACA;AAAA,UACA;AAAA,UACA,YAAY;AAAA,QAChB;AACA,2BAAmB,YAAY,UAAU,IAAI;AAAA,MACjD;AAAA,IACJ;AAAA,IACA,gBAAgB,UAAU,MAAM;AAC5B,eAAS,OAAO;AAAA,IACpB;AAAA,IACA,gBAAgB,UAAU;AACtB,aAAO,SAAS;AAAA,IACpB;AAAA,IACA,WAAW,MAAM;AACb,UAAI,KAAK,YAAY;AACjB,cAAM,MAAM,KAAK,WAAW,WAAW,QAAQ,IAAI;AACnD,aAAK,WAAW,WAAW,OAAO,KAAK,CAAC;AACxC,aAAK,aAAa;AAAA,MACtB;AAAA,IACJ;AAAA,IACA,WAAW,YAAYC,OAAM;AACzB,UAAI,WAAW,WAAW,SAAS,GAAG;AAClC,cAAM,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS,CAAC;AACvE,YAAI,mBAAmB,WAAW,QAAQ,GAAG;AACzC,mBAAS,SAASA;AAClB;AAAA,QACJ;AAAA,MACJ;AACA,yBAAmB,YAAY,YAAY,eAAeA,KAAI,CAAC;AAAA,IACnE;AAAA,IACA,iBAAiB,YAAYA,OAAM,eAAe;AAC9C,YAAM,WAAW,WAAW,WAAW,WAAW,WAAW,QAAQ,aAAa,IAAI,CAAC;AACvF,UAAI,YAAY,mBAAmB,WAAW,QAAQ,GAAG;AACrD,iBAAS,SAASA;AAAA,MACtB,OACK;AACD,2BAAmB,aAAa,YAAY,eAAeA,KAAI,GAAG,aAAa;AAAA,MACnF;AAAA,IACJ;AAAA,IACA,gBAAgB,WAAW,OAAO;AAC9B,YAAM,oBAAoB,IAAI,IAAI,UAAU,MAAM,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC;AAC1E,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,YAAI,CAAC,kBAAkB,IAAI,MAAM,CAAC,EAAE,IAAI,GAAG;AACvC,oBAAU,MAAM,KAAK,MAAM,CAAC,CAAC;AAAA,QACjC;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA,IAEA,cAAc,MAAM;AAChB,aAAO,KAAK,WAAW,CAAC;AAAA,IAC5B;AAAA,IACA,cAAc,MAAM;AAChB,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,cAAc,MAAM;AAChB,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,YAAY,SAAS;AACjB,aAAO,QAAQ;AAAA,IACnB;AAAA;AAAA,IAEA,WAAW,SAAS;AAChB,aAAO,QAAQ;AAAA,IACnB;AAAA,IACA,gBAAgB,SAAS;AACrB,aAAO,QAAQ;AAAA,IACnB;AAAA,IACA,mBAAmB,UAAU;AACzB,aAAO,SAAS;AAAA,IACpB;AAAA,IACA,sBAAsB,aAAa;AAC/B,aAAO,YAAY;AAAA,IACvB;AAAA,IACA,wBAAwB,aAAa;AACjC,aAAO,YAAY;AAAA,IACvB;AAAA,IACA,4BAA4B,aAAa;AACrC,aAAO,YAAY;AAAA,IACvB;AAAA,IACA,4BAA4B,aAAa;AACrC,aAAO,YAAY;AAAA,IACvB;AAAA;AAAA,IAEA,WAAW,MAAM;AACb,aAAO,KAAK,aAAa;AAAA,IAC7B;AAAA,IACA,cAAc,MAAM;AAChB,aAAO,KAAK,aAAa;AAAA,IAC7B;AAAA,IACA,mBAAmB,MAAM;AACrB,aAAO,KAAK,aAAa;AAAA,IAC7B;AAAA,IACA,cAAc,MAAM;AAChB,aAAO,OAAO,UAAU,eAAe,KAAK,MAAM,SAAS;AAAA,IAC/D;AAAA;AAAA,IAEA,0BAA0B,MAAM,UAAU;AACtC,WAAK,qBAAqB;AAAA,IAC9B;AAAA,IACA,0BAA0B,MAAM;AAC5B,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,6BAA6B,MAAM,aAAa;AAC5C,WAAK,qBAAqB,EAAE,GAAG,KAAK,oBAAoB,GAAG,YAAY;AAAA,IAC3E;AAAA,EACJ;;;AC1KA,MAAM,qBAAqB;AAC3B,MAAM,kBAAkB;AACxB,MAAM,wBAAwB;AAC9B,MAAM,iCAAiC;AAAA,IACnhD,GAAG;AAAA,IACH;AAAA,IACA;AAAA,EACJ;AACA,MAAM,yBAAyB,oBAAI,IAAI;AAAA,IACnC;AAAA,IACA;AAAA,IACA;AAAA,EACJ,CAAC;AACD,MAAM,oCAAoC,CAAC,oCAAoC,sCAAsC;AACrH,MAAM,mDAAmD;AAAA,IACrD,GAAG;AAAA,IACH;AAAA,IACA;AAAA,EACJ;AAEA,WAAS,UAAU,UAAU,UAAU;AACnC,WAAO,SAAS,KAAK,CAAC,WAAW,SAAS,WAAW,MAAM,CAAC;AAAA,EAChE;AAEO,WAAS,aAAa,OAAO;AAChC,WAAQ,MAAM,SAAS,sBACnB,MAAM,aAAa,SAClB,MAAM,aAAa,QAAQ,MAAM,aAAa;AAAA,EACvD;AACO,WAAS,gBAAgB,OAAO;AACnC,QAAI,MAAM,SAAS,oBAAoB;AACnC,aAAO,cAAc;AAAA,IACzB;AACA,UAAM,EAAE,SAAS,IAAI;AACrB,QAAI,YAAY,SAAS,YAAY,MAAM,uBAAuB;AAC9D,aAAO,cAAc;AAAA,IACzB;AACA,QAAI,EAAE,SAAS,IAAI;AACnB,QAAI,aAAa,MAAM;AACnB,iBAAW,SAAS,YAAY;AAChC,UAAI,uBAAuB,IAAI,QAAQ,GAAG;AACtC,eAAO,cAAc;AAAA,MACzB;AACA,UAAI,WAAW,aAAa,OAAO,8CAA8C;AACjF,UAAI,UAAU,UAAU,QAAQ,GAAG;AAC/B,eAAO,cAAc;AAAA,MACzB;AACA,iBACI,aAAa,OAAO,oCAAoC;AAC5D,UAAI,UAAU,UAAU,QAAQ,GAAG;AAC/B,eAAO,cAAc;AAAA,MACzB;AAAA,IACJ;AACA,WAAO,cAAc;AAAA,EACzB;;;AC/GA,MAAM,aAAa;AAAA,IACf,WAAW;AAAA,IACX,iBAAiB;AAAA,EACrB;AAEA,MAAM,sBAAsB;AAC5B,MAAM,+BAA+B;AACrC,MAAM,2BAA2B,IAAI,IAAI;AAAA,IACroBAAI,IAAI;AAAA,IACrC,CAAC,iBAAiB,EAAE,QAAQ,SAAS,MAAM,WAAW,WAAW,GAAG,MAAM,CAAC;AAAA,IAC3E,CAAC,iBAAiB,EAAE,QAAQ,SAAS,MAAM,WAAW,WAAW,GAAG,MAAM,CAAC;AAAA,IAC3E,CAAC,cAAc,EAAE,QAAQ,SAAS,MAAM,QAAQ,WAAW,GAAG,MAAM,CAAC;AAAA,IACrE,CAAC,cAAc,EAAE,QAAQ,SAAS,MAAM,QAAQ,WAAW,GAAG,MAAM,CAAC;AAAA,IACrE,CAAC,cAAc,EAAE,QAAQ,SAAS,MAAM,QAAQ,WAAW,GAAG,MAAM,CAAC;AAAA,IACrE,CAAC,eAAe,EAAE,QAAQ,SAAS,MAAM,SAAS,WAAW,GAAG,MAAM,CAAC;AAAA,IACvE,CAAC,cAAc,EAAE,QAAQ,SAAS,MAAM,QAAQ,WAAW,GAAG,MAAM,CAAC;AAAA,IACrE,CAAC,YAAY,EAAE,QAAQ,OAAO,MAAM,QAAQ,WAAW,GAAG,IAAI,CAAC;AAAA,IAC/D,CAAC,YAAY,EAAE,QAAQ,OAAO,MAAM,QAAQ,WAAW,GAAG,IAAI,CAAC;AAAA,IAC/D,CAAC,aAAa,EAAE,QAAQ,OAAO,MAAM,SAAS,WAAW,GAAG,IAAI,CAAC;AAAA,IACjE,CAAC,SAAS,EAAE,QAAQ,IAAI,MAAM,SAAS,WAAW,GAAG,MAAM,CAAC;AAAA,IAC5D,CAAC,eAAe,EAAE,QAAQ,SAAS,MAAM,SAAS,WAAW,GAAG,MAAM,CAAC;AAAA,EAC3E,CAAC;AAEM,MAAM,+BAA+B,IAAI,IAAI;AAAA,IAChD;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,YAAY,GAAG,EAAE,CAAC,CAAC;AAErC,MAAM,wBAAwB,oBAAI,IAAI;AAAA,IACleAAe;AACtC,UAAM,KAAK,cAAc;AACzB,UAAM,kBAAkB,OAAO,OAAE,QAC7B,cAAc,MAAM,KAAK,CAAC,EAAE,MAAAC,OAAK,MAAMA,WAAS,MAAM,SAASA,WAAS,MAAM,QAAQA,WAAS,MAAM,IAAI;AAC7G,WAAO,mBAAmB,sBAAsB,IAAI,EAAE;AAAA,EAC1D;AAEO,WAAS,uBAAuB,OAAO;AAC1C,aAAS,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ,KAAK;AACzC,UAAI,MAAM,MAAM,CAAC,EAAE,SAAS,qBAAqB;AAC7C,cAAM,MAAM,CAAC,EAAE,OAAO;AACtB;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACO,WAAS,oBAAoB,OAAO;AACvC,aAAS,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ,KAAK;AACzC,YAAM,mBAAmB,yBAAyB,IAAI,MAAM,MAAM,CAAC,EAAE,IAAI;AACzE,UAAI,oBAAoB,MAAM;AAC1B,cAAM,MAAM,CAAC,EAAE,OAAO;AAAA,MAC1B;AAAA,IACJ;AAAA,EACJ;AACO,WAAS,oBAAoB,OAAO;AACvC,aAAS,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ,KAAK;AACzC,YAAM,oBAAoB,yBAAyB,IAAI,MAAM,MAAM,CAAC,EAAE,IAAI;AAC1E,UAAI,mBAAmB;AACnB,cAAM,MAAM,CAAC,EAAE,SAAS,kBAAkB;AAC1C,cAAM,MAAM,CAAC,EAAE,OAAO,kBAAkB;AACxC,cAAM,MAAM,CAAC,EAAE,YAAY,kBAAkB;AAAA,MACjD;AAAA,IACJ;AAAA,EACJ;AACO,WAAS,sBAAsB,OAAO;AACzC,UAAM,kBAAkB,6BAA6B,IAAI,MAAM,OAAO;AACtE,QAAI,mBAAmB,MAAM;AACzB,YAAM,UAAU;AAChB,YAAM,QAAQ,SAAS,MAAM,OAAO;AAAA,IACxC;AAAA,EACJ;AAEA,WAAS,6BAA6B,IAAI,IAAI;AAC1C,WAAO,OAAO,GAAG,WAAW,OAAO,OAAE,MAAM,OAAO,OAAE,MAAM,OAAO,OAAE,MAAM,OAAO,OAAE,MAAM,OAAO,OAAE;AAAA,EACrG;AACA,WAAS,uBAAuB,IAAI,IAAI,OAAO;AAC3C,QAAI,OAAO,GAAG,UAAU,OAAO,OAAE,gBAAgB;AAC7C,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,YAAI,MAAM,CAAC,EAAE,SAAS,MAAM,UAAU;AAClC,gBAAM,QAAQ,MAAM,CAAC,EAAE,MAAM,YAAY;AACzC,iBAAO,UAAU,WAAW,aAAa,UAAU,WAAW;AAAA,QAClE;AAAA,MACJ;AAAA,IACJ;AACA,WAAO,OAAO,GAAG,QAAQ,OAAO,OAAE,kBAAkB,OAAO,OAAE,QAAQ,OAAO,OAAE;AAAA,EAClF;AACO,WAAS,mBAAmB,IAAI,IAAI,OAAO,WAAW;AACzD,YAAU,CAAC,aAAa,cAAc,GAAG,SAAS,uBAAuB,IAAI,IAAI,KAAK,MAChF,CAAC,aAAa,cAAc,GAAG,WAAW,6BAA6B,IAAI,EAAE;AAAA,EACvF;;;ACzNA,MAAM,oBAAoB;AAE1B,MAAM,qBAAqB;AAC3B,MAAM,qBAAqB;AAE3B,MAAI;AACJ,GAAC,SAAUC,gBAAe;AACtB,IAAAA,eAAcA,eAAc,SAAS,IAAI,CAAC,IAAI;AAC9C,IAAAA,eAAcA,eAAc,aAAa,IAAI,CAAC,IAAI;AAClD,IAAAA,eAAcA,eAAc,aAAa,IAAI,CAAC,IAAI;AAClD,IAAAA,eAAcA,eAAc,SAAS,IAAI,CAAC,IAAI;AAC9C,IAAAA,eAAcA,eAAc,mBAAmB,IAAI,CAAC,IAAI;AACxD,IAAAA,eAAcA,eAAc,YAAY,IAAI,CAAC,IAAI;AACjD,IAAAA,eAAcA,eAAc,SAAS,IAAI,CAAC,IAAI;AAC9C,IAAAA,eAAcA,eAAc,MAAM,IAAI,CAAC,IAAI;AAC3C,IAAAA,eAAcA,eAAc,UAAU,IAAI,CAAC,IAAI;AAC/C,IAAAA,eAAcA,eAAc,eAAe,IAAI,CAAC,IAAI;AACpD,IAAAA,eAAcA,eAAc,YAAY,IAAI,EAAE,IAAI;AAClD,IAAAA,eAAcA,eAAc,iBAAiB,IAAI,EAAE,IAAI;AACvD,IAAAA,eAAcA,eAAc,eAAe,IAAI,EAAE,IAAI;AACrD,IAAAA,eAAcA,eAAc,QAAQ,IAAI,EAAE,IAAI;AAC9C,IAAAA,eAAcA,eAAc,SAAS,IAAI,EAAE,IAAI;AAC/C,IAAAA,eAAcA,eAAc,WAAW,IAAI,EAAE,IAAI;AACjD,IAAAA,eAAcA,eAAc,oBAAoB,IAAI,EAAE,IAAI;AAC1D,IAAAA,eAAcA,eAAc,aAAa,IAAI,EAAE,IAAI;AACnD,IAAAA,eAAcA,eAAc,YAAY,IAAI,EAAE,IAAI;AAClD,IAAAA,eAAcA,eAAc,aAAa,IAAI,EAAE,IAAI;AACnD,IAAAA,eAAcA,eAAc,gBAAgB,IAAI,EAAE,IAAI;AACtD,IAAAA,eAAcA,eAAc,kBAAkB,IAAI,EAAE,IAAI;AACxD,IAAAA,eAAcA,eAAc,sBAAsB,IAAI,EAAE,IAAI;AAAA,EAChE,GAAG,kBAAkB,gBAAgB,CAAC,EAAE;AACxC,MAAM,WAAW;AAAA,IACb,WAAW;AAAA,IACX,UAAU;AAAA,IACV,aAAa;AAAA,IACb,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,WAAW;AAAA,EACf;AACA,MAAM,uBAAuB,oBAAI,IAAI,CAAC,OAAE,OAAO,OAAE,OAAO,OAAE,OAAO,OAAE,OAAO,OAAE,EAAE,CAAC;AAC/E,MAAM,uBAAuB;AAAA,IACzB,kBAAkB;AAAA,IAClB,wBAAwB;AAAA,IACxB,aAAa;AAAA,IACb,cAAc;AAAA,EAClB;AAEO,MAAM,SAAN,MAAa;AAAA,IAChB,YAAY,SAAS,UAAU,kBAAkB,MAAM,gBAAgB,MAAM;AACzE,WAAK,kBAAkB;AACvB,WAAK,gBAAgB;AACrB,WAAK,eAAe;AACpB,WAAK,UAAU;AACf,WAAK,gBAAgB,cAAc;AACnC,WAAK,wBAAwB,cAAc;AAC3C,WAAK,cAAc;AACnB,WAAK,cAAc;AAEnB,WAAK,mBAAmB;AAKxB,WAAK,yBAAyB,CAAC;AAC/B,WAAK,yBAAyB,CAAC;AAC/B,WAAK,wCAAwC;AAC7C,WAAK,aAAa;AAClB,WAAK,kBAAkB;AACvB,WAAK,yBAAyB;AAC9B,WAAK,UAAU;AAAA,QACX,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AACA,WAAK,cAAc,KAAK,QAAQ;AAChC,WAAK,eAAe,KAAK,QAAQ;AAEjC,UAAI,KAAK,cAAc;AACnB,aAAK,QAAQ,yBAAyB;AAAA,MAC1C;AACA,WAAK,WAAW,aAAa,QAAQ,aAAa,SAAS,WAAW,KAAK,YAAY,eAAe;AACtG,WAAK,YAAY,IAAI,UAAU,KAAK,SAAS,IAAI;AACjD,WAAK,2BAA2B,IAAI,sBAAsB,KAAK,WAAW;AAC1E,WAAK,oBAAoB,kBAAkB,SAAS,KAAK,YAAY,WAAW,eAAe,CAAC,IAAI,OAAE;AACtG,WAAK,iBAAiB,oBAAoB,QAAQ,oBAAoB,SAAS,kBAAkB,KAAK,UAAU,KAAK,iBAAiB;AACtI,WAAK,eAAe,IAAI,iBAAiB,KAAK,UAAU,KAAK,aAAa,IAAI;AAAA,IAClF;AAAA;AAAA,IAEA,OAAO,MAAM,MAAM,SAAS;AACxB,YAAM,SAAS,IAAI,KAAK,OAAO;AAC/B,aAAO,UAAU,MAAM,MAAM,IAAI;AACjC,aAAO,OAAO;AAAA,IAClB;AAAA,IACA,OAAO,kBAAkB,iBAAiB,SAAS;AAC/C,YAAM,OAAO;AAAA,QACT,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAGA,0BAAoB,QAAQ,oBAAoB,SAAS,kBAAmB,kBAAkB,KAAK,YAAY,cAAc,UAAG,UAAU,GAAG,MAAM,CAAC,CAAC;AAIrJ,YAAM,eAAe,KAAK,YAAY,cAAc,gBAAgB,GAAG,MAAM,CAAC,CAAC;AAC/E,YAAM,SAAS,IAAI,KAAK,MAAM,cAAc,eAAe;AAC3D,UAAI,OAAO,sBAAsB,OAAE,UAAU;AACzC,eAAO,uBAAuB,QAAQ,cAAc,WAAW;AAAA,MACnE;AACA,aAAO,iCAAiC;AACxC,aAAO,uBAAuB;AAC9B,aAAO,oBAAoB;AAC3B,aAAO,2BAA2B;AAClC,aAAO;AAAA,IACX;AAAA,IACA,cAAc;AACV,YAAM,cAAc,KAAK,YAAY,cAAc,KAAK,QAAQ;AAChE,YAAM,WAAW,KAAK,YAAY,uBAAuB;AACzD,WAAK,YAAY,aAAa,QAAQ;AACtC,aAAO;AAAA,IACX;AAAA;AAAA,IAEA,KAAK,OAAOC,OAAM,aAAa;AAC3B,UAAIC;AACJ,UAAI,CAAC,KAAK;AACN;AACJ,YAAM,OAAOA,MAAK,MAAM,cAAc,QAAQA,QAAO,SAASA,MAAK;AACnE,YAAM,MAAM;AAAA,QACR,MAAAD;AAAA,QACA,WAAW,IAAI;AAAA,QACf,UAAU,IAAI;AAAA,QACd,aAAa,IAAI;AAAA,QACjB,SAAS,cAAc,IAAI,YAAY,IAAI;AAAA,QAC3C,QAAQ,cAAc,IAAI,WAAW,IAAI;AAAA,QACzC,WAAW,cAAc,IAAI,cAAc,IAAI;AAAA,MACnD;AACA,WAAK,aAAa,GAAG;AAAA,IACzB;AAAA;AAAA,IAEA,WAAW,MAAM,KAAK,OAAO;AACzB,UAAIC,KAAI;AACR,OAAC,MAAMA,MAAK,KAAK,aAAa,gBAAgB,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAKA,KAAI,IAAI;AAC/F,UAAI,SAAS,KAAK,aAAa,WAAW;AACtC,aAAK,iBAAiB,MAAM,GAAG;AAAA,IACvC;AAAA,IACA,UAAU,MAAM,OAAO;AACnB,UAAIA,KAAI;AACR,UAAI,KAAK,QAAQ,wBAAwB;AACrC,aAAK,gBAAgB,MAAM,KAAK,YAAY;AAAA,MAChD;AACA,OAAC,MAAMA,MAAK,KAAK,aAAa,eAAe,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAKA,KAAI,MAAM,KAAK,aAAa,OAAO;AACzH,UAAI,OAAO;AACP,YAAI;AACJ,YAAI;AACJ,YAAI,KAAK,aAAa,aAAa,KAAK,KAAK,iBAAiB;AAC1D,oBAAU,KAAK;AACf,yBAAe,KAAK;AAAA,QACxB,OACK;AACD,WAAC,EAAE,SAAS,aAAa,IAAI,KAAK;AAAA,QACtC;AACA,aAAK,iBAAiB,SAAS,YAAY;AAAA,MAC/C;AAAA,IACJ;AAAA,IACA,iBAAiB,SAAS,KAAK;AAC3B,YAAM,SAAS,YAAY,KAAK,YAAY,KAAK,YAAY,gBAAgB,OAAO,MAAM,GAAG;AAC7F,WAAK,mBAAmB,CAAC;AACzB,WAAK,UAAU,gBAAgB,CAAC,UAAU,CAAC,KAAK,oBAAoB,KAAK,OAAO;AAAA,IACpF;AAAA,IACA,qBAAqB,cAAc,oBAAoB;AACnD,WAAK,eAAe,cAAc,GAAG,IAAI;AACzC,WAAK,UAAU,QAAQ;AACvB,WAAK,wBAAwB,KAAK;AAClC,WAAK,gBAAgB,cAAc;AAAA,IACvC;AAAA,IACA,2BAA2B;AACvB,WAAK,gBAAgB,cAAc;AACnC,WAAK,wBAAwB,cAAc;AAC3C,WAAK,UAAU,QAAQ,cAAc;AAAA,IACzC;AAAA;AAAA,IAEA,6BAA6B;AACzB,aAAO,KAAK,aAAa,aAAa,KAAK,KAAK,kBAC1C,KAAK,kBACL,KAAK,aAAa;AAAA,IAC5B;AAAA,IACA,6BAA6B;AACzB,UAAI,OAAO,KAAK;AAChB,aAAO,MAAM;AACT,YAAI,KAAK,YAAY,WAAW,IAAI,MAAM,UAAG,MAAM;AAC/C,eAAK,cAAc;AACnB;AAAA,QACJ;AACA,eAAO,KAAK,YAAY,cAAc,IAAI;AAAA,MAC9C;AAAA,IACJ;AAAA,IACA,mCAAmC;AAC/B,UAAI,CAAC,KAAK,mBAAmB,KAAK,YAAY,gBAAgB,KAAK,eAAe,MAAM,GAAG,MAAM;AAC7F;AAAA,MACJ;AACA,cAAQ,KAAK,mBAAmB;AAAA,QAC5B,KAAK,OAAE;AAAA,QACP,KAAK,OAAE,UAAU;AACb,eAAK,UAAU,QAAQ,cAAc;AACrC;AAAA,QACJ;AAAA,QACA,KAAK,OAAE;AAAA,QACP,KAAK,OAAE;AAAA,QACP,KAAK,OAAE;AAAA,QACP,KAAK,OAAE;AAAA,QACP,KAAK,OAAE;AAAA,QACP,KAAK,OAAE,UAAU;AACb,eAAK,UAAU,QAAQ,cAAc;AACrC;AAAA,QACJ;AAAA,QACA,KAAK,OAAE,QAAQ;AACX,eAAK,UAAU,QAAQ,cAAc;AACrC;AAAA,QACJ;AAAA,QACA,KAAK,OAAE,WAAW;AACd,eAAK,UAAU,QAAQ,cAAc;AACrC;AAAA,QACJ;AAAA,QACA;AAAA,MAEJ;AAAA,IACJ;AAAA;AAAA,IAEA,iBAAiB,OAAO;AACpB,YAAMC,SAAO,MAAM,QAAQ;AAC3B,YAAM,WAAW,MAAM,YAAY;AACnC,YAAM,WAAW,MAAM,YAAY;AACnC,WAAK,YAAY,gBAAgB,KAAK,UAAUA,QAAM,UAAU,QAAQ;AACxE,UAAI,MAAM,UAAU;AAChB,cAAM,mBAAmB,KAAK,YAAY,cAAc,KAAK,QAAQ;AACrE,cAAM,cAAc,iBAAiB,KAAK,CAAC,SAAS,KAAK,YAAY,mBAAmB,IAAI,CAAC;AAC7F,YAAI,aAAa;AACb,eAAK,YAAY,0BAA0B,aAAa,MAAM,QAAQ;AAAA,QAC1E;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,qBAAqB,SAAS,UAAU;AACpC,UAAI,KAAK,QAAQ,wBAAwB;AACrC,cAAM,MAAM,YAAY;AAAA,UACpB,GAAG;AAAA,UACH,UAAU;AAAA,QACd;AACA,aAAK,YAAY,0BAA0B,SAAS,GAAG;AAAA,MAC3D;AACA,UAAI,KAAK,+BAA+B,GAAG;AACvC,aAAK,qBAAqB,OAAO;AAAA,MACrC,OACK;AACD,cAAM,SAAS,KAAK,aAAa;AACjC,aAAK,YAAY,YAAY,QAAQ,OAAO;AAAA,MAChD;AAAA,IACJ;AAAA,IACA,eAAe,OAAO,cAAc;AAChC,YAAM,UAAU,KAAK,YAAY,cAAc,MAAM,SAAS,cAAc,MAAM,KAAK;AACvF,WAAK,qBAAqB,SAAS,MAAM,QAAQ;AAAA,IACrD;AAAA,IACA,eAAe,OAAO,cAAc;AAChC,YAAM,UAAU,KAAK,YAAY,cAAc,MAAM,SAAS,cAAc,MAAM,KAAK;AACvF,WAAK,qBAAqB,SAAS,MAAM,QAAQ;AACjD,WAAK,aAAa,KAAK,SAAS,MAAM,KAAK;AAAA,IAC/C;AAAA,IACA,mBAAmB,SAAS,OAAO;AAC/B,YAAM,UAAU,KAAK,YAAY,cAAc,SAAS,GAAG,MAAM,CAAC,CAAC;AACnE,WAAK,qBAAqB,SAAS,IAAI;AACvC,WAAK,aAAa,KAAK,SAAS,KAAK;AAAA,IACzC;AAAA,IACA,gBAAgB,OAAO;AACnB,YAAM,OAAO,KAAK,YAAY,cAAc,MAAM,SAAS,GAAG,MAAM,MAAM,KAAK;AAC/E,YAAM,UAAU,KAAK,YAAY,uBAAuB;AACxD,WAAK,YAAY,mBAAmB,MAAM,OAAO;AACjD,WAAK,qBAAqB,MAAM,MAAM,QAAQ;AAC9C,WAAK,aAAa,KAAK,MAAM,MAAM,KAAK;AACxC,UAAI,KAAK,QAAQ;AACb,aAAK,YAAY,0BAA0B,SAAS,IAAI;AAAA,IAChE;AAAA,IACA,yBAAyB;AACrB,YAAM,UAAU,KAAK,YAAY,cAAc,UAAG,MAAM,GAAG,MAAM,CAAC,CAAC;AACnE,UAAI,KAAK,QAAQ;AACb,aAAK,YAAY,0BAA0B,SAAS,IAAI;AAC5D,WAAK,YAAY,YAAY,KAAK,aAAa,SAAS,OAAO;AAC/D,WAAK,aAAa,KAAK,SAAS,OAAE,IAAI;AAAA,IAC1C;AAAA,IACA,mBAAmB,OAAO,QAAQ;AAC9B,YAAM,cAAc,KAAK,YAAY,kBAAkB,MAAM,IAAI;AACjE,WAAK,YAAY,YAAY,QAAQ,WAAW;AAChD,UAAI,KAAK,QAAQ,wBAAwB;AACrC,aAAK,YAAY,0BAA0B,aAAa,MAAM,QAAQ;AAAA,MAC1E;AAAA,IACJ;AAAA,IACA,kBAAkB,OAAO;AACrB,UAAI;AACJ,UAAI;AACJ,UAAI,KAAK,+BAA+B,GAAG;AACvC,SAAC,EAAE,QAAQ,cAAc,IAAI,KAAK,6BAA6B;AAC/D,YAAI,eAAe;AACf,eAAK,YAAY,iBAAiB,QAAQ,MAAM,OAAO,aAAa;AAAA,QACxE,OACK;AACD,eAAK,YAAY,WAAW,QAAQ,MAAM,KAAK;AAAA,QACnD;AAAA,MACJ,OACK;AACD,iBAAS,KAAK,aAAa;AAC3B,aAAK,YAAY,WAAW,QAAQ,MAAM,KAAK;AAAA,MACnD;AACA,UAAI,CAAC,MAAM;AACP;AACJ,YAAM,WAAW,KAAK,YAAY,cAAc,MAAM;AACtD,YAAM,cAAc,gBAAgB,SAAS,YAAY,aAAa,IAAI,SAAS;AACnF,YAAM,WAAW,SAAS,cAAc,CAAC;AAEzC,YAAM,QAAQ,KAAK,YAAY,0BAA0B,QAAQ;AACjE,UAAI,OAAO;AACP,cAAM,EAAE,SAAS,QAAQ,UAAU,IAAI,MAAM;AAC7C,aAAK,YAAY,6BAA6B,UAAU,EAAE,SAAS,QAAQ,UAAU,CAAC;AAAA,MAC1F,WACS,KAAK,QAAQ,wBAAwB;AAC1C,aAAK,YAAY,0BAA0B,UAAU,MAAM,QAAQ;AAAA,MACvE;AAAA,IACJ;AAAA,IACA,YAAY,OAAO,WAAW;AAC1B,eAAS,QAAQ,KAAK,YAAY,cAAc,KAAK,GAAG,OAAO,QAAQ,KAAK,YAAY,cAAc,KAAK,GAAG;AAC1G,aAAK,YAAY,WAAW,KAAK;AACjC,aAAK,YAAY,YAAY,WAAW,KAAK;AAAA,MACjD;AAAA,IACJ;AAAA,IACA,gBAAgB,SAAS,cAAc;AACnC,UAAI,KAAK,YAAY,0BAA0B,OAAO,KAAK,aAAa,UAAU;AAC9E,cAAM,QAAQ,aAAa;AAC3B,cAAM,KAAK,KAAK,YAAY,WAAW,OAAO;AAC9C,cAAM;AAAA;AAAA;AAAA,UAGN,aAAa,SAAS,UAAU,WAAW,OAAO,aAAa,UACzD;AAAA,YACE,QAAQ,EAAE,GAAG,MAAM;AAAA,YACnB,SAAS,MAAM;AAAA,YACf,QAAQ,MAAM;AAAA,YACd,WAAW,MAAM;AAAA,UACrB,IACE;AAAA,YACE,SAAS,MAAM;AAAA,YACf,QAAQ,MAAM;AAAA,YACd,WAAW,MAAM;AAAA,UACrB;AAAA;AACJ,aAAK,YAAY,6BAA6B,SAAS,MAAM;AAAA,MACjE;AAAA,IACJ;AAAA;AAAA,IAEA,2CAA2C,OAAO;AAE9C,UAAI,CAAC,KAAK;AACN,eAAO;AACX,UAAI;AACJ,UAAI;AACJ,UAAI,KAAK,aAAa,aAAa,KAAK,KAAK,iBAAiB;AAC1D,kBAAU,KAAK;AACf,uBAAe,KAAK;AAAA,MACxB,OACK;AACD,SAAC,EAAE,SAAS,aAAa,IAAI,KAAK;AAAA,MACtC;AACA,UAAI,MAAM,UAAU,OAAE,OAClB,KAAK,YAAY,WAAW,OAAO,MAAM,UAAG,kBAC5C,KAAK,YAAY,gBAAgB,OAAO,MAAM,GAAG,QAAQ;AACzD,eAAO;AAAA,MACX;AACA;AAAA;AAAA,QAEA,KAAK,UAAU;AAAA;AAAA,SAGT,MAAM,UAAU,OAAE,UAAU,MAAM,UAAU,OAAE,eAC5C,CAAC,KAAK,oBAAoB,cAAc,SAAS,GAAG,IAAI;AAAA;AAAA,IACpE;AAAA,IACA,cAAc,OAAO;AACjB,cAAQ,MAAM,MAAM;AAAA,QAChB,KAAK,UAAU,WAAW;AACtB,eAAK,YAAY,KAAK;AACtB;AAAA,QACJ;AAAA,QACA,KAAK,UAAU,gBAAgB;AAC3B,eAAK,gBAAgB,KAAK;AAC1B;AAAA,QACJ;AAAA,QACA,KAAK,UAAU,SAAS;AACpB,eAAK,UAAU,KAAK;AACpB;AAAA,QACJ;AAAA,QACA,KAAK,UAAU,SAAS;AACpB,eAAK,UAAU,KAAK;AACpB;AAAA,QACJ;AAAA,QACA,KAAK,UAAU,WAAW;AACtB,eAAK,iBAAiB,KAAK;AAC3B;AAAA,QACJ;AAAA,QACA,KAAK,UAAU,SAAS;AACpB,eAAK,SAAS,KAAK;AACnB;AAAA,QACJ;AAAA,QACA,KAAK,UAAU,KAAK;AAChB,eAAK,MAAM,KAAK;AAChB;AAAA,QACJ;AAAA,QACA,KAAK,UAAU,sBAAsB;AACjC,eAAK,sBAAsB,KAAK;AAChC;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA,IAEA,oBAAoB,KAAK,SAAS,WAAW;AACzC,YAAM,KAAK,KAAK,YAAY,gBAAgB,OAAO;AACnD,YAAM,QAAQ,KAAK,YAAY,YAAY,OAAO;AAClD,aAAsB,mBAAmB,KAAK,IAAI,OAAO,SAAS;AAAA,IACtE;AAAA;AAAA,IAEA,uCAAuC;AACnC,YAAM,aAAa,KAAK,yBAAyB,QAAQ;AACzD,UAAI,YAAY;AACZ,cAAM,WAAW,KAAK,yBAAyB,QAAQ,UAAU,CAAC,UAAU,MAAM,SAAS,UAAU,UAAU,KAAK,aAAa,SAAS,MAAM,OAAO,CAAC;AACxJ,cAAM,YAAY,WAAW,IAAI,aAAa,IAAI,WAAW;AAC7D,iBAAS,IAAI,WAAW,KAAK,GAAG,KAAK;AACjC,gBAAM,QAAQ,KAAK,yBAAyB,QAAQ,CAAC;AACrD,eAAK,eAAe,MAAM,OAAO,KAAK,YAAY,gBAAgB,MAAM,OAAO,CAAC;AAChF,gBAAM,UAAU,KAAK,aAAa;AAAA,QACtC;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA,IAEA,kBAAkB;AACd,WAAK,aAAa,uBAAuB;AACzC,WAAK,aAAa,wBAAwB;AAC1C,WAAK,yBAAyB,kBAAkB;AAChD,WAAK,gBAAgB,cAAc;AAAA,IACvC;AAAA,IACA,iBAAiB;AACb,WAAK,aAAa,oCAAoC,OAAE,CAAC;AACzD,WAAK,aAAa,sBAAsB,OAAE,CAAC;AAAA,IAC/C;AAAA;AAAA,IAEA,sBAAsB;AAClB,eAAS,IAAI,KAAK,aAAa,UAAU,KAAK,GAAG,KAAK;AAElD,gBAAQ,MAAM,KAAK,KAAK,kBAAkB,KAAK,oBAAoB,KAAK,aAAa,OAAO,CAAC,GAAG;AAAA,UAC5F,KAAK,OAAE,IAAI;AACP,iBAAK,gBAAgB,cAAc;AACnC;AAAA,UACJ;AAAA,UACA,KAAK,OAAE;AAAA,UACP,KAAK,OAAE;AAAA,UACP,KAAK,OAAE,OAAO;AACV,iBAAK,gBAAgB,cAAc;AACnC;AAAA,UACJ;AAAA,UACA,KAAK,OAAE,SAAS;AACZ,iBAAK,gBAAgB,cAAc;AACnC;AAAA,UACJ;AAAA,UACA,KAAK,OAAE,UAAU;AACb,iBAAK,gBAAgB,cAAc;AACnC;AAAA,UACJ;AAAA,UACA,KAAK,OAAE,OAAO;AACV,iBAAK,gBAAgB,cAAc;AACnC;AAAA,UACJ;AAAA,UACA,KAAK,OAAE,MAAM;AACT,iBAAK,gBAAgB,cAAc;AACnC;AAAA,UACJ;AAAA,UACA,KAAK,OAAE,UAAU;AACb,iBAAK,gBAAgB,cAAc;AACnC;AAAA,UACJ;AAAA,UACA,KAAK,OAAE,QAAQ;AACX,iBAAK,6BAA6B,CAAC;AACnC;AAAA,UACJ;AAAA,UACA,KAAK,OAAE,UAAU;AACb,iBAAK,gBAAgB,KAAK,uBAAuB,CAAC;AAClD;AAAA,UACJ;AAAA,UACA,KAAK,OAAE,MAAM;AACT,iBAAK,gBAAgB,KAAK,cAAc,cAAc,aAAa,cAAc;AACjF;AAAA,UACJ;AAAA,UACA,KAAK,OAAE;AAAA,UACP,KAAK,OAAE,IAAI;AACP,gBAAI,IAAI,GAAG;AACP,mBAAK,gBAAgB,cAAc;AACnC;AAAA,YACJ;AACA;AAAA,UACJ;AAAA,UACA,KAAK,OAAE,MAAM;AACT,gBAAI,IAAI,GAAG;AACP,mBAAK,gBAAgB,cAAc;AACnC;AAAA,YACJ;AACA;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AACA,WAAK,gBAAgB,cAAc;AAAA,IACvC;AAAA,IACA,6BAA6B,WAAW;AACpC,UAAI,YAAY,GAAG;AACf,iBAAS,IAAI,YAAY,GAAG,IAAI,GAAG,KAAK;AACpC,gBAAM,KAAK,KAAK,aAAa,OAAO,CAAC;AACrC,cAAI,OAAO,OAAE,UAAU;AACnB;AAAA,UACJ,WACS,OAAO,OAAE,OAAO;AACrB,iBAAK,gBAAgB,cAAc;AACnC;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AACA,WAAK,gBAAgB,cAAc;AAAA,IACvC;AAAA;AAAA,IAEA,gCAAgC,IAAI;AAChC,aAAO,qBAAqB,IAAI,EAAE;AAAA,IACtC;AAAA,IACA,iCAAiC;AAC7B,aAAO,KAAK,0BAA0B,KAAK,gCAAgC,KAAK,aAAa,YAAY;AAAA,IAC7G;AAAA,IACA,+BAA+B;AAC3B,eAAS,IAAI,KAAK,aAAa,UAAU,KAAK,GAAG,KAAK;AAClD,cAAM,cAAc,KAAK,aAAa,MAAM,CAAC;AAC7C,gBAAQ,KAAK,aAAa,OAAO,CAAC,GAAG;AAAA,UACjC,KAAK,OAAE,UAAU;AACb,gBAAI,KAAK,YAAY,gBAAgB,WAAW,MAAM,GAAG,MAAM;AAC3D,qBAAO,EAAE,QAAQ,KAAK,YAAY,mBAAmB,WAAW,GAAG,eAAe,KAAK;AAAA,YAC3F;AACA;AAAA,UACJ;AAAA,UACA,KAAK,OAAE,OAAO;AACV,kBAAM,SAAS,KAAK,YAAY,cAAc,WAAW;AACzD,gBAAI,QAAQ;AACR,qBAAO,EAAE,QAAQ,eAAe,YAAY;AAAA,YAChD;AACA,mBAAO,EAAE,QAAQ,KAAK,aAAa,MAAM,IAAI,CAAC,GAAG,eAAe,KAAK;AAAA,UACzE;AAAA,UACA;AAAA,QAEJ;AAAA,MACJ;AACA,aAAO,EAAE,QAAQ,KAAK,aAAa,MAAM,CAAC,GAAG,eAAe,KAAK;AAAA,IACrE;AAAA,IACA,qBAAqB,SAAS;AAC1B,YAAM,WAAW,KAAK,6BAA6B;AACnD,UAAI,SAAS,eAAe;AACxB,aAAK,YAAY,aAAa,SAAS,QAAQ,SAAS,SAAS,aAAa;AAAA,MAClF,OACK;AACD,aAAK,YAAY,YAAY,SAAS,QAAQ,OAAO;AAAA,MACzD;AAAA,IACJ;AAAA;AAAA,IAEA,kBAAkB,SAAS,IAAI;AAC3B,YAAM,KAAK,KAAK,YAAY,gBAAgB,OAAO;AACnD,aAAO,iBAAiB,EAAE,EAAE,IAAI,EAAE;AAAA,IACtC;AAAA,IACA,YAAY,OAAO;AACf,WAAK,kBAAkB;AACvB,UAAI,KAAK,UAAU,eAAe;AAC9B,kCAA0B,MAAM,KAAK;AACrC;AAAA,MACJ;AACA,cAAQ,KAAK,eAAe;AAAA,QACxB,KAAK,cAAc,SAAS;AACxB,6BAAmB,MAAM,KAAK;AAC9B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,aAAa;AAC5B,0BAAgB,MAAM,KAAK;AAC3B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,aAAa;AAC5B,0BAAgB,MAAM,KAAK;AAC3B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,SAAS;AACxB,sBAAY,MAAM,KAAK;AACvB;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,mBAAmB;AAClC,8BAAoB,MAAM,KAAK;AAC/B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,YAAY;AAC3B,yBAAe,MAAM,KAAK;AAC1B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc,aAAa;AAC5B,0BAAgB,MAAM,KAAK;AAC3B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc,oBAAoB;AACnC,eAAK,kBAAkB,KAAK;AAC5B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc,QAAQ;AACvB,2BAAiB,MAAM,KAAK;AAC5B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,eAAe;AAC9B,+BAAqB,MAAM,KAAK;AAChC;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,iBAAiB;AAChC,6BAAmB,MAAM,KAAK;AAC9B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,YAAY;AAC3B,yBAAe,MAAM,KAAK;AAC1B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,kBAAkB;AACjC,8BAAoB,MAAM,KAAK;AAC/B;AAAA,QACJ;AAAA,QACA;AAAA,MAEJ;AAAA,IACJ;AAAA,IACA,gBAAgB,OAAO;AACnB,WAAK,kBAAkB;AACvB,UAAI,KAAK,UAAU,eAAe;AAC9B,sCAA8B,MAAM,KAAK;AACzC;AAAA,MACJ;AACA,cAAQ,KAAK,eAAe;AAAA,QACxB,KAAK,cAAc,SAAS;AACxB,6BAAmB,MAAM,KAAK;AAC9B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,aAAa;AAC5B,0BAAgB,MAAM,KAAK;AAC3B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,aAAa;AAC5B,0BAAgB,MAAM,KAAK;AAC3B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,SAAS;AACxB,sBAAY,MAAM,KAAK;AACvB;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,mBAAmB;AAClC,8BAAoB,MAAM,KAAK;AAC/B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,YAAY;AAC3B,yBAAe,MAAM,KAAK;AAC1B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,MAAM;AACrB,eAAK,kBAAkB,KAAK;AAC5B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc,QAAQ;AACvB,2BAAiB,MAAM,KAAK;AAC5B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,iBAAiB;AAChC,6BAAmB,MAAM,KAAK;AAC9B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,YAAY;AAC3B,yBAAe,MAAM,KAAK;AAC1B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,kBAAkB;AACjC,8BAAoB,MAAM,KAAK;AAC/B;AAAA,QACJ;AAAA,QACA;AAAA,MAEJ;AAAA,IACJ;AAAA,IACA,UAAU,OAAO;AACb,WAAK,kBAAkB;AACvB,UAAI,KAAK,kBAAkB;AACvB,sBAAc,MAAM,KAAK;AACzB;AAAA,MACJ;AACA,cAAQ,KAAK,eAAe;AAAA,QACxB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc,gBAAgB;AAC/B,wBAAc,MAAM,KAAK;AACzB;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,eAAe;AAC9B,2BAAiB,MAAM,KAAK;AAC5B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,YAAY;AAC3B,yCAA+B,MAAM,KAAK;AAC1C;AAAA,QACJ;AAAA,QACA,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc,sBAAsB;AACrC,kCAAwB,MAAM,KAAK;AACnC;AAAA,QACJ;AAAA,QACA;AAAA,MAEJ;AAAA,IACJ;AAAA,IACA,UAAU,OAAO;AACb,WAAK,kBAAkB;AACvB,cAAQ,KAAK,eAAe;AAAA,QACxB,KAAK,cAAc,SAAS;AACxB,+BAAqB,MAAM,KAAK;AAChC;AAAA,QACJ;AAAA,QACA,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc,YAAY;AAC3B,eAAK,KAAK,OAAO,IAAI,gBAAgB;AACrC;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,eAAe;AAC9B,2BAAiB,MAAM,KAAK;AAC5B;AAAA,QACJ;AAAA,QACA;AAAA,MAEJ;AAAA,IACJ;AAAA,IACA,WAAW,OAAO;AACd,WAAK,kBAAkB;AACvB,WAAK,eAAe;AACpB,WAAK,iBAAiB,KAAK;AAC3B,UAAI,MAAM,eAAe,CAAC,MAAM,gBAAgB;AAC5C,aAAK,KAAK,OAAO,IAAI,6CAA6C;AAAA,MACtE;AAAA,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWA,iBAAiB,OAAO;AACpB,UAAI,KAAK,2CAA2C,KAAK,GAAG;AACxD,iCAAyB,MAAM,KAAK;AAAA,MACxC,OACK;AACD,aAAK,+BAA+B,KAAK;AAAA,MAC7C;AAAA,IACJ;AAAA,IACA,+BAA+B,OAAO;AAClC,cAAQ,KAAK,eAAe;AAAA,QACxB,KAAK,cAAc,SAAS;AACxB,6BAAmB,MAAM,KAAK;AAC9B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,aAAa;AAC5B,6BAAmB,MAAM,KAAK;AAC9B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,aAAa;AAC5B,6BAAmB,MAAM,KAAK;AAC9B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,SAAS;AACxB,yBAAe,MAAM,KAAK;AAC1B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,mBAAmB;AAClC,iCAAuB,MAAM,KAAK;AAClC;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,YAAY;AAC3B,4BAAkB,MAAM,KAAK;AAC7B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,SAAS;AACxB,yBAAe,MAAM,KAAK;AAC1B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,UAAU;AACzB,0BAAgB,MAAM,KAAK;AAC3B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,eAAe;AAC9B,2BAAiB,MAAM,KAAK;AAC5B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,YAAY;AAC3B,4BAAkB,MAAM,KAAK;AAC7B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,iBAAiB;AAChC,gCAAsB,MAAM,KAAK;AACjC;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,eAAe;AAC9B,8BAAoB,MAAM,KAAK;AAC/B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,QAAQ;AACvB,wBAAc,MAAM,KAAK;AACzB;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,SAAS;AACxB,yBAAe,MAAM,KAAK;AAC1B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,WAAW;AAC1B,2BAAiB,MAAM,KAAK;AAC5B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,oBAAoB;AACnC,kCAAwB,MAAM,KAAK;AACnC;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,aAAa;AAC5B,6BAAmB,MAAM,KAAK;AAC9B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,YAAY;AAC3B,4BAAkB,MAAM,KAAK;AAC7B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,aAAa;AAC5B,6BAAmB,MAAM,KAAK;AAC9B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,gBAAgB;AAC/B,gCAAsB,MAAM,KAAK;AACjC;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,kBAAkB;AACjC,iCAAuB,MAAM,KAAK;AAClC;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,sBAAsB;AACrC,qCAA2B,MAAM,KAAK;AACtC;AAAA,QACJ;AAAA,QACA;AAAA,MAEJ;AAAA,IACJ;AAAA,IACA,SAAS,OAAO;AACZ,WAAK,kBAAkB;AACvB,WAAK,eAAe;AACpB,UAAI,KAAK,kBAAkB;AACvB,+BAAuB,MAAM,KAAK;AAAA,MACtC,OACK;AACD,aAAK,6BAA6B,KAAK;AAAA,MAC3C;AAAA,IACJ;AAAA,IACA,6BAA6B,OAAO;AAChC,cAAQ,KAAK,eAAe;AAAA,QACxB,KAAK,cAAc,SAAS;AACxB,6BAAmB,MAAM,KAAK;AAC9B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,aAAa;AAC5B,2BAAiB,MAAM,KAAK;AAC5B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,aAAa;AAC5B,2BAAiB,MAAM,KAAK;AAC5B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,SAAS;AACxB,uBAAa,MAAM,KAAK;AACxB;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,mBAAmB;AAClC,+BAAqB,MAAM,KAAK;AAChC;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,YAAY;AAC3B,0BAAgB,MAAM,KAAK;AAC3B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,SAAS;AACxB,uBAAa,MAAM,KAAK;AACxB;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,MAAM;AACrB,uBAAa,MAAM,KAAK;AACxB;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,UAAU;AACzB,wBAAc,MAAM,KAAK;AACzB;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,eAAe;AAC9B,2BAAiB,MAAM,KAAK;AAC5B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,YAAY;AAC3B,0BAAgB,MAAM,KAAK;AAC3B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,iBAAiB;AAChC,8BAAoB,MAAM,KAAK;AAC/B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,eAAe;AAC9B,4BAAkB,MAAM,KAAK;AAC7B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,QAAQ;AACvB,sBAAY,MAAM,KAAK;AACvB;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,SAAS;AACxB,uBAAa,MAAM,KAAK;AACxB;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,WAAW;AAC1B,yBAAe,MAAM,KAAK;AAC1B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,oBAAoB;AACnC,gCAAsB,MAAM,KAAK;AACjC;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,aAAa;AAC5B,2BAAiB,MAAM,KAAK;AAC5B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,YAAY;AAC3B,0BAAgB,MAAM,KAAK;AAC3B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,aAAa;AAC5B,2BAAiB,MAAM,KAAK;AAC5B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,gBAAgB;AAC/B,8BAAoB,MAAM,KAAK;AAC/B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,kBAAkB;AACjC,8BAAoB,MAAM,KAAK;AAC/B;AAAA,QACJ;AAAA,QACA;AAAA,MAEJ;AAAA,IACJ;AAAA,IACA,MAAM,OAAO;AACT,cAAQ,KAAK,eAAe;AAAA,QACxB,KAAK,cAAc,SAAS;AACxB,6BAAmB,MAAM,KAAK;AAC9B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,aAAa;AAC5B,0BAAgB,MAAM,KAAK;AAC3B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,aAAa;AAC5B,0BAAgB,MAAM,KAAK;AAC3B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,SAAS;AACxB,sBAAY,MAAM,KAAK;AACvB;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,mBAAmB;AAClC,8BAAoB,MAAM,KAAK;AAC/B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,YAAY;AAC3B,yBAAe,MAAM,KAAK;AAC1B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc,oBAAoB;AACnC,oBAAU,MAAM,KAAK;AACrB;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,MAAM;AACrB,oBAAU,MAAM,KAAK;AACrB;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,eAAe;AAC9B,2BAAiB,MAAM,KAAK;AAC5B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,aAAa;AAC5B,wBAAc,MAAM,KAAK;AACzB;AAAA,QACJ;AAAA,QACA,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc,sBAAsB;AACrC,sBAAY,MAAM,KAAK;AACvB;AAAA,QACJ;AAAA,QACA;AAAA,MAEJ;AAAA,IACJ;AAAA,IACA,sBAAsB,OAAO;AACzB,UAAI,KAAK,iBAAiB;AACtB,aAAK,kBAAkB;AACvB,YAAI,MAAM,MAAM,WAAW,CAAC,MAAc,YAAY,WAAW;AAC7D,cAAI,MAAM,MAAM,WAAW,GAAG;AAC1B;AAAA,UACJ;AACA,gBAAM,QAAQ,MAAM,MAAM,OAAO,CAAC;AAAA,QACtC;AAAA,MACJ;AACA,UAAI,KAAK,UAAU,eAAe;AAC9B,aAAK,kBAAkB,KAAK;AAC5B;AAAA,MACJ;AACA,cAAQ,KAAK,eAAe;AAAA,QACxB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc,gBAAgB;AAC/B,eAAK,kBAAkB,KAAK;AAC5B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc,sBAAsB;AACrC,oCAA0B,MAAM,KAAK;AACrC;AAAA,QACJ;AAAA,QACA,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc,QAAQ;AACvB,2BAAiB,MAAM,KAAK;AAC5B;AAAA,QACJ;AAAA,QACA,KAAK,cAAc,eAAe;AAC9B,yCAA+B,MAAM,KAAK;AAC1C;AAAA,QACJ;AAAA,QACA;AAAA,MAEJ;AAAA,IACJ;AAAA,EACJ;AAKA,WAAS,+BAA+B,GAAG,OAAO;AAC9C,QAAI,yBAAyB,EAAE,yBAAyB,kCAAkC,MAAM,OAAO;AACvG,QAAI,wBAAwB;AACxB,UAAI,CAAC,EAAE,aAAa,SAAS,uBAAuB,OAAO,GAAG;AAC1D,UAAE,yBAAyB,YAAY,sBAAsB;AAC7D,iCAAyB;AAAA,MAC7B,WACS,CAAC,EAAE,aAAa,WAAW,MAAM,KAAK,GAAG;AAC9C,iCAAyB;AAAA,MAC7B;AAAA,IACJ,OACK;AACD,0BAAoB,GAAG,KAAK;AAAA,IAChC;AACA,WAAO;AAAA,EACX;AAEA,WAAS,sBAAsB,GAAG,wBAAwB;AACtD,QAAI,gBAAgB;AACpB,QAAI,MAAM,EAAE,aAAa;AACzB,WAAO,OAAO,GAAG,OAAO;AACpB,YAAM,UAAU,EAAE,aAAa,MAAM,GAAG;AACxC,UAAI,YAAY,uBAAuB,SAAS;AAC5C;AAAA,MACJ;AACA,UAAI,EAAE,kBAAkB,SAAS,EAAE,aAAa,OAAO,GAAG,CAAC,GAAG;AAC1D,wBAAgB;AAAA,MACpB;AAAA,IACJ;AACA,QAAI,CAAC,eAAe;AAChB,QAAE,aAAa,gBAAgB,MAAM,IAAI,IAAI,GAAG;AAChD,QAAE,yBAAyB,YAAY,sBAAsB;AAAA,IACjE;AACA,WAAO;AAAA,EACX;AAEA,WAAS,YAAY,GAAG,eAAe,mBAAmB;AACtD,QAAI,cAAc;AAClB,QAAI,cAAc,EAAE,aAAa,kBAAkB,aAAa;AAChE,aAAS,IAAI,GAAG,UAAU,aAAa,YAAY,mBAAmB,KAAK,UAAU,aAAa;AAE9F,oBAAc,EAAE,aAAa,kBAAkB,OAAO;AACtD,YAAM,eAAe,EAAE,yBAAyB,gBAAgB,OAAO;AACvE,YAAM,kBAAkB,gBAAgB,KAAK;AAC7C,YAAM,+BAA+B,CAAC,gBAAgB;AACtD,UAAI,8BAA8B;AAC9B,YAAI,iBAAiB;AACjB,YAAE,yBAAyB,YAAY,YAAY;AAAA,QACvD;AACA,UAAE,aAAa,OAAO,OAAO;AAAA,MACjC,OACK;AACD,kBAAU,2BAA2B,GAAG,YAAY;AACpD,YAAI,gBAAgB,eAAe;AAC/B,YAAE,yBAAyB,WAAW;AAAA,QAC1C;AACA,UAAE,YAAY,WAAW,WAAW;AACpC,UAAE,YAAY,YAAY,SAAS,WAAW;AAC9C,sBAAc;AAAA,MAClB;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAEA,WAAS,2BAA2B,GAAG,cAAc;AACjD,UAAM,KAAK,EAAE,YAAY,gBAAgB,aAAa,OAAO;AAC7D,UAAM,aAAa,EAAE,YAAY,cAAc,aAAa,MAAM,SAAS,IAAI,aAAa,MAAM,KAAK;AACvG,MAAE,aAAa,QAAQ,aAAa,SAAS,UAAU;AACvD,iBAAa,UAAU;AACvB,WAAO;AAAA,EACX;AAEA,WAAS,iCAAiC,GAAG,gBAAgB,aAAa;AACtE,UAAM,KAAK,EAAE,YAAY,WAAW,cAAc;AAClD,UAAM,MAAM,SAAS,EAAE;AACvB,QAAI,EAAE,gCAAgC,GAAG,GAAG;AACxC,QAAE,qBAAqB,WAAW;AAAA,IACtC,OACK;AACD,YAAM,KAAK,EAAE,YAAY,gBAAgB,cAAc;AACvD,UAAI,QAAQ,OAAE,YAAY,OAAO,GAAG,MAAM;AACtC,yBAAiB,EAAE,YAAY,mBAAmB,cAAc;AAAA,MACpE;AACA,QAAE,YAAY,YAAY,gBAAgB,WAAW;AAAA,IACzD;AAAA,EACJ;AAEA,WAAS,2BAA2B,GAAG,eAAe,wBAAwB;AAC1E,UAAM,KAAK,EAAE,YAAY,gBAAgB,uBAAuB,OAAO;AACvE,UAAM,EAAE,MAAM,IAAI;AAClB,UAAM,aAAa,EAAE,YAAY,cAAc,MAAM,SAAS,IAAI,MAAM,KAAK;AAC7E,MAAE,YAAY,eAAe,UAAU;AACvC,MAAE,YAAY,YAAY,eAAe,UAAU;AACnD,MAAE,yBAAyB,2BAA2B,YAAY,KAAK;AACvE,MAAE,yBAAyB,YAAY,sBAAsB;AAC7D,MAAE,aAAa,OAAO,uBAAuB,OAAO;AACpD,MAAE,aAAa,YAAY,eAAe,YAAY,MAAM,KAAK;AAAA,EACrE;AAEA,WAAS,mBAAmB,GAAG,OAAO;AAClC,aAAS,IAAI,GAAG,IAAI,oBAAoB,KAAK;AACzC,YAAM,yBAAyB,+BAA+B,GAAG,KAAK;AACtE,UAAI,CAAC,wBAAwB;AACzB;AAAA,MACJ;AACA,YAAM,gBAAgB,sBAAsB,GAAG,sBAAsB;AACrE,UAAI,CAAC,eAAe;AAChB;AAAA,MACJ;AACA,QAAE,yBAAyB,WAAW;AACtC,YAAM,cAAc,YAAY,GAAG,eAAe,uBAAuB,OAAO;AAChF,YAAM,iBAAiB,EAAE,aAAa,kBAAkB,uBAAuB,OAAO;AACtF,QAAE,YAAY,WAAW,WAAW;AACpC,UAAI;AACA,yCAAiC,GAAG,gBAAgB,WAAW;AACnE,iCAA2B,GAAG,eAAe,sBAAsB;AAAA,IACvE;AAAA,EACJ;AAGA,WAAS,cAAc,GAAG,OAAO;AAC7B,MAAE,mBAAmB,OAAO,EAAE,aAAa,wBAAwB;AAAA,EACvE;AACA,WAAS,+BAA+B,GAAG,OAAO;AAC9C,MAAE,mBAAmB,OAAO,EAAE,aAAa,MAAM,CAAC,CAAC;AAAA,EACvD;AACA,WAAS,wBAAwB,GAAG,OAAO;AACvC,MAAE,mBAAmB,OAAO,EAAE,QAAQ;AAAA,EAC1C;AACA,WAAS,YAAY,GAAG,OAAO;AAC3B,MAAE,UAAU;AAEZ,QAAI,MAAM,UAAU;AAGhB,YAAM,SAAS,EAAE,kBAAkB,IAAI;AACvC,eAAS,IAAI,EAAE,aAAa,UAAU,KAAK,QAAQ,KAAK;AACpD,UAAE,gBAAgB,EAAE,aAAa,MAAM,CAAC,GAAG,KAAK;AAAA,MACpD;AAEA,UAAI,CAAC,EAAE,mBAAmB,EAAE,aAAa,YAAY,GAAG;AACpD,cAAM,cAAc,EAAE,aAAa,MAAM,CAAC;AAC1C,cAAM,eAAe,EAAE,YAAY,0BAA0B,WAAW;AACxE,YAAI,gBAAgB,CAAC,aAAa,QAAQ;AACtC,YAAE,gBAAgB,aAAa,KAAK;AACpC,cAAI,EAAE,aAAa,YAAY,GAAG;AAC9B,kBAAM,cAAc,EAAE,aAAa,MAAM,CAAC;AAC1C,kBAAM,eAAe,EAAE,YAAY,0BAA0B,WAAW;AACxE,gBAAI,gBAAgB,CAAC,aAAa,QAAQ;AACtC,gBAAE,gBAAgB,aAAa,KAAK;AAAA,YACxC;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAGA,WAAS,qBAAqB,GAAG,OAAO;AACpC,MAAE,iBAAiB,KAAK;AACxB,UAAM,OAAO,MAAM,cAAc,cAAc,SAAiB,gBAAgB,KAAK;AACrF,QAAI,CAAS,aAAa,KAAK,GAAG;AAC9B,QAAE,KAAK,OAAO,IAAI,oBAAoB;AAAA,IAC1C;AACA,MAAE,YAAY,gBAAgB,EAAE,UAAU,IAAI;AAC9C,MAAE,gBAAgB,cAAc;AAAA,EACpC;AACA,WAAS,mBAAmB,GAAG,OAAO;AAClC,MAAE,KAAK,OAAO,IAAI,gBAAgB,IAAI;AACtC,MAAE,YAAY,gBAAgB,EAAE,UAAU,cAAc,MAAM;AAC9D,MAAE,gBAAgB,cAAc;AAChC,MAAE,cAAc,KAAK;AAAA,EACzB;AAGA,WAAS,mBAAmB,GAAG,OAAO;AAClC,QAAI,MAAM,UAAU,OAAE,MAAM;AACxB,QAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,QAAE,gBAAgB,cAAc;AAAA,IACpC,OACK;AACD,sBAAgB,GAAG,KAAK;AAAA,IAC5B;AAAA,EACJ;AACA,WAAS,iBAAiB,GAAG,OAAO;AAChC,UAAM,KAAK,MAAM;AACjB,QAAI,OAAO,OAAE,QAAQ,OAAO,OAAE,QAAQ,OAAO,OAAE,QAAQ,OAAO,OAAE,IAAI;AAChE,sBAAgB,GAAG,KAAK;AAAA,IAC5B;AAAA,EACJ;AACA,WAAS,gBAAgB,GAAG,OAAO;AAC/B,MAAE,uBAAuB;AACzB,MAAE,gBAAgB,cAAc;AAChC,MAAE,cAAc,KAAK;AAAA,EACzB;AAGA,WAAS,mBAAmB,GAAG,OAAO;AAClC,YAAQ,MAAM,OAAO;AAAA,MACjB,KAAK,OAAE,MAAM;AACT,uBAAe,GAAG,KAAK;AACvB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,MAAM;AACT,UAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,UAAE,cAAc,EAAE,aAAa;AAC/B,UAAE,gBAAgB,cAAc;AAChC;AAAA,MACJ;AAAA,MACA,SAAS;AACL,wBAAgB,GAAG,KAAK;AAAA,MAC5B;AAAA,IACJ;AAAA,EACJ;AACA,WAAS,iBAAiB,GAAG,OAAO;AAChC,UAAM,KAAK,MAAM;AACjB,QAAI,OAAO,OAAE,QAAQ,OAAO,OAAE,QAAQ,OAAO,OAAE,QAAQ,OAAO,OAAE,IAAI;AAChE,sBAAgB,GAAG,KAAK;AAAA,IAC5B,OACK;AACD,QAAE,KAAK,OAAO,IAAI,gCAAgC;AAAA,IACtD;AAAA,EACJ;AACA,WAAS,gBAAgB,GAAG,OAAO;AAC/B,MAAE,mBAAmB,UAAG,MAAM,OAAE,IAAI;AACpC,MAAE,cAAc,EAAE,aAAa;AAC/B,MAAE,gBAAgB,cAAc;AAChC,MAAE,cAAc,KAAK;AAAA,EACzB;AAGA,WAAS,eAAe,GAAG,OAAO;AAC9B,YAAQ,MAAM,OAAO;AAAA,MACjB,KAAK,OAAE,MAAM;AACT,uBAAe,GAAG,KAAK;AACvB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,MAAM;AACT,UAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,cAAM,iBAAiB;AACvB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,OAAO;AACV,UAAE,qBAAqB,OAAO,cAAc,MAAM;AAClD;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,UAAU;AACb,YAAI,EAAE,QAAQ,kBAAkB;AAC5B,YAAE,qBAAqB,OAAO,cAAc,OAAO;AAAA,QACvD,OACK;AACD,YAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,YAAE,gBAAgB,cAAc;AAAA,QACpC;AACA;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,OAAO;AACV,UAAE,qBAAqB,OAAO,cAAc,OAAO;AACnD;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,QAAQ;AACX,UAAE,qBAAqB,OAAO,cAAc,WAAW;AACvD;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,UAAU;AACb,UAAE,gBAAgB,KAAK;AACvB,UAAE,yBAAyB,aAAa;AACxC,UAAE,aAAa;AACf,UAAE,gBAAgB,cAAc;AAChC,UAAE,uBAAuB,QAAQ,cAAc,WAAW;AAC1D;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,MAAM;AACT,UAAE,KAAK,OAAO,IAAI,+BAA+B;AACjD;AAAA,MACJ;AAAA,MACA,SAAS;AACL,oBAAY,GAAG,KAAK;AAAA,MACxB;AAAA,IACJ;AAAA,EACJ;AACA,WAAS,aAAa,GAAG,OAAO;AAC5B,YAAQ,MAAM,OAAO;AAAA,MACjB,KAAK,OAAE,MAAM;AACT,UAAE,aAAa,IAAI;AACnB,UAAE,gBAAgB,cAAc;AAChC;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,MAAM;AACT,oBAAY,GAAG,KAAK;AACpB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,UAAU;AACb,6BAAqB,GAAG,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,SAAS;AACL,UAAE,KAAK,OAAO,IAAI,gCAAgC;AAAA,MACtD;AAAA,IACJ;AAAA,EACJ;AACA,WAAS,qBAAqB,GAAG,OAAO;AACpC,QAAI,EAAE,aAAa,YAAY,GAAG;AAC9B,QAAE,aAAa,iCAAiC;AAChD,UAAI,EAAE,aAAa,iBAAiB,OAAE,UAAU;AAC5C,UAAE,KAAK,OAAO,IAAI,qCAAqC;AAAA,MAC3D;AACA,QAAE,aAAa,sBAAsB,OAAE,QAAQ;AAC/C,QAAE,yBAAyB,kBAAkB;AAC7C,QAAE,uBAAuB,MAAM;AAC/B,QAAE,oBAAoB;AAAA,IAC1B,OACK;AACD,QAAE,KAAK,OAAO,IAAI,gCAAgC;AAAA,IACtD;AAAA,EACJ;AACA,WAAS,YAAY,GAAG,OAAO;AAC3B,MAAE,aAAa,IAAI;AACnB,MAAE,gBAAgB,cAAc;AAChC,MAAE,cAAc,KAAK;AAAA,EACzB;AAGA,WAAS,uBAAuB,GAAG,OAAO;AACtC,YAAQ,MAAM,OAAO;AAAA,MACjB,KAAK,OAAE,MAAM;AACT,uBAAe,GAAG,KAAK;AACvB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,OAAO;AACV,uBAAe,GAAG,KAAK;AACvB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,UAAU;AACb,UAAE,KAAK,OAAO,IAAI,oBAAoB;AACtC;AAAA,MACJ;AAAA,MACA,SAAS;AACL,4BAAoB,GAAG,KAAK;AAAA,MAChC;AAAA,IACJ;AAAA,EACJ;AACA,WAAS,qBAAqB,GAAG,OAAO;AACpC,YAAQ,MAAM,OAAO;AAAA,MACjB,KAAK,OAAE,UAAU;AACb,UAAE,aAAa,IAAI;AACnB,UAAE,gBAAgB,cAAc;AAChC;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,IAAI;AACP,4BAAoB,GAAG,KAAK;AAC5B;AAAA,MACJ;AAAA,MACA,SAAS;AACL,UAAE,KAAK,OAAO,IAAI,gCAAgC;AAAA,MACtD;AAAA,IACJ;AAAA,EACJ;AACA,WAAS,oBAAoB,GAAG,OAAO;AACnC,UAAM,UAAU,MAAM,SAAS,UAAU,MAAM,IAAI,2BAA2B,IAAI;AAClF,MAAE,KAAK,OAAO,OAAO;AACrB,MAAE,aAAa,IAAI;AACnB,MAAE,gBAAgB,cAAc;AAChC,MAAE,cAAc,KAAK;AAAA,EACzB;AAGA,WAAS,kBAAkB,GAAG,OAAO;AACjC,YAAQ,MAAM,OAAO;AAAA,MACjB,KAAK,OAAE,MAAM;AACT,uBAAe,GAAG,KAAK;AACvB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,MAAM;AACT,UAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,UAAE,aAAa;AACf,UAAE,gBAAgB,cAAc;AAChC;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,UAAU;AACb,UAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,UAAE,gBAAgB,cAAc;AAChC;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,OAAO;AACV,UAAE,KAAK,OAAO,IAAI,yBAAyB;AAC3C,UAAE,aAAa,KAAK,EAAE,aAAa,OAAE,IAAI;AACzC,uBAAe,GAAG,KAAK;AACvB,UAAE,aAAa,OAAO,EAAE,WAAW;AACnC;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,MAAM;AACT,UAAE,KAAK,OAAO,IAAI,+BAA+B;AACjD;AAAA,MACJ;AAAA,MACA,SAAS;AACL,uBAAe,GAAG,KAAK;AAAA,MAC3B;AAAA,IACJ;AAAA,EACJ;AACA,WAAS,gBAAgB,GAAG,OAAO;AAC/B,YAAQ,MAAM,OAAO;AAAA,MACjB,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,IAAI;AACP,uBAAe,GAAG,KAAK;AACvB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,UAAU;AACb,6BAAqB,GAAG,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,SAAS;AACL,UAAE,KAAK,OAAO,IAAI,gCAAgC;AAAA,MACtD;AAAA,IACJ;AAAA,EACJ;AACA,WAAS,eAAe,GAAG,OAAO;AAC9B,MAAE,mBAAmB,UAAG,MAAM,OAAE,IAAI;AACpC,MAAE,gBAAgB,cAAc;AAChC,eAAW,GAAG,KAAK;AAAA,EACvB;AAGA,WAAS,WAAW,GAAG,OAAO;AAC1B,YAAQ,MAAM,MAAM;AAAA,MAChB,KAAK,UAAU,WAAW;AACtB,wBAAgB,GAAG,KAAK;AACxB;AAAA,MACJ;AAAA,MACA,KAAK,UAAU,sBAAsB;AACjC,kCAA0B,GAAG,KAAK;AAClC;AAAA,MACJ;AAAA,MACA,KAAK,UAAU,SAAS;AACpB,sBAAc,GAAG,KAAK;AACtB;AAAA,MACJ;AAAA,MACA,KAAK,UAAU,WAAW;AACtB,uBAAe,GAAG,KAAK;AACvB;AAAA,MACJ;AAAA,MACA,KAAK,UAAU,SAAS;AACpB,qBAAa,GAAG,KAAK;AACrB;AAAA,MACJ;AAAA,MACA,KAAK,UAAU,KAAK;AAChB,kBAAU,GAAG,KAAK;AAClB;AAAA,MACJ;AAAA,MACA;AAAA,IAEJ;AAAA,EACJ;AACA,WAAS,0BAA0B,GAAG,OAAO;AACzC,MAAE,qCAAqC;AACvC,MAAE,kBAAkB,KAAK;AAAA,EAC7B;AACA,WAAS,gBAAgB,GAAG,OAAO;AAC/B,MAAE,qCAAqC;AACvC,MAAE,kBAAkB,KAAK;AACzB,MAAE,aAAa;AAAA,EACnB;AACA,WAAS,mBAAmB,GAAG,OAAO;AAClC,QAAI,EAAE,aAAa,cAAc,GAAG;AAChC,QAAE,YAAY,gBAAgB,EAAE,aAAa,MAAM,CAAC,GAAG,MAAM,KAAK;AAAA,IACtE;AAAA,EACJ;AACA,WAAS,mBAAmB,GAAG,OAAO;AAClC,UAAM,cAAc,EAAE,aAAa,iCAAiC;AACpE,QAAI,eAAe,EAAE,aAAa,cAAc,GAAG;AAC/C,QAAE,aAAa;AACf,QAAE,YAAY,gBAAgB,aAAa,MAAM,KAAK;AAAA,IAC1D;AAAA,EACJ;AACA,WAAS,uBAAuB,GAAG,OAAO;AACtC,UAAM,cAAc,EAAE,aAAa,iCAAiC;AACpE,QAAI,EAAE,cAAc,aAAa;AAC7B,QAAE,YAAY,WAAW,WAAW;AACpC,QAAE,aAAa,sBAAsB;AACrC,QAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,QAAE,gBAAgB,cAAc;AAAA,IACpC;AAAA,EACJ;AACA,WAAS,sBAAsB,GAAG,OAAO;AACrC,QAAI,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AACtC,QAAE,eAAe;AAAA,IACrB;AACA,MAAE,eAAe,OAAO,GAAG,IAAI;AAAA,EACnC;AACA,WAAS,6BAA6B,GAAG,OAAO;AAC5C,QAAI,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AACtC,QAAE,eAAe;AAAA,IACrB;AACA,QAAI,iBAAiB,EAAE,aAAa,YAAY,GAAG;AAC/C,QAAE,aAAa,IAAI;AAAA,IACvB;AACA,MAAE,eAAe,OAAO,GAAG,IAAI;AAAA,EACnC;AACA,WAAS,kBAAkB,GAAG,OAAO;AACjC,QAAI,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AACtC,QAAE,eAAe;AAAA,IACrB;AACA,MAAE,eAAe,OAAO,GAAG,IAAI;AAG/B,MAAE,kBAAkB;AACpB,MAAE,aAAa;AAAA,EACnB;AACA,WAAS,mBAAmB,GAAG,OAAO;AAClC,UAAM,aAAa,EAAE,aAAa,YAAY;AAC9C,QAAI,CAAC,EAAE,eAAe,YAAY;AAC9B,UAAI,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AACtC,UAAE,eAAe;AAAA,MACrB;AACA,QAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,UAAI,CAAC,YAAY;AACb,UAAE,cAAc,EAAE,aAAa;AAAA,MACnC;AAAA,IACJ;AAAA,EACJ;AACA,WAAS,uBAAuB,GAAG,OAAO;AACtC,MAAE,aAAa;AACf,UAAM,KAAK,MAAM;AACjB,aAAS,IAAI,EAAE,aAAa,UAAU,KAAK,GAAG,KAAK;AAC/C,YAAM,YAAY,EAAE,aAAa,OAAO,CAAC;AACzC,UAAK,OAAO,OAAE,MAAM,cAAc,OAAE,OAC9B,OAAO,OAAE,MAAM,OAAO,OAAE,QAAQ,cAAc,OAAE,MAAM,cAAc,OAAE,KAAM;AAC9E,UAAE,aAAa,oCAAoC,SAAS;AAC5D,UAAE,aAAa,sBAAsB,SAAS;AAC9C;AAAA,MACJ;AACA,UAAI,cAAc,OAAE,WAChB,cAAc,OAAE,OAChB,cAAc,OAAE,KAChB,EAAE,kBAAkB,EAAE,aAAa,MAAM,CAAC,GAAG,SAAS,GAAG;AACzD;AAAA,MACJ;AAAA,IACJ;AACA,QAAI,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AACtC,QAAE,eAAe;AAAA,IACrB;AACA,MAAE,eAAe,OAAO,GAAG,IAAI;AAAA,EACnC;AACA,WAAS,wBAAwB,GAAG,OAAO;AACvC,QAAI,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AACtC,QAAE,eAAe;AAAA,IACrB;AACA,MAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAE,UAAU,QAAQ,cAAc;AAAA,EACtC;AACA,WAAS,qBAAqB,GAAG,OAAO;AACpC,QAAI,EAAE,aAAa,WAAW,OAAE,MAAM,GAAG;AACrC,QAAE,aAAa,uBAAuB;AACtC,QAAE,aAAa,sBAAsB,OAAE,MAAM;AAAA,IACjD;AACA,MAAE,qCAAqC;AACvC,MAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAE,aAAa;AAAA,EACnB;AACA,WAAS,gBAAgB,GAAG,OAAO;AAC/B,UAAM,qBAAqB,EAAE,yBAAyB,kCAAkC,UAAG,CAAC;AAC5F,QAAI,oBAAoB;AACpB,yBAAmB,GAAG,KAAK;AAC3B,QAAE,aAAa,OAAO,mBAAmB,OAAO;AAChD,QAAE,yBAAyB,YAAY,kBAAkB;AAAA,IAC7D;AACA,MAAE,qCAAqC;AACvC,MAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAE,yBAAyB,YAAY,EAAE,aAAa,SAAS,KAAK;AAAA,EACxE;AACA,WAAS,gBAAgB,GAAG,OAAO;AAC/B,MAAE,qCAAqC;AACvC,MAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAE,yBAAyB,YAAY,EAAE,aAAa,SAAS,KAAK;AAAA,EACxE;AACA,WAAS,mBAAmB,GAAG,OAAO;AAClC,MAAE,qCAAqC;AACvC,QAAI,EAAE,aAAa,WAAW,OAAE,IAAI,GAAG;AACnC,yBAAmB,GAAG,KAAK;AAC3B,QAAE,qCAAqC;AAAA,IAC3C;AACA,MAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAE,yBAAyB,YAAY,EAAE,aAAa,SAAS,KAAK;AAAA,EACxE;AACA,WAAS,qBAAqB,GAAG,OAAO;AACpC,MAAE,qCAAqC;AACvC,MAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAE,yBAAyB,aAAa;AACxC,MAAE,aAAa;AAAA,EACnB;AACA,WAAS,oBAAoB,GAAG,OAAO;AACnC,QAAI,EAAE,YAAY,gBAAgB,EAAE,QAAQ,MAAM,cAAc,UAAU,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AAC5G,QAAE,eAAe;AAAA,IACrB;AACA,MAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAE,aAAa;AACf,MAAE,gBAAgB,cAAc;AAAA,EACpC;AACA,WAAS,mBAAmB,GAAG,OAAO;AAClC,MAAE,qCAAqC;AACvC,MAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAE,aAAa;AACf,UAAM,iBAAiB;AAAA,EAC3B;AACA,WAAS,cAAc,OAAO;AAC1B,UAAM,YAAY,aAAa,OAAO,MAAM,IAAI;AAChD,WAAO,aAAa,QAAQ,UAAU,YAAY,MAAM;AAAA,EAC5D;AACA,WAAS,oBAAoB,GAAG,OAAO;AACnC,MAAE,qCAAqC;AACvC,MAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,QAAI,CAAC,cAAc,KAAK,GAAG;AACvB,QAAE,aAAa;AAAA,IACnB;AACA,UAAM,iBAAiB;AAAA,EAC3B;AACA,WAAS,oBAAoB,GAAG,OAAO;AACnC,MAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,UAAM,iBAAiB;AAAA,EAC3B;AACA,WAAS,iBAAiB,GAAG,OAAO;AAChC,QAAI,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AACtC,QAAE,eAAe;AAAA,IACrB;AACA,MAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAE,aAAa;AACf,UAAM,iBAAiB;AAAA,EAC3B;AACA,WAAS,oBAAoB,GAAG,OAAO;AACnC,UAAM,UAAU,UAAG;AACnB,UAAM,QAAQ,OAAE;AAChB,uBAAmB,GAAG,KAAK;AAAA,EAC/B;AACA,WAAS,uBAAuB,GAAG,OAAO;AACtC,MAAE,eAAe,OAAO,GAAG,IAAI;AAG/B,MAAE,kBAAkB;AACpB,MAAE,UAAU,QAAQ,cAAc;AAClC,MAAE,wBAAwB,EAAE;AAC5B,MAAE,aAAa;AACf,MAAE,gBAAgB,cAAc;AAAA,EACpC;AACA,WAAS,kBAAkB,GAAG,OAAO;AACjC,QAAI,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AACtC,QAAE,eAAe;AAAA,IACrB;AACA,MAAE,qCAAqC;AACvC,MAAE,aAAa;AACf,MAAE,qBAAqB,OAAO,cAAc,OAAO;AAAA,EACvD;AACA,WAAS,qBAAqB,GAAG,OAAO;AACpC,MAAE,aAAa;AACf,MAAE,qBAAqB,OAAO,cAAc,OAAO;AAAA,EACvD;AAGA,WAAS,sBAAsB,GAAG,OAAO;AACrC,MAAE,qBAAqB,OAAO,cAAc,OAAO;AAAA,EACvD;AACA,WAAS,qBAAqB,GAAG,OAAO;AACpC,MAAE,qCAAqC;AACvC,MAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAE,aAAa;AACf,MAAE,gBACE,EAAE,kBAAkB,cAAc,YAC9B,EAAE,kBAAkB,cAAc,cAClC,EAAE,kBAAkB,cAAc,iBAClC,EAAE,kBAAkB,cAAc,UAClC,EAAE,kBAAkB,cAAc,UAChC,cAAc,qBACd,cAAc;AAAA,EAC5B;AACA,WAAS,uBAAuB,GAAG,OAAO;AACtC,QAAI,EAAE,aAAa,iBAAiB,OAAE,QAAQ;AAC1C,QAAE,aAAa,IAAI;AAAA,IACvB;AACA,MAAE,qCAAqC;AACvC,MAAE,eAAe,OAAO,GAAG,IAAI;AAAA,EACnC;AACA,WAAS,iBAAiB,GAAG,OAAO;AAChC,QAAI,EAAE,aAAa,WAAW,OAAE,IAAI,GAAG;AACnC,QAAE,aAAa,uBAAuB;AAAA,IAC1C;AACA,MAAE,eAAe,OAAO,GAAG,IAAI;AAAA,EACnC;AACA,WAAS,iBAAiB,GAAG,OAAO;AAChC,QAAI,EAAE,aAAa,WAAW,OAAE,IAAI,GAAG;AACnC,QAAE,aAAa,oCAAoC,OAAE,GAAG;AAAA,IAC5D;AACA,MAAE,eAAe,OAAO,GAAG,IAAI;AAAA,EACnC;AACA,WAAS,mBAAmB,GAAG,OAAO;AAClC,MAAE,qCAAqC;AACvC,IAAe,uBAAuB,KAAK;AAC3C,IAAe,oBAAoB,KAAK;AACxC,QAAI,MAAM,aAAa;AACnB,QAAE,eAAe,OAAO,GAAG,MAAM;AAAA,IACrC,OACK;AACD,QAAE,eAAe,OAAO,GAAG,MAAM;AAAA,IACrC;AACA,UAAM,iBAAiB;AAAA,EAC3B;AACA,WAAS,kBAAkB,GAAG,OAAO;AACjC,MAAE,qCAAqC;AACvC,IAAe,oBAAoB,KAAK;AACxC,IAAe,oBAAoB,KAAK;AACxC,QAAI,MAAM,aAAa;AACnB,QAAE,eAAe,OAAO,GAAG,GAAG;AAAA,IAClC,OACK;AACD,QAAE,eAAe,OAAO,GAAG,GAAG;AAAA,IAClC;AACA,UAAM,iBAAiB;AAAA,EAC3B;AACA,WAAS,sBAAsB,GAAG,OAAO;AACrC,MAAE,qCAAqC;AACvC,MAAE,eAAe,OAAO,GAAG,IAAI;AAAA,EACnC;AACA,WAAS,eAAe,GAAG,OAAO;AAC9B,YAAQ,MAAM,OAAO;AAAA,MACjB,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,QAAQ;AACX,wBAAgB,GAAG,KAAK;AACxB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,GAAG;AACN,wBAAgB,GAAG,KAAK;AACxB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,IAAI;AACP,qCAA6B,GAAG,KAAK;AACrf,8BAAsB,GAAG,KAAK;AAC9B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,IAAI;AACP,+BAAuB,GAAG,KAAK;AAC/B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,QAAQ;AACX,2BAAmB,GAAG,KAAK;AAC3B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,IAAI;AACP,yBAAiB,GAAG,KAAK;AACzB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,KAAK;AACR,yBAAiB,GAAG,KAAK;AACzB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,IAAI;AACP,yBAAiB,GAAG,KAAK;AACzB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,SAAS;AACZ,0BAAkB,GAAG,KAAK;AAC1B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,KAAK;AACR,0BAAkB,GAAG,KAAK;AAC1B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,KAAK;AACR,0BAAkB,GAAG,KAAK;AAC1B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,MAAM;AACT,2BAAmB,GAAG,KAAK;AAC3B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,UAAU;AACb,uBAAe,GAAG,KAAK;AACvB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,MAAM;AACT,2BAAmB,GAAG,KAAK;AAC3B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,MAAM;AACT,2BAAmB,GAAG,KAAK;AAC3B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,MAAM;AACT,2BAAmB,GAAG,KAAK;AAC3B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,MAAM;AACT,2BAAmB,GAAG,KAAK;AAC3B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,OAAO;AACV,4BAAoB,GAAG,KAAK;AAC5B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,OAAO;AACV,4BAAoB,GAAG,KAAK;AAC5B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,QAAQ;AACX,4BAAoB,GAAG,KAAK;AAC5B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,OAAO;AACV,4BAAoB,GAAG,KAAK;AAC5B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,QAAQ;AACX,6BAAqB,GAAG,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,SAAS;AACZ,6BAAqB,GAAG,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,QAAQ;AACX,6BAAqB,GAAG,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,QAAQ;AACX,6BAAqB,GAAG,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,UAAU;AACb,+BAAuB,GAAG,KAAK;AAC/B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,SAAS;AACZ,8BAAsB,GAAG,KAAK;AAC9B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,UAAU;AACb,+BAAuB,GAAG,KAAK;AAC/B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,UAAU;AACb,+BAAuB,GAAG,KAAK;AAC/B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,UAAU;AACb,YAAI,EAAE,QAAQ,kBAAkB;AAC5B,gCAAsB,GAAG,KAAK;AAAA,QAClC,OACK;AACD,gCAAsB,GAAG,KAAK;AAAA,QAClC;AACA;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,WAAW;AACd,gCAAwB,GAAG,KAAK;AAChC;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,UAAU;AAEb;AAAA,MACJ;AAAA,MACA,SAAS;AACL,8BAAsB,GAAG,KAAK;AAAA,MAClC;AAAA,IACJ;AAAA,EACJ;AACA,WAAS,iBAAiB,GAAG,OAAO;AAChC,QAAI,EAAE,aAAa,WAAW,OAAE,IAAI,GAAG;AACnC,QAAE,gBAAgB,cAAc;AAGhC,UAAI,EAAE,QAAQ,wBAAwB;AAClC,cAAM,cAAc,EAAE,aAAa,iCAAiC;AACpE,YAAI,aAAa;AACb,YAAE,gBAAgB,aAAa,KAAK;AAAA,QACxC;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACA,WAAS,iBAAiB,GAAG,OAAO;AAChC,QAAI,EAAE,aAAa,WAAW,OAAE,IAAI,GAAG;AACnC,QAAE,gBAAgB,cAAc;AAChC,sBAAgB,GAAG,KAAK;AAAA,IAC5B;AAAA,EACJ;AACA,WAAS,oBAAoB,GAAG,OAAO;AACnC,UAAM,KAAK,MAAM;AACjB,QAAI,EAAE,aAAa,WAAW,EAAE,GAAG;AAC/B,QAAE,aAAa,uBAAuB;AACtC,QAAE,aAAa,sBAAsB,EAAE;AAAA,IAC3C;AAAA,EACJ;AACA,WAAS,iBAAiB,GAAG;AACzB,UAAM,aAAa,EAAE,aAAa,YAAY;AAC9C,UAAM,EAAE,YAAY,IAAI;AACxB,QAAI,CAAC,YAAY;AACb,QAAE,cAAc;AAAA,IACpB;AACA,SAAK,eAAe,eAAe,EAAE,aAAa,WAAW,OAAE,IAAI,GAAG;AAClE,QAAE,aAAa,uBAAuB;AACtC,UAAI,YAAY;AACZ,UAAE,aAAa,sBAAsB,OAAE,IAAI;AAAA,MAC/C,WACS,aAAa;AAClB,UAAE,aAAa,OAAO,WAAW;AAAA,MACrC;AAAA,IACJ;AAAA,EACJ;AACA,WAAS,cAAc,GAAG;AACtB,QAAI,CAAC,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AACvC,QAAE,mBAAmB,UAAG,GAAG,OAAE,CAAC;AAAA,IAClC;AACA,MAAE,eAAe;AAAA,EACrB;AACA,WAAS,eAAe,GAAG;AACvB,QAAI,EAAE,aAAa,mBAAmB,OAAE,EAAE,GAAG;AACzC,QAAE,aAAa,oCAAoC,OAAE,EAAE;AACvD,QAAE,aAAa,sBAAsB,OAAE,EAAE;AAAA,IAC7C;AAAA,EACJ;AACA,WAAS,eAAe,GAAG,OAAO;AAC9B,UAAM,KAAK,MAAM;AACjB,QAAI,EAAE,aAAa,WAAW,EAAE,GAAG;AAC/B,QAAE,aAAa,oCAAoC,EAAE;AACrD,QAAE,aAAa,sBAAsB,EAAE;AAAA,IAC3C;AAAA,EACJ;AACA,WAAS,2BAA2B,GAAG;AACnC,QAAI,EAAE,aAAa,yBAAyB,GAAG;AAC3C,QAAE,aAAa,uBAAuB;AACtC,QAAE,aAAa,6BAA6B;AAAA,IAChD;AAAA,EACJ;AACA,WAAS,mBAAmB,GAAG,OAAO;AAClC,UAAM,KAAK,MAAM;AACjB,QAAI,EAAE,aAAa,WAAW,EAAE,GAAG;AAC/B,QAAE,aAAa,uBAAuB;AACtC,QAAE,aAAa,sBAAsB,EAAE;AACvC,QAAE,yBAAyB,kBAAkB;AAAA,IACjD;AAAA,EACJ;AACA,WAAS,eAAe,GAAG;AACvB,MAAE,qCAAqC;AACvC,MAAE,mBAAmB,UAAG,IAAI,OAAE,EAAE;AAChC,MAAE,aAAa,IAAI;AACnB,MAAE,aAAa;AAAA,EACnB;AACA,WAAS,oBAAoB,GAAG,OAAO;AACnC,UAAM,KAAK,MAAM;AACjB,UAAM,MAAM,MAAM;AAClB,aAAS,IAAI,EAAE,aAAa,UAAU,IAAI,GAAG,KAAK;AAC9C,YAAM,UAAU,EAAE,aAAa,MAAM,CAAC;AACtC,YAAM,YAAY,EAAE,aAAa,OAAO,CAAC;AAEzC,UAAI,QAAQ,cAAc,QAAQ,OAAE,WAAW,EAAE,YAAY,WAAW,OAAO,MAAM,KAAK;AACtF,UAAE,aAAa,oCAAoC,GAAG;AACtD,YAAI,EAAE,aAAa,YAAY;AAC3B,YAAE,aAAa,gBAAgB,CAAC;AACpC;AAAA,MACJ;AACA,UAAI,EAAE,kBAAkB,SAAS,SAAS,GAAG;AACzC;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACA,WAAS,aAAa,GAAG,OAAO;AAC5B,YAAQ,MAAM,OAAO;AAAA,MACjB,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,QAAQ;AACX,2BAAmB,GAAG,KAAK;AAC3B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,GAAG;AACN,sBAAc,CAAC;AACff,4BAAoB,GAAG,KAAK;AAC5B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,IAAI;AACP,uBAAe,CAAC;AAChB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,IAAI;AACP,uBAAe,GAAG,KAAK;AACvB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,IAAI;AACP,mCAA2B,CAAC;AAC5B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,IAAI;AACP,uBAAe,CAAC;AAChB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,MAAM;AACT,yBAAiB,GAAG,KAAK;AACzB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,MAAM;AACT,yBAAiB,GAAG,KAAK;AACzB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,MAAM;AACT,yBAAiB,CAAC;AAClB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,SAAS;AACZ,2BAAmB,GAAG,KAAK;AAC3B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,UAAU;AACb,6BAAqB,GAAG,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,SAAS;AACL,4BAAoB,GAAG,KAAK;AAAA,MAChC;AAAA,IACJ;AAAA,EACJ;AACA,WAAS,UAAU,GAAG,OAAO;AACzB,QAAI,EAAE,uBAAuB,SAAS,GAAG;AACrC,oBAAc,GAAG,KAAK;AAAA,IAC1B,OACK;AACD,kBAAY,GAAG,KAAK;AAAA,IACxB;AAAA,EACJ;AAGA,WAAS,aAAa,GAAG,OAAO;AAC5B,QAAID;AACJ,QAAI,MAAM,UAAU,OAAE,QAAQ;AAC1B,OAACA,MAAK,EAAE,mBAAmB,QAAQA,QAAO,SAAS,SAASA,IAAG,KAAK,GAAG,EAAE,aAAa,OAAO;AAAA,IACjG;AACA,MAAE,aAAa,IAAI;AACnB,MAAE,gBAAgB,EAAE;AAAA,EACxB;AACA,WAAS,UAAU,GAAG,OAAO;AACzB,MAAE,KAAK,OAAO,IAAI,kCAAkC;AACpD,MAAE,aAAa,IAAI;AACnB,MAAE,gBAAgB,EAAE;AACpB,MAAE,MAAM,KAAK;AAAA,EACjB;AAGA,WAAS,iBAAiB,GAAG,OAAO;AAChC,QAAI,qBAAqB,IAAI,EAAE,aAAa,YAAY,GAAG;AACvD,QAAE,uBAAuB,SAAS;AAClC,QAAE,wCAAwC;AAC1C,QAAE,wBAAwB,EAAE;AAC5B,QAAE,gBAAgB,cAAc;AAChC,cAAQ,MAAM,MAAM;AAAA,QAChB,KAAK,UAAU,WAAW;AACtB,+BAAqB,GAAG,KAAK;AAC7B;AAAA,QACJ;AAAA,QACA,KAAK,UAAU,sBAAsB;AACjC,yCAA+B,GAAG,KAAK;AACvC;AAAA,QACJ;AAAA,MAEJ;AAAA,IACJ,OACK;AACD,mBAAa,GAAG,KAAK;AAAA,IACzB;AAAA,EACJ;AACA,WAAS,uBAAuB,GAAG,OAAO;AACtC,MAAE,aAAa,wBAAwB;AACvC,MAAE,yBAAyB,aAAa;AACxC,MAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAE,gBAAgB,cAAc;AAAA,EACpC;AACA,WAAS,wBAAwB,GAAG,OAAO;AACvC,MAAE,aAAa,wBAAwB;AACvC,MAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAE,gBAAgB,cAAc;AAAA,EACpC;AACA,WAAS,mBAAmB,GAAG,OAAO;AAClC,MAAE,aAAa,wBAAwB;AACvC,MAAE,mBAAmB,UAAG,UAAU,OAAE,QAAQ;AAC5C,MAAE,gBAAgB,cAAc;AAChC,0BAAsB,GAAG,KAAK;AAAA,EAClC;AACA,WAAS,qBAAqB,GAAG,OAAO;AACpC,MAAE,aAAa,wBAAwB;AACvC,MAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAE,gBAAgB,cAAc;AAAA,EACpC;AACA,WAAS,kBAAkB,GAAG,OAAO;AACjC,MAAE,aAAa,wBAAwB;AACvC,MAAE,mBAAmB,UAAG,OAAO,OAAE,KAAK;AACtC,MAAE,gBAAgB,cAAc;AAChC,wBAAoB,GAAG,KAAK;AAAA,EAChC;AACA,WAAS,qBAAqB,GAAG,OAAO;AACpC,QAAI,EAAE,aAAa,gBAAgB,OAAE,KAAK,GAAG;AACzC,QAAE,aAAa,sBAAsB,OAAE,KAAK;AAC5C,QAAE,oBAAoB;AACtB,QAAE,iBAAiB,KAAK;AAAA,IAC5B;AAAA,EACJ;AACA,WAAS,qBAAqB,GAAG,OAAO;AACpC,QAAI,cAAc,KAAK,GAAG;AACtB,QAAE,eAAe,OAAO,GAAG,IAAI;AAAA,IACnC,OACK;AACD,mBAAa,GAAG,KAAK;AAAA,IACzB;AACA,UAAM,iBAAiB;AAAA,EAC3B;AACA,WAAS,oBAAoB,GAAG,OAAO;AACnC,QAAI,CAAC,EAAE,eAAe,EAAE,aAAa,cAAc,GAAG;AAClD,QAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,QAAE,cAAc,EAAE,aAAa;AAC/B,QAAE,aAAa,IAAI;AAAA,IACvB;AAAA,EACJ;AACA,WAAS,gBAAgB,GAAG,OAAO;AAC/B,YAAQ,MAAM,OAAO;AAAA,MACjB,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,IAAI;AACP,0BAAkB,GAAG,KAAK;AAC1B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,UAAU;AACb,uBAAe,GAAG,KAAK;AACvB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,KAAK;AACR,2BAAmB,GAAG,KAAK;AAC3B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,MAAM;AACT,4BAAoB,GAAG,KAAK;AAC5B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,OAAO;AACV,6BAAqB,GAAG,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,OAAO;AACV,6BAAqB,GAAG,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,OAAO;AACV,6BAAqB,GAAG,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,SAAS;AACZ,+BAAuB,GAAG,KAAK;AAC/B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,UAAU;AACb,gCAAwB,GAAG,KAAK;AAChC;AAAA,MACJ;AAAA,MACA,SAAS;AACL,qBAAa,GAAG,KAAK;AAAA,MACzB;AAAA,IACJ;AAAA,EACJ;AACA,WAAS,cAAc,GAAG,OAAO;AAC7B,YAAQ,MAAM,OAAO;AAAA,MACjB,KAAK,OAAE,OAAO;AACV,YAAI,EAAE,aAAa,gBAAgB,OAAE,KAAK,GAAG;AACzC,YAAE,aAAa,sBAAsB,OAAE,KAAK;AAC5C,YAAE,oBAAoB;AAAA,QAC1B;AACA;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,UAAU;AACb,6BAAqB,GAAG,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,IAAI;AAEP;AAAA,MACJ;AAAA,MACA,SAAS;AACL,qBAAa,GAAG,KAAK;AAAA,MACzB;AAAA,IACJ;AAAA,EACJ;AACA,WAAS,aAAa,GAAG,OAAO;AAC5B,UAAM,4BAA4B,EAAE;AACpC,MAAE,yBAAyB;AAE3B,eAAW,GAAG,KAAK;AACnB,MAAE,yBAAyB;AAAA,EAC/B;AAGA,WAAS,+BAA+B,GAAG,OAAO;AAC9C,MAAE,uBAAuB,KAAK,KAAK;AAAA,EACvC;AACA,WAAS,qBAAqB,GAAG,OAAO;AACpC,MAAE,uBAAuB,KAAK,KAAK;AACnC,MAAE,wCAAwC;AAAA,EAC9C;AACA,WAAS,iBAAiB,GAAG,OAAO;AAChC,QAAI,IAAI;AACR,QAAI,EAAE,uCAAuC;AACzC,aAAO,IAAI,EAAE,uBAAuB,QAAQ,KAAK;AAC7C,qBAAa,GAAG,EAAE,uBAAuB,CAAC,CAAC;AAAA,MAC/C;AAAA,IACJ,OACK;AACD,aAAO,IAAI,EAAE,uBAAuB,QAAQ,KAAK;AAC7C,UAAE,kBAAkB,EAAE,uBAAuB,CAAC,CAAC;AAAA,MACnD;AAAA,IACJ;AACA,MAAE,gBAAgB,EAAE;AACpB,MAAE,cAAc,KAAK;AAAA,EACzB;AAGA,MAAM,sBAAsB,oBAAI,IAAI,CAAC,OAAE,SAAS,OAAE,KAAK,OAAE,UAAU,OAAE,OAAO,OAAE,IAAI,OAAE,OAAO,OAAE,IAAI,OAAE,OAAO,OAAE,EAAE,CAAC;AAC/G,WAAS,kBAAkB,GAAG,OAAO;AACjC,UAAM,KAAK,MAAM;AACjB,QAAI,oBAAoB,IAAI,EAAE,GAAG;AAC7B,UAAI,EAAE,aAAa,gBAAgB,OAAE,OAAO,GAAG;AAC3C,UAAE,aAAa,uBAAuB;AACtC,UAAE,aAAa,sBAAsB,OAAE,OAAO;AAC9C,UAAE,yBAAyB,kBAAkB;AAC7C,UAAE,gBAAgB,cAAc;AAChC,wBAAgB,GAAG,KAAK;AAAA,MAC5B;AAAA,IACJ,OACK;AACD,qBAAe,GAAG,KAAK;AAAA,IAC3B;AAAA,EACJ;AACA,WAAS,gBAAgB,GAAG,OAAO;AAC/B,UAAM,KAAK,MAAM;AACjB,YAAQ,IAAI;AAAA,MACR,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,OAAO;AACV,YAAI,EAAE,aAAa,gBAAgB,OAAE,OAAO,GAAG;AAC3C,YAAE,aAAa,uBAAuB;AACtC,YAAE,aAAa,sBAAsB,OAAE,OAAO;AAC9C,YAAE,yBAAyB,kBAAkB;AAC7C,YAAE,gBAAgB,cAAc;AAChC,cAAI,OAAO,OAAE,OAAO;AAChB,0BAAc,GAAG,KAAK;AAAA,UAC1B;AAAA,QACJ;AACA;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,IAAI;AAEP;AAAA,MACJ;AAAA,MACA,SAAS;AACL,qBAAa,GAAG,KAAK;AAAA,MACzB;AAAA,IACJ;AAAA,EACJ;AAGA,WAAS,sBAAsB,GAAG,OAAO;AACrC,YAAQ,MAAM,OAAO;AAAA,MACjB,KAAK,OAAE,MAAM;AACT,uBAAe,GAAG,KAAK;AACvB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,KAAK;AACR,UAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,cAAM,iBAAiB;AACvB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,UAAU;AACb,uBAAe,GAAG,KAAK;AACvB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,2BAAmB,GAAG,KAAK;AAAA,MAC/B;AAAA,IACJ;AAAA,EACJ;AACA,WAAS,oBAAoB,GAAG,OAAO;AACnC,YAAQ,MAAM,OAAO;AAAA,MACjB,KAAK,OAAE,UAAU;AACb,YAAI,EAAE,aAAa,iBAAiB,OAAE,UAAU;AAC5C,YAAE,aAAa,IAAI;AACnB,YAAE,gBAAgB,cAAc;AAAA,QACpC;AACA;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,UAAU;AACb,6BAAqB,GAAG,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,KAAK;AAER;AAAA,MACJ;AAAA,MACA,SAAS;AACL,2BAAmB,GAAG,KAAK;AAAA,MAC/B;AAAA,IACJ;AAAA,EACJ;AACA,WAAS,mBAAmB,GAAG,OAAO;AAClC,QAAI,EAAE,aAAa,iBAAiB,OAAE,UAAU;AAC5C,QAAE,aAAa,IAAI;AACnB,QAAE,gBAAgB,cAAc;AAChC,QAAE,cAAc,KAAK;AAAA,IACzB;AAAA,EACJ;AAGA,WAAS,oBAAoB,GAAG,OAAO;AACnC,YAAQ,MAAM,OAAO;AAAA,MACjB,KAAK,OAAE,IAAI;AACP,UAAE,aAAa,4BAA4B;AAC3C,UAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,UAAE,gBAAgB,cAAc;AAChC;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,IAAI;AACP,UAAE,aAAa,4BAA4B;AAC3C,UAAE,mBAAmB,UAAG,IAAI,OAAE,EAAE;AAChC,UAAE,gBAAgB,cAAc;AAChC,sBAAc,GAAG,KAAK;AACtB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,OAAO;AACV,YAAI,EAAE,aAAa,gCAAgC,GAAG;AAClD,YAAE,aAAa,4BAA4B;AAC3C,YAAE,aAAa,IAAI;AACnB,YAAE,gBAAgB,cAAc;AAChC,0BAAgB,GAAG,KAAK;AAAA,QAC5B;AACA;AAAA,MACJ;AAAA,MACA,SAAS;AACL,wBAAgB,GAAG,KAAK;AAAA,MAC5B;AAAA,IACJ;AAAA,EACJ;AACA,WAAS,kBAAkB,GAAG,OAAO;AACjC,UAAM,KAAK,MAAM;AACjB,YAAQ,MAAM,OAAO;AAAA,MACjB,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,OAAO;AACV,YAAI,EAAE,aAAa,gBAAgB,EAAE,GAAG;AACpC,YAAE,aAAa,4BAA4B;AAC3C,YAAE,aAAa,IAAI;AACnB,YAAE,gBAAgB,cAAc;AAAA,QACpC;AACA;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,OAAO;AACV,YAAI,EAAE,aAAa,gCAAgC,GAAG;AAClD,YAAE,aAAa,4BAA4B;AAC3C,YAAE,aAAa,IAAI;AACnB,YAAE,gBAAgB,cAAc;AAChC,wBAAc,GAAG,KAAK;AAAA,QAC1B;AACA;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,IAAI;AAEP;AAAA,MACJ;AAAA,MACA,SAAS;AACL,sBAAc,GAAG,KAAK;AAAA,MAC1B;AAAA,IACJ;AAAA,EACJ;AAGA,WAAS,cAAc,GAAG,OAAO;AAC7B,YAAQ,MAAM,OAAO;AAAA,MACjB,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,IAAI;AACP,UAAE,aAAa,2BAA2B;AAC1C,UAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,UAAE,gBAAgB,cAAc;AAChC,UAAE,yBAAyB,aAAa;AACxC;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,IAAI;AACP,YAAI,EAAE,aAAa,gBAAgB,OAAE,EAAE,GAAG;AACtC,YAAE,aAAa,2BAA2B;AAC1C,YAAE,aAAa,IAAI;AACnB,YAAE,gBAAgB,cAAc;AAChC,8BAAoB,GAAG,KAAK;AAAA,QAChC;AACA;AAAA,MACJ;AAAA,MACA,SAAS;AACL,wBAAgB,GAAG,KAAK;AAAA,MAC5B;AAAA,IACJ;AAAA,EACJ;AACA,WAAS,YAAY,GAAG,OAAO;AAC3B,YAAQ,MAAM,OAAO;AAAA,MACjB,KAAK,OAAE,IAAI;AACP,YAAI,EAAE,aAAa,gBAAgB,OAAE,EAAE,GAAG;AACtC,YAAE,aAAa,2BAA2B;AAC1C,YAAE,aAAa,IAAI;AACnB,YAAE,gBAAgB,cAAc;AAAA,QACpC;AACA;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,OAAO;AACV,YAAI,EAAE,aAAa,gBAAgB,OAAE,EAAE,GAAG;AACtC,YAAE,aAAa,2BAA2B;AAC1C,YAAE,aAAa,IAAI;AACnB,YAAE,gBAAgB,cAAc;AAChC,4BAAkB,GAAG,KAAK;AAAA,QAC9B;AACA;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,OAAO;AACV,YAAI,EAAE,aAAa,gBAAgB,MAAM,KAAK,KAAK,EAAE,aAAa,gBAAgB,OAAE,EAAE,GAAG;AACrF,YAAE,aAAa,2BAA2B;AAC1C,YAAE,aAAa,IAAI;AACnB,YAAE,gBAAgB,cAAc;AAChC,4BAAkB,GAAG,KAAK;AAAA,QAC9B;AACA;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,IAAI;AAEP;AAAA,MACJ;AAAA,MACA,SAAS;AACL,sBAAc,GAAG,KAAK;AAAA,MAC1B;AAAA,IACJ;AAAA,EACJ;AAGA,WAAS,eAAe,GAAG,OAAO;AAC9B,UAAM,KAAK,MAAM;AACjB,QAAI,oBAAoB,IAAI,EAAE,GAAG;AAC7B,UAAI,EAAE,aAAa,gBAAgB,OAAE,EAAE,KAAK,EAAE,aAAa,gBAAgB,OAAE,EAAE,GAAG;AAC9E,UAAE,gBAAgB;AAClB,sBAAc,GAAG,KAAK;AAAA,MAC1B;AAAA,IACJ,OACK;AACD,qBAAe,GAAG,KAAK;AAAA,IAC3B;AAAA,EACJ;AACA,WAAS,aAAa,GAAG,OAAO;AAC5B,UAAM,KAAK,MAAM;AACjB,YAAQ,IAAI;AAAA,MACR,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,IAAI;AACP,YAAI,EAAE,aAAa,gBAAgB,EAAE,GAAG;AACpC,YAAE,aAAa,uBAAuB;AACtC,YAAE,aAAa,sBAAsB,EAAE;AACvC,YAAE,yBAAyB,kBAAkB;AAC7C,YAAE,gBAAgB,cAAc;AAAA,QACpC;AACA;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,IAAI;AACP,YAAI,EAAE,aAAa,gBAAgB,EAAE,GAAG;AACpC,YAAE,gBAAgB;AAClB,sBAAY,GAAG,KAAK;AAAA,QACxB;AACA;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,MAAM;AAET;AAAA,MACJ;AAAA,MACA,SAAS;AACL,qBAAa,GAAG,KAAK;AAAA,MACzB;AAAA,IACJ;AAAA,EACJ;AAGA,WAAS,iBAAiB,GAAG,OAAO;AAChC,YAAQ,MAAM,OAAO;AAAA,MACjB,KAAK,OAAE,MAAM;AACT,uBAAe,GAAG,KAAK;AACvB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,QAAQ;AACX,YAAI,EAAE,aAAa,iBAAiB,OAAE,QAAQ;AAC1C,YAAE,aAAa,IAAI;AAAA,QACvB;AACA,UAAE,eAAe,OAAO,GAAG,IAAI;AAC/B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,UAAU;AACb,YAAI,EAAE,aAAa,iBAAiB,OAAE,QAAQ;AAC1C,YAAE,aAAa,IAAI;AAAA,QACvB;AACA,YAAI,EAAE,aAAa,iBAAiB,OAAE,UAAU;AAC5C,YAAE,aAAa,IAAI;AAAA,QACvB;AACA,UAAE,eAAe,OAAO,GAAG,IAAI;AAC/B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,QAAQ;AACX,YAAI,EAAE,aAAa,iBAAiB,OAAE,MAAM,GAAG;AAC3C,YAAE,aAAa,sBAAsB,OAAE,MAAM;AAC7C,YAAE,oBAAoB;AACtB,cAAI,MAAM,UAAU,OAAE,QAAQ;AAC1B,cAAE,iBAAiB,KAAK;AAAA,UAC5B;AAAA,QACJ;AACA;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,UAAU;AACb,uBAAe,GAAG,KAAK;AACvB;AAAA,MACJ;AAAA,MACA;AAAA,IAEJ;AAAA,EACJ;AACA,WAAS,eAAe,GAAG,OAAO;AAC9B,YAAQ,MAAM,OAAO;AAAA,MACjB,KAAK,OAAE,UAAU;AACb,YAAI,EAAE,aAAa,WAAW,KAC1B,EAAE,aAAa,iBAAiB,OAAE,UAClC,EAAE,aAAa,OAAO,EAAE,aAAa,WAAW,CAAC,MAAM,OAAE,UAAU;AACnE,YAAE,aAAa,IAAI;AAAA,QACvB;AACA,YAAI,EAAE,aAAa,iBAAiB,OAAE,UAAU;AAC5C,YAAE,aAAa,IAAI;AAAA,QACvB;AACA;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,QAAQ;AACX,YAAI,EAAE,aAAa,iBAAiB,OAAE,QAAQ;AAC1C,YAAE,aAAa,IAAI;AAAA,QACvB;AACA;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,QAAQ;AACX,YAAI,EAAE,aAAa,iBAAiB,OAAE,MAAM,GAAG;AAC3C,YAAE,aAAa,sBAAsB,OAAE,MAAM;AAC7C,YAAE,oBAAoB;AAAA,QAC1B;AACA;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,UAAU;AACb,6BAAqB,GAAG,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA;AAAA,IAEJ;AAAA,EACJ;AAGA,WAAS,wBAAwB,GAAG,OAAO;AACvC,UAAM,KAAK,MAAM;AACjB,QAAI,OAAO,OAAE,WACT,OAAO,OAAE,SACT,OAAO,OAAE,SACT,OAAO,OAAE,SACT,OAAO,OAAE,SACT,OAAO,OAAE,MACT,OAAO,OAAE,MACT,OAAO,OAAE,IAAI;AACb,QAAE,aAAa,sBAAsB,OAAE,MAAM;AAC7C,QAAE,oBAAoB;AACtB,QAAE,iBAAiB,KAAK;AAAA,IAC5B,OACK;AACD,uBAAiB,GAAG,KAAK;AAAA,IAC7B;AAAA,EACJ;AACA,WAAS,sBAAsB,GAAG,OAAO;AACrC,UAAM,KAAK,MAAM;AACjB,QAAI,OAAO,OAAE,WACT,OAAO,OAAE,SACT,OAAO,OAAE,SACT,OAAO,OAAE,SACT,OAAO,OAAE,SACT,OAAO,OAAE,MACT,OAAO,OAAE,MACT,OAAO,OAAE,IAAI;AACb,UAAI,EAAE,aAAa,gBAAgB,EAAE,GAAG;AACpC,UAAE,aAAa,sBAAsB,OAAE,MAAM;AAC7C,UAAE,oBAAoB;AACtB,UAAE,SAAS,KAAK;AAAA,MACpB;AAAA,IACJ,OACK;AACD,qBAAe,GAAG,KAAK;AAAA,IAC3B;AAAA,EACJ;AAGA,WAAS,mBAAmB,GAAG,OAAO;AAClC,YAAQ,MAAM,OAAO;AAAA,MAEjB,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,OAAO;AACV,uBAAe,GAAG,KAAK;AACvB;AAAA,MACJ;AAAA,MAEA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,OAAO;AACV,UAAE,uBAAuB,CAAC,IAAI,cAAc;AAC5C,UAAE,gBAAgB,cAAc;AAChC,wBAAgB,GAAG,KAAK;AACxB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,KAAK;AACR,UAAE,uBAAuB,CAAC,IAAI,cAAc;AAC5C,UAAE,gBAAgB,cAAc;AAChC,8BAAsB,GAAG,KAAK;AAC9B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,IAAI;AACP,UAAE,uBAAuB,CAAC,IAAI,cAAc;AAC5C,UAAE,gBAAgB,cAAc;AAChC,4BAAoB,GAAG,KAAK;AAC5B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE;AAAA,MACP,KAAK,OAAE,IAAI;AACP,UAAE,uBAAuB,CAAC,IAAI,cAAc;AAC5C,UAAE,gBAAgB,cAAc;AAChC,sBAAc,GAAG,KAAK;AACtB;AAAA,MACJ;AAAA,MACA,SAAS;AACL,UAAE,uBAAuB,CAAC,IAAI,cAAc;AAC5C,UAAE,gBAAgB,cAAc;AAChC,uBAAe,GAAG,KAAK;AAAA,MAC3B;AAAA,IACJ;AAAA,EACJ;AACA,WAAS,iBAAiB,GAAG,OAAO;AAChC,QAAI,MAAM,UAAU,OAAE,UAAU;AAC5B,2BAAqB,GAAG,KAAK;AAAA,IACjC;AAAA,EACJ;AACA,WAAS,cAAc,GAAG,OAAO;AAC7B,QAAI,EAAE,aAAa,YAAY,GAAG;AAC9B,QAAE,aAAa,sBAAsB,OAAE,QAAQ;AAC/C,QAAE,yBAAyB,kBAAkB;AAC7C,QAAE,uBAAuB,MAAM;AAC/B,QAAE,oBAAoB;AACtB,QAAE,MAAM,KAAK;AAAA,IACjB,OACK;AACD,kBAAY,GAAG,KAAK;AAAA,IACxB;AAAA,EACJ;AAGA,WAAS,kBAAkB,GAAG,OAAO;AACjC,QAAI,MAAM,UAAU,OAAE,MAAM;AACxB,qBAAe,GAAG,KAAK;AAAA,IAC3B,OACK;AACD,qBAAe,GAAG,KAAK;AAAA,IAC3B;AAAA,EACJ;AACA,WAAS,gBAAgB,GAAG,OAAO;AAC/B,QAAIA;AACJ,QAAI,MAAM,UAAU,OAAE,MAAM;AACxB,UAAI,CAAC,EAAE,iBAAiB;AACpB,UAAE,gBAAgB,cAAc;AAAA,MACpC;AAGA,UAAI,EAAE,QAAQ,0BAA0B,EAAE,aAAa,OAAO,CAAC,MAAM,OAAE,MAAM;AACzE,UAAE,gBAAgB,EAAE,aAAa,MAAM,CAAC,GAAG,KAAK;AAEhD,cAAM,cAAc,EAAE,aAAa,MAAM,CAAC;AAC1C,YAAI,eAAe,GAAGA,MAAK,EAAE,YAAY,0BAA0B,WAAW,OAAO,QAAQA,QAAO,SAAS,SAASA,IAAG,SAAS;AAC9H,YAAE,gBAAgB,aAAa,KAAK;AAAA,QACxC;AAAA,MACJ;AAAA,IACJ,OACK;AACD,qBAAe,GAAG,KAAK;AAAA,IAC3B;AAAA,EACJ;AACA,WAAS,eAAe,GAAG,OAAO;AAC9B,MAAE,gBAAgB,cAAc;AAChC,eAAW,GAAG,KAAK;AAAA,EACvB;AAGA,WAAS,mBAAmB,GAAG,OAAO;AAClC,YAAQ,MAAM,OAAO;AAAA,MACjB,KAAK,OAAE,MAAM;AACT,uBAAe,GAAG,KAAK;AACvB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,UAAU;AACb,UAAE,eAAe,OAAO,GAAG,IAAI;AAC/B;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,OAAO;AACV,UAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,cAAM,iBAAiB;AACvB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,UAAU;AACb,uBAAe,GAAG,KAAK;AACvB;AAAA,MACJ;AAAA,MACA;AAAA,IAEJ;AAAA,EACJ;AACA,WAAS,iBAAiB,GAAG,OAAO;AAChC,QAAI,MAAM,UAAU,OAAE,YAAY,CAAC,EAAE,aAAa,yBAAyB,GAAG;AAC1E,QAAE,aAAa,IAAI;AACnB,UAAI,CAAC,EAAE,mBAAmB,EAAE,aAAa,iBAAiB,OAAE,UAAU;AAClE,UAAE,gBAAgB,cAAc;AAAA,MACpC;AAAA,IACJ;AAAA,EACJ;AAGA,WAAS,sBAAsB,GAAG,OAAO;AACrC,YAAQ,MAAM,OAAO;AAAA,MACjB,KAAK,OAAE,MAAM;AACT,uBAAe,GAAG,KAAK;AACvB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,UAAU;AACb,uBAAe,GAAG,KAAK;AACvB;AAAA,MACJ;AAAA,MACA;AAAA,IAEJ;AAAA,EACJ;AACA,WAAS,oBAAoB,GAAG,OAAO;AACnC,QAAI,MAAM,UAAU,OAAE,MAAM;AACxB,QAAE,gBAAgB,cAAc;AAAA,IACpC;AAAA,EACJ;AAGA,WAAS,uBAAuB,GAAG,OAAO;AACtC,QAAI,MAAM,UAAU,OAAE,MAAM;AACxB,qBAAe,GAAG,KAAK;AAAA,IAC3B,OACK;AACD,0BAAoB,GAAG,KAAK;AAAA,IAChC;AAAA,EACJ;AACA,WAAS,oBAAoB,GAAG,OAAO;AACnC,MAAE,gBAAgB,cAAc;AAChC,eAAW,GAAG,KAAK;AAAA,EACvB;AAGA,WAAS,2BAA2B,GAAG,OAAO;AAC1C,YAAQ,MAAM,OAAO;AAAA,MACjB,KAAK,OAAE,MAAM;AACT,uBAAe,GAAG,KAAK;AACvB;AAAA,MACJ;AAAA,MACA,KAAK,OAAE,UAAU;AACb,uBAAe,GAAG,KAAK;AACvB;AAAA,MACJ;AAAA,MACA;AAAA,IAEJ;AAAA,EACJ;AAGA,WAAS,8BAA8B,GAAG,OAAO;AAC7C,UAAM,QAAgB;AACtB,MAAE,kBAAkB,KAAK;AAAA,EAC7B;AACA,WAAS,0BAA0B,GAAG,OAAO;AACzC,MAAE,kBAAkB,KAAK;AACzB,MAAE,aAAa;AAAA,EACnB;AACA,WAAS,+BAA+B,GAAG;AACvC,WAAO,EAAE,YAAY,gBAAgB,EAAE,aAAa,OAAO,MAAM,GAAG,QAChE,CAAC,EAAE,oBAAoB,EAAE,aAAa,cAAc,EAAE,aAAa,OAAO,GAAG;AAC7E,QAAE,aAAa,IAAI;AAAA,IACvB;AAAA,EACJ;AACA,WAAS,yBAAyB,GAAG,OAAO;AACxC,QAAmB,WAAW,KAAK,GAAG;AAClC,qCAA+B,CAAC;AAChC,QAAE,+BAA+B,KAAK;AAAA,IAC1C,OACK;AACD,YAAM,UAAU,EAAE,2BAA2B;AAC7C,YAAM,YAAY,EAAE,YAAY,gBAAgB,OAAO;AACvD,UAAI,cAAc,GAAG,QAAQ;AACzB,QAAe,uBAAuB,KAAK;AAAA,MAC/C,WACS,cAAc,GAAG,KAAK;AAC3B,QAAe,sBAAsB,KAAK;AAC1C,QAAe,oBAAoB,KAAK;AAAA,MAC5C;AACA,MAAe,oBAAoB,KAAK;AACxC,UAAI,MAAM,aAAa;AACnB,UAAE,eAAe,OAAO,SAAS;AAAA,MACrC,OACK;AACD,UAAE,eAAe,OAAO,SAAS;AAAA,MACrC;AACA,YAAM,iBAAiB;AAAA,IAC3B;AAAA,EACJ;AACA,WAAS,uBAAuB,GAAG,OAAO;AACtC,QAAI,MAAM,UAAU,OAAE,KAAK,MAAM,UAAU,OAAE,IAAI;AAC7C,qCAA+B,CAAC;AAChC,QAAE,6BAA6B,KAAK;AACpC;AAAA,IACJ;AACA,aAAS,IAAI,EAAE,aAAa,UAAU,IAAI,GAAG,KAAK;AAC9C,YAAM,UAAU,EAAE,aAAa,MAAM,CAAC;AACtC,UAAI,EAAE,YAAY,gBAAgB,OAAO,MAAM,GAAG,MAAM;AACpD,UAAE,6BAA6B,KAAK;AACpC;AAAA,MACJ;AACA,YAAM,UAAU,EAAE,YAAY,WAAW,OAAO;AAChD,UAAI,QAAQ,YAAY,MAAM,MAAM,SAAS;AAEzC,cAAM,UAAU;AAChB,UAAE,aAAa,gBAAgB,CAAC;AAChC;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;;;AC5lGA,MAAM,aAAa,oBAAI,IAAI;IACvB,CAAC,IAAI,QAAQ;IACb,CAAC,IAAI,OAAO;IACZ,CAAC,IAAI,QAAQ;IACb,CAAC,IAAI,MAAM;IACX,CAAC,IAAI,MAAM;GACd;AAGM,MAAM;;IAET,OAAO,UAAU,eAAe,OAC1B,CAAC,KAAa,UAA0B,IAAI,YAAY,KAAK;;MAE7D,CAAC,GAAW,WACP,EAAE,WAAW,KAAK,IAAI,WAAY,SAC5B,EAAE,WAAW,KAAK,IAAI,SAAU,OACjC,EAAE,WAAW,QAAQ,CAAC,IACtB,QACA,QACA,EAAE,WAAW,KAAK;;;AAgDtC,WAAS,WACL,OACA,KAAwB;AAExB,WAAO,SAAS,OAAO,MAAY;AAC/B,UAAI;AACJ,UAAI,UAAU;AACd,UAAI,SAAS;AAEb,aAAQ,QAAQ,MAAM,KAAK,IAAI,GAAI;AAC/B,YAAI,YAAY,MAAM,OAAO;AACzB,oBAAU,KAAK,UAAU,SAAS,MAAM,KAAK;;AAIjD,kBAAU,IAAI,IAAI,MAAM,CAAC,EAAE,WAAW,CAAC,CAAC;AAGxC,kBAAU,MAAM,QAAQ;;AAG5B,aAAO,SAAS,KAAK,UAAU,OAAO;IAC1C;EACJ;AASO,MAAM,aAAa,WAAW,YAAY,UAAU;AAQpD,MAAM,kBAAkB,WAC3B,eACA,oBAAI,IAAI;IACJ,CAAC,IAAI,QAAQ;IACb,CAAC,IAAI,OAAO;IACZ,CAAC,KAAK,QAAQ;GACjB,CAAC;AASC,MAAM,aAAa,WACtB,gBACA,oBAAI,IAAI;IACJ,CAAC,IAAI,OAAO;IACZ,CAAC,IAAI,MAAM;IACX,CAAC,IAAI,MAAM;IACX,CAAC,KAAK,QAAQ;GACjB,CAAC;;;AChIN,MAAM,gBAAgB,oBAAI,IAAI;AAAA,IAC1B,UAAE;AAAA,IACF,UAAE;AAAA,IACF,UAAE;AAAA,IACF,UAAE;AAAA,IACF,UAAE;AAAA,IACF,UAAE;AAAA,IACF,UAAE;AAAA,IACF,UAAE;AAAA,IACF,UAAE;AAAA,IACF,UAAE;AAAA,IACF,UAAE;AAAA,IACF,UAAE;AAAA,IACF,UAAE;AAAA,IACF,UAAE;AAAA,IACF,UAAE;AAAA,IACF,UAAE;AAAA,IACF,UAAE;AAAA,IACF,UAAE;AAAA,EACN,CAAC;AACD,WAAS,cAAc,MAAM,SAAS;AAClC,WAAQ,QAAQ,YAAY,cAAc,IAAI,KAC1C,QAAQ,YAAY,gBAAgB,IAAI,MAAM,GAAG,QACjD,cAAc,IAAI,QAAQ,YAAY,WAAW,IAAI,CAAC;AAAA,EAC9D;AACA,MAAM,cAAc,EAAE,aAAa,oBAAoB,kBAAkB,KAAK;AAuBvE,WAAS,UAAU,MAAM,SAAS;AACrC,UAAM,OAAO,EAAE,GAAG,aAAa,GAAG,QAAQ;AAC1C,QAAI,cAAc,MAAM,IAAI,GAAG;AAC3B,aAAO;AAAA,IACX;AACA,WAAO,oBAAoB,MAAM,IAAI;AAAA,EACzC;AAwBA,WAAS,oBAAoB,YAAY,SAAS;AAC9C,QAAI,OAAO;AAEX,UAAM,YAAY,QAAQ,YAAY,cAAc,UAAU,KAC1D,QAAQ,YAAY,WAAW,UAAU,MAAM,UAAE,YACjD,QAAQ,YAAY,gBAAgB,UAAU,MAAM,GAAG,OACrD,QAAQ,YAAY,mBAAmB,UAAU,IACjD;AACN,UAAM,aAAa,QAAQ,YAAY,cAAc,SAAS;AAC9D,QAAI,YAAY;AACZ,iBAAW,eAAe,YAAY;AAClC,gBAAQ,cAAc,aAAa,OAAO;AAAA,MAC9C;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AACA,WAAS,cAAc,MAAM,SAAS;AAClC,QAAI,QAAQ,YAAY,cAAc,IAAI,GAAG;AACzC,aAAO,iBAAiB,MAAM,OAAO;AAAA,IACzC;AACA,QAAI,QAAQ,YAAY,WAAW,IAAI,GAAG;AACtC,aAAO,kBAAkB,MAAM,OAAO;AAAA,IAC1C;AACA,QAAI,QAAQ,YAAY,cAAc,IAAI,GAAG;AACzC,aAAO,qBAAqB,MAAM,OAAO;AAAA,IAC7C;AACA,QAAI,QAAQ,YAAY,mBAAmB,IAAI,GAAG;AAC9C,aAAO,0BAA0B,MAAM,OAAO;AAAA,IAClD;AAEA,WAAO;AAAA,EACX;AACA,WAAS,iBAAiB,MAAM,SAAS;AACrC,UAAM,KAAK,QAAQ,YAAY,WAAW,IAAI;AAC9C,WAAO,IAAI,EAAE,GAAG,oBAAoB,MAAM,OAAO,CAAC,IAAI,cAAc,MAAM,OAAO,IAAI,KAAK,GAAG,oBAAoB,MAAM,OAAO,CAAC,KAAK,EAAE,GAAG;AAAA,EAC7I;AACA,WAAS,oBAAoB,MAAM,EAAE,YAAY,GAAG;AAChD,QAAI,OAAO;AACX,eAAW,QAAQ,YAAY,YAAY,IAAI,GAAG;AAC9C,cAAQ;AACR,UAAI,CAAC,KAAK,WAAW;AACjB,gBAAQ,KAAK;AAAA,MACjB;AAEI,gBAAQ,KAAK,WAAW;AAAA,UACpB,KAAK,GAAG,KAAK;AACT,oBAAQ,OAAO,KAAK,IAAI;AACxB;AAAA,UACJ;AAAA,UACA,KAAK,GAAG,OAAO;AACX,gBAAI,KAAK,SAAS,SAAS;AACvB,sBAAQ;AAAA,YACZ;AACA,oBAAQ,KAAK;AACb;AAAA,UACJ;AAAA,UACA,KAAK,GAAG,OAAO;AACX,oBAAQ,SAAS,KAAK,IAAI;AAC1B;AAAA,UACJ;AAAA,UACA,SAAS;AACL,oBAAQ,GAAG,KAAK,MAAM,IAAI,KAAK,IAAI;AAAA,UACvC;AAAA,QACJ;AACJ,cAAQ,KAAK,gBAAgB,KAAK,KAAK,CAAC;AAAA,IAC5C;AACA,WAAO;AAAA,EACX;AACA,WAAS,kBAAkB,MAAM,SAAS;AACtC,UAAM,EAAE,YAAY,IAAI;AACxB,UAAM,UAAU,YAAY,mBAAmB,IAAI;AACnD,UAAM,SAAS,YAAY,cAAc,IAAI;AAC7C,UAAM,WAAW,UAAU,YAAY,cAAc,MAAM,KAAK,YAAY,WAAW,MAAM;AAC7F,WAAO,YACH,YAAY,gBAAgB,MAAM,MAAM,GAAG,QAC3C,iBAAiB,UAAU,QAAQ,gBAAgB,IACjD,UACA,WAAW,OAAO;AAAA,EAC5B;AACA,WAAS,qBAAqB,MAAM,EAAE,YAAY,GAAG;AACjD,WAAO,OAAO,YAAY,sBAAsB,IAAI,CAAC;AAAA,EACzD;AACA,WAAS,0BAA0B,MAAM,EAAE,YAAY,GAAG;AACtD,WAAO,aAAa,YAAY,wBAAwB,IAAI,CAAC;AAAA,EACjE;;;ACvIO,WAAS,MAAM,MAAM,SAAS;AACjC,WAAO,OAAO,MAAM,MAAM,OAAO;AAAA,EACrC;AACO,WAAS,cAAc,iBAAiB,MAAM,SAAS;AAC1D,QAAI,OAAO,oBAAoB,UAAU;AACrC,gBAAU;AACV,aAAO;AACP,wBAAkB;AAAA,IACtB;AACA,UAAM,SAAS,OAAO,kBAAkB,iBAAiB,OAAO;AAChE,WAAO,UAAU,MAAM,MAAM,IAAI;AACjC,WAAO,OAAO,YAAY;AAAA,EAC9B;;;AnBpCA,MAAM,OAAN,cAAmB,cAAAE,QAAa;AAAA;AAAA;AAAA;AAAA;AAAA,IAK5B,YAAY,KAAK;AACb,YAAM;AACN,WAAK,MAAM;AACX,WAAK,aAAa,IAAI;AACtB,WAAK,YAAY,IAAI;AAAA,IACzB;AAAA,IACA,QAAQ,KAAK,UAAU,CAAC,GAAG;AACvB,UAAI,CAAC;AAAK,eAAO;AACjB,aAAO,KAAK;AAAA,QACR;AAAA,QACA,CAAC,SAAS;AACN,cAAI,KAAK;AAAS,iBAAK,KAAK,WAAW,MAAM,SAAS;AACtD,cAAI,KAAK;AAAM,iBAAK,KAAK,QAAQ,MAAM,SAAS;AAChD,cAAI,KAAK,aAAa;AAClB,iBAAK,KAAK,QAAQ,MAAM,SAAS;AAAA,QACzC;AAAA,QACA;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,OAAO,KAAK,UAAU,CAAC,GAAG;AACtB,UAAI,CAAC;AAAK,eAAO;AACjB,aAAO,KAAK;AAAA,QACR;AAAA,QACA,CAAC,SAAS;AACN,cAAI,KAAK;AAAS,iBAAK,KAAK,WAAW,MAAM,QAAQ;AACrD,cAAI,KAAK;AAAM,iBAAK,KAAK,QAAQ,MAAM,QAAQ;AAC/C,cAAI,KAAK,aAAa;AAClB,iBAAK,KAAK,QAAQ,MAAM,QAAQ;AAAA,QACxC;AAAA,QACA;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,OAAO,KAAK,IAAI,UAAU,CAAC,GAAG;AAC1B,UAAI;AACA,cAAM,OAAO,QAAQ,WAAW,QAAQ;AAAA,UACpC,IAAI,OAAO,GAAG,EAAE,SAAS;AAAA,QAC7B;AACA,aAAK,QAAQ,KAAK,IAAI,OAAO;AAC7B,eAAO,UAAU,GAAG;AAAA,MACxB,SAAS,GAAG;AACR,eAAO;AAAA,MACX;AAAA,IACJ;AAAA,IACA,QAAQ,KAAK,IAAI,WAAW;AACxB,UAAI,CAAC;AAAK,eAAO;AAEjB,UAAI,IAAI,SAAS;AACb,cAAM,UAAU,IAAI,UAAU,KAAK,OAAO,SAAS;AACnD,WAAG,OAAO;AACV,YAAI,IAAI,OAAO;AACX,qBAAW,QAAQ,IAAI,OAAO;AAC1B,gBAAI,CAAC,KAAK;AACN,iBAAG,IAAI,eAAe,SAAS,MAAM,SAAS,CAAC;AAAA,UACvD;AAAA,QACJ;AAAA,MACJ;AAEA,UAAI,IAAI,YAAY;AAChB,mBAAW,SAAS,IAAI,YAAY;AAChC,cAAI,CAAC,MAAM;AAAM,iBAAK,QAAQ,OAAO,IAAI,SAAS;AAAA,QACtD;AAAA,MACJ;AAEA,UAAI,IAAI,aAAa,SAAS;AAC1B;AAAA,UACI,IAAI;AAAA,YACA;AAAA,YACA,IAAI,UAAU,IAAI,UAAU;AAAA,YAC5B;AAAA,YACA;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAEA,aAAO;AAAA,IACX;AAAA,IACA,WAAW,KAAK,OAAO,KAAK,IAAI,MAAM;AAClC,aAAO,IACF,MAAM,GAAG,EACT,IAAI,CAAC,QAAQ;AACV,cAAM,QAAQ,IAAI,UAAU,EAAE,MAAM,GAAG;AACvC,YAAI,MAAM,CAAC;AAAG,gBAAM,CAAC,IAAI,KAAK,IAAI,WAAW,MAAM,CAAC,GAAG,IAAI;AAC3D,eAAO,MAAM,KAAK,GAAG;AAAA,MACzB,CAAC,EACA,KAAK,IAAI;AAAA,IAClB;AAAA,IACA,aAAa,KAAK,OAAO,KAAK,IAAI,MAAM;AACpC,aAAO,IACF,MAAM,GAAG,EACT,IAAI,CAAC,QAAQ;AACV,cAAM,QAAQ,IAAI,UAAU,EAAE,MAAM,GAAG;AACvC,YAAI,MAAM,CAAC;AAAG,gBAAM,CAAC,IAAI,KAAK,IAAI,UAAU,MAAM,CAAC,GAAG,IAAI;AAC1D,eAAO,MAAM,KAAK,GAAG;AAAA,MACzB,CAAC,EACA,KAAK,IAAI;AAAA,IAClB;AAAA,IACA,OAAO,QAAQ;AAAA,IACf,OAAO,gBAAgB;AAAA,IACvB,OAAO,YAAY;AAAA,EACvB;AAEA,MAAM,YAAN,MAAM,mBAAkB,cAAAA,QAAa;AAAA,IACjC,YAAY,MAAM,SAAS,OAAO,UAAU,CAAC,GAAG;AAC5C,YAAM;AACN,WAAK,SAAS;AACd,WAAK,OAAO;AACZ,WAAK,UAAU;AAAA,IACnB;AAAA,IACA,aAAaC,QAAM,OAAO;AACtB,iBAAW,QAAQ,KAAK,OAAO;AAC3B,YAAI,KAAK,SAASA,QAAM;AACpB,eAAK,QAAQ;AACb,iBAAO;AAAA,QACX;AAAA,MACJ;AAEA,WAAK,MAAM,KAAK;AAAA,QACZ,MAAAA;AAAA,QACA;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,IACA,aAAaA,QAAM;AACf,YAAM,OAAO,KAAK,MAAM,KAAK,CAACC,UAASA,MAAK,SAASD,MAAI,KAAK,CAAC;AAC/D,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,aAAaA,QAAM;AACf,aAAO,CAAC,CAAC,KAAK,MAAM,KAAK,CAAC,SAAS,KAAK,SAASA,MAAI;AAAA,IACzD;AAAA,IACA,gBAAgBA,QAAM;AAClB,YAAM,IAAI,KAAK,MAAM,UAAU,CAAC,SAAS,KAAK,SAASA,MAAI;AAC3D,UAAI,OAAO,MAAM;AAAa,aAAK,MAAM,OAAO,GAAG,CAAC;AAAA,IACxD;AAAA,IACA,IAAI,UAAU;AACV,aAAO,KAAK,KAAK;AAAA,IACrB;AAAA,IACA,IAAI,QAAQ,KAAK;AACb,WAAK,KAAK,UAAU;AAAA,IACxB;AAAA,IACA,IAAI,aAAa;AACb,aAAO,CAAC,KAAK,SAAS,KAAK,KAAK,aAAa;AAAA,IACjD;AAAA,IACA,IAAI,YAAY;AACZ,aAAO,CAAC,KAAK,SACP,UAAU;AAAA,QACN,UAAU;AAAA,QACV,YAAY,KAAK;AAAA,MACrB,CAAC,IACD;AAAA,IACV;AAAA,IACA,IAAI,UAAU,KAAK;AACf,UAAI,CAAC,KAAK;AAAQ,aAAK,KAAK,aAAa,cAAc,GAAG,EAAE;AAAA,IAChE;AAAA,IACA,IAAI,YAAY;AACZ,aAAO,CAAC,KAAK,SACP,UAAU;AAAA,QACN,UAAU;AAAA,QACV,YAAY,CAAC,IAAI;AAAA,MACrB,CAAC,IACD;AAAA,IACV;AAAA,IACA,IAAI,UAAU,KAAK;AACf,UAAI,CAAC,KAAK;AACN,aAAK,WAAW,WAAW;AAAA,UACvB,KAAK,WAAW,WAAW;AAAA,YACvB,CAAC,SAAS,SAAS,KAAK;AAAA,UAC5B;AAAA,UACA;AAAA,UACA,GAAG,cAAc,GAAG,EAAE;AAAA,QAC1B;AAAA,IACR;AAAA,IACA,IAAI,cAAc;AACd,UAAI,KAAK;AAAQ,eAAO;AAExB,UAAI,MAAM;AACV,WAAK,QAAQ,KAAK,MAAM,CAAC,SAAS;AAC9B,YAAI,KAAK,aAAa;AAAS,iBAAO,KAAK;AAAA,MAC/C,CAAC;AAED,aAAO;AAAA,IACX;AAAA,IACA,IAAI,YAAY,KAAK;AACjB,UAAI,CAAC,KAAK;AACN,aAAK,KAAK,aAAa;AAAA,UACnB;AAAA,YACI,UAAU;AAAA,YACV,OAAO;AAAA,YACP,YAAY,KAAK;AAAA,UACrB;AAAA,QACJ;AAAA,IACR;AAAA,IACA,IAAI,WAAW;AACX,aAAO,KAAK,KAAK;AAAA,IACrB;AAAA,IACA,IAAI,aAAa;AACb,aAAO,KAAK,KAAK,aACX,IAAI,WAAU,KAAK,KAAK,UAAU,IAClC;AAAA,IACV;AAAA,IACA,IAAI,QAAQ;AACR,aAAO,KAAK,KAAK;AAAA,IACrB;AAAA,IACA,IAAI,eAAe;AACf,aAAO,KAAK,KAAK;AAAA,IACrB;AAAA,EACJ;AAEA,MAAM,iBAAN,MAAqB;AAAA,IACjB,YAAY,MAAM,MAAM,UAAU,CAAC,GAAG;AAClC,WAAK,OAAO;AACZ,WAAK,QAAQ,KAAK;AAClB,WAAK,OAAO;AACZ,WAAK,UAAU;AAAA,IACnB;AAAA,IACA,SAAS;AACL,YAAM,IAAI,KAAK,MAAM,UAAU,CAAC,SAAS,SAAS,KAAK,IAAI;AAE3D,WAAK,MAAM,OAAO,GAAG,CAAC;AAEtB,aAAO,eAAe,MAAM,WAAW;AAAA,QACnC,KAAK,MAAM;AAAA,MACf,CAAC;AAED,aAAO;AAAA,IACX;AAAA,IACA,IAAI,OAAO;AACP,aAAO,KAAK,KAAK;AAAA,IACrB;AAAA,IAEA,IAAI,KAAK,KAAK;AACV,WAAK,KAAK,OAAO;AAAA,IACrB;AAAA,IACA,IAAI,QAAQ;AACR,aAAO,KAAK,KAAK;AAAA,IACrB;AAAA,IAEA,IAAI,MAAM,KAAK;AACX,WAAK,KAAK,QAAQ;AAAA,IACtB;AAAA,IACA,IAAI,UAAU;AACV,aAAO;AAAA,IACX;AAAA,EACJ;AAEA,MAAM,YAAN,MAAgB;AAAA,IACZ,YAAY,MAAM,SAAS,SAAS,OAAO,UAAU,CAAC,GAAG;AACrD,WAAK,SAAS;AACd,WAAK,OAAO;AACZ,WAAK,UAAU;AACf,WAAK,UAAU;AAAA,IACnB;AAAA,IACA,IAAI,WAAW;AACX,aAAO,KAAK,KAAK;AAAA,IACrB;AAAA,IACA,IAAI,aAAa;AACb,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,QAAQ;AACR,aAAO,KAAK,SAAS,KAAK,KAAK,OAAO,KAAK,KAAK;AAAA,IACpD;AAAA,IACA,IAAI,MAAM,KAAK;AACX,UAAI,KAAK;AAAQ,aAAK,KAAK,OAAO;AAAA;AAC7B,aAAK,KAAK,QAAQ;AAAA,IAC3B;AAAA,EACJ;AAEA,MAAO,eAAQ;;;AoBnRR,MAAM,MAAM;AACZ,MAAM,QAAQ;AACd,MAAME,YAAW;AACjB,MAAM,YAAY;AAClB,MAAM,OAAO;AACb,MAAMC,UAAS;AACf,MAAM,YAAY;AAClB,MAAM,MAAM;AACZ,MAAM,SAAS;AACf,MAAM,QAAQ;AACd,MAAMC,UAAS;AACf,MAAM,aAAa;AACnB,MAAM,YAAY;AAClB,MAAM,aAAa;AACnB,MAAM,MAAM;AACZ,MAAM,MAAM;AACZ,MAAM,QAAQ;AACd,MAAM,YAAY;AAClB,MAAM,QAAQ;AACd,MAAM,oBAAoB;AAC1B,MAAM,qBAAqB;AAC3B,MAAM,kBAAkB;AACxB,MAAM,mBAAmB;AACzB,MAAM,mBAAmB;AACzB,MAAM,oBAAoB;AAC1B,MAAM,UAAU;;;AC3BvB,MAAMC,OAAM;AAOL,WAAS,QAAQC,OAAM;AAC1B,WAAOA,SAAQ,MAAUA,SAAQ;AAAA,EACrC;AAKO,WAAS,WAAWA,OAAM;AAC7B,WACI,QAAQA,KAAI;AAAA,IACXA,SAAQ,MAAUA,SAAQ;AAAA,IAC1BA,SAAQ,MAAUA,SAAQ;AAAA,EAEnC;AAIO,WAAS,kBAAkBA,OAAM;AACpC,WAAOA,SAAQ,MAAUA,SAAQ;AAAA,EACrC;AAIO,WAAS,kBAAkBA,OAAM;AACpC,WAAOA,SAAQ,MAAUA,SAAQ;AAAA,EACrC;AAIO,WAAS,SAASA,OAAM;AAC3B,WAAO,kBAAkBA,KAAI,KAAK,kBAAkBA,KAAI;AAAA,EAC5D;AAIO,WAAS,WAAWA,OAAM;AAC7B,WAAOA,SAAQ;AAAA,EACnB;AAIO,WAAS,YAAYA,OAAM;AAC9B,WAAO,SAASA,KAAI,KAAK,WAAWA,KAAI,KAAKA,UAAS;AAAA,EAC1D;AAIO,WAAS,OAAOA,OAAM;AACzB,WAAO,YAAYA,KAAI,KAAK,QAAQA,KAAI,KAAKA,UAAS;AAAA,EAC1D;AAKO,WAAS,eAAeA,OAAM;AACjC,WACKA,SAAQ,KAAUA,SAAQ,KAC1BA,UAAS,MACTA,SAAQ,MAAUA,SAAQ,MAC1BA,UAAS;AAAA,EAElB;AAMO,WAAS,UAAUA,OAAM;AAC5B,WAAOA,UAAS,MAAUA,UAAS,MAAUA,UAAS;AAAA,EAC1D;AAIO,WAAS,aAAaA,OAAM;AAC/B,WAAO,UAAUA,KAAI,KAAKA,UAAS,MAAUA,UAAS;AAAA,EAC1D;AAGO,WAAS,cAAc,OAAO,QAAQ;AAEzC,QAAI,UAAU,IAAQ;AAClB,aAAO;AAAA,IACX;AAGA,QAAI,UAAU,MAAM,KAAK,WAAWD,MAAK;AACrC,aAAO;AAAA,IACX;AAGA,WAAO;AAAA,EACX;AAGO,WAAS,kBAAkB,OAAO,QAAQ,OAAO;AAIpD,QAAI,UAAU,IAAQ;AAGlB,aACI,YAAY,MAAM,KAClB,WAAW,MACX,cAAc,QAAQ,KAAK;AAAA,IAEnC;AAGA,QAAI,YAAY,KAAK,GAAG;AAEpB,aAAO;AAAA,IACX;AAGA,QAAI,UAAU,IAAQ;AAElB,aAAO,cAAc,OAAO,MAAM;AAAA,IACtC;AAIA,WAAO;AAAA,EACX;AAGO,WAAS,cAAc,OAAO,QAAQ,OAAO;AAKhD,QAAI,UAAU,MAAU,UAAU,IAAQ;AAEtC,UAAI,QAAQ,MAAM,GAAG;AACjB,eAAO;AAAA,MACX;AAKA,aAAO,WAAW,MAAU,QAAQ,KAAK,IAAI,IAAI;AAAA,IACrD;AAGA,QAAI,UAAU,IAAQ;AAElB,aAAO,QAAQ,MAAM,IAAI,IAAI;AAAA,IACjC;AAGA,QAAI,QAAQ,KAAK,GAAG;AAEhB,aAAO;AAAA,IACX;AAIA,WAAO;AAAA,EACX;AAOO,WAAS,MAAMC,OAAM;AAExB,QAAIA,UAAS,OAAQ;AACjB,aAAO;AAAA,IACX;AAGA,QAAIA,UAAS,OAAQ;AACjB,aAAO;AAAA,IACX;AAEA,WAAO;AAAA,EACX;AAIA,MAAM,WAAW,IAAI,MAAM,GAAI;AACxB,MAAM,cAAc;AACpB,MAAM,qBAAqB;AAC3B,MAAM,gBAAgB;AACtB,MAAM,oBAAoB;AAC1B,MAAM,uBAAuB;AAEpC,WAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACtC,aAAS,CAAC,IACN,aAAa,CAAC,KAAK,sBACnB,QAAQ,CAAC,KAAK,iBACd,YAAY,CAAC,KAAK,qBAClB,eAAe,CAAC,KAAK,wBACrB,KAAK;AAAA,EACb;AAEO,WAAS,iBAAiBA,OAAM;AACnC,WAAOA,QAAO,MAAO,SAASA,KAAI,IAAI;AAAA,EAC1C;;;ACrMA,WAAS,YAAY,QAAQ,QAAQ;AACjC,WAAO,SAAS,OAAO,SAAS,OAAO,WAAW,MAAM,IAAI;AAAA,EAChE;AAEO,WAAS,iBAAiB,QAAQ,QAAQC,OAAM;AACnD,QAAIA,UAAS,MAAe,YAAY,QAAQ,SAAS,CAAC,MAAM,IAAa;AACzE,aAAO;AAAA,IACX;AAEA,WAAO;AAAA,EACX;AAEO,WAAS,QAAQ,SAAS,QAAQ,eAAe;AACpD,QAAIA,QAAO,QAAQ,WAAW,MAAM;AAGpC,QAAI,kBAAkBA,KAAI,GAAG;AACzB,MAAAA,QAAOA,QAAO;AAAA,IAClB;AAEA,WAAOA,UAAS;AAAA,EACpB;AAEO,WAAS,OAAO,SAAS,OAAO,KAAK,cAAc;AACtD,QAAI,MAAM,UAAU,aAAa,QAAQ;AACrC,aAAO;AAAA,IACX;AAEA,QAAI,QAAQ,KAAK,MAAM,QAAQ,QAAQ;AACnC,aAAO;AAAA,IACX;AAEA,aAAS,IAAI,OAAO,IAAI,KAAK,KAAK;AAC9B,YAAM,gBAAgB,aAAa,WAAW,IAAI,KAAK;AACvD,UAAI,WAAW,QAAQ,WAAW,CAAC;AAGnC,UAAI,kBAAkB,QAAQ,GAAG;AAC7B,mBAAW,WAAW;AAAA,MAC1B;AAEA,UAAI,aAAa,eAAe;AAC5B,eAAO;AAAA,MACX;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAEO,WAAS,oBAAoB,QAAQ,QAAQ;AAChD,WAAO,UAAU,GAAG,UAAU;AAC1B,UAAI,CAAC,aAAa,OAAO,WAAW,MAAM,CAAC,GAAG;AAC1C;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO,SAAS;AAAA,EACpB;AAEO,WAAS,kBAAkB,QAAQ,QAAQ;AAC9C,WAAO,SAAS,OAAO,QAAQ,UAAU;AACrC,UAAI,CAAC,aAAa,OAAO,WAAW,MAAM,CAAC,GAAG;AAC1C;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAEO,WAAS,qBAAqB,QAAQ,QAAQ;AACjD,WAAO,SAAS,OAAO,QAAQ,UAAU;AACrC,UAAI,CAAC,QAAQ,OAAO,WAAW,MAAM,CAAC,GAAG;AACrC;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAGO,WAAS,eAAe,QAAQ,QAAQ;AAG3C,cAAU;AAGV,QAAI,WAAW,YAAY,QAAQ,SAAS,CAAC,CAAC,GAAG;AAG7C,iBAAW,YAAY,KAAK,IAAI,OAAO,QAAQ,SAAS,CAAC,GAAG,SAAS,WAAW,UAAU;AACtF,YAAI,CAAC,WAAW,YAAY,QAAQ,MAAM,CAAC,GAAG;AAC1C;AAAA,QACJ;AAAA,MACJ;AAGA,YAAMA,QAAO,YAAY,QAAQ,MAAM;AACvC,UAAI,aAAaA,KAAI,GAAG;AACpB,kBAAU,iBAAiB,QAAQ,QAAQA,KAAI;AAAA,MACnD;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAMO,WAAS,YAAY,QAAQ,QAAQ;AAGxC,WAAO,SAAS,OAAO,QAAQ,UAAU;AACrC,YAAMA,QAAO,OAAO,WAAW,MAAM;AAGrC,UAAI,OAAOA,KAAI,GAAG;AAEd;AAAA,MACJ;AAGA,UAAI,cAAcA,OAAM,YAAY,QAAQ,SAAS,CAAC,CAAC,GAAG;AAEtD,iBAAS,eAAe,QAAQ,MAAM,IAAI;AAC1C;AAAA,MACJ;AAIA;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAGO,WAAS,cAAc,QAAQ,QAAQ;AAC1C,QAAIA,QAAO,OAAO,WAAW,MAAM;AAInC,QAAIA,UAAS,MAAUA,UAAS,IAAQ;AACpC,MAAAA,QAAO,OAAO,WAAW,UAAU,CAAC;AAAA,IACxC;AAGA,QAAI,QAAQA,KAAI,GAAG;AACf,eAAS,qBAAqB,QAAQ,SAAS,CAAC;AAChD,MAAAA,QAAO,OAAO,WAAW,MAAM;AAAA,IACnC;AAGA,QAAIA,UAAS,MAAU,QAAQ,OAAO,WAAW,SAAS,CAAC,CAAC,GAAG;AAG3D,gBAAU;AAOV,eAAS,qBAAqB,QAAQ,MAAM;AAAA,IAChD;AAIA,QAAI;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA;AAAA,IAAW,GAAG;AACtC,UAAI,OAAO;AACX,MAAAA,QAAO,OAAO,WAAW,SAAS,CAAC;AAGnC,UAAIA,UAAS,MAAUA,UAAS,IAAQ;AACpC,eAAO;AACP,QAAAA,QAAO,OAAO,WAAW,SAAS,CAAC;AAAA,MACvC;AAGA,UAAI,QAAQA,KAAI,GAAG;AAQf,iBAAS,qBAAqB,QAAQ,SAAS,IAAI,OAAO,CAAC;AAAA,MAC/D;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAKO,WAAS,sBAAsB,QAAQ,QAAQ;AAElD,WAAO,SAAS,OAAO,QAAQ,UAAU;AACrC,YAAMA,QAAO,OAAO,WAAW,MAAM;AAIrC,UAAIA,UAAS,IAAQ;AAEjB;AACA;AAAA,MACJ;AAEA,UAAI,cAAcA,OAAM,YAAY,QAAQ,SAAS,CAAC,CAAC,GAAG;AAKtD,iBAAS,eAAe,QAAQ,MAAM;AAAA,MAC1C;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAIO,WAAS,cAAc,SAAS;AAEnC,QAAI,QAAQ,WAAW,KAAK,CAAC,WAAW,QAAQ,WAAW,CAAC,CAAC,GAAG;AAC5D,aAAO,QAAQ,CAAC;AAAA,IACpB;AAGA,QAAIA,QAAO,SAAS,SAAS,EAAE;AAE/B,QACKA,UAAS;AAAA,IACTA,SAAQ,SAAUA,SAAQ;AAAA,IAC1BA,QAAO,SACV;AAEE,MAAAA,QAAO;AAAA,IACX;AAGA,WAAO,OAAO,cAAcA,KAAI;AAAA,EACpC;;;AC7PA,MAAO,gBAAQ;AAAA,IACX;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;;;AC1BA,MAAM,WAAW,KAAK;AAEf,WAAS,YAAY,SAAS,MAAM,MAAM;AAC7C,QAAI,WAAW,QAAQ,OAAO,SAAS,MAAM;AACzC,aAAO,IAAI,YAAY,KAAK,IAAI,OAAO,MAAM,QAAQ,CAAC;AAAA,IAC1D;AAEA,WAAO;AAAA,EACX;;;ACLA,MAAM,IAAI;AACV,MAAM,IAAI;AACV,MAAM,IAAI;AAEV,WAAS,uBAAuB,MAAM;AAClC,UAAM,SAAS,KAAK;AACpB,UAAM,eAAe,OAAO;AAC5B,UAAM,cAAc,OAAO,SAAS,IAAI,MAAM,OAAO,WAAW,CAAC,CAAC,IAAI;AACtE,UAAM,QAAQ,YAAY,KAAK,OAAO,YAAY;AAClD,UAAM,UAAU,YAAY,KAAK,SAAS,YAAY;AACtD,QAAI,OAAO,KAAK;AAChB,QAAI,SAAS,KAAK;AAElB,aAAS,IAAI,aAAa,IAAI,cAAc,KAAK;AAC7C,YAAMC,QAAO,OAAO,WAAW,CAAC;AAEhC,YAAM,CAAC,IAAI;AACX,cAAQ,CAAC,IAAI;AAEb,UAAIA,UAAS,KAAKA,UAAS,KAAKA,UAAS,GAAG;AACxC,YAAIA,UAAS,KAAK,IAAI,IAAI,gBAAgB,OAAO,WAAW,IAAI,CAAC,MAAM,GAAG;AACtE;AACA,gBAAM,CAAC,IAAI;AACX,kBAAQ,CAAC,IAAI;AAAA,QACjB;AAEA;AACA,iBAAS;AAAA,MACb;AAAA,IACJ;AAEA,UAAM,YAAY,IAAI;AACtB,YAAQ,YAAY,IAAI;AAExB,SAAK,QAAQ;AACb,SAAK,UAAU;AACf,SAAK,WAAW;AAAA,EACpB;AAEO,MAAM,mBAAN,MAAuB;AAAA,IAC1B,cAAc;AACV,WAAK,QAAQ;AACb,WAAK,UAAU;AACf,WAAK,WAAW;AAAA,IACpB;AAAA,IACA,UAAU,QAAQ,cAAc,GAAG,YAAY,GAAG,cAAc,GAAG;AAC/D,WAAK,SAAS;AACd,WAAK,cAAc;AACnB,WAAK,YAAY;AACjB,WAAK,cAAc;AACnB,WAAK,WAAW;AAAA,IACpB;AAAA,IACA,YAAY,QAAQ,UAAU;AAC1B,UAAI,CAAC,KAAK,UAAU;AAChB,+BAAuB,IAAI;AAAA,MAC/B;AAEA,aAAO;AAAA,QACH,QAAQ;AAAA,QACR,QAAQ,KAAK,cAAc;AAAA,QAC3B,MAAM,KAAK,MAAM,MAAM;AAAA,QACvB,QAAQ,KAAK,QAAQ,MAAM;AAAA,MAC/B;AAAA,IACJ;AAAA,IACA,iBAAiB,OAAO,KAAK,UAAU;AACnC,UAAI,CAAC,KAAK,UAAU;AAChB,+BAAuB,IAAI;AAAA,MAC/B;AAEA,aAAO;AAAA,QACH,QAAQ;AAAA,QACR,OAAO;AAAA,UACH,QAAQ,KAAK,cAAc;AAAA,UAC3B,MAAM,KAAK,MAAM,KAAK;AAAA,UACtB,QAAQ,KAAK,QAAQ,KAAK;AAAA,QAC9B;AAAA,QACA,KAAK;AAAA,UACD,QAAQ,KAAK,cAAc;AAAA,UAC3B,MAAM,KAAK,MAAM,GAAG;AAAA,UACpB,QAAQ,KAAK,QAAQ,GAAG;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;;;ACrEA,MAAM,cAAc;AACpB,MAAM,aAAa;AACnB,MAAM,cAAc,oBAAI,IAAI;AAAA,IACxB,CAACC,WAAe,gBAAgB;AAAA,IAChC,CAAC,iBAAiB,gBAAgB;AAAA,IAClC,CAAC,mBAAmB,kBAAkB;AAAA,IACtC,CAAC,kBAAkB,iBAAiB;AAAA,EACxC,CAAC;AAEM,MAAM,cAAN,MAAkB;AAAA,IACrB,YAAY,QAAQC,WAAU;AAC1B,WAAK,UAAU,QAAQA,SAAQ;AAAA,IACnC;AAAA,IACA,QAAQ;AACJ,WAAK,MAAM;AACX,WAAK,aAAa;AAClB,WAAK,YAAY;AACjB,WAAK,aAAa,KAAK;AACvB,WAAK,WAAW,KAAK;AAAA,IACzB;AAAA,IACA,UAAU,SAAS,IAAIA,YAAW,MAAM;AAAA,IAAC,GAAG;AACxC,eAAS,OAAO,UAAU,EAAE;AAE5B,YAAM,eAAe,OAAO;AAC5B,YAAM,gBAAgB,YAAY,KAAK,eAAe,OAAO,SAAS,CAAC;AACvE,YAAM,UAAU,YAAY,KAAK,SAAS,OAAO,SAAS,CAAC;AAC3D,UAAI,aAAa;AACjB,UAAI,mBAAmB;AACvB,UAAI,eAAe;AACnB,UAAI,kBAAkB;AAGtB,WAAK,gBAAgB;AACrB,WAAK,UAAU;AAEf,MAAAA,UAAS,QAAQ,CAAC,MAAM,OAAO,QAAQ;AACnC,gBAAQ,MAAM;AAAA,UACV;AACI,oBAAQ,UAAU,IAAI;AACtB;AAAA,UAEJ,KAAK,kBAAkB;AACnB,gBAAI,cAAc,eAAe;AACjC,2BAAe,QAAQ,WAAW;AAClC,+BAAmB,gBAAgB;AACnC,oBAAQ,UAAU,IAAI;AACtB,oBAAQ,aAAa,IAAI;AACzB,mBAAO,cAAc,YAAY,eAAe;AAC5C,kBAAI,QAAQ,WAAW,MAAM,cAAc;AACvC,wBAAQ,WAAW,IAAI;AAAA,cAC3B;AAAA,YACJ;AACA;AAAA,UACJ;AAAA,UAEA,KAAK;AAAA,UACL,KAAKD;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACD,oBAAQ,UAAU,IAAI;AACtB,+BAAmB,YAAY,IAAI,IAAI;AACvC,2BAAgB,oBAAoB,aAAc;AAClD;AAAA,QACR;AAEA,sBAAc,YAAY,IAAK,QAAQ,aAAc;AACrD,YAAI,oBAAoB,IAAI;AACxB,4BAAkB;AAAA,QACtB;AAAA,MACJ,CAAC;AAGD,oBAAc,UAAU,IAAK,OAAO,aAAc;AAClD,cAAQ,UAAU,IAAI;AACtB,cAAQ,YAAY,IAAI;AACxB,aAAO,iBAAiB,GAAG;AACvB,cAAM,cAAc,eAAe;AACnC,uBAAe,QAAQ,WAAW;AAClC,gBAAQ,WAAW,IAAI;AAAA,MAC3B;AAEA,WAAK,SAAS;AACd,WAAK,kBAAkB,oBAAoB,KAAK,IAAI;AACpD,WAAK,aAAa;AAClB,WAAK,gBAAgB;AACrB,WAAK,UAAU;AAEf,WAAK,MAAM;AACX,WAAK,KAAK;AAAA,IACd;AAAA,IAEA,WAAW,QAAQ;AACf,gBAAU,KAAK;AAEf,UAAI,SAAS,KAAK,YAAY;AAC1B,eAAO,KAAK,cAAc,MAAM,KAAK;AAAA,MACzC;AAEA,aAAO;AAAA,IACX;AAAA,IACA,aAAa,QAAQ;AACjB,gBAAU,KAAK;AAEf,UAAI,SAAS,KAAK,YAAY;AAC1B,eAAO,KAAK,cAAc,SAAS,CAAC,IAAI;AAAA,MAC5C;AAEA,aAAO,KAAK,OAAO;AAAA,IACvB;AAAA,IACA,YAAY,QAAQ,cAAc;AAC9B,gBAAU,KAAK;AAEf,UAAI,SAAS,KAAK,YAAY;AAC1B,eAAO;AAAA,UACH,KAAK;AAAA,UACL,KAAK,cAAc,SAAS,CAAC,IAAI;AAAA,UACjC,KAAK,cAAc,MAAM,IAAI;AAAA,UAC7B;AAAA,QACJ;AAAA,MACJ;AAEA,aAAO;AAAA,IACX;AAAA,IACA,cAAc,YAAY;AACtB,UAAI,eAAe,KAAK,YAAY;AAChC,eAAO,KAAK;AAAA,MAChB;AAEA,UAAI,aAAa,GAAG;AAChB,eAAO,aAAa,KAAK,aACnB,KAAK,cAAc,aAAa,CAAC,IAAI,cACrC,KAAK,cAAc,KAAK,UAAU,IAAI;AAAA,MAChD;AAEA,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,eAAe,OAAO;AAClB,aAAO,KAAK,OAAO,UAAU,OAAO,KAAK,UAAU;AAAA,IACvD;AAAA,IAEA,cAAc,KAAK;AACf,aAAO,KAAK,QAAQ,KAAK,UAAU,IAAI;AAAA,IAC3C;AAAA,IACA,QAAQE,OAAM,QAAQ;AAClB,UAAI,QAAQ;AACR,eACI,KAAK,WAAW,MAAM,MAAM,SAC5B,KAAK,OAAO,WAAW,KAAK,aAAa,MAAM,CAAC,MAAMA;AAAA,MAE9D;AAEA,aACI,KAAK,cAAc,SACnB,KAAK,OAAO,WAAW,KAAK,UAAU,MAAMA;AAAA,IAEpD;AAAA,IAEA,KAAK,YAAY;AACb,UAAI,OAAO,KAAK,aAAa;AAE7B,UAAI,OAAO,KAAK,YAAY;AACxB,aAAK,aAAa;AAClB,aAAK,aAAa,KAAK,cAAc,OAAO,CAAC,IAAI;AACjD,eAAO,KAAK,cAAc,IAAI;AAC9B,aAAK,YAAY,QAAQ;AACzB,aAAK,WAAW,OAAO;AAAA,MAC3B,OAAO;AACH,aAAK,aAAa,KAAK;AACvB,aAAK,KAAK;AAAA,MACd;AAAA,IACJ;AAAA,IACA,OAAO;AACH,UAAI,OAAO,KAAK,aAAa;AAE7B,UAAI,OAAO,KAAK,YAAY;AACxB,aAAK,aAAa;AAClB,aAAK,aAAa,KAAK;AACvB,eAAO,KAAK,cAAc,IAAI;AAC9B,aAAK,YAAY,QAAQ;AACzB,aAAK,WAAW,OAAO;AAAA,MAC3B,OAAO;AACH,aAAK,MAAM;AACX,aAAK,aAAa,KAAK;AACvB,aAAK,YAAY;AACjB,aAAK,aAAa,KAAK,WAAW,KAAK,OAAO;AAAA,MAClD;AAAA,IACJ;AAAA,IACA,SAAS;AACL,aAAO,KAAK,cAAc,cAAc,KAAK,cAAc,SAAS;AAChE,aAAK,KAAK;AAAA,MACd;AAAA,IACJ;AAAA,IACA,kBAAkB,YAAY,aAAa;AACvC,UAAI,SAAS;AACb,UAAI;AACJ,UAAI;AAEJ;AACA,eAAO,SAAS,KAAK,YAAY,UAAU;AACvC,uBAAa,KAAK,QAAQ,MAAM;AAGhC,cAAI,aAAa,YAAY;AACzB,kBAAM;AAAA,UACV;AAEA,mBAAS,SAAS,IAAI,KAAK,cAAc,SAAS,CAAC,IAAI,cAAc,KAAK;AAG1E,kBAAQ,YAAY,KAAK,OAAO,WAAW,MAAM,CAAC,GAAG;AAAA,YACjD,KAAK;AACD,oBAAM;AAAA,YAEV,KAAK;AACD;AACA,oBAAM;AAAA,YAEV;AAEI,kBAAI,KAAK,QAAQ,UAAU,MAAM,QAAQ;AACrC,yBAAS;AAAA,cACb;AAAA,UACR;AAAA,QACJ;AAEA,WAAK,KAAK,SAAS,KAAK,UAAU;AAAA,IACtC;AAAA,IAEA,aAAa,IAAI;AACb,eAAS,IAAI,GAAG,SAAS,KAAK,iBAAiB,IAAI,KAAK,YAAY,KAAK;AACrE,cAAM,QAAQ;AACd,cAAM,OAAO,KAAK,cAAc,CAAC;AACjC,cAAM,MAAM,OAAO;AACnB,cAAM,OAAO,QAAQ;AAErB,iBAAS;AAET,WAAG,MAAM,OAAO,KAAK,CAAC;AAAA,MAC1B;AAAA,IACJ;AAAA,IACA,OAAO;AACH,YAAM,SAAS,IAAI,MAAM,KAAK,UAAU;AAExC,WAAK,aAAa,CAAC,MAAM,OAAO,KAAK,UAAU;AAC3C,eAAO,KAAK,IAAI;AAAA,UACZ,KAAK;AAAA,UACL,MAAM,cAAW,IAAI;AAAA,UACrB,OAAO,KAAK,OAAO,UAAU,OAAO,GAAG;AAAA,UACvC,SAAS,KAAK,QAAQ,KAAK;AAAA,QAC/B;AAAA,MACJ,CAAC;AAED,aAAO;AAAA,IACX;AAAA,EACJ;;;ACvPO,WAAS,SAAS,QAAQ,SAAS;AACtC,aAASC,aAAYC,SAAQ;AACzB,aAAOA,UAAS,eAAe,OAAO,WAAWA,OAAM,IAAI;AAAA,IAC/D;AAGA,aAAS,sBAAsB;AAE3B,eAAS,cAAc,QAAQ,MAAM;AAGrC,UAAI,kBAAkBD,aAAY,MAAM,GAAGA,aAAY,SAAS,CAAC,GAAGA,aAAY,SAAS,CAAC,CAAC,GAAG;AAI1F,eAAY;AACZ,iBAAS,YAAY,QAAQ,MAAM;AACnC;AAAA,MACJ;AAGA,UAAIA,aAAY,MAAM,MAAM,IAAQ;AAEhC,eAAY;AACZ;AACA;AAAA,MACJ;AAGA,aAAYE;AAAA,IAChB;AAGA,aAAS,wBAAwB;AAC7B,YAAM,kBAAkB;AAGxB,eAAS,YAAY,QAAQ,MAAM;AAInC,UAAI,OAAO,QAAQ,iBAAiB,QAAQ,KAAK,KAAKF,aAAY,MAAM,MAAM,IAAQ;AAElF,iBAAS,kBAAkB,QAAQ,SAAS,CAAC;AAK7C,YAAIA,aAAY,MAAM,MAAM,MACxBA,aAAY,MAAM,MAAM,IAAQ;AAChC,iBAAYG;AACZ,mBAAS,kBAAkB;AAC3B;AAAA,QACJ;AAGA,wBAAgB;AAChB;AAAA,MACJ;AAIA,UAAIH,aAAY,MAAM,MAAM,IAAQ;AAChC,eAAYG;AACZ;AACA;AAAA,MACJ;AAGA,aAAY;AAAA,IAChB;AAGA,aAAS,mBAAmB,iBAAiB;AAIzC,UAAI,CAAC,iBAAiB;AAClB,0BAAkBH,aAAY,QAAQ;AAAA,MAC1C;AAGA,aAAYI;AAGZ,aAAO,SAAS,OAAO,QAAQ,UAAU;AACrC,cAAMC,QAAO,OAAO,WAAW,MAAM;AAErC,gBAAQ,iBAAiBA,KAAI,GAAG;AAAA,UAE5B,KAAK;AAED;AACA;AAAA,UAQJ,KAAK;AACD,gBAAI,UAAUA,KAAI,GAAG;AAGjB,wBAAU,iBAAiB,QAAQ,QAAQA,KAAI;AAC/C,qBAAY;AACZ;AAAA,YACJ;AACA;AAAA,UAGJ,KAAK;AAED,gBAAI,WAAW,OAAO,SAAS,GAAG;AAC9B;AAAA,YACJ;AAEA,kBAAM,WAAWL,aAAY,SAAS,CAAC;AAGvC,gBAAI,UAAU,QAAQ,GAAG;AACrB,wBAAU,iBAAiB,QAAQ,SAAS,GAAG,QAAQ;AAAA,YAC3D,WAAW,cAAcK,OAAM,QAAQ,GAAG;AAItC,uBAAS,eAAe,QAAQ,MAAM,IAAI;AAAA,YAC9C;AACA;AAAA,QAIR;AAAA,MACJ;AAAA,IACJ;AAOA,aAAS,kBAAkB;AAEvB,aAAY;AAGZ,eAAS,kBAAkB,QAAQ,MAAM;AAGzC,aAAO,SAAS,OAAO,QAAQ,UAAU;AACrC,cAAMA,QAAO,OAAO,WAAW,MAAM;AAErC,gBAAQ,iBAAiBA,KAAI,GAAG;AAAA,UAE5B,KAAK;AAED;AACA;AAAA,UAQJ,KAAK;AAED,qBAAS,kBAAkB,QAAQ,MAAM;AAKzC,gBAAIL,aAAY,MAAM,MAAM,MAAU,UAAU,OAAO,QAAQ;AAC3D,kBAAI,SAAS,OAAO,QAAQ;AACxB;AAAA,cACJ;AACA;AAAA,YACJ;AAIA,qBAAS,sBAAsB,QAAQ,MAAM;AAC7C,mBAAY;AACZ;AAAA,UAMJ,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAGD,qBAAS,sBAAsB,QAAQ,MAAM;AAC7C,mBAAY;AACZ;AAAA,UAGJ,KAAK;AAGD,gBAAI,cAAcK,OAAML,aAAY,SAAS,CAAC,CAAC,GAAG;AAC9C,uBAAS,eAAe,QAAQ,MAAM,IAAI;AAC1C;AAAA,YACJ;AAIA,qBAAS,sBAAsB,QAAQ,MAAM;AAC7C,mBAAY;AACZ;AAAA,QAIR;AAAA,MACJ;AAAA,IACJ;AAGA,aAAS,OAAO,UAAU,EAAE;AAE5B,UAAM,eAAe,OAAO;AAC5B,QAAI,QAAQ,MAAMA,aAAY,CAAC,CAAC;AAChC,QAAI,SAAS;AACb,QAAI;AAIJ,WAAO,SAAS,cAAc;AAC1B,YAAMK,QAAO,OAAO,WAAW,MAAM;AAErC,cAAQ,iBAAiBA,KAAI,GAAG;AAAA,QAE5B,KAAK;AAED,iBAAY;AACZ,mBAAS,kBAAkB,QAAQ,SAAS,CAAC;AAC7C;AAAA,QAGJ,KAAK;AAED,6BAAmB;AACnB;AAAA,QAGJ,KAAK;AAED,cAAI,OAAOL,aAAY,SAAS,CAAC,CAAC,KAAK,cAAcA,aAAY,SAAS,CAAC,GAAGA,aAAY,SAAS,CAAC,CAAC,GAAG;AAEpG,mBAAY;AAQZ,qBAAS,YAAY,QAAQ,SAAS,CAAC;AAAA,UAG3C,OAAO;AAEH,mBAAY;AACZ;AAAA,UACJ;AAEA;AAAA,QAGJ,KAAK;AAED,6BAAmB;AACnB;AAAA,QAGJ,KAAK;AAED,iBAAY;AACZ;AACA;AAAA,QAGJ,KAAK;AAED,iBAAY;AACZ;AACA;AAAA,QAGJ,KAAK;AAED,cAAI,cAAcK,OAAML,aAAY,SAAS,CAAC,GAAGA,aAAY,SAAS,CAAC,CAAC,GAAG;AAEvE,gCAAoB;AAAA,UACxB,OAAO;AAEH,mBAAY;AACZ;AAAA,UACJ;AACA;AAAA,QAGJ,KAAK;AAED,iBAAY;AACZ;AACA;AAAA,QAGJ,KAAK;AAED,cAAI,cAAcK,OAAML,aAAY,SAAS,CAAC,GAAGA,aAAY,SAAS,CAAC,CAAC,GAAG;AACvE,gCAAoB;AAAA,UACxB,OAAO;AAEH,gBAAIA,aAAY,SAAS,CAAC,MAAM,MAC5BA,aAAY,SAAS,CAAC,MAAM,IAAQ;AACpC,qBAAY;AACZ,uBAAS,SAAS;AAAA,YACtB,OAAO;AAEH,kBAAI,kBAAkBK,OAAML,aAAY,SAAS,CAAC,GAAGA,aAAY,SAAS,CAAC,CAAC,GAAG;AAE3E,sCAAsB;AAAA,cAC1B,OAAO;AAEH,uBAAY;AACZ;AAAA,cACJ;AAAA,YACJ;AAAA,UACJ;AACA;AAAA,QAGJ,KAAK;AAED,cAAI,cAAcK,OAAML,aAAY,SAAS,CAAC,GAAGA,aAAY,SAAS,CAAC,CAAC,GAAG;AAEvE,gCAAoB;AAAA,UACxB,OAAO;AAEH,mBAAY;AACZ;AAAA,UACJ;AAEA;AAAA,QAGJ,KAAK;AAED,cAAIA,aAAY,SAAS,CAAC,MAAM,IAAQ;AAGpC,mBAAY;AACZ,qBAAS,OAAO,QAAQ,MAAM,SAAS,CAAC;AACxC,qBAAS,WAAW,KAAK,OAAO,SAAS,SAAS;AAAA,UACtD,OAAO;AACH,mBAAY;AACZ;AAAA,UACJ;AACA;AAAA,QAGJ,KAAK;AAED,iBAAY;AACZ;AACA;AAAA,QAGJ,KAAK;AAED,iBAAY;AACZ;AACA;AAAA,QAGJ,KAAK;AAED,cAAIA,aAAY,SAAS,CAAC,MAAM,MAC5BA,aAAY,SAAS,CAAC,MAAM,MAC5BA,aAAY,SAAS,CAAC,MAAM,IAAQ;AAEpC,mBAAY;AACZ,qBAAS,SAAS;AAAA,UACtB,OAAO;AAEH,mBAAY;AACZ;AAAA,UACJ;AAEA;AAAA,QAGJ,KAAK;AAED,cAAI,kBAAkBA,aAAY,SAAS,CAAC,GAAGA,aAAY,SAAS,CAAC,GAAGA,aAAY,SAAS,CAAC,CAAC,GAAG;AAE9F,mBAAY;AACZ,qBAAS,YAAY,QAAQ,SAAS,CAAC;AAAA,UAC3C,OAAO;AAEH,mBAAY;AACZ;AAAA,UACJ;AAEA;AAAA,QAGJ,KAAK;AAED,iBAAY;AACZ;AACA;AAAA,QAGJ,KAAK;AAED,cAAI,cAAcK,OAAML,aAAY,SAAS,CAAC,CAAC,GAAG;AAE9C,kCAAsB;AAAA,UAC1B,OAAO;AAEH,mBAAY;AACZ;AAAA,UACJ;AACA;AAAA,QAGJ,KAAK;AAED,iBAAY;AACZ;AACA;AAAA,QAGJ,KAAK;AAED,iBAAY;AACZ;AACA;AAAA,QAGJ,KAAK;AAED,iBAAY;AACZ;AACA;AAAA,QAGJ,KAAK;AAED,8BAAoB;AACpB;AAAA,QAGJ,KAAK;AAED,gCAAsB;AACtB;AAAA,QAQJ;AAEI,iBAAY;AACZ;AAAA,MACR;AAGA,cAAQ,MAAM,OAAO,QAAQ,MAAM;AAAA,IACvC;AAAA,EACJ;;;ACxeA,MAAI,kBAAkB;AAEf,MAAM,OAAN,MAAM,MAAK;AAAA,IACd,OAAO,WAAW,MAAM;AACpB,aAAO;AAAA,QACH,MAAM;AAAA,QACN,MAAM;AAAA,QACN;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA,cAAc;AACV,WAAK,OAAO;AACZ,WAAK,OAAO;AACZ,WAAK,SAAS;AAAA,IAClB;AAAA,IACA,WAAW,MAAM;AACb,aAAO,MAAK,WAAW,IAAI;AAAA,IAC/B;AAAA;AAAA,IAGA,eAAe,MAAM,MAAM;AACvB,UAAI;AAEJ,UAAI,oBAAoB,MAAM;AAC1B,iBAAS;AACT,0BAAkB,gBAAgB;AAClC,eAAO,OAAO;AACd,eAAO,OAAO;AACd,eAAO,SAAS,KAAK;AAAA,MACzB,OAAO;AACH,iBAAS;AAAA,UACL;AAAA,UACA;AAAA,UACA,QAAQ,KAAK;AAAA,QACjB;AAAA,MACJ;AAEA,WAAK,SAAS;AAEd,aAAO;AAAA,IACX;AAAA,IACA,gBAAgB;AACZ,YAAM,EAAE,OAAO,IAAI;AAEnB,WAAK,SAAS,OAAO;AACrB,aAAO,OAAO;AACd,aAAO,OAAO;AACd,aAAO,SAAS;AAChB,wBAAkB;AAAA,IACtB;AAAA,IACA,cAAc,SAAS,SAAS,SAAS,SAAS;AAC9C,UAAI,EAAE,OAAO,IAAI;AAEjB,aAAO,WAAW,MAAM;AACpB,YAAI,OAAO,SAAS,SAAS;AACzB,iBAAO,OAAO;AAAA,QAClB;AAEA,YAAI,OAAO,SAAS,SAAS;AACzB,iBAAO,OAAO;AAAA,QAClB;AAEA,iBAAS,OAAO;AAAA,MACpB;AAAA,IACJ;AAAA,IACA,EAAE,OAAO,QAAQ,IAAI;AACjB,eAAS,SAAS,KAAK,MAAM,WAAW,MAAM,SAAS,OAAO,MAAM;AAChE,cAAM,OAAO;AAAA,MACjB;AAAA,IACJ;AAAA;AAAA,IAGA,IAAI,OAAO;AACP,UAAI,OAAO;AAEX,eAAS,SAAS,KAAK,MAAM,WAAW,MAAM,SAAS,OAAO,MAAM;AAChE;AAAA,MACJ;AAEA,aAAO;AAAA,IACX;AAAA,IACA,IAAI,UAAU;AACV,aAAO,KAAK,SAAS;AAAA,IACzB;AAAA,IACA,IAAI,QAAQ;AACR,aAAO,KAAK,QAAQ,KAAK,KAAK;AAAA,IAClC;AAAA,IACA,IAAI,OAAO;AACP,aAAO,KAAK,QAAQ,KAAK,KAAK;AAAA,IAClC;AAAA;AAAA,IAGA,UAAU,OAAO;AACb,UAAI,SAAS;AACb,WAAK,OAAO;AAEZ,eAAS,QAAQ,OAAO;AACpB,cAAM,OAAO,MAAK,WAAW,IAAI;AAEjC,YAAI,WAAW,MAAM;AACjB,iBAAO,OAAO;AAAA,QAClB,OAAO;AACH,eAAK,OAAO;AAAA,QAChB;AAEA,aAAK,OAAO;AACZ,iBAAS;AAAA,MACb;AAEA,WAAK,OAAO;AACZ,aAAO;AAAA,IACX;AAAA,IACA,UAAU;AACN,aAAO,CAAC,GAAG,IAAI;AAAA,IACnB;AAAA,IACA,SAAS;AACL,aAAO,CAAC,GAAG,IAAI;AAAA,IACnB;AAAA;AAAA,IAGA,QAAQ,IAAI,UAAU,MAAM;AAExB,YAAM,SAAS,KAAK,eAAe,MAAM,KAAK,IAAI;AAElD,aAAO,OAAO,SAAS,MAAM;AACzB,cAAM,OAAO,OAAO;AACpB,eAAO,OAAO,KAAK;AACnB,WAAG,KAAK,SAAS,KAAK,MAAM,MAAM,IAAI;AAAA,MAC1C;AAGA,WAAK,cAAc;AAAA,IACvB;AAAA,IACA,aAAa,IAAI,UAAU,MAAM;AAE7B,YAAM,SAAS,KAAK,eAAe,KAAK,MAAM,IAAI;AAElD,aAAO,OAAO,SAAS,MAAM;AACzB,cAAM,OAAO,OAAO;AACpB,eAAO,OAAO,KAAK;AACnB,WAAG,KAAK,SAAS,KAAK,MAAM,MAAM,IAAI;AAAA,MAC1C;AAGA,WAAK,cAAc;AAAA,IACvB;AAAA,IACA,OAAO,IAAI,cAAc,UAAU,MAAM;AAErC,UAAI,SAAS,KAAK,eAAe,MAAM,KAAK,IAAI;AAChD,UAAI,MAAM;AACV,UAAI;AAEJ,aAAO,OAAO,SAAS,MAAM;AACzB,eAAO,OAAO;AACd,eAAO,OAAO,KAAK;AAEnB,cAAM,GAAG,KAAK,SAAS,KAAK,KAAK,MAAM,MAAM,IAAI;AAAA,MACrD;AAGA,WAAK,cAAc;AAEnB,aAAO;AAAA,IACX;AAAA,IACA,YAAY,IAAI,cAAc,UAAU,MAAM;AAE1C,UAAI,SAAS,KAAK,eAAe,KAAK,MAAM,IAAI;AAChD,UAAI,MAAM;AACV,UAAI;AAEJ,aAAO,OAAO,SAAS,MAAM;AACzB,eAAO,OAAO;AACd,eAAO,OAAO,KAAK;AAEnB,cAAM,GAAG,KAAK,SAAS,KAAK,KAAK,MAAM,MAAM,IAAI;AAAA,MACrD;AAGA,WAAK,cAAc;AAEnB,aAAO;AAAA,IACX;AAAA,IACA,KAAK,IAAI,UAAU,MAAM;AACrB,eAAS,SAAS,KAAK,MAAM,WAAW,MAAM,SAAS,OAAO,MAAM;AAChE,YAAI,GAAG,KAAK,SAAS,OAAO,MAAM,QAAQ,IAAI,GAAG;AAC7C,iBAAO;AAAA,QACX;AAAA,MACJ;AAEA,aAAO;AAAA,IACX;AAAA,IACA,IAAI,IAAI,UAAU,MAAM;AACpB,YAAM,SAAS,IAAI,MAAK;AAExB,eAAS,SAAS,KAAK,MAAM,WAAW,MAAM,SAAS,OAAO,MAAM;AAChE,eAAO,WAAW,GAAG,KAAK,SAAS,OAAO,MAAM,QAAQ,IAAI,CAAC;AAAA,MACjE;AAEA,aAAO;AAAA,IACX;AAAA,IACA,OAAO,IAAI,UAAU,MAAM;AACvB,YAAM,SAAS,IAAI,MAAK;AAExB,eAAS,SAAS,KAAK,MAAM,WAAW,MAAM,SAAS,OAAO,MAAM;AAChE,YAAI,GAAG,KAAK,SAAS,OAAO,MAAM,QAAQ,IAAI,GAAG;AAC7C,iBAAO,WAAW,OAAO,IAAI;AAAA,QACjC;AAAA,MACJ;AAEA,aAAO;AAAA,IACX;AAAA,IAEA,UAAU,OAAO,IAAI,UAAU,MAAM;AACjC,UAAI,UAAU,MAAM;AAChB;AAAA,MACJ;AAGA,YAAM,SAAS,KAAK,eAAe,MAAM,KAAK;AAE9C,aAAO,OAAO,SAAS,MAAM;AACzB,cAAM,OAAO,OAAO;AACpB,eAAO,OAAO,KAAK;AACnB,YAAI,GAAG,KAAK,SAAS,KAAK,MAAM,MAAM,IAAI,GAAG;AACzC;AAAA,QACJ;AAAA,MACJ;AAGA,WAAK,cAAc;AAAA,IACvB;AAAA,IACA,UAAU,OAAO,IAAI,UAAU,MAAM;AACjC,UAAI,UAAU,MAAM;AAChB;AAAA,MACJ;AAGA,YAAM,SAAS,KAAK,eAAe,OAAO,IAAI;AAE9C,aAAO,OAAO,SAAS,MAAM;AACzB,cAAM,OAAO,OAAO;AACpB,eAAO,OAAO,KAAK;AACnB,YAAI,GAAG,KAAK,SAAS,KAAK,MAAM,MAAM,IAAI,GAAG;AACzC;AAAA,QACJ;AAAA,MACJ;AAGA,WAAK,cAAc;AAAA,IACvB;AAAA;AAAA,IAGA,QAAQ;AACJ,WAAK,OAAO;AACZ,WAAK,OAAO;AAAA,IAChB;AAAA,IACA,OAAO;AACH,YAAM,SAAS,IAAI,MAAK;AAExB,eAAS,QAAQ,MAAM;AACnB,eAAO,WAAW,IAAI;AAAA,MAC1B;AAEA,aAAO;AAAA,IACX;AAAA,IACA,QAAQ,MAAM;AAIV,WAAK,cAAc,MAAM,MAAM,KAAK,MAAM,IAAI;AAG9C,UAAI,KAAK,SAAS,MAAM;AAEpB,aAAK,KAAK,OAAO;AAEjB,aAAK,OAAO,KAAK;AAAA,MACrB,OAAO;AAGH,aAAK,OAAO;AAAA,MAChB;AAGA,WAAK,OAAO;AACZ,aAAO;AAAA,IACX;AAAA,IACA,YAAY,MAAM;AACd,aAAO,KAAK,QAAQ,MAAK,WAAW,IAAI,CAAC;AAAA,IAC7C;AAAA,IACA,OAAO,MAAM;AACT,aAAO,KAAK,OAAO,IAAI;AAAA,IAC3B;AAAA,IACA,WAAW,MAAM;AACb,aAAO,KAAK,OAAO,MAAK,WAAW,IAAI,CAAC;AAAA,IAC5C;AAAA,IACA,OAAO,MAAM,SAAS,MAAM;AACxB,UAAI,WAAW,MAAM;AAIjB,aAAK,cAAc,OAAO,MAAM,MAAM,QAAQ,IAAI;AAElD,YAAI,OAAO,SAAS,MAAM;AAEtB,cAAI,KAAK,SAAS,QAAQ;AACtB,kBAAM,IAAI,MAAM,+BAAgC;AAAA,UACpD;AAGA,eAAK,OAAO;AACZ,iBAAO,OAAO;AACd,eAAK,OAAO;AACZ,eAAK,cAAc,MAAM,IAAI;AAAA,QACjC,OAAO;AAEH,iBAAO,KAAK,OAAO;AACnB,eAAK,OAAO,OAAO;AACnB,iBAAO,OAAO;AACd,eAAK,OAAO;AAAA,QAChB;AAAA,MACJ,OAAO;AAIH,aAAK,cAAc,KAAK,MAAM,MAAM,MAAM,IAAI;AAG9C,YAAI,KAAK,SAAS,MAAM;AAEpB,eAAK,KAAK,OAAO;AAEjB,eAAK,OAAO,KAAK;AAAA,QACrB,OAAO;AAGH,eAAK,OAAO;AAAA,QAChB;AAGA,aAAK,OAAO;AAAA,MAChB;AAEA,aAAO;AAAA,IACX;AAAA,IACA,WAAW,MAAM,QAAQ;AACrB,aAAO,KAAK,OAAO,MAAK,WAAW,IAAI,GAAG,MAAM;AAAA,IACpD;AAAA,IACA,OAAO,MAAM;AAIT,WAAK,cAAc,MAAM,KAAK,MAAM,MAAM,KAAK,IAAI;AAEnD,UAAI,KAAK,SAAS,MAAM;AACpB,aAAK,KAAK,OAAO,KAAK;AAAA,MAC1B,OAAO;AACH,YAAI,KAAK,SAAS,MAAM;AACpB,gBAAM,IAAI,MAAM,6BAA8B;AAAA,QAClD;AAEA,aAAK,OAAO,KAAK;AAAA,MACrB;AAEA,UAAI,KAAK,SAAS,MAAM;AACpB,aAAK,KAAK,OAAO,KAAK;AAAA,MAC1B,OAAO;AACH,YAAI,KAAK,SAAS,MAAM;AACpB,gBAAM,IAAI,MAAM,6BAA8B;AAAA,QAClD;AAEA,aAAK,OAAO,KAAK;AAAA,MACrB;AAEA,WAAK,OAAO;AACZ,WAAK,OAAO;AAEZ,aAAO;AAAA,IACX;AAAA,IACA,KAAK,MAAM;AACP,WAAK,OAAO,MAAK,WAAW,IAAI,CAAC;AAAA,IACrC;AAAA,IACA,MAAM;AACF,aAAO,KAAK,SAAS,OAAO,KAAK,OAAO,KAAK,IAAI,IAAI;AAAA,IACzD;AAAA,IACA,QAAQ,MAAM;AACV,WAAK,QAAQ,MAAK,WAAW,IAAI,CAAC;AAAA,IACtC;AAAA,IACA,QAAQ;AACJ,aAAO,KAAK,SAAS,OAAO,KAAK,OAAO,KAAK,IAAI,IAAI;AAAA,IACzD;AAAA,IACA,YAAY,MAAM;AACd,aAAO,KAAK,WAAW,MAAM,KAAK,IAAI;AAAA,IAC1C;AAAA,IACA,WAAW,MAAM;AACb,aAAO,KAAK,WAAW,IAAI;AAAA,IAC/B;AAAA,IACA,WAAW,MAAM,QAAQ;AAErB,UAAI,KAAK,SAAS,MAAM;AACpB,eAAO;AAAA,MACX;AAEA,UAAI,WAAW,UAAa,WAAW,MAAM;AACzC,aAAK,cAAc,OAAO,MAAM,KAAK,MAAM,QAAQ,KAAK,IAAI;AAG5D,YAAI,OAAO,SAAS,MAAM;AAEtB,iBAAO,KAAK,OAAO,KAAK;AACxB,eAAK,KAAK,OAAO,OAAO;AAAA,QAC5B,OAAO;AACH,eAAK,OAAO,KAAK;AAAA,QACrB;AAEA,eAAO,OAAO,KAAK;AACnB,aAAK,KAAK,OAAO;AAAA,MACrB,OAAO;AACH,aAAK,cAAc,KAAK,MAAM,KAAK,MAAM,MAAM,KAAK,IAAI;AAGxD,YAAI,KAAK,SAAS,MAAM;AAIpB,eAAK,KAAK,OAAO,KAAK;AAEtB,eAAK,KAAK,OAAO,KAAK;AAAA,QAC1B,OAAO;AAGH,eAAK,OAAO,KAAK;AAAA,QACrB;AAGA,aAAK,OAAO,KAAK;AAAA,MACrB;AAEA,WAAK,OAAO;AACZ,WAAK,OAAO;AACZ,aAAO;AAAA,IACX;AAAA,IACA,QAAQ,SAAS,eAAe;AAC5B,UAAI,UAAU,eAAe;AACzB,aAAK,WAAW,eAAe,OAAO;AAAA,MAC1C,OAAO;AACH,aAAK,OAAO,eAAe,OAAO;AAAA,MACtC;AAEA,WAAK,OAAO,OAAO;AAAA,IACvB;AAAA,EACJ;;;ACpdO,WAAS,kBAAkBM,QAAM,SAAS;AAG7C,UAAM,QAAQ,OAAO,OAAO,YAAY,SAAS;AACjD,UAAM,aAAa,IAAI,MAAM;AAE7B,WAAO,OAAO,OAAO,OAAO;AAAA,MACxB,MAAAA;AAAA,MACA;AAAA,MACA,IAAI,QAAQ;AACR,gBAAQ,WAAW,SAAS,IAAI,QAAQ,gBAAgB,GAAGA,MAAI,KAAK,OAAO;AAAA,CAAI;AAAA,MACnF;AAAA,IACJ,CAAC;AAAA,EACL;;;ACXA,MAAM,kBAAkB;AACxB,MAAM,oBAAoB;AAC1B,MAAM,kBAAkB;AAExB,WAAS,eAAe,EAAE,QAAQ,MAAM,OAAO,GAAG,YAAY;AAC1D,aAAS,aAAa,OAAO,KAAK;AAC9B,aAAO,MACF,MAAM,OAAO,GAAG,EAChB;AAAA,QAAI,CAACC,OAAM,QACR,OAAO,QAAQ,MAAM,CAAC,EAAE,SAAS,YAAY,IAAI,OAAOA;AAAA,MAC5D,EAAE,KAAK,IAAI;AAAA,IACnB;AAEA,UAAM,QAAQ,OAAO,MAAM,aAAa;AACxC,UAAM,YAAY,KAAK,IAAI,GAAG,OAAO,UAAU,IAAI;AACnD,UAAM,UAAU,KAAK,IAAI,OAAO,YAAY,MAAM,SAAS,CAAC;AAC5D,UAAM,eAAe,KAAK,IAAI,GAAG,OAAO,OAAO,EAAE,MAAM,IAAI;AAC3D,QAAI,UAAU;AAGd,eAAW,gBAAgB,SAAS,MAAM,MAAM,OAAO,CAAC,EAAE,OAAO,GAAG,SAAS,CAAC,EAAE,MAAM,KAAK,KAAK,CAAC,GAAG;AAEpG,QAAI,SAAS,iBAAiB;AAC1B,gBAAU,SAAS,oBAAoB;AACvC,eAAS,oBAAoB;AAAA,IACjC;AAEA,aAAS,IAAI,WAAW,KAAK,SAAS,KAAK;AACvC,UAAI,KAAK,KAAK,IAAI,MAAM,QAAQ;AAC5B,cAAM,CAAC,IAAI,MAAM,CAAC,EAAE,QAAQ,OAAO,eAAe;AAClD,cAAM,CAAC,KACF,UAAU,KAAK,MAAM,CAAC,EAAE,SAAS,UAAU,WAAW,MACvD,MAAM,CAAC,EAAE,OAAO,SAAS,kBAAkB,CAAC,KAC3C,MAAM,CAAC,EAAE,SAAS,UAAU,kBAAkB,IAAI,WAAW;AAAA,MACtE;AAAA,IACJ;AAEA,WAAO;AAAA,MACH,aAAa,WAAW,IAAI;AAAA,MAC5B,IAAI,MAAM,SAAS,eAAe,CAAC,EAAE,KAAK,GAAG,IAAI;AAAA,MACjD,aAAa,MAAM,OAAO;AAAA,IAC9B,EAAE,OAAO,OAAO,EAAE,KAAK,IAAI;AAAA,EAC/B;AAEO,WAASC,aAAY,SAAS,QAAQ,QAAQ,MAAM,QAAQ;AAC/D,UAAM,QAAQ,OAAO,OAAO,kBAAkB,eAAe,OAAO,GAAG;AAAA,MACnE;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,eAAe,YAAY;AACvB,eAAO,eAAe,EAAE,QAAQ,MAAM,OAAO,GAAG,MAAM,UAAU,IAAI,IAAI,UAAU;AAAA,MACtF;AAAA,MACA,IAAI,mBAAmB;AACnB,eACI,gBAAgB,OAAO;AAAA,IACvB,eAAe,EAAE,QAAQ,MAAM,OAAO,GAAG,CAAC;AAAA,MAElD;AAAA,IACJ,CAAC;AAED,WAAO;AAAA,EACX;;;AC9DO,WAAS,aAAa,YAAY;AACrC,UAAM,WAAW,KAAK,WAAW;AACjC,QAAI,QAAQ;AACZ,UAAM,UAAU;AAAA,MACZ;AAAA,IACJ;AAEA,WAAO,CAAC,KAAK,KAAK;AACd,cAAQ,KAAK,WAAW;AAAA,QACpB,KAAK;AACD,eAAK,KAAK;AACV;AAAA,QAEJ,KAAK;AACD,kBAAQ;AACR,eAAK,KAAK;AACV;AAAA,MACR;AAEA,UAAI,QAAQ,WAAW,QAAQ,KAAK,MAAM,OAAO;AAEjD,UAAI,UAAU,QAAW;AACrB;AAAA,MACJ;AAEA,UAAI,OAAO;AACP,YAAI,WAAW,cAAc;AACzB,qBAAW,aAAa,KAAK,MAAM,OAAO,UAAU,OAAO;AAAA,QAC/D;AACA,gBAAQ;AAAA,MACZ;AAEA,eAAS,KAAK,KAAK;AAAA,IACvB;AAEA,QAAI,SAAS,WAAW,cAAc;AAClC,iBAAW,aAAa,KAAK,MAAM,MAAM,UAAU,OAAO;AAAA,IAC9D;AAEA,WAAO;AAAA,EACX;;;AClBA,MAAM,OAAO,MAAM;AAAA,EAAC;AACpB,MAAM,kBAAkB;AACxB,MAAM,aAAa;AACnB,MAAM,YAAY;AAClB,MAAM,mBAAmB;AACzB,MAAM,OAAO;AAEb,WAAS,mBAAmBC,QAAM;AAC9B,WAAO,WAAW;AACd,aAAO,KAAKA,MAAI,EAAE;AAAA,IACtB;AAAA,EACJ;AAEA,WAAS,iBAAiB,MAAM;AAC5B,UAAM,SAAS,uBAAO,OAAO,IAAI;AAEjC,eAAWA,UAAQ,MAAM;AACrB,YAAM,OAAO,KAAKA,MAAI;AACtB,YAAM,KAAK,KAAK,SAAS;AAEzB,UAAI,IAAI;AACJ,eAAOA,MAAI,IAAI;AAAA,MACnB;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAEA,WAAS,cAAc,QAAQ;AAC3B,UAAM,cAAc;AAAA,MAChB,SAAS,uBAAO,OAAO,IAAI;AAAA,MAC3B,OAAO,OAAO,OAAO,uBAAO,OAAO,IAAI,GAAG,OAAO,KAAK;AAAA,MACtD,QAAQ,iBAAiB,OAAO,MAAM;AAAA,MACtC,QAAQ,iBAAiB,OAAO,MAAM;AAAA,MACtC,MAAM,iBAAiB,OAAO,IAAI;AAAA,IACtC;AAEA,eAAWA,UAAQ,OAAO,cAAc;AACpC,cAAQ,OAAO,OAAO,aAAaA,MAAI,GAAG;AAAA,QACtC,KAAK;AACD,sBAAY,QAAQA,MAAI,IAAI,OAAO,aAAaA,MAAI;AACpD;AAAA,QAEJ,KAAK;AACD,sBAAY,QAAQA,MAAI,IAAI,mBAAmB,OAAO,aAAaA,MAAI,CAAC;AACxE;AAAA,MACR;AAAA,IACJ;AAEA,WAAO;AAAA,MACH,QAAQ;AAAA,MACR,GAAG;AAAA,MACH,GAAG,YAAY;AAAA,IACnB;AAAA,EACJ;AAEO,WAAS,aAAa,QAAQ;AACjC,QAAI,SAAS;AACb,QAAI,WAAW;AACf,QAAI,gBAAgB;AACpB,QAAI,eAAe;AACnB,QAAI,oBAAoB;AAExB,UAAM,cAAc,IAAI,iBAAiB;AACzC,UAAM,SAAS,OAAO,OAAO,IAAI,YAAY,GAAG,cAAc,UAAU,CAAC,CAAC,GAAG;AAAA,MACzE,oBAAoB;AAAA,MACpB,kBAAkB;AAAA,MAClB,YAAY;AAAA,MACZ,qBAAqB;AAAA,MAErB;AAAA,MAEA,wBAAwB,MAAM;AAAA,MAC9B,6BAA6BC,OAAM;AAC/B,eAAOA,UAAS,mBAAmB,IAAI;AAAA,MAC3C;AAAA,MACA,wCAAwCA,OAAM;AAC1C,eAAOA,UAAS,oBAAoBA,UAAS,YAAY,IAAI;AAAA,MACjE;AAAA,MACA,uCAAuCA,OAAM;AACzC,eAAOA,UAAS,mBAAmBA,UAAS,YAAY,IAAI;AAAA,MAChE;AAAA,MACA,8BAA8BA,OAAM;AAChC,eAAOA,UAAS,YAAY,IAAI;AAAA,MACpC;AAAA,MAEA,aAAa;AACT,eAAO,IAAI,KAAK;AAAA,MACpB;AAAA,MACA,qBAAqB,MAAM;AACvB,eAAO,IAAI,KAAK,EAAE,WAAW,IAAI;AAAA,MACrC;AAAA,MACA,iBAAiB,MAAM;AACnB,eAAO,QAAQ,KAAK;AAAA,MACxB;AAAA,MACA,gBAAgB,MAAM;AAClB,eAAO,QAAQ,KAAK;AAAA,MACxB;AAAA,MAEA,kBAAkB,UAAU,UAAU;AAClC,cAAM,aAAa,KAAK;AAExB,YAAI;AACA,iBAAO,SAAS,KAAK,IAAI;AAAA,QAC7B,SAAS,GAAG;AACR,cAAI,mBAAmB;AACnB,kBAAM;AAAA,UACV;AAEA,gBAAM,eAAe,SAAS,KAAK,MAAM,UAAU;AAEnD,8BAAoB;AACpB,uBAAa,GAAG,YAAY;AAC5B,8BAAoB;AAEpB,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,MAEA,gBAAgB,QAAQ;AACpB,YAAI;AAEJ,WAAG;AACC,iBAAO,KAAK,WAAW,QAAQ;AAC/B,cAAI,SAAS,YAAY;AACrB,mBAAO;AAAA,UACX;AAAA,QACJ,SAAS,SAAS;AAElB,eAAO;AAAA,MACX;AAAA,MAEA,WAAW,QAAQ;AACf,eAAO,UAAU,KAAK,SAAS,OAAO,SAAS,OAAO,WAAW,MAAM,IAAI;AAAA,MAC/E;AAAA,MACA,UAAU,aAAa,WAAW;AAC9B,eAAO,OAAO,UAAU,aAAa,SAAS;AAAA,MAClD;AAAA,MACA,eAAe,OAAO;AAClB,eAAO,KAAK,OAAO,UAAU,OAAO,KAAK,UAAU;AAAA,MACvD;AAAA,MAEA,QAAQ,QAAQ,UAAU;AACtB,eAAO,QAAQ,QAAQ,QAAQ,QAAQ;AAAA,MAC3C;AAAA,MACA,OAAO,aAAa,WAAW,KAAK;AAChC,eAAO,OAAO,QAAQ,aAAa,WAAW,GAAG;AAAA,MACrD;AAAA,MAEA,QAAQC,YAAW;AACf,cAAM,QAAQ,KAAK;AAEnB,aAAK,IAAIA,UAAS;AAElB,eAAO,KAAK,eAAe,KAAK;AAAA,MACpC;AAAA,MACA,sBAAsB;AAClB,cAAMF,SAAO,OAAO,UAAU,KAAK,YAAY,KAAK,WAAW,CAAC;AAEhE,aAAK,IAAIG,SAAa;AAEtB,eAAOH;AAAA,MACX;AAAA,MACA,cAAc,MAAM;AAChB,cAAMI,UAAS,OAAO,UAAU,KAAK,YAAY,cAAc,QAAQ,KAAK,UAAU,CAAC;AAEvF,aAAK,IAAI,IAAI;AAEb,eAAOA;AAAA,MACX;AAAA,MAEA,IAAIF,YAAW;AACX,YAAI,KAAK,cAAcA,YAAW;AAC9B,gBAAM,YAAY,cAAWA,UAAS,EAAE,MAAM,GAAG,EAAE,EAAE,QAAQ,MAAM,GAAG,EAAE,QAAQ,MAAM,OAAK,EAAE,YAAY,CAAC;AAC1G,cAAI,UAAU,GAAG,YAAY,KAAK,SAAS,IAAI,IAAI,SAAS,MAAM,SAAS;AAC3E,cAAI,SAAS,KAAK;AAGlB,kBAAQA,YAAW;AAAA,YACf,KAAK;AAED,kBAAI,KAAK,cAAcC,aAAiB,KAAK,cAAc,KAAK;AAC5D,yBAAS,KAAK,WAAW;AACzB,0BAAU;AAAA,cACd,OAAO;AACH,0BAAU;AAAA,cACd;AACA;AAAA,YAEJ,KAAK;AACD,kBAAI,KAAK,QAAQ,UAAU,GAAG;AAC1B,qBAAK,KAAK;AACV;AACA,0BAAU;AAAA,cACd;AACA;AAAA,YAEJ,KAAK;AACD,kBAAI,KAAK,cAAcE,SAAa;AAChC,yBAAS,KAAK;AACd,0BAAU;AAAA,cACd;AACA;AAAA,UACR;AAEA,eAAK,MAAM,SAAS,MAAM;AAAA,QAC9B;AAEA,aAAK,KAAK;AAAA,MACd;AAAA,MACA,SAASL,QAAM;AACX,YAAI,KAAK,cAAc,SAAS,KAAK,YAAY,GAAGA,MAAI,MAAM,OAAO;AACjE,eAAK,MAAM,eAAeA,MAAI,eAAe;AAAA,QACjD;AAEA,aAAK,KAAK;AAAA,MACd;AAAA,MACA,SAASC,OAAM;AACX,YAAI,CAAC,KAAK,QAAQA,KAAI,GAAG;AACrB,eAAK,MAAM,UAAU,OAAO,aAAaA,KAAI,CAAC,eAAe;AAAA,QACjE;AAEA,aAAK,KAAK;AAAA,MACd;AAAA,MAEA,YAAY,OAAO,KAAK;AACpB,YAAI,eAAe;AACf,iBAAO,YAAY;AAAA,YACf;AAAA,YACA;AAAA,YACA;AAAA,UACJ;AAAA,QACJ;AAEA,eAAO;AAAA,MACX;AAAA,MACA,oBAAoB,MAAM;AACtB,YAAI,eAAe;AACf,gBAAM,OAAO,KAAK,iBAAiB,IAAI;AACvC,gBAAM,OAAO,KAAK,gBAAgB,IAAI;AACtC,iBAAO,YAAY;AAAA,YACf,SAAS,OAAO,KAAK,IAAI,MAAM,SAAS,YAAY,cAAc,KAAK;AAAA,YACvE,SAAS,OAAO,KAAK,IAAI,IAAI,SAAS,YAAY,cAAc,KAAK;AAAA,YACrE;AAAA,UACJ;AAAA,QACJ;AAEA,eAAO;AAAA,MACX;AAAA,MAEA,MAAM,SAAS,QAAQ;AACnB,cAAM,WAAW,OAAO,WAAW,eAAe,SAAS,OAAO,SAC5D,YAAY,YAAY,MAAM,IAC9B,KAAK,MACD,YAAY,YAAY,oBAAoB,QAAQ,OAAO,SAAS,CAAC,CAAC,IACtE,YAAY,YAAY,KAAK,UAAU;AAEjD,cAAM,IAAIK;AAAA,UACN,WAAW;AAAA,UACX;AAAA,UACA,SAAS;AAAA,UACT,SAAS;AAAA,UACT,SAAS;AAAA,QACb;AAAA,MACJ;AAAA,IACJ,CAAC;AAED,UAAMC,UAAQ,SAAS,SAAS,SAAS;AACrC,eAAS;AACT,gBAAU,WAAW,CAAC;AAEtB,aAAO,UAAU,QAAQ,QAAQ;AACjC,kBAAY;AAAA,QACR;AAAA,QACA,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,QAAQ;AAAA,MACZ;AAEA,iBAAW,QAAQ,YAAY;AAC/B,sBAAgB,QAAQ,QAAQ,SAAS;AACzC,qBAAe,OAAO,QAAQ,iBAAiB,aAAa,QAAQ,eAAe;AACnF,0BAAoB;AAEpB,aAAO,qBAAqB,wBAAwB,UAAU,QAAQ,QAAQ,kBAAkB,IAAI;AACpG,aAAO,mBAAmB,sBAAsB,UAAU,QAAQ,QAAQ,gBAAgB,IAAI;AAC9F,aAAO,aAAa,gBAAgB,UAAU,QAAQ,QAAQ,UAAU,IAAI;AAC5E,aAAO,sBAAsB,yBAAyB,UAAU,QAAQ,QAAQ,mBAAmB,IAAI;AAEvG,YAAM,EAAE,UAAU,WAAW,UAAU,IAAI;AAE3C,UAAI,WAAW,OAAO,YAAY,OAAO;AACrC,cAAM,IAAI,MAAM,sBAAsB,UAAU,GAAG;AAAA,MACvD;AAEA,UAAI,OAAO,cAAc,YAAY;AACjC,eAAO,aAAa,CAAC,MAAM,OAAO,QAAQ;AACtC,cAAI,SAAS,SAAS;AAClB,kBAAM,MAAM,OAAO,YAAY,OAAO,GAAG;AACzC,kBAAM,QAAQ,OAAO,QAAQ,MAAM,GAAG,KAAK,IAAI,IACzC,OAAO,MAAM,QAAQ,GAAG,MAAM,CAAC,IAC/B,OAAO,MAAM,QAAQ,GAAG,GAAG;AAEjC,sBAAU,OAAO,GAAG;AAAA,UACxB;AAAA,QACJ,CAAC;AAAA,MACL;AAEA,YAAM,MAAM,OAAO,QAAQ,OAAO,EAAE,KAAK,QAAQ,OAAO;AAExD,UAAI,CAAC,OAAO,KAAK;AACb,eAAO,MAAM;AAAA,MACjB;AAEA,aAAO;AAAA,IACX;AAEA,WAAO,OAAO,OAAOA,SAAO;AAAA,MACxB,aAAAD;AAAA,MACA,QAAQ,OAAO;AAAA,IACnB,CAAC;AAAA,EACL;;;ACzVA,oCAAmC;AAEnC,MAAM,aAAa,oBAAI,IAAI,CAAC,UAAU,YAAY,aAAa,CAAC;AAEzD,WAAS,kBAAkB,UAAU;AACxC,UAAM,MAAM,IAAI,+CAAmB;AACnC,UAAM,YAAY;AAAA,MACd,MAAM;AAAA,MACN,QAAQ;AAAA,IACZ;AACA,UAAM,WAAW;AAAA,MACb,MAAM;AAAA;AAAA,MACN,QAAQ;AAAA,IACZ;AACA,UAAM,qBAAqB;AAAA,MACvB,MAAM;AAAA,MACN,QAAQ;AAAA,IACZ;AACA,UAAM,mBAAmB;AAAA,MACrB,WAAW;AAAA,IACf;AACA,QAAI,OAAO;AACX,QAAI,SAAS;AACb,QAAI,sBAAsB;AAE1B,UAAM,mBAAmB,SAAS;AAClC,aAAS,OAAO,SAAS,MAAM;AAC3B,UAAI,KAAK,OAAO,KAAK,IAAI,SAAS,WAAW,IAAI,KAAK,IAAI,GAAG;AACzD,cAAM,WAAW,KAAK,IAAI,MAAM;AAChC,cAAM,aAAa,KAAK,IAAI,MAAM,SAAS;AAE3C,YAAI,SAAS,SAAS,YAClB,SAAS,WAAW,YAAY;AAChC,mBAAS,OAAO;AAChB,mBAAS,SAAS;AAElB,oBAAU,OAAO;AACjB,oBAAU,SAAS;AAEnB,cAAI,qBAAqB;AACrB,kCAAsB;AACtB,gBAAI,UAAU,SAAS,mBAAmB,QACtC,UAAU,WAAW,mBAAmB,QAAQ;AAChD,kBAAI,WAAW,gBAAgB;AAAA,YACnC;AAAA,UACJ;AAEA,gCAAsB;AACtB,cAAI,WAAW;AAAA,YACX,QAAQ,KAAK,IAAI;AAAA,YACjB;AAAA,YACA;AAAA,UACJ,CAAC;AAAA,QACL;AAAA,MACJ;AAEA,uBAAiB,KAAK,MAAM,IAAI;AAEhC,UAAI,uBAAuB,WAAW,IAAI,KAAK,IAAI,GAAG;AAClD,2BAAmB,OAAO;AAC1B,2BAAmB,SAAS;AAAA,MAChC;AAAA,IACJ;AAEA,UAAM,mBAAmB,SAAS;AAClC,aAAS,OAAO,SAAS,OAAO,MAAM,MAAM;AACxC,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,YAAI,MAAM,WAAW,CAAC,MAAM,IAAI;AAC5B;AACA,mBAAS;AAAA,QACb,OAAO;AACH;AAAA,QACJ;AAAA,MACJ;AAEA,uBAAiB,OAAO,MAAM,IAAI;AAAA,IACtC;AAEA,UAAM,qBAAqB,SAAS;AACpC,aAAS,SAAS,WAAW;AACzB,UAAI,qBAAqB;AACrB,YAAI,WAAW,gBAAgB;AAAA,MACnC;AAEA,aAAO;AAAA,QACH,KAAK,mBAAmB;AAAA,QACxB;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;;;AC3FA;AAAA;AAAA;AAAA;AAAA;AAmBA,MAAM,WAAW;AACjB,MAAM,cAAc;AAEpB,MAAM,OAAO,CAAC,MAAM,UAAU;AAC1B,QAAI,SAAS,OAAO;AAChB,aAAO;AAAA,IACX;AAEA,QAAI,OAAO,SAAS,UAAU;AAC1B,YAAM,WAAW,KAAK,WAAW,CAAC;AAClC,aAAO,WAAW,MAAO,QAAS,YAAY;AAAA,IAClD;AAEA,WAAO;AAAA,EACX;AAQA,MAAM,YAAY;AAAA,IACd,CAAC,OAAO,KAAK;AAAA,IACb,CAAC,OAAOE,SAAa;AAAA,IACrB,CAAC,OAAO,GAAG;AAAA,IACX,CAAC,OAAO,MAAM;AAAA,IACd,CAAC,OAAO,GAAG;AAAA,IACX,CAAC,OAAOC,OAAW;AAAA,IACnB,CAAC,OAAO,UAAU;AAAA,IAClB,CAAC,OAAO,SAAS;AAAA,IACjB,CAAC,OAAO,GAAG;AAAA,IACX,CAAC,OAAO,eAAe;AAAA,IAEvB,CAAC,WAAW,KAAK;AAAA,IACjB,CAAC,WAAWD,SAAa;AAAA,IACzB,CAAC,WAAW,GAAG;AAAA,IACf,CAAC,WAAW,MAAM;AAAA,IAClB,CAAC,WAAW,GAAG;AAAA,IACf,CAAC,WAAWC,OAAW;AAAA,IACvB,CAAC,WAAW,UAAU;AAAA,IACtB,CAAC,WAAW,SAAS;AAAA,IACrB,CAAC,WAAW,GAAG;AAAA,IAEf,CAAC,MAAM,KAAK;AAAA,IACZ,CAAC,MAAMD,SAAa;AAAA,IACpB,CAAC,MAAM,GAAG;AAAA,IACV,CAAC,MAAM,MAAM;AAAA,IACb,CAAC,MAAM,GAAG;AAAA,IACV,CAAC,MAAMC,OAAW;AAAA,IAClB,CAAC,MAAM,UAAU;AAAA,IACjB,CAAC,MAAM,SAAS;AAAA,IAChB,CAAC,MAAM,GAAG;AAAA,IAEV,CAAC,WAAW,KAAK;AAAA,IACjB,CAAC,WAAWD,SAAa;AAAA,IACzB,CAAC,WAAW,GAAG;AAAA,IACf,CAAC,WAAW,MAAM;AAAA,IAClB,CAAC,WAAW,GAAG;AAAA,IACf,CAAC,WAAWC,OAAW;AAAA,IACvB,CAAC,WAAW,UAAU;AAAA,IACtB,CAAC,WAAW,SAAS;AAAA,IACrB,CAAC,WAAW,GAAG;AAAA,IAEf,CAAC,KAAK,KAAK;AAAA,IACX,CAAC,KAAKD,SAAa;AAAA,IACnB,CAAC,KAAK,GAAG;AAAA,IACT,CAAC,KAAK,MAAM;AAAA,IACZ,CAAC,KAAK,GAAG;AAAA,IACT,CAAC,KAAKC,OAAW;AAAA,IACjB,CAAC,KAAK,UAAU;AAAA,IAChB,CAAC,KAAK,SAAS;AAAA,IACf,CAAC,KAAK,GAAG;AAAA;AAAA,IAET,CAAC,KAAK,KAAK;AAAA,IACX,CAAC,KAAKD,SAAa;AAAA,IACnB,CAAC,KAAK,GAAG;AAAA,IACT,CAAC,KAAK,MAAM;AAAA,IACZ,CAAC,KAAK,GAAG;AAAA,IACT,CAAC,KAAKC,OAAW;AAAA,IACjB,CAAC,KAAK,UAAU;AAAA,IAChB,CAAC,KAAK,SAAS;AAAA,IACf,CAAC,KAAK,GAAG;AAAA;AAAA,IAET,CAACA,SAAa,KAAK;AAAA,IACnB,CAACA,SAAaD,SAAa;AAAA,IAC3B,CAACC,SAAa,GAAG;AAAA,IACjB,CAACA,SAAa,MAAM;AAAA,IACpB,CAACA,SAAaA,OAAW;AAAA,IACzB,CAACA,SAAa,UAAU;AAAA,IACxB,CAACA,SAAa,SAAS;AAAA,IACvB,CAACA,SAAa,GAAG;AAAA,IACjB,CAACA,SAAa,GAAG;AAAA;AAAA,IAEjB,CAAC,KAAK,KAAK;AAAA,IACX,CAAC,KAAKD,SAAa;AAAA,IACnB,CAAC,KAAK,GAAG;AAAA,IACT,CAAC,KAAK,MAAM;AAAA,IACZ,CAAC,KAAK,GAAG;AAAA,IACT,CAAC,KAAK,GAAG;AAAA;AAAA,IAET,CAAC,KAAKC,OAAW;AAAA,IACjB,CAAC,KAAK,UAAU;AAAA,IAChB,CAAC,KAAK,SAAS;AAAA,IAEf,CAAC,KAAKA,OAAW;AAAA,IACjB,CAAC,KAAK,UAAU;AAAA,IAChB,CAAC,KAAK,SAAS;AAAA,IAEf,CAAC,KAAK,GAAG;AAAA,EACb;AAEA,MAAM,YAAY,UAAU,OAAO;AAAA,IAC/B,CAAC,OAAO,IAAI;AAAA,IAEZ,CAAC,WAAW,IAAI;AAAA,IAEhB,CAAC,MAAM,IAAI;AAAA,IAEX,CAAC,WAAW,eAAe;AAAA,IAC3B,CAAC,WAAWC,OAAW;AAAA,IACvB,CAAC,WAAW,KAAK;AAAA,IAEjB,CAAC,YAAY,UAAU;AAAA,IACvB,CAAC,YAAY,SAAS;AAAA,IACtB,CAAC,YAAYF,SAAa;AAAA,IAC1B,CAAC,YAAY,GAAG;AAAA,IAEhB,CAAC,kBAAkB,KAAK;AAAA,IACxB,CAAC,kBAAkBA,SAAa;AAAA,IAChC,CAAC,kBAAkB,UAAU;AAAA,IAC7B,CAAC,kBAAkB,SAAS;AAAA,IAC5B,CAAC,kBAAkB,IAAI;AAAA,IACvB,CAAC,kBAAkB,GAAG;AAAA,EAC1B,CAAC;AAED,WAAS,UAAU,OAAO;AACtB,UAAM,uBAAuB,IAAI;AAAA,MAC7B,MAAM,IAAI,CAAC,CAAC,MAAM,IAAI,MAAO,KAAK,IAAI,KAAK,KAAK,KAAK,IAAI,CAAE;AAAA,IAC/D;AAEA,WAAO,SAAS,UAAU,MAAM,OAAO;AACnC,YAAM,WAAW,KAAK,MAAM,KAAK;AACjC,YAAM,eAAe,MAAM,WAAW,CAAC;AACvC,YAAM,SACD,iBAAiB,eACd,SAAS,SACT,SAASA,aACT,SAAS,OACZ,iBAAiB,WACZ,qBAAqB,IAAI,YAAY,KAAK,gBAAgB,CAAC,IAC3D,qBAAqB,IAAI,YAAY,KAAK,QAAQ;AAE5D,UAAI,QAAQ;AACR,aAAK,KAAK,KAAK,YAAY,IAAI;AAAA,MACnC;AAEA,aAAO;AAAA,IACX;AAAA,EACJ;AAEO,MAAM,OAAO,UAAU,SAAS;AAChC,MAAM,OAAO,UAAU,SAAS;;;ACjLvC,MAAM,iBAAiB;AAEvB,WAAS,gBAAgB,MAAM,WAAW;AACtC,QAAI,OAAO,cAAc,YAAY;AACjC,UAAI,OAAO;AAEX,WAAK,SAAS,QAAQ,CAAAG,UAAQ;AAC1B,YAAI,SAAS,MAAM;AACf,oBAAU,KAAK,MAAM,IAAI;AAAA,QAC7B;AAEA,aAAK,KAAKA,KAAI;AACd,eAAOA;AAAA,MACX,CAAC;AAED;AAAA,IACJ;AAEA,SAAK,SAAS,QAAQ,KAAK,MAAM,IAAI;AAAA,EACzC;AAEA,WAAS,aAAa,OAAO;AACzB,aAAS,OAAO,CAAC,MAAM,OAAO,QAAQ;AAClC,WAAK,MAAM,MAAM,MAAM,MAAM,OAAO,GAAG,CAAC;AAAA,IAC5C,CAAC;AAAA,EACL;AAEO,WAAS,gBAAgB,QAAQ;AACpC,UAAMC,SAAQ,oBAAI,IAAI;AAEtB,aAASC,UAAQ,OAAO,MAAM;AAC1B,YAAM,OAAO,OAAO,KAAKA,MAAI;AAC7B,YAAM,KAAK,KAAK,YAAY;AAE5B,UAAI,OAAO,OAAO,YAAY;AAC1B,QAAAD,OAAM,IAAIC,QAAM,KAAK,YAAY,IAAI;AAAA,MACzC;AAAA,IACJ;AAEA,WAAO,SAAS,MAAM,SAAS;AAC3B,UAAI,SAAS;AACb,UAAI,WAAW;AACf,UAAI,WAAW;AAAA,QACX,KAAKF,OAAM;AACP,cAAIC,OAAM,IAAID,MAAK,IAAI,GAAG;AACtB,YAAAC,OAAM,IAAID,MAAK,IAAI,EAAE,KAAK,WAAWA,KAAI;AAAA,UAC7C,OAAO;AACH,kBAAM,IAAI,MAAM,wBAAwBA,MAAK,IAAI;AAAA,UACrD;AAAA,QACJ;AAAA,QACA,aAAyB;AAAA,QACzB,MAAM,MAAM,OAAO;AACf,qBAAW,KAAK,YAAY,UAAU,MAAM,KAAK;AAEjD,eAAK,KAAK,OAAO,MAAM,KAAK;AAE5B,cAAI,SAAS,SAAS,MAAM,WAAW,CAAC,MAAM,gBAAgB;AAC1D,iBAAK,KAAK,MAAM,YAAY,IAAI;AAAA,UACpC;AAAA,QACJ;AAAA,QACA,KAAK,OAAO;AACR,oBAAU;AAAA,QACd;AAAA,QACA,SAAS;AACL,iBAAO;AAAA,QACX;AAAA,MACJ;AAEA,UAAI,SAAS;AACT,YAAI,OAAO,QAAQ,cAAc,YAAY;AACzC,qBAAW,QAAQ,UAAU,QAAQ;AAAA,QACzC;AAEA,YAAI,QAAQ,WAAW;AACnB,qBAAW,kBAAkB,QAAQ;AAAA,QACzC;AAEA,YAAI,QAAQ,QAAQ,sBAAa;AAC7B,mBAAS,cAAc,qBAAY,QAAQ,IAAI;AAAA,QACnD;AAAA,MACJ;AAEA,YAAM,YAAY;AAAA,QACd,MAAM,CAACA,UAAS,SAAS,KAAKA,KAAI;AAAA,QAClC,UAAU;AAAA,QACV,OAAO,CAAC,MAAM,UAAU,SAAS,MAAM,MAAM,KAAK;AAAA,QAClD,UAAU;AAAA,MACd;AAEA,eAAS,KAAK,IAAI;AAElB,aAAO,SAAS,OAAO;AAAA,IAC3B;AAAA,EACJ;;;AC/FO,WAAS,gBAAgBG,OAAM;AAClC,WAAO;AAAA,MACH,gBAAgB,KAAK;AACjB,QAAAA,MAAK,KAAK;AAAA,UACN,MAAM,MAAM;AACR,gBAAI,KAAK,YAAY,KAAK,oBAAoB,SAAS,OAAO;AAC1D,mBAAK,WAAW,IAAI,KAAK,EAAE,UAAU,KAAK,QAAQ;AAAA,YACtD;AAAA,UACJ;AAAA,QACJ,CAAC;AAED,eAAO;AAAA,MACX;AAAA,MACA,cAAc,KAAK;AACf,QAAAA,MAAK,KAAK;AAAA,UACN,MAAM,MAAM;AACR,gBAAI,KAAK,YAAY,KAAK,oBAAoB,MAAM;AAChD,mBAAK,WAAW,KAAK,SAAS,QAAQ;AAAA,YAC1C;AAAA,UACJ;AAAA,QACJ,CAAC;AAED,eAAO;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;;;AC3BA,MAAM,EAAE,gBAAAC,gBAAe,IAAI,OAAO;AAClC,MAAM,OAAO,WAAW;AAAA,EAAC;AAEzB,WAAS,eAAe,OAAO;AAC3B,WAAO,OAAO,UAAU,aAAa,QAAQ;AAAA,EACjD;AAEA,WAAS,cAAc,IAAI,MAAM;AAC7B,WAAO,SAAS,MAAM,MAAM,MAAM;AAC9B,UAAI,KAAK,SAAS,MAAM;AACpB,WAAG,KAAK,MAAM,MAAM,MAAM,IAAI;AAAA,MAClC;AAAA,IACJ;AAAA,EACJ;AAEA,WAAS,wBAAwBC,QAAM,UAAU;AAC7C,UAAMC,cAAY,SAAS;AAC3B,UAAM,UAAU,CAAC;AAEjB,eAAW,OAAOA,aAAW;AACzB,UAAIF,gBAAe,KAAKE,aAAW,GAAG,MAAM,OAAO;AAC/C;AAAA,MACJ;AAEA,UAAI,aAAaA,YAAU,GAAG;AAC9B,YAAM,SAAS;AAAA,QACX,MAAM;AAAA,QACN,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAEA,UAAI,CAAC,MAAM,QAAQ,UAAU,GAAG;AAC5B,qBAAa,CAAC,UAAU;AAAA,MAC5B;AAEA,iBAAW,aAAa,YAAY;AAChC,YAAI,cAAc,MAAM;AACpB,iBAAO,WAAW;AAAA,QACtB,WAAW,OAAO,cAAc,UAAU;AACtC,iBAAO,OAAO;AAAA,QAClB,WAAW,MAAM,QAAQ,SAAS,GAAG;AACjC,iBAAO,OAAO;AAAA,QAClB;AAAA,MACJ;AAEA,UAAI,OAAO,MAAM;AACb,gBAAQ,KAAK,MAAM;AAAA,MACvB;AAAA,IACJ;AAEA,QAAI,QAAQ,QAAQ;AAChB,aAAO;AAAA,QACH,SAAS,SAAS;AAAA,QAClB,QAAQ;AAAA,MACZ;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAEA,WAAS,mBAAmB,QAAQ;AAChC,UAAMC,SAAQ,CAAC;AAEf,eAAWF,UAAQ,OAAO,MAAM;AAC5B,UAAID,gBAAe,KAAK,OAAO,MAAMC,MAAI,GAAG;AACxC,cAAM,WAAW,OAAO,KAAKA,MAAI;AAEjC,YAAI,CAAC,SAAS,WAAW;AACrB,gBAAM,IAAI,MAAM,kCAAkCA,SAAO,wBAAwB;AAAA,QACrF;AAEA,QAAAE,OAAMF,MAAI,IAAI,wBAAwBA,QAAM,QAAQ;AAAA,MACxD;AAAA,IACJ;AAEA,WAAOE;AAAA,EACX;AAEA,WAAS,mBAAmB,QAAQ,SAAS;AACzC,UAAM,SAAS,OAAO,OAAO,MAAM;AACnC,UAAM,cAAc,OAAO;AAC3B,UAAM,aAAa,OAAO,gBAAgB;AAE1C,QAAI,SAAS;AACT,aAAO,QAAQ;AAAA,IACnB;AAEA,WAAO,SAAS,MAAM,SAASC,OAAM,aAAa;AAC9C,UAAI;AAEJ,UAAI,YAAY;AACZ,2BAAmB,QAAQ,WAAW;AACtC,gBAAQ,WAAW,IAAI;AAAA,MAC3B;AAEA,iBAAW,SAAS,QAAQ;AACxB,cAAM,MAAM,KAAK,MAAM,IAAI;AAE3B,YAAI,CAAC,MAAM,YAAY,KAAK;AACxB,cAAI,MAAM,SAAS,QAAQ;AACvB,kBAAM,YAAY,UACZ,IAAI,YAAY,aAAa,KAAK,IAClC,IAAI,OAAO,aAAa,KAAK;AAEnC,gBAAI,WAAW;AACX,qBAAO;AAAA,YACX;AAAA,UACJ,WAAWA,MAAK,GAAG,GAAG;AAClB,mBAAO;AAAA,UACX;AAAA,QACJ;AAAA,MACJ;AAEA,UAAI,YAAY;AACZ,gBAAQ,WAAW,IAAI;AAAA,MAC3B;AAAA,IACJ;AAAA,EACJ;AAEA,WAAS,sBAAsB;AAAA,IAC3B;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ,GAAG;AACC,WAAO;AAAA,MACH,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,MAAM;AAAA,QACF;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,aAAa;AAAA,QACT;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAEO,WAAS,aAAa,QAAQ;AACjC,UAAMD,SAAQ,mBAAmB,MAAM;AACvC,UAAM,mBAAmB,CAAC;AAC1B,UAAM,mBAAmB,CAAC;AAC1B,UAAM,YAAY,OAAO,YAAY;AACrC,UAAM,WAAW,OAAO,WAAW;AAEnC,eAAWF,UAAQE,QAAO;AACtB,UAAIH,gBAAe,KAAKG,QAAOF,MAAI,KAAKE,OAAMF,MAAI,MAAM,MAAM;AAC1D,yBAAiBA,MAAI,IAAI,mBAAmBE,OAAMF,MAAI,GAAG,KAAK;AAC9D,yBAAiBA,MAAI,IAAI,mBAAmBE,OAAMF,MAAI,GAAG,IAAI;AAAA,MACjE;AAAA,IACJ;AAEA,UAAM,gCAAgC,sBAAsB,gBAAgB;AAC5E,UAAM,gCAAgC,sBAAsB,gBAAgB;AAE5E,UAAMG,QAAO,SAAS,MAAM,SAAS;AACjC,eAAS,SAAS,MAAM,MAAM,MAAM;AAChC,cAAM,WAAW,MAAM,KAAK,SAAS,MAAM,MAAM,IAAI;AAErD,YAAI,aAAa,WAAW;AACxB,iBAAO;AAAA,QACX;AAEA,YAAI,aAAa,UAAU;AACvB,iBAAO;AAAA,QACX;AAEA,YAAI,UAAU,eAAe,KAAK,IAAI,GAAG;AACrC,cAAI,UAAU,KAAK,IAAI,EAAE,MAAM,SAAS,UAAU,WAAW,GAAG;AAC5D,mBAAO;AAAA,UACX;AAAA,QACJ;AAEA,YAAI,MAAM,KAAK,SAAS,MAAM,MAAM,IAAI,MAAM,WAAW;AACrD,iBAAO;AAAA,QACX;AAEA,eAAO;AAAA,MACX;AAEA,UAAI,QAAQ;AACZ,UAAI,QAAQ;AACZ,UAAI,YAAY;AAChB,UAAI,cAAc,CAAC,KAAK,MAAM,MAAM,SAAS,OAAO,SAAS,MAAM,MAAM,IAAI;AAC7E,YAAM,UAAU;AAAA,QACZ,OAAO;AAAA,QACP,MAAM;AAAA,QAEN;AAAA,QACA,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,eAAe;AAAA,QACf,MAAM;AAAA,QACN,UAAU;AAAA,QACV,OAAO;AAAA,QACP,aAAa;AAAA,QACb,UAAU;AAAA,MACd;AAEA,UAAI,OAAO,YAAY,YAAY;AAC/B,gBAAQ;AAAA,MACZ,WAAW,SAAS;AAChB,gBAAQ,eAAe,QAAQ,KAAK;AACpC,gBAAQ,eAAe,QAAQ,KAAK;AAEpC,YAAI,QAAQ,SAAS;AACjB,sBAAY;AAAA,QAChB;AAEA,YAAI,QAAQ,OAAO;AACf,cAAI,8BAA8B,eAAe,QAAQ,KAAK,GAAG;AAC7D,wBAAY,QAAQ,UACd,8BAA8B,QAAQ,KAAK,IAC3C,8BAA8B,QAAQ,KAAK;AAAA,UACrD,WAAW,CAACD,OAAM,eAAe,QAAQ,KAAK,GAAG;AAC7C,kBAAM,IAAI,MAAM,gBAAgB,QAAQ,QAAQ,sCAAsC,OAAO,KAAKA,MAAK,EAAE,KAAK,EAAE,KAAK,IAAI,IAAI,GAAG;AAAA,UACpI;AAEA,kBAAQ,cAAc,OAAO,QAAQ,KAAK;AAC1C,kBAAQ,cAAc,OAAO,QAAQ,KAAK;AAAA,QAC9C;AAAA,MACJ;AAEA,UAAI,UAAU,QAAQ,UAAU,MAAM;AAClC,cAAM,IAAI,MAAM,6EAA8E;AAAA,MAClG;AAEA,eAAS,IAAI;AAAA,IACjB;AAEA,IAAAC,MAAK,QAAQ;AACb,IAAAA,MAAK,OAAO;AAEZ,IAAAA,MAAK,OAAO,SAAS,KAAK,IAAI;AAC1B,UAAI,QAAQ;AAEZ,MAAAA,MAAK,KAAK,SAAS,MAAM,MAAM,MAAM;AACjC,YAAI,GAAG,KAAK,MAAM,MAAM,MAAM,IAAI,GAAG;AACjC,kBAAQ;AACR,iBAAO;AAAA,QACX;AAAA,MACJ,CAAC;AAED,aAAO;AAAA,IACX;AAEA,IAAAA,MAAK,WAAW,SAAS,KAAK,IAAI;AAC9B,UAAI,QAAQ;AAEZ,MAAAA,MAAK,KAAK;AAAA,QACN,SAAS;AAAA,QACT,MAAM,MAAM,MAAM,MAAM;AACpB,cAAI,GAAG,KAAK,MAAM,MAAM,MAAM,IAAI,GAAG;AACjC,oBAAQ;AACR,mBAAO;AAAA,UACX;AAAA,QACJ;AAAA,MACJ,CAAC;AAED,aAAO;AAAA,IACX;AAEA,IAAAA,MAAK,UAAU,SAAS,KAAK,IAAI;AAC7B,YAAM,QAAQ,CAAC;AAEf,MAAAA,MAAK,KAAK,SAAS,MAAM,MAAM,MAAM;AACjC,YAAI,GAAG,KAAK,MAAM,MAAM,MAAM,IAAI,GAAG;AACjC,gBAAM,KAAK,IAAI;AAAA,QACnB;AAAA,MACJ,CAAC;AAED,aAAO;AAAA,IACX;AAEA,WAAOA;AAAA,EACX;;;AC9RA,WAASC,MAAK,OAAO;AACjB,WAAO;AAAA,EACX;AAEA,WAAS,mBAAmB,YAAY;AACpC,UAAM,EAAE,KAAK,KAAK,MAAM,IAAI;AAE5B,QAAI,QAAQ,KAAK,QAAQ,GAAG;AACxB,aAAO,QAAQ,OAAO;AAAA,IAC1B;AAEA,QAAI,QAAQ,KAAK,QAAQ,GAAG;AACxB,aAAO;AAAA,IACX;AAEA,QAAI,QAAQ,KAAK,QAAQ,GAAG;AACxB,aAAO,QAAQ,MAAM;AAAA,IACzB;AAEA,QAAI,QAAQ,KAAK,QAAQ,GAAG;AACxB,aAAO;AAAA,IACX;AAEA,YACK,QAAQ,MAAM,OACd,QAAQ,MACH,MAAM,MAAM,MACZ,MAAM,MAAM,OAAO,QAAQ,IAAI,MAAM,MAAM;AAAA,EAGzD;AAEA,WAAS,iBAAiB,MAAM;AAC5B,YAAQ,KAAK,MAAM;AAAA,MACf,KAAK;AACD,eACI,QACC,KAAK,QAAQ,OAAO,YAAO,KAAK,OACjC,OACC,KAAK,QAAQ,OAAO,WAAM,KAAK,OAChC;AAAA,MAGR;AACI,cAAM,IAAI,MAAM,wBAAwB,KAAK,OAAO,GAAG;AAAA,IAC/D;AAAA,EACJ;AAEA,WAAS,iBAAiB,MAAM,UAAU,aAAa,SAAS;AAC5D,UAAM,aAAa,KAAK,eAAe,OAAO,UAAU,KAAK,aAAa,MAAM,KAAK,aAAa;AAClG,UAAM,SAAS,KAAK,MACf,IAAI,UAAQ,iBAAiB,MAAM,UAAU,aAAa,OAAO,CAAC,EAClE,KAAK,UAAU;AAEpB,QAAI,KAAK,YAAY,aAAa;AAC9B,cAAQ,WAAW,OAAO,CAAC,MAAM,MAAM,MAAM,QAAQ,UAAU,UAAU,MAAM;AAAA,IACnF;AAEA,WAAO;AAAA,EACX;AAEA,WAAS,iBAAiB,MAAM,UAAU,aAAa,SAAS;AAC5D,QAAI;AAEJ,YAAQ,KAAK,MAAM;AAAA,MACf,KAAK;AACD,iBACI,iBAAiB,MAAM,UAAU,aAAa,OAAO,KACpD,KAAK,gBAAgB,MAAM;AAChC;AAAA,MAEJ,KAAK;AAED,eACI,iBAAiB,KAAK,MAAM,UAAU,aAAa,OAAO,IAC1D,SAAS,mBAAmB,IAAI,GAAG,IAAI;AAAA,MAG/C,KAAK;AACD,iBAAS,MAAM,KAAK,QAAQ,KAAK,OAAO,SAAS,iBAAiB,KAAK,IAAI,GAAG,KAAK,IAAI,IAAI,MAAM;AACjG;AAAA,MAEJ,KAAK;AACD,iBAAS,OAAQ,KAAK,OAAO;AAC7B;AAAA,MAEJ,KAAK;AACD,iBAAS,KAAK;AACd;AAAA,MAEJ,KAAK;AACD,iBAAS,MAAM,KAAK;AACpB;AAAA,MAEJ,KAAK;AACD,iBAAS,KAAK,OAAO;AACrB;AAAA,MAEJ,KAAK;AAAA,MACL,KAAK;AACD,iBAAS,KAAK;AACd;AAAA,MAEJ,KAAK;AACD,iBAAS;AACT;AAAA,MAEJ;AACI,cAAM,IAAI,MAAM,wBAAwB,KAAK,OAAO,GAAG;AAAA,IAC/D;AAEA,WAAO,SAAS,QAAQ,IAAI;AAAA,EAChC;AAEO,WAAS,SAAS,MAAM,SAAS;AACpC,QAAI,WAAWA;AACf,QAAI,cAAc;AAClB,QAAI,UAAU;AAEd,QAAI,OAAO,YAAY,YAAY;AAC/B,iBAAW;AAAA,IACf,WAAW,SAAS;AAChB,oBAAc,QAAQ,QAAQ,WAAW;AACzC,gBAAU,QAAQ,QAAQ,OAAO;AACjC,UAAI,OAAO,QAAQ,aAAa,YAAY;AACxC,mBAAW,QAAQ;AAAA,MACvB;AAAA,IACJ;AAEA,WAAO,iBAAiB,MAAM,UAAU,aAAa,OAAO;AAAA,EAChE;;;AC/HA,MAAM,aAAa,EAAE,QAAQ,GAAG,MAAM,GAAG,QAAQ,EAAE;AAEnD,WAAS,eAAe,aAAa,MAAM;AACvC,UAAM,SAAS,YAAY;AAC3B,UAAM,eAAe,YAAY;AACjC,UAAM,eAAe,eAAe,OAAO,SAAS,OAAO,YAAY,EAAE,QAAQ,OAAO;AACxF,UAAM,UAAU,iBAAiB,OAAO,eAAe;AACvD,QAAI,iBAAiB;AACrB,QAAI,iBAAiB;AACrB,QAAI,UAAU;AACd,QAAI,MAAM;AACV,QAAI;AACJ,QAAI;AAEJ,aAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,YAAM,QAAQ,OAAO,CAAC,EAAE;AAExB,UAAI,MAAM,cAAc;AACpB,yBAAiB,MAAM;AACvB,yBAAiB,IAAI;AAAA,MACzB;AAEA,UAAI,YAAY,QAAQ,OAAO,CAAC,EAAE,SAAS,SAAS;AAChD,YAAI,KAAK,cAAc;AACnB;AAAA,QACJ,OAAO;AACH,oBAAU;AAAA,QACd;AAAA,MACJ;AAEA,aAAO;AAAA,IACX;AAEA,QAAI,iBAAiB,OAAO,UAAU,UAAU,GAAG;AAC/C,cAAQ,QAAQ,WAAW,MAAM,KAAK,KAAK,SAAS,YAAY,GAAG;AACnE,YAAM,SAAS,KAAK;AAAA,IACxB,OAAO;AACH,cAAQ,QAAQ,SAAS,OAAO,KAC5B,SAAS,QAAQ,MAAM,OAAO,KAAK,YAAY,IAAI,MAAM,GAAG,cAAc,CAAC;AAC/E,YAAM,QAAQ,SAAS,KAAK,KACxB,SAAS,OAAO,IAAI,OAAO,gBAAgB,cAAc,CAAC;AAAA,IAClE;AAEA,WAAO;AAAA,MACH;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AAEA,WAAS,QAAQ,MAAM,OAAO;AAC1B,UAAM,QAAQ,QAAQ,KAAK,OAAO,KAAK,IAAI,KAAK;AAEhD,QAAI,OAAO;AACP,aAAO,UAAU,QAAQ,SAAS,KAAK,IAAI;AAAA,IAC/C;AAEA,WAAO;AAAA,EACX;AAEA,WAAS,SAAS,EAAE,QAAQ,MAAM,OAAO,GAAG,OAAO;AAC/C,UAAM,MAAM;AAAA,MACR;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAEA,QAAI,OAAO;AACP,YAAM,QAAQ,MAAM,MAAM,aAAa;AAEvC,UAAI,UAAU,MAAM;AACpB,UAAI,QAAQ,MAAM,SAAS;AAC3B,UAAI,SAAS,MAAM,WAAW,IAAI,IAAI,SAAS,MAAM,SAAS,MAAM,IAAI,EAAE,SAAS;AAAA,IACvF;AAEA,WAAO;AAAA,EACX;AAEO,MAAM,uBAAuB,SAAS,MAAM,eAAe;AAC9D,UAAM,QAAQ;AAAA,MACV;AAAA,MACA,QAAQ,gBAAgB,OAAO,gBAAgB,MAAM;AAAA,IACzD;AAEA,UAAM,YAAY;AAElB,WAAO;AAAA,EACX;AAEO,MAAM,mBAAmB,SAAS,SAAS,QAAQ,MAAM,aAAa;AACzE,UAAM,QAAQ,kBAAkB,oBAAoB,OAAO;AAC3D,UAAM;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,IAAI,eAAe,aAAa,IAAI;AAEpC,UAAM,aAAa;AACnB,UAAM,SAAS,SAAS,SAAS,MAAM,IAAI;AAC3C,UAAM,MAAM;AACZ,UAAM,iBAAiB;AACvB,UAAM,iBAAiB;AACvB,UAAM,UAAU,UAAU,iBACP,MAAM,SAAS,kBACd,OAAO,oBAAoB,iBAC5B,IAAI,MAAM,MAAM,iBAAiB,CAAC,EAAE,KAAK,GAAG,IAAI;AAEnE,WAAO,OAAO,OAAO,KAAK;AAC1B,UAAM,MAAM;AAAA,MACR,QAAS,QAAQ,KAAK,OAAO,KAAK,IAAI,UAAW;AAAA,MACjD;AAAA,MACA;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;;;AC1HA,MAAM,WAAW,oBAAI,IAAI;AACzB,MAAM,aAAa,oBAAI,IAAI;AAC3B,MAAMC,eAAc;AAEb,MAAM,UAAU;AAChB,MAAM,WAAW;AAEjB,WAAS,iBAAiB,KAAK,QAAQ;AAC1C,aAAS,UAAU;AAEnB,WAAO,IAAI,SAAS,UAAU,KACvB,IAAI,WAAW,MAAM,MAAMC,gBAC3B,IAAI,WAAW,SAAS,CAAC,MAAMA;AAAA,EAC1C;AAEA,WAAS,gBAAgB,KAAK,QAAQ;AAClC,aAAS,UAAU;AAGnB,QAAI,IAAI,SAAS,UAAU,GAAG;AAE1B,UAAI,IAAI,WAAW,MAAM,MAAMA,gBAC3B,IAAI,WAAW,SAAS,CAAC,MAAMA,cAAa;AAE5C,cAAM,kBAAkB,IAAI,QAAQ,KAAK,SAAS,CAAC;AAEnD,YAAI,oBAAoB,IAAI;AACxB,iBAAO,IAAI,UAAU,QAAQ,kBAAkB,CAAC;AAAA,QACpD;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAEA,WAAS,qBAAqBC,UAAS;AACnC,QAAI,SAAS,IAAIA,QAAO,GAAG;AACvB,aAAO,SAAS,IAAIA,QAAO;AAAA,IAC/B;AAEA,UAAMC,SAAOD,SAAQ,YAAY;AACjC,QAAI,aAAa,SAAS,IAAIC,MAAI;AAElC,QAAI,eAAe,QAAW;AAC1B,YAAM,SAAS,iBAAiBA,QAAM,CAAC;AACvC,YAAM,SAAS,CAAC,SAAS,gBAAgBA,QAAM,CAAC,IAAI;AACpD,mBAAa,OAAO,OAAO;AAAA,QACvB,UAAUA,OAAK,OAAO,OAAO,MAAM;AAAA,QACnC,MAAAA;AAAA,QACA,QAAQ;AAAA,QACR;AAAA,QACA;AAAA,MACJ,CAAC;AAAA,IACL;AAEA,aAAS,IAAID,UAAS,UAAU;AAEhC,WAAO;AAAA,EACX;AAEA,WAAS,sBAAsBE,WAAU;AACrC,QAAI,WAAW,IAAIA,SAAQ,GAAG;AAC1B,aAAO,WAAW,IAAIA,SAAQ;AAAA,IAClC;AAEA,QAAID,SAAOC;AACX,QAAI,OAAOA,UAAS,CAAC;AAErB,QAAI,SAAS,KAAK;AACd,aAAOA,UAAS,CAAC,MAAM,MAAM,OAAO;AAAA,IACxC,WAAW,SAAS,OACT,SAAS,OACT,SAAS,OACT,SAAS,OACT,SAAS,OACT,SAAS,KAAK;AACrB,aAAO;AAAA,IACX;AAEA,UAAM,SAAS,iBAAiBD,QAAM,KAAK,MAAM;AAGjD,QAAI,CAAC,QAAQ;AACT,MAAAA,SAAOA,OAAK,YAAY;AACxB,UAAI,WAAW,IAAIA,MAAI,GAAG;AACtB,cAAME,cAAa,WAAW,IAAIF,MAAI;AACtC,mBAAW,IAAIC,WAAUC,WAAU;AACnC,eAAOA;AAAA,MACX;AAAA,IACJ;AAEA,UAAM,SAAS,CAAC,SAAS,gBAAgBF,QAAM,KAAK,MAAM,IAAI;AAC9D,UAAM,SAASA,OAAK,OAAO,GAAG,KAAK,SAAS,OAAO,MAAM;AACzD,UAAM,aAAa,OAAO,OAAO;AAAA,MAC7B,UAAUA,OAAK,OAAO,OAAO,MAAM;AAAA,MACnC,MAAMA,OAAK,OAAO,KAAK,MAAM;AAAA,MAC7B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,CAAC;AAED,eAAW,IAAIC,WAAU,UAAU;AAEnC,WAAO;AAAA,EACX;;;ACxGO,MAAM,kBAAkB;AAAA,IAC3B;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;;;ACIA,MAAME,YAAW;AACjB,MAAMC,eAAc;AACpB,MAAMC,KAAI;AACV,MAAM,gBAAgB;AACtB,MAAM,aAAa;AAEnB,WAAS,QAAQ,OAAOC,OAAM;AAC1B,WAAO,UAAU,QAAQ,MAAM,SAAS,SAAS,MAAM,MAAM,WAAW,CAAC,MAAMA;AAAA,EACnF;AAEA,WAAS,OAAO,OAAO,QAAQ,cAAc;AACzC,WAAO,UAAU,SAAS,MAAM,SAAS,cAAc,MAAM,SAAS,UAAU;AAC5E,cAAQ,aAAa,EAAE,MAAM;AAAA,IACjC;AAEA,WAAO;AAAA,EACX;AAEA,WAAS,aAAa,OAAO,aAAa,cAAc,QAAQ;AAC5D,QAAI,CAAC,OAAO;AACR,aAAO;AAAA,IACX;AAEA,UAAMA,QAAO,MAAM,MAAM,WAAW,WAAW;AAE/C,QAAIA,UAASH,aAAYG,UAASF,cAAa;AAC3C,UAAI,cAAc;AAEd,eAAO;AAAA,MACX;AACA;AAAA,IACJ;AAEA,WAAO,cAAc,MAAM,MAAM,QAAQ,eAAe;AACpD,UAAI,CAAC,QAAQ,MAAM,MAAM,WAAW,WAAW,CAAC,GAAG;AAE/C,eAAO;AAAA,MACX;AAAA,IACJ;AAEA,WAAO,SAAS;AAAA,EACpB;AAIA,WAAS,SAAS,OAAO,SAAS,cAAc;AAC5C,QAAI,OAAO;AACX,QAAI,SAAS,OAAO,OAAO,SAAS,YAAY;AAEhD,YAAQ,aAAa,MAAM;AAE3B,QAAI,UAAU,MAAM;AAChB,aAAO;AAAA,IACX;AAEA,QAAI,MAAM,SAASG,SAAa;AAC5B,UAAI,QAAQ,OAAOJ,SAAQ,KAAK,QAAQ,OAAOC,YAAW,GAAG;AACzD,eAAO;AACP,iBAAS,OAAO,aAAa,EAAE,MAAM,GAAG,QAAQ,YAAY;AAC5D,gBAAQ,aAAa,MAAM;AAE3B,YAAI,UAAU,QAAQ,MAAM,SAASG,SAAa;AAC9C,iBAAO;AAAA,QACX;AAAA,MACJ,OAAO;AACH,eAAO;AAAA,MACX;AAAA,IACJ;AAEA,QAAI,CAAC,MAAM;AACP,YAAMD,QAAO,MAAM,MAAM,WAAW,CAAC;AACrC,UAAIA,UAASH,aAAYG,UAASF,cAAa;AAE3C,eAAO;AAAA,MACX;AAAA,IACJ;AAEA,WAAO,aAAa,OAAO,OAAO,IAAI,GAAG,MAAM,MAAM;AAAA,EACzD;AAGe,WAAR,QAAyB,OAAO,cAAc;AAEjD,QAAI,SAAS;AAEb,QAAI,CAAC,OAAO;AACR,aAAO;AAAA,IACX;AAGA,QAAI,MAAM,SAASG,SAAa;AAC5B,aAAO,aAAa,OAAO,GAAG,YAAY,MAAM;AAAA,IACpD,WAOS,MAAM,SAAS,SAAS,MAAM,MAAM,WAAW,CAAC,MAAMH,cAAa;AAExE,UAAI,CAAC,QAAQ,MAAM,OAAO,GAAGC,EAAC,GAAG;AAC7B,eAAO;AAAA,MACX;AAEA,cAAQ,MAAM,MAAM,QAAQ;AAAA,QAIxB,KAAK;AACD,iBAAO,SAAS,aAAa,EAAE,MAAM,GAAG,QAAQ,YAAY;AAAA,QAGhE,KAAK;AACD,cAAI,MAAM,MAAM,WAAW,CAAC,MAAMD,cAAa;AAC3C,mBAAO;AAAA,UACX;AAEA,mBAAS,OAAO,aAAa,EAAE,MAAM,GAAG,QAAQ,YAAY;AAC5D,kBAAQ,aAAa,MAAM;AAE3B,iBAAO,aAAa,OAAO,GAAG,eAAe,MAAM;AAAA,QAGvD;AACI,cAAI,MAAM,MAAM,WAAW,CAAC,MAAMA,cAAa;AAC3C,mBAAO;AAAA,UACX;AAEA,iBAAO,aAAa,OAAO,GAAG,eAAe,MAAM;AAAA,MAC3D;AAAA,IACJ,WAOS,MAAM,SAAS,SAAU,QAAQ,OAAOD,SAAQ,KAAK,aAAa,SAAS,CAAC,EAAE,SAAS,OAAQ;AAEpG,UAAI,MAAM,SAAS,OAAO;AACtB,gBAAQ,aAAa,EAAE,MAAM;AAAA,MACjC;AAEA,UAAI,UAAU,QAAQ,CAAC,QAAQ,MAAM,OAAO,GAAGE,EAAC,GAAG;AAC/C,eAAO;AAAA,MACX;AAEA,cAAQ,MAAM,MAAM,QAAQ;AAAA,QAIxB,KAAK;AACD,iBAAO,SAAS,aAAa,EAAE,MAAM,GAAG,QAAQ,YAAY;AAAA,QAGhE,KAAK;AACD,cAAI,MAAM,MAAM,WAAW,CAAC,MAAMD,cAAa;AAC3C,mBAAO;AAAA,UACX;AAEA,mBAAS,OAAO,aAAa,EAAE,MAAM,GAAG,QAAQ,YAAY;AAC5D,kBAAQ,aAAa,MAAM;AAE3B,iBAAO,aAAa,OAAO,GAAG,eAAe,MAAM;AAAA,QAGvD;AACI,cAAI,MAAM,MAAM,WAAW,CAAC,MAAMA,cAAa;AAC3C,mBAAO;AAAA,UACX;AAEA,iBAAO,aAAa,OAAO,GAAG,eAAe,MAAM;AAAA,MAC3D;AAAA,IACJ,WAOS,MAAM,SAAS,WAAW;AAC/B,UAAIE,QAAO,MAAM,MAAM,WAAW,CAAC;AACnC,UAAI,OAAOA,UAASH,aAAYG,UAASF,eAAc,IAAI;AAC3D,UAAI,IAAI;AAER,aAAO,IAAI,MAAM,MAAM,QAAQ,KAAK;AAChC,YAAI,CAAC,QAAQ,MAAM,MAAM,WAAW,CAAC,CAAC,GAAG;AACrC;AAAA,QACJ;AAAA,MACJ;AAEA,UAAI,MAAM,MAAM;AAEZ,eAAO;AAAA,MACX;AAEA,UAAI,CAAC,QAAQ,MAAM,OAAO,GAAGC,EAAC,GAAG;AAC7B,eAAO;AAAA,MACX;AAKA,UAAI,IAAI,MAAM,MAAM,MAAM,QAAQ;AAC9B,eAAO,SAAS,aAAa,EAAE,MAAM,GAAG,QAAQ,YAAY;AAAA,MAChE,OAAO;AACH,YAAI,MAAM,MAAM,WAAW,IAAI,CAAC,MAAMD,cAAa;AAC/C,iBAAO;AAAA,QACX;AAGA,YAAI,IAAI,MAAM,MAAM,MAAM,QAAQ;AAC9B,mBAAS,OAAO,aAAa,EAAE,MAAM,GAAG,QAAQ,YAAY;AAC5D,kBAAQ,aAAa,MAAM;AAE3B,iBAAO,aAAa,OAAO,GAAG,eAAe,MAAM;AAAA,QACvD,OAEK;AACD,iBAAO,aAAa,OAAO,IAAI,GAAG,eAAe,MAAM;AAAA,QAC3D;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;;;ACpOA,MAAMI,YAAW;AACjB,MAAMC,eAAc;AACpB,MAAM,eAAe;AACrB,MAAM,IAAI;AAEV,WAASC,SAAQ,OAAOC,OAAM;AAC1B,WAAO,UAAU,QAAQ,MAAM,SAAS,SAAS,MAAM,MAAM,WAAW,CAAC,MAAMA;AAAA,EACnF;AAEA,WAAS,WAAW,OAAOA,OAAM;AAC7B,WAAO,MAAM,MAAM,WAAW,CAAC,MAAMA;AAAA,EACzC;AAEA,WAAS,YAAY,OAAO,QAAQ,WAAW;AAC3C,QAAI,SAAS;AAEb,aAAS,MAAM,QAAQ,MAAM,MAAM,MAAM,QAAQ,OAAO;AACpD,YAAMA,QAAO,MAAM,MAAM,WAAW,GAAG;AAEvC,UAAIA,UAASF,gBAAe,aAAa,WAAW,GAAG;AACnD,oBAAY,OAAO,SAAS,SAAS,GAAG,KAAK;AAC7C,eAAO;AAAA,MACX;AAEA,UAAI,CAAC,WAAWE,KAAI,GAAG;AACnB,eAAO;AAAA,MACX;AAEA,UAAI,EAAE,SAAS,GAAG;AACd,eAAO;AAAA,MACX;AAAC;AAAA,IACL;AAEA,WAAO;AAAA,EACX;AAEA,WAAS,yBAAyB,UAAUC,SAAQ,cAAc;AAC9D,QAAI,CAAC,UAAU;AACX,aAAO;AAAA,IACX;AAEA,WAAOF,SAAQ,aAAaE,OAAM,GAAG,YAAY,GAAG;AAChD,UAAI,EAAE,WAAW,GAAG;AAChB,eAAO;AAAA,MACX;AAEA,MAAAA;AAAA,IACJ;AAEA,WAAOA;AAAA,EACX;AAqBe,WAAR,OAAwB,OAAO,cAAc;AAChD,QAAIA,UAAS;AAGb,QAAI,UAAU,QAAQ,MAAM,SAAS,SAAS,CAAC,QAAQ,MAAM,OAAO,GAAG,CAAC,GAAG;AACvE,aAAO;AAAA,IACX;AAEA,YAAQ,aAAa,EAAEA,OAAM;AAC7B,QAAI,UAAU,MAAM;AAChB,aAAO;AAAA,IACX;AAIA,QAAIF,SAAQ,OAAOF,SAAQ,GAAG;AAC1B,cAAQ,aAAa,EAAEI,OAAM;AAC7B,UAAI,UAAU,MAAM;AAChB,eAAO;AAAA,MACX;AAEA,UAAI,MAAM,SAAS,OAAO;AAEtB,eAAO,yBAAyB,YAAY,OAAO,GAAG,IAAI,GAAG,EAAEA,SAAQ,YAAY;AAAA,MACvF;AAEA,UAAIF,SAAQ,OAAO,YAAY,GAAG;AAE9B,eAAO,yBAAyB,GAAG,EAAEE,SAAQ,YAAY;AAAA,MAC7D;AAGA,aAAO;AAAA,IACX;AAKA,QAAI,MAAM,SAASC,SAAa;AAC5B,YAAM,oBAAoB,YAAY,OAAO,GAAG,IAAI;AACpD,UAAI,sBAAsB,GAAG;AACzB,eAAO;AAAA,MACX;AAEA,cAAQ,aAAa,EAAED,OAAM;AAC7B,UAAI,UAAU,MAAM;AAEhB,eAAOA;AAAA,MACX;AAEA,UAAI,MAAM,SAAS,aAAa,MAAM,SAASC,SAAa;AAGxD,YAAI,CAAC,WAAW,OAAOJ,YAAW,KAAK,CAAC,YAAY,OAAO,GAAG,KAAK,GAAG;AAClE,iBAAO;AAAA,QACX;AAEA,eAAOG,UAAS;AAAA,MACpB;AAGA,aAAO,yBAAyB,mBAAmBA,SAAQ,YAAY;AAAA,IAC3E;AAGA,QAAI,MAAM,SAAS,WAAW;AAC1B,aAAO,yBAAyB,YAAY,OAAO,GAAG,IAAI,GAAG,EAAEA,SAAQ,YAAY;AAAA,IACvF;AAEA,WAAO;AAAA,EACX;;;AClHA,MAAM,oBAAoB,CAAC,SAAS,cAAc,eAAe;AACjE,MAAME,eAAc,oBAAI,IAAI;AAAA,IACxB,CAACC,WAAe,gBAAgB;AAAA,IAChC,CAAC,iBAAiB,gBAAgB;AAAA,IAClC,CAAC,mBAAmB,kBAAkB;AAAA,IACtC,CAAC,kBAAkB,iBAAiB;AAAA,EACxC,CAAC;AAGD,WAAS,WAAW,KAAK,OAAO;AAC5B,WAAO,QAAQ,IAAI,SAAS,IAAI,WAAW,KAAK,IAAI;AAAA,EACxD;AAEA,WAAS,MAAM,QAAQ,UAAU;AAC7B,WAAO,OAAO,QAAQ,GAAG,OAAO,QAAQ,QAAQ;AAAA,EACpD;AAEA,WAAS,SAAS,QAAQ,UAAU;AAChC,aAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACtC,UAAI,MAAM,QAAQ,SAAS,CAAC,CAAC,GAAG;AAC5B,eAAO;AAAA,MACX;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAGA,WAAS,gBAAgB,KAAK,QAAQ;AAClC,QAAI,WAAW,IAAI,SAAS,GAAG;AAC3B,aAAO;AAAA,IACX;AAEA,WACI,WAAW,KAAK,MAAM,MAAM;AAAA,IAC5B,QAAQ,WAAW,KAAK,SAAS,CAAC,CAAC;AAAA,EAE3C;AAEA,WAAS,WAAW,MAAM,OAAO,QAAQ;AACrC,QAAI,QAAQ,KAAK,SAAS,SAAS;AAC/B,YAAM,MAAM;AAAA,QACR,WAAW,UAAa,WAAW,MAAM,SACnC,MAAM,OAAO,GAAG,MAAM,IACtB;AAAA,MACV;AAEA,UAAI,MAAM,GAAG,GAAG;AACZ,eAAO;AAAA,MACX;AAIA,UAAI,KAAK,QAAQ,QAAQ,MAAM,KAAK,OAAO,OAAO,KAAK,QAAQ,UAAU;AACrE,eAAO;AAAA,MACX;AAIA,UAAI,KAAK,QAAQ,QAAQ,MAAM,KAAK,OAAO,OAAO,KAAK,QAAQ,UAAU;AACrE,eAAO;AAAA,MACX;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAEA,WAAS,gBAAgB,OAAO,cAAc;AAC1C,QAAI,mBAAmB;AACvB,QAAI,eAAe,CAAC;AACpB,QAAIC,UAAS;AAGb;AACA,SAAG;AACC,gBAAQ,MAAM,MAAM;AAAA,UAChB,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACD,gBAAI,MAAM,SAAS,kBAAkB;AACjC,oBAAM;AAAA,YACV;AAEA,+BAAmB,aAAa,IAAI;AAEpC,gBAAI,aAAa,WAAW,GAAG;AAC3B,cAAAA;AACA,oBAAM;AAAA,YACV;AAEA;AAAA,UAEJ,KAAKD;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACD,yBAAa,KAAK,gBAAgB;AAClC,+BAAmBD,aAAY,IAAI,MAAM,IAAI;AAC7C;AAAA,QACR;AAEA,QAAAE;AAAA,MACJ,SAAS,QAAQ,aAAaA,OAAM;AAEpC,WAAOA;AAAA,EACX;AAKA,WAAS,KAAK,MAAM;AAChB,WAAO,SAAS,OAAO,cAAc,MAAM;AACvC,UAAI,UAAU,MAAM;AAChB,eAAO;AAAA,MACX;AAEA,UAAI,MAAM,SAASD,aAAiB,SAAS,MAAM,OAAO,iBAAiB,GAAG;AAC1E,eAAO,gBAAgB,OAAO,YAAY;AAAA,MAC9C;AAEA,aAAO,KAAK,OAAO,cAAc,IAAI;AAAA,IACzC;AAAA,EACJ;AAEA,WAAS,UAAU,mBAAmB;AAClC,WAAO,SAAS,OAAO;AACnB,UAAI,UAAU,QAAQ,MAAM,SAAS,mBAAmB;AACpD,eAAO;AAAA,MACX;AAEA,aAAO;AAAA,IACX;AAAA,EACJ;AAaA,WAAS,YAAY,OAAO;AACxB,QAAI,UAAU,QAAQ,MAAM,SAAS,OAAO;AACxC,aAAO;AAAA,IACX;AAEA,UAAME,SAAO,MAAM,MAAM,YAAY;AAGrC,QAAI,SAASA,QAAM,eAAe,GAAG;AACjC,aAAO;AAAA,IACX;AAGA,QAAI,MAAMA,QAAM,SAAS,GAAG;AACxB,aAAO;AAAA,IACX;AAQA,WAAO;AAAA,EACX;AAOA,WAAS,mBAAmB,OAAO;AAE/B,QAAI,UAAU,QAAQ,MAAM,SAAS,OAAO;AACxC,aAAO;AAAA,IACX;AAGA,QAAI,WAAW,MAAM,OAAO,CAAC,MAAM,MAAU,WAAW,MAAM,OAAO,CAAC,MAAM,IAAQ;AAChF,aAAO;AAAA,IACX;AAEA,WAAO;AAAA,EACX;AAMA,WAAS,SAAS,OAAO;AACrB,QAAI,UAAU,QAAQ,MAAM,SAAS,MAAM;AACvC,aAAO;AAAA,IACX;AAEA,UAAMD,UAAS,MAAM,MAAM;AAG3B,QAAIA,YAAW,KAAKA,YAAW,KAAKA,YAAW,KAAKA,YAAW,GAAG;AAC9D,aAAO;AAAA,IACX;AAEA,aAAS,IAAI,GAAG,IAAIA,SAAQ,KAAK;AAC7B,UAAI,CAAC,WAAW,WAAW,MAAM,OAAO,CAAC,CAAC,GAAG;AACzC,eAAO;AAAA,MACX;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAEA,WAAS,WAAW,OAAO;AACvB,QAAI,UAAU,QAAQ,MAAM,SAAS,MAAM;AACvC,aAAO;AAAA,IACX;AAEA,QAAI,CAAC,kBAAkB,WAAW,MAAM,OAAO,CAAC,GAAG,WAAW,MAAM,OAAO,CAAC,GAAG,WAAW,MAAM,OAAO,CAAC,CAAC,GAAG;AACxG,aAAO;AAAA,IACX;AAEA,WAAO;AAAA,EACX;AAIA,WAAS,iBAAiB,OAAO,cAAc;AAC3C,QAAI,CAAC,OAAO;AACR,aAAO;AAAA,IACX;AAEA,QAAI,mBAAmB;AACvB,QAAI,eAAe,CAAC;AACpB,QAAIA,UAAS;AAIb;AACA,SAAG;AACC,gBAAQ,MAAM,MAAM;AAAA,UAEhB,KAAK;AAAA,UACL,KAAK;AACD,kBAAM;AAAA,UAGV,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACD,gBAAI,MAAM,SAAS,kBAAkB;AACjC,oBAAM;AAAA,YACV;AAEA,+BAAmB,aAAa,IAAI;AACpC;AAAA,UAGJ,KAAK;AACD,gBAAI,qBAAqB,GAAG;AACxB,oBAAM;AAAA,YACV;AAEA;AAAA,UAGJ,KAAK;AACD,gBAAI,qBAAqB,KAAK,MAAM,UAAU,KAAK;AAC/C,oBAAM;AAAA,YACV;AAEA;AAAA,UAEJ,KAAKD;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACD,yBAAa,KAAK,gBAAgB;AAClC,+BAAmBD,aAAY,IAAI,MAAM,IAAI;AAC7C;AAAA,QACR;AAEA,QAAAE;AAAA,MACJ,SAAS,QAAQ,aAAaA,OAAM;AAEpC,WAAOA;AAAA,EACX;AAMA,WAAS,SAAS,OAAO,cAAc;AACnC,QAAI,CAAC,OAAO;AACR,aAAO;AAAA,IACX;AAEA,QAAI,mBAAmB;AACvB,QAAI,eAAe,CAAC;AACpB,QAAIA,UAAS;AAIb;AACA,SAAG;AACC,gBAAQ,MAAM,MAAM;AAAA,UAEhB,KAAK;AAAA,UACL,KAAK;AACD,kBAAM;AAAA,UAGV,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACD,gBAAI,MAAM,SAAS,kBAAkB;AACjC,oBAAM;AAAA,YACV;AAEA,+BAAmB,aAAa,IAAI;AACpC;AAAA,UAEJ,KAAKD;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACD,yBAAa,KAAK,gBAAgB;AAClC,+BAAmBD,aAAY,IAAI,MAAM,IAAI;AAC7C;AAAA,QACR;AAEA,QAAAE;AAAA,MACJ,SAAS,QAAQ,aAAaA,OAAM;AAEpC,WAAOA;AAAA,EACX;AAMA,WAAS,UAAU,MAAM;AACrB,QAAI,MAAM;AACN,aAAO,IAAI,IAAI,IAAI;AAAA,IACvB;AAEA,WAAO,SAAS,OAAO,cAAc,MAAM;AACvC,UAAI,UAAU,QAAQ,MAAM,SAAS,WAAW;AAC5C,eAAO;AAAA,MACX;AAEA,YAAM,YAAY,cAAc,MAAM,OAAO,CAAC;AAG9C,UAAI,SAAS,MAAM;AAEf,cAAM,uBAAuB,MAAM,MAAM,QAAQ,MAAM,SAAS;AAChE,cAAM,OAAO,yBAAyB,MAAM,CAAC,gBAAgB,MAAM,OAAO,oBAAoB,IACxF,MAAM,MAAM,OAAO,SAAS,IAC5B,MAAM,MAAM,UAAU,WAAW,oBAAoB;AAE3D,YAAI,KAAK,IAAI,KAAK,YAAY,CAAC,MAAM,OAAO;AACxC,iBAAO;AAAA,QACX;AAAA,MACJ;AAGA,UAAI,WAAW,MAAM,MAAM,OAAO,SAAS,GAAG;AAC1C,eAAO;AAAA,MACX;AAEA,aAAO;AAAA,IACX;AAAA,EACJ;AAQA,WAAS,WAAW,OAAO,cAAc,MAAM;AAE3C,QAAI,UAAU,QAAQ,MAAM,SAAS,YAAY;AAC7C,aAAO;AAAA,IACX;AAGA,QAAI,WAAW,MAAM,MAAM,OAAO,MAAM,MAAM,SAAS,CAAC,GAAG;AACvD,aAAO;AAAA,IACX;AAEA,WAAO;AAAA,EACX;AAUA,WAAS,KAAK,MAAM;AAChB,QAAI,OAAO,SAAS,YAAY;AAC5B,aAAO,WAAW;AACd,eAAO;AAAA,MACX;AAAA,IACJ;AAEA,WAAO,SAAS,OAAO,cAAc,MAAM;AACvC,UAAI,UAAU,QAAQ,MAAM,SAASE,SAAa;AAC9C,YAAI,OAAO,MAAM,KAAK,MAAM,GAAG;AAC3B,iBAAO;AAAA,QACX;AAAA,MACJ;AAEA,aAAO,KAAK,OAAO,cAAc,IAAI;AAAA,IACzC;AAAA,EACJ;AAMA,WAAS,OAAO,OAAO,cAAc,MAAM;AACvC,QAAI,UAAU,MAAM;AAChB,aAAO;AAAA,IACX;AAEA,UAAM,YAAY,cAAc,MAAM,OAAO,CAAC;AAC9C,UAAM,WAAW,cAAc,MAAM,MAAM;AAC3C,QAAI,CAAC,YAAY,CAAC,gBAAgB,MAAM,OAAO,SAAS,GAAG;AACvD,aAAO;AAAA,IACX;AAGA,QAAI,WAAW,MAAM,MAAM,OAAO,SAAS,GAAG;AAC1C,aAAO;AAAA,IACX;AAEA,WAAO;AAAA,EACX;AAIA,WAAS,QAAQ,OAAO,cAAc,MAAM;AAExC,QAAI,UAAU,QAAQ,MAAM,SAASA,SAAa;AAC9C,aAAO;AAAA,IACX;AAGA,QAAI,IAAI,WAAW,MAAM,OAAO,CAAC,MAAM;AAAA,IAC/B,WAAW,MAAM,OAAO,CAAC,MAAM,KAAS,IAAI;AAGpD,WAAO,IAAI,MAAM,MAAM,QAAQ,KAAK;AAChC,UAAI,CAAC,QAAQ,WAAW,MAAM,OAAO,CAAC,CAAC,GAAG;AACtC,eAAO;AAAA,MACX;AAAA,IACJ;AAGA,QAAI,WAAW,MAAM,MAAM,OAAO,CAAC,GAAG;AAClC,aAAO;AAAA,IACX;AAEA,WAAO;AAAA,EACX;AAGO,MAAM,aAAa;AAAA,IACtB,eAAe,UAAU,KAAK;AAAA,IAC9B,kBAAkB,UAAUH,SAAa;AAAA,IACzC,oBAAoB,UAAU,SAAS;AAAA,IACvC,cAAc,UAAU,IAAI;AAAA,IAC5B,gBAAgB,UAAUI,OAAW;AAAA,IACrC,oBAAoB,UAAU,SAAS;AAAA,IACvC,aAAa,UAAU,GAAG;AAAA,IAC1B,iBAAiB,UAAU,MAAM;AAAA,IACjC,eAAe,UAAU,KAAK;AAAA,IAC9B,gBAAgB,UAAUD,OAAW;AAAA,IACrC,oBAAoB,UAAU,UAAU;AAAA,IACxC,mBAAmB,UAAU,SAAS;AAAA,IACtC,oBAAoB,UAAU,UAAU;AAAA,IACxC,aAAa,UAAU,GAAG;AAAA,IAC1B,aAAa,UAAU,GAAG;AAAA,IAC1B,eAAe,UAAU,KAAK;AAAA,IAC9B,mBAAmB,UAAU,SAAS;AAAA,IACtC,eAAe,UAAU,KAAK;AAAA,IAC9B,WAAW,UAAU,iBAAiB;AAAA,IACtC,WAAW,UAAU,kBAAkB;AAAA,IACvC,WAAW,UAAU,eAAe;AAAA,IACpC,WAAW,UAAU,gBAAgB;AAAA,IACrC,WAAW,UAAU,gBAAgB;AAAA,IACrC,WAAW,UAAU,iBAAiB;AAAA,EAC1C;AAGO,MAAM,kBAAkB;AAAA;AAAA,IAE3B,UAAU,UAAUC,OAAW;AAAA,IAC/B,SAAS,UAAU,KAAK;AAAA;AAAA,IAGxB,cAAc,KAAK,UAAU;AAAA;AAAA,IAG7B,QAAQ,KAAK;AAAA,IACb,UAAU,KAAK,MAAM;AAAA,IACrB,WAAW,KAAK,OAAO;AAAA;AAAA,IAGvB,gBAAgB;AAAA,IAChB,wBAAwB;AAAA,IACxB,aAAa;AAAA,IACb,eAAe;AAAA;AAAA,IACf,aAAa;AAAA,IACb,UAAU;AAAA,IACV,qBAAqB;AAAA,IACrB,aAAa;AAAA,EACjB;AAcO,WAAS,qBAAqB,OAAO;AACxC,UAAM;AAAA,MACF,OAAAC;AAAA,MACA,SAAAC;AAAA,MACA,WAAAC;AAAA,MACA,MAAAC;AAAA,MACA,QAAAC;AAAA,MACA,YAAAC;AAAA,MACA,WAAAC;AAAA,MACA,MAAAC;AAAA,IACJ,IAAI,SAAS,CAAC;AAEd,WAAO;AAAA,MACH,aAAa,KAAK,UAAU,IAAI,CAAC;AAAA,MACjC,SAAS,KAAK,UAAUP,MAAK,CAAC;AAAA,MAC9B,WAAW,KAAK,UAAUC,QAAO,CAAC;AAAA,MAClC,aAAa,KAAK,UAAUC,UAAS,CAAC;AAAA,MACtC,QAAQ,KAAK,UAAUC,KAAI,CAAC;AAAA,MAC5B,UAAU,KAAK,KAAK,UAAUC,OAAM,CAAC,CAAC;AAAA,MACtC,cAAc,KAAK,UAAUC,WAAU,CAAC;AAAA,MACxC,aAAa,KAAK,UAAUC,UAAS,CAAC;AAAA,MACtC,QAAQ,KAAK,UAAUC,KAAI,CAAC;AAAA,IAChC;AAAA,EACJ;AAEO,WAAS,mBAAmB,OAAO;AACtC,WAAO;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG,qBAAqB,KAAK;AAAA,IACjC;AAAA,EACJ;;;AC7lBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,MAAM,SAAS;AAAA;AAAA,IAElB;AAAA,IAAM;AAAA,IAAM;AAAA,IAAK;AAAA,IAAM;AAAA,IAAM;AAAA,IAAM;AAAA;AAAA,IAEnC;AAAA,IAAM;AAAA,IACN;AAAA,IAAM;AAAA,IACN;AAAA,IAAO;AAAA,IACP;AAAA,IAAM;AAAA,IACN;AAAA,IAAM;AAAA,IACN;AAAA,IAAM;AAAA;AAAA,IAEN;AAAA,IAAM;AAAA,IAAO;AAAA,IAAO;AAAA,IACpB;AAAA,IAAM;AAAA,IAAO;AAAA,IAAO;AAAA,IACpB;AAAA,IAAM;AAAA,IAAO;AAAA,IAAO;AAAA,IACpB;AAAA,IAAM;AAAA,IAAO;AAAA,IAAO;AAAA,IACpB;AAAA,IAAQ;AAAA,IAAS;AAAA,IAAS;AAAA,IAC1B;AAAA,IAAQ;AAAA,IAAS;AAAA,IAAS;AAAA;AAAA,IAE1B;AAAA,IAAO;AAAA,IAAO;AAAA,IAAO;AAAA,IAAO;AAAA,IAAS;AAAA,EACzC;AACO,MAAM,QAAQ,CAAC,OAAO,QAAQ,OAAO,MAAM;AAC3C,MAAM,OAAO,CAAC,KAAK,IAAI;AACvB,MAAM,YAAY,CAAC,MAAM,KAAK;AAC9B,MAAM,aAAa,CAAC,OAAO,QAAQ,QAAQ,GAAG;AAC9C,MAAM,OAAO,CAAC,IAAI;AAClB,MAAM,UAAU,CAAC,IAAI;AACrB,MAAM,YAAY,CAAC,IAAI;;;ACxBvB,WAASC,aAAY,SAAS,OAAO,QAAQ;AAChD,WAAO,OAAO,OAAO,kBAAkB,eAAe,OAAO,GAAG;AAAA,MAC5D;AAAA,MACA;AAAA,MACA,YAAY;AAAA,MACZ,SAAS,UAAU,SACR,QAAQ,SACR,IAAI,OAAO,UAAU,MAAM,UAAU,CAAC,EAAE,KAAK,GAAG,IAAI;AAAA,IACnE,CAAC;AAAA,EACL;;;ACTA,MAAM,MAAM;AACZ,MAAMC,KAAI;AACV,MAAMC,KAAI;AACV,MAAMC,KAAI;AACV,MAAM,QAAQ;AAEP,MAAMC,aAAN,MAAgB;AAAA,IACnB,YAAY,KAAK;AACb,WAAK,MAAM;AACX,WAAK,MAAM;AAAA,IACf;AAAA,IACA,WAAW,KAAK;AACZ,aAAO,MAAM,KAAK,IAAI,SAAS,KAAK,IAAI,WAAW,GAAG,IAAI;AAAA,IAC9D;AAAA,IACA,WAAW;AACP,aAAO,KAAK,WAAW,KAAK,GAAG;AAAA,IACnC;AAAA,IACA,eAAe;AACX,aAAO,KAAK,WAAW,KAAK,MAAM,CAAC;AAAA,IACvC;AAAA,IACA,cAAc,KAAK;AACf,aAAO,KAAK,WAAW,KAAK,UAAU,GAAG,CAAC;AAAA,IAC9C;AAAA,IACA,UAAU,KAAK;AACX,aAAO,MAAM,KAAK,IAAI,QAAQ,OAAO;AACjC,cAAMC,QAAO,KAAK,IAAI,WAAW,GAAG;AACpC,YAAIA,UAASF,MAAKE,UAASJ,MAAKI,UAASH,MAAKG,UAAS,SAASA,UAAS,KAAK;AAC1E;AAAA,QACJ;AAAA,MACJ;AAEA,aAAO;AAAA,IACX;AAAA,IACA,eAAe,KAAK;AAChB,aAAO,KAAK,IAAI,UAAU,KAAK,KAAK,KAAK,MAAM,GAAG;AAAA,IACtD;AAAA,IACA,IAAIA,OAAM;AACN,UAAI,KAAK,SAAS,MAAMA,OAAM;AAC1B,aAAK,MAAM,aAAa,OAAO,aAAaA,KAAI,IAAI,GAAG;AAAA,MAC3D;AAEA,WAAK;AAAA,IACT;AAAA,IACA,OAAO;AACH,aAAO,KAAK,MAAM,KAAK,IAAI,SAAS,KAAK,IAAI,OAAO,KAAK,KAAK,IAAI;AAAA,IACtE;AAAA,IACA,MAAM,SAAS;AACX,YAAM,IAAIC,aAAY,SAAS,KAAK,KAAK,KAAK,GAAG;AAAA,IACrD;AAAA,EACJ;;;ACjDA,MAAMC,OAAM;AACZ,MAAMC,KAAI;AACV,MAAMC,KAAI;AACV,MAAMC,KAAI;AACV,MAAMC,SAAQ;AACd,MAAMC,mBAAkB;AACxB,MAAMC,cAAa;AACnB,MAAM,YAAY;AAClB,MAAM,aAAa;AACnB,MAAM,kBAAkB;AACxB,MAAM,mBAAmB;AACzB,MAAM,WAAW;AACjB,MAAMC,YAAW;AACjB,MAAM,QAAQ;AACd,MAAM,aAAa;AACnB,MAAM,eAAe;AACrB,MAAM,kBAAkB;AACxB,MAAMC,gBAAe;AACrB,MAAM,eAAe;AACrB,MAAM,oBAAoB;AAC1B,MAAM,qBAAqB;AAC3B,MAAMC,oBAAmB;AACzB,MAAM,eAAe;AACrB,MAAM,oBAAoB;AAC1B,MAAM,WAAW;AACjB,MAAM,YAAY,IAAI,WAAW,GAAG,EAAE;AAAA,IAAI,CAAC,GAAG,QAC1C,gBAAgB,KAAK,OAAO,aAAa,GAAG,CAAC,IAAI,IAAI;AAAA,EACzD;AACA,MAAM,wBAAwB;AAAA,IAC1B,KAAK;AAAA,IACL,MAAM;AAAA,IACN,MAAM;AAAA,IACN,KAAK;AAAA,EACT;AAEA,WAAS,WAAW,WAAW;AAC3B,WAAO,UAAU;AAAA,MACb,UAAU,UAAU,UAAU,GAAG;AAAA,IACrC;AAAA,EACJ;AAEA,WAAS,SAAS,WAAW;AACzB,QAAI,MAAM,UAAU;AAEpB,WAAO,MAAM,UAAU,IAAI,QAAQ,OAAO;AACtC,YAAMC,QAAO,UAAU,IAAI,WAAW,GAAG;AACzC,UAAIA,SAAQ,OAAO,UAAUA,KAAI,MAAM,GAAG;AACtC;AAAA,MACJ;AAAA,IACJ;AAEA,QAAI,UAAU,QAAQ,KAAK;AACvB,gBAAU,MAAM,kBAAkB;AAAA,IACtC;AAEA,WAAO,UAAU,eAAe,GAAG;AAAA,EACvC;AAEA,WAAS,WAAW,WAAW;AAC3B,QAAI,MAAM,UAAU;AAEpB,WAAO,MAAM,UAAU,IAAI,QAAQ,OAAO;AACtC,YAAMA,QAAO,UAAU,IAAI,WAAW,GAAG;AACzC,UAAIA,QAAO,MAAMA,QAAO,IAAI;AACxB;AAAA,MACJ;AAAA,IACJ;AAEA,QAAI,UAAU,QAAQ,KAAK;AACvB,gBAAU,MAAM,iBAAiB;AAAA,IACrC;AAEA,WAAO,UAAU,eAAe,GAAG;AAAA,EACvC;AAEA,WAAS,WAAW,WAAW;AAC3B,UAAM,MAAM,UAAU,IAAI,QAAQ,KAAM,UAAU,MAAM,CAAC;AAEzD,QAAI,QAAQ,IAAI;AACZ,gBAAU,MAAM,UAAU,IAAI;AAC9B,gBAAU,MAAM,sBAAsB;AAAA,IAC1C;AAEA,WAAO,UAAU,eAAe,MAAM,CAAC;AAAA,EAC3C;AAEA,WAAS,oBAAoB,WAAW;AACpC,QAAI,MAAM;AACV,QAAI,MAAM;AAEV,cAAU,IAAID,iBAAgB;AAE9B,UAAM,WAAW,SAAS;AAE1B,QAAI,UAAU,SAAS,MAAM,OAAO;AAChC,gBAAU;AACV,UAAI,UAAU,SAAS,MAAM,mBAAmB;AAC5C,cAAM,WAAW,SAAS;AAAA,MAC9B;AAAA,IACJ,OAAO;AACH,YAAM;AAAA,IACV;AAEA,cAAU,IAAI,iBAAiB;AAE/B,WAAO;AAAA,MACH,KAAK,OAAO,GAAG;AAAA,MACf,KAAK,MAAM,OAAO,GAAG,IAAI;AAAA,IAC7B;AAAA,EACJ;AAEA,WAAS,eAAe,WAAW;AAC/B,QAAI,QAAQ;AACZ,QAAI,QAAQ;AAEZ,YAAQ,UAAU,SAAS,GAAG;AAAA,MAC1B,KAAK;AACD,kBAAU;AAEV,gBAAQ;AAAA,UACJ,KAAK;AAAA,UACL,KAAK;AAAA,QACT;AAEA;AAAA,MAEJ,KAAKF;AACD,kBAAU;AAEV,gBAAQ;AAAA,UACJ,KAAK;AAAA,UACL,KAAK;AAAA,QACT;AAEA;AAAA,MAEJ,KAAKC;AACD,kBAAU;AAEV,gBAAQ;AAAA,UACJ,KAAK;AAAA,UACL,KAAK;AAAA,QACT;AAEA;AAAA,MAEJ,KAAKF;AACD,kBAAU;AAEV,gBAAQ;AAER,YAAI,UAAU,SAAS,MAAMG,mBAAkB;AAC3C,kBAAQ,oBAAoB,SAAS;AAAA,QACzC,WAAW,UAAU,SAAS,MAAMD,eAAc;AAK9C,oBAAU;AACV,kBAAQ;AAAA,YACJ,KAAK;AAAA,YACL,KAAK;AAAA,UACT;AAAA,QACJ,OAAO;AACH,kBAAQ;AAAA,YACJ,KAAK;AAAA,YACL,KAAK;AAAA,UACT;AAAA,QACJ;AAEA;AAAA,MAEJ,KAAKC;AACD,gBAAQ,oBAAoB,SAAS;AACrC;AAAA,MAEJ;AACI,eAAO;AAAA,IACf;AAEA,WAAO;AAAA,MACH,MAAM;AAAA,MACN;AAAA,MACA,KAAK,MAAM;AAAA,MACX,KAAK,MAAM;AAAA,MACX,MAAM;AAAA,IACV;AAAA,EACJ;AAEA,WAAS,gBAAgB,WAAW,MAAM;AACtC,UAAM,aAAa,eAAe,SAAS;AAE3C,QAAI,eAAe,MAAM;AACrB,iBAAW,OAAO;AAWlB,UAAI,UAAU,SAAS,MAAMH,eACzB,UAAU,WAAW,UAAU,MAAM,CAAC,MAAMC,WAAU;AACtD,eAAO,gBAAgB,WAAW,UAAU;AAAA,MAChD;AAEA,aAAO;AAAA,IACX;AAEA,WAAO;AAAA,EACX;AAEA,WAAS,WAAW,WAAW;AAC3B,UAAM,KAAK,UAAU,KAAK;AAE1B,QAAI,OAAO,IAAI;AACX,aAAO;AAAA,IACX;AAEA,WAAO;AAAA,MACH,MAAM;AAAA,MACN,OAAO;AAAA,IACX;AAAA,EACJ;AAEA,WAAS,aAAa,WAAW;AAC7B,QAAII;AAEJ,cAAU,IAAI,YAAY;AAC1B,cAAU,IAAI,UAAU;AAExB,IAAAA,SAAO,SAAS,SAAS;AAEzB,cAAU,IAAI,UAAU;AACxB,cAAU,IAAI,eAAe;AAE7B,WAAO,gBAAgB,WAAW;AAAA,MAC9B,MAAM;AAAA,MACN,MAAAA;AAAA,IACJ,CAAC;AAAA,EACL;AASA,WAAS,cAAc,WAAW;AAE9B,QAAI,MAAM;AACV,QAAI,MAAM;AACV,QAAI,OAAO;AAEX,cAAU,IAAI,iBAAiB;AAE/B,QAAI,UAAU,SAAS,MAAM,YAAY;AACrC,gBAAU,KAAK;AACf,aAAO;AAAA,IACX;AAEA,QAAI,QAAQ,MAAM,UAAU,SAAS,MAAM,UAAU;AACjD,gBAAU,KAAK;AAAA,IACnB,OAAO;AACH,YAAM,OAAO,OAAO,WAAW,SAAS,CAAC;AAEzC,UAAI,UAAU,UAAU,SAAS,CAAC,MAAM,GAAG;AACvC,eAAO,SAAS,SAAS;AAAA,MAC7B;AAAA,IACJ;AAEA,eAAW,SAAS;AACpB,cAAU,IAAI,KAAK;AACnB,eAAW,SAAS;AAEpB,QAAI,UAAU,SAAS,MAAM,UAAU;AACnC,gBAAU,KAAK;AAAA,IACnB,OAAO;AACH,aAAO;AAEP,UAAI,UAAU,SAAS,MAAM,YAAY;AACrC,kBAAU,KAAK;AACf,eAAO;AAAA,MACX;AAEA,YAAM,OAAO,OAAO,WAAW,SAAS,CAAC;AAEzC,UAAI,UAAU,UAAU,SAAS,CAAC,MAAM,GAAG;AACvC,eAAO,SAAS,SAAS;AAAA,MAC7B;AAAA,IACJ;AAEA,cAAU,IAAI,kBAAkB;AAEhC,WAAO;AAAA,MACH,MAAM;AAAA,MACN;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AAEA,WAAS,SAAS,WAAW;AACzB,QAAIA;AACJ,QAAI,OAAO;AAEX,cAAU,IAAI,YAAY;AAC1B,IAAAA,SAAO,SAAS,SAAS;AAEzB,QAAI,UAAU,SAAS,MAAM,mBACzB,UAAU,aAAa,MAAM,kBAAkB;AAC/C,gBAAU,OAAO;AACjB,MAAAA,UAAQ;AAAA,IACZ;AAEA,QAAI,UAAU,WAAW,UAAU,UAAU,UAAU,GAAG,CAAC,MAAM,mBAAmB;AAChF,iBAAW,SAAS;AACpB,aAAO,cAAc,SAAS;AAAA,IAClC;AAEA,cAAU,IAAI,eAAe;AAE7B,WAAO,gBAAgB,WAAW;AAAA,MAC9B,MAAM;AAAA,MACN,MAAAA;AAAA,MACA;AAAA,IACJ,CAAC;AAAA,EACL;AAEA,WAAS,sBAAsB,WAAW;AACtC,UAAMA,SAAO,SAAS,SAAS;AAE/B,QAAI,UAAU,SAAS,MAAM,iBAAiB;AAC1C,gBAAU;AAEV,aAAO;AAAA,QACH,MAAM;AAAA,QACN,MAAAA;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO,gBAAgB,WAAW;AAAA,MAC9B,MAAM;AAAA,MACN,MAAAA;AAAA,IACJ,CAAC;AAAA,EACL;AAEA,WAAS,aAAa,OAAO,aAAa;AACtC,aAAS,YAAYC,QAAOC,aAAY;AACpC,aAAO;AAAA,QACH,MAAM;AAAA,QACN,OAAAD;AAAA,QACA,YAAAC;AAAA,QACA,eAAe;AAAA,QACf,UAAU;AAAA,MACd;AAAA,IACJ;AAEA,QAAI;AAEJ,kBAAc,OAAO,KAAK,WAAW,EAChC,KAAK,CAAC,GAAG,MAAM,sBAAsB,CAAC,IAAI,sBAAsB,CAAC,CAAC;AAEvE,WAAO,YAAY,SAAS,GAAG;AAC3B,mBAAa,YAAY,MAAM;AAE/B,UAAI,IAAI;AACR,UAAI,gBAAgB;AAEpB,aAAO,IAAI,MAAM,QAAQ,KAAK;AAC1B,cAAM,OAAO,MAAM,CAAC;AAEpB,YAAI,KAAK,SAAS,cAAc;AAC5B,cAAI,KAAK,UAAU,YAAY;AAC3B,gBAAI,kBAAkB,IAAI;AACtB,8BAAgB,IAAI;AAAA,YACxB;AACA,kBAAM,OAAO,GAAG,CAAC;AACjB;AAAA,UACJ,OAAO;AACH,gBAAI,kBAAkB,MAAM,IAAI,gBAAgB,GAAG;AAC/C,oBAAM;AAAA,gBACF;AAAA,gBACA,IAAI;AAAA,gBACJ,YAAY,MAAM,MAAM,eAAe,CAAC,GAAG,UAAU;AAAA,cACzD;AACA,kBAAI,gBAAgB;AAAA,YACxB;AACA,4BAAgB;AAAA,UACpB;AAAA,QACJ;AAAA,MACJ;AAEA,UAAI,kBAAkB,MAAM,YAAY,QAAQ;AAC5C,cAAM;AAAA,UACF;AAAA,UACA,IAAI;AAAA,UACJ,YAAY,MAAM,MAAM,eAAe,CAAC,GAAG,UAAU;AAAA,QACzD;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAEA,WAAS,kBAAkB,WAAW;AAClC,UAAM,QAAQ,CAAC;AACf,UAAM,cAAc,CAAC;AACrB,QAAI;AACJ,QAAI,YAAY;AAChB,QAAI,eAAe,UAAU;AAE7B,WAAO,QAAQ,KAAK,SAAS,GAAG;AAC5B,UAAI,MAAM,SAAS,UAAU;AACzB,YAAI,MAAM,SAAS,cAAc;AAE7B,cAAI,cAAc,QAAQ,UAAU,SAAS,cAAc;AACvD,sBAAU,MAAM;AAChB,sBAAU,MAAM,uBAAuB;AAAA,UAC3C;AAEA,sBAAY,MAAM,KAAK,IAAI;AAAA,QAC/B,WAAW,cAAc,QAAQ,UAAU,SAAS,cAAc;AAC9D,sBAAY,GAAG,IAAI;AACnB,gBAAM,KAAK;AAAA,YACP,MAAM;AAAA,YACN,OAAO;AAAA,UACX,CAAC;AAAA,QACL;AAEA,cAAM,KAAK,KAAK;AAChB,oBAAY;AACZ,uBAAe,UAAU;AAAA,MAC7B;AAAA,IACJ;AAGA,QAAI,cAAc,QAAQ,UAAU,SAAS,cAAc;AACvD,gBAAU,OAAO;AACjB,gBAAU,MAAM,uBAAuB;AAAA,IAC3C;AAEA,WAAO;AAAA,MACH,MAAM;AAAA,MACN;AAAA,MACA,YAAY,aAAa,OAAO,WAAW,KAAK;AAAA,MAChD,eAAe;AAAA,MACf,UAAU;AAAA,IACd;AAAA,EACJ;AAEA,WAAS,UAAU,WAAW;AAC1B,QAAI;AAEJ,cAAU,IAAI,iBAAiB;AAC/B,aAAS,kBAAkB,SAAS;AACpC,cAAU,IAAI,kBAAkB;AAEhC,WAAO,WAAW;AAElB,QAAI,UAAU,SAAS,MAAMR,kBAAiB;AAC1C,gBAAU;AACV,aAAO,gBAAgB;AAAA,IAC3B;AAEA,WAAO;AAAA,EACX;AAEA,WAAS,KAAK,WAAW;AACrB,QAAIK,QAAO,UAAU,SAAS;AAE9B,QAAIA,QAAO,OAAO,UAAUA,KAAI,MAAM,GAAG;AACrC,aAAO,sBAAsB,SAAS;AAAA,IAC1C;AAEA,YAAQA,OAAM;AAAA,MACV,KAAK;AAED;AAAA,MAEJ,KAAK;AACD,eAAO,gBAAgB,WAAW,UAAU,SAAS,CAAC;AAAA,MAE1D,KAAK;AACD,eAAO,UAAU,aAAa,MAAM,aAC9B,aAAa,SAAS,IACtB,SAAS,SAAS;AAAA,MAE5B,KAAK;AACD,eAAO;AAAA,UACH,MAAM;AAAA,UACN,OAAO,UAAU;AAAA,YACb,UAAU,OAAO,UAAU,aAAa,MAAM,eAAe,IAAI;AAAA,UACrE;AAAA,QACJ;AAAA,MAEJ,KAAK;AACD,kBAAU;AACV,kBAAU,IAAI,SAAS;AAEvB,eAAO;AAAA,UACH,MAAM;AAAA,UACN,OAAO;AAAA,QACX;AAAA,MAEJ,KAAK;AACD,kBAAU;AACV,eAAO;AAAA,UACH,MAAM;AAAA,QACV;AAAA,MAEJ,KAAK;AACD,eAAO,gBAAgB,WAAW;AAAA,UAC9B,MAAM;AAAA,UACN,OAAO,WAAW,SAAS;AAAA,QAC/B,CAAC;AAAA,MAEL,KAAKN;AAAA,MACL,KAAKJ;AAAA,MACL,KAAKC;AAAA,MACL,KAAKE;AAAA,MACL,KAAKD;AACD,eAAO;AAAA,UACH,MAAM;AAAA,UACN,OAAO,WAAW,SAAS;AAAA,QAC/B;AAAA,MAEJ,KAAK;AACD,QAAAQ,QAAO,UAAU,aAAa;AAE9B,YAAIA,QAAO,OAAO,UAAUA,KAAI,MAAM,GAAG;AACrC,oBAAU;AACV,iBAAO;AAAA,YACH,MAAM;AAAA,YACN,MAAM,SAAS,SAAS;AAAA,UAC5B;AAAA,QACJ;AAEA,eAAO,WAAW,SAAS;AAAA,MAE/B,KAAK;AAAA,MACL,KAAKH;AAAA,MACL,KAAKC;AAAA,MACL,KAAKF;AAAA,MACL,KAAKD;AAED;AAAA,MAEJ,KAAKI;AAGD,QAAAC,QAAO,UAAU,aAAa;AAE9B,YAAIA,QAAO,MAAMA,QAAO,IAAI;AACxB,iBAAO,WAAW,SAAS;AAAA,QAC/B;AAEA;AAAA,MAEJ;AACI,eAAO,WAAW,SAAS;AAAA,IACnC;AAAA,EACJ;AAEO,WAASI,OAAM,QAAQ;AAC1B,UAAM,YAAY,IAAIC,WAAU,MAAM;AACtC,UAAM,SAAS,kBAAkB,SAAS;AAE1C,QAAI,UAAU,QAAQ,OAAO,QAAQ;AACjC,gBAAU,MAAM,kBAAkB;AAAA,IACtC;AAGA,QAAI,OAAO,MAAM,WAAW,KAAK,OAAO,MAAM,CAAC,EAAE,SAAS,SAAS;AAC/D,aAAO,OAAO,MAAM,CAAC;AAAA,IACzB;AAEA,WAAO;AAAA,EACX;;;ACvkBA,MAAMC,QAAO,WAAW;AAAA,EAAC;AAEzB,WAASC,gBAAe,OAAO;AAC3B,WAAO,OAAO,UAAU,aAAa,QAAQD;AAAA,EACjD;AAEO,WAAS,KAAK,MAAM,SAAS,SAAS;AACzC,aAASE,MAAKC,OAAM;AAChB,YAAM,KAAK,SAASA,KAAI;AAExB,cAAQA,MAAK,MAAM;AAAA,QACf,KAAK;AACD,UAAAA,MAAK,MAAM,QAAQD,KAAI;AACvB;AAAA,QAEJ,KAAK;AACD,UAAAA,MAAKC,MAAK,IAAI;AACd;AAAA,QAEJ,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACD;AAAA,QAEJ;AACI,gBAAM,IAAI,MAAM,mBAAmBA,MAAK,IAAI;AAAA,MACpD;AAEA,YAAM,KAAK,SAASA,KAAI;AAAA,IAC5B;AAEA,QAAI,QAAQH;AACZ,QAAI,QAAQA;AAEZ,QAAI,OAAO,YAAY,YAAY;AAC/B,cAAQ;AAAA,IACZ,WAAW,SAAS;AAChB,cAAQC,gBAAe,QAAQ,KAAK;AACpC,cAAQA,gBAAe,QAAQ,KAAK;AAAA,IACxC;AAEA,QAAI,UAAUD,SAAQ,UAAUA,OAAM;AAClC,YAAM,IAAI,MAAM,6EAA8E;AAAA,IAClG;AAEA,IAAAE,MAAK,MAAM,OAAO;AAAA,EACtB;;;ACjDA,MAAM,cAAc;AAAA,IAChB,UAAU,UAAU;AAChB,YAAM,SAAS,CAAC;AAChB,UAAI,UAAU;AAEd,aAAO;AAAA,QACH,GAAG;AAAA,QACH,KAAK,MAAM;AACP,gBAAM,MAAM;AACZ,oBAAU;AACV,mBAAS,KAAK,KAAK,MAAM,IAAI;AAC7B,oBAAU;AAAA,QACd;AAAA,QACA,KAAK,OAAO,MAAM,MAAM;AACpB,iBAAO,KAAK;AAAA,YACR;AAAA,YACA;AAAA,YACA,MAAM,OAAO,OAAO;AAAA,UACxB,CAAC;AAAA,QACL;AAAA,QACA,SAAS;AACL,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAEA,WAAS,eAAe,KAAK;AACzB,UAAM,SAAS,CAAC;AAEhB;AAAA,MAAS;AAAA,MAAK,CAAC,MAAM,OAAO,QACxB,OAAO,KAAK;AAAA,QACR;AAAA,QACA,OAAO,IAAI,MAAM,OAAO,GAAG;AAAA,QAC3B,MAAM;AAAA,MACV,CAAC;AAAA,IACL;AAEA,WAAO;AAAA,EACX;AAEe,WAAR,uBAAiB,OAAO,QAAQ;AACnC,QAAI,OAAO,UAAU,UAAU;AAC3B,aAAO,eAAe,KAAK;AAAA,IAC/B;AAEA,WAAO,OAAO,SAAS,OAAO,WAAW;AAAA,EAC7C;;;AC/CO,MAAM,QAAQ,EAAE,MAAM,QAAQ;AAC9B,MAAM,WAAW,EAAE,MAAM,WAAW;AACpC,MAAM,iBAAiB,EAAE,MAAM,gBAAgB;AAEtD,MAAME,mBAAkB;AACxB,MAAMC,oBAAmB;AAEzB,WAAS,gBAAgB,OAAO,YAAY,YAAY;AAEpD,QAAI,eAAe,SAAS,eAAe,UAAU;AACjD,aAAO;AAAA,IACX;AAEA,QAAI,UAAU,SAAS,eAAe,SAAS,eAAe,OAAO;AACjE,aAAO;AAAA,IACX;AAEA,QAAI,MAAM,SAAS,QAAQ,MAAM,SAAS,YAAY,eAAe,OAAO;AACxE,mBAAa,MAAM;AACnB,cAAQ,MAAM;AAAA,IAClB;AAEA,WAAO;AAAA,MACH,MAAM;AAAA,MACN;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,IACV;AAAA,EACJ;AAEA,WAAS,eAAeC,QAAM;AAC1B,WACIA,OAAK,SAAS,KACdA,OAAK,WAAWA,OAAK,SAAS,CAAC,MAAMF,oBACrCE,OAAK,WAAWA,OAAK,SAAS,CAAC,MAAMD;AAAA,EAE7C;AAEA,WAAS,gBAAgB,MAAM;AAC3B,WACI,KAAK,SAAS,aACd,KAAK,SAAS,eACd,KAAK,SAAS,cACd,KAAK,SAAS,UAAU,eAAe,KAAK,IAAI;AAAA,EAExD;AAEA,WAAS,qBAAqB,YAAY,OAAO,uBAAuB;AACpE,YAAQ,YAAY;AAAA,MAChB,KAAK,KAAK;AAYN,YAAI,SAAS;AAEb,iBAAS,IAAI,MAAM,SAAS,GAAG,KAAK,GAAG,KAAK;AACxC,gBAAM,OAAO,MAAM,CAAC;AAEpB,mBAAS;AAAA,YACL;AAAA,YACA;AAAA,YACA;AAAA,UACJ;AAAA,QACJ;AAAC;AAED,eAAO;AAAA,MACX;AAAA,MAEA,KAAK,KAAK;AAaN,YAAI,SAAS;AACb,YAAI,MAAM;AAEV,iBAAS,IAAI,MAAM,SAAS,GAAG,KAAK,GAAG,KAAK;AACxC,cAAI,OAAO,MAAM,CAAC;AAGlB,cAAI,gBAAgB,IAAI,GAAG;AACvB,gBAAI,QAAQ,QAAQ,IAAI,KAAK,gBAAgB,MAAM,IAAI,CAAC,CAAC,GAAG;AACxD,oBAAM,uBAAO,OAAO,IAAI;AACxB,uBAAS;AAAA,gBACL;AAAA,kBACI,MAAM;AAAA,kBACN;AAAA,gBACJ;AAAA,gBACA;AAAA,gBACA;AAAA,cACJ;AAAA,YACJ;AAEA,gBAAI,QAAQ,MAAM;AACd,oBAAM,OAAO,eAAe,KAAK,IAAI,IAAI,KAAK,KAAK,MAAM,GAAG,EAAE,IAAI,KAAK,MAAM,YAAY;AACzF,kBAAI,OAAO,QAAQ,OAAO;AACtB,oBAAI,GAAG,IAAI;AACX;AAAA,cACJ;AAAA,YACJ;AAAA,UACJ;AAEA,gBAAM;AAGN,mBAAS;AAAA,YACL;AAAA,YACA;AAAA,YACA;AAAA,UACJ;AAAA,QACJ;AAAC;AAED,eAAO;AAAA,MACX;AAAA,MAEA,KAAK,MAAM;AAMP,YAAI,MAAM,SAAS,GAAG;AAClB,iBAAO;AAAA,YACH,MAAM;AAAA,YACN;AAAA,YACA,KAAK;AAAA,UACT;AAAA,QACJ;AAyBA,YAAI,SAAS;AAEb,iBAAS,IAAI,MAAM,SAAS,GAAG,KAAK,GAAG,KAAK;AACxC,gBAAM,OAAO,MAAM,CAAC;AACpB,cAAI;AAEJ,cAAI,MAAM,SAAS,GAAG;AAClB,yBAAa;AAAA,cACT;AAAA,cACA,MAAM,OAAO,SAAS,cAAc;AAChC,uBAAO,iBAAiB;AAAA,cAC5B,CAAC;AAAA,cACD;AAAA,YACJ;AAAA,UACJ,OAAO;AACH,yBAAa;AAAA,UACjB;AAEA,mBAAS;AAAA,YACL;AAAA,YACA;AAAA,YACA;AAAA,UACJ;AAAA,QACJ;AAAC;AAED,eAAO;AAAA,MACX;AAAA,MAEA,KAAK,MAAM;AAMP,YAAI,MAAM,SAAS,GAAG;AAClB,iBAAO;AAAA,YACH,MAAM;AAAA,YACN;AAAA,YACA,KAAK;AAAA,UACT;AAAA,QACJ;AAyBA,YAAI,SAAS,wBAAwB,QAAQ;AAE7C,iBAAS,IAAI,MAAM,SAAS,GAAG,KAAK,GAAG,KAAK;AACxC,gBAAM,OAAO,MAAM,CAAC;AACpB,cAAI;AAEJ,cAAI,MAAM,SAAS,GAAG;AAClB,yBAAa;AAAA,cACT;AAAA,cACA,MAAM,OAAO,SAAS,cAAc;AAChC,uBAAO,iBAAiB;AAAA,cAC5B,CAAC;AAAA,cACD;AAAA,YACJ;AAAA,UACJ,OAAO;AACH,yBAAa;AAAA,UACjB;AAEA,mBAAS;AAAA,YACL;AAAA,YACA;AAAA,YACA;AAAA,UACJ;AAAA,QACJ;AAAC;AAED,eAAO;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;AAEA,WAAS,0BAA0B,MAAM;AACrC,QAAI,SAAS;AACb,QAAI,YAAY,wBAAwB,KAAK,IAAI;AAEjD,QAAI,KAAK,QAAQ,GAAG;AAEhB,kBAAY;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAIA,eAAS;AAAA,QACL;AAAA,QACA;AAAA;AAAA,QACA;AAAA,MACJ;AAEA,aAAO,OAAO;AAAA,QACV;AAAA,QACA;AAAA,QACA;AAAA;AAAA,MACJ;AAEA,UAAI,KAAK,OAAO;AACZ,eAAO,KAAK,OAAO;AAAA,UACf,EAAE,MAAM,SAAS,QAAQ,KAAK;AAAA,UAC9B;AAAA,UACA;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ,OAAO;AAEH,eAAS,IAAI,KAAK,OAAO,GAAG,KAAK,KAAK,KAAK,KAAK;AAC5C,YAAI,KAAK,SAAS,WAAW,OAAO;AAChC,mBAAS;AAAA,YACL,EAAE,MAAM,SAAS,QAAQ,KAAK;AAAA,YAC9B;AAAA,YACA;AAAA,UACJ;AAAA,QACJ;AAEA,iBAAS;AAAA,UACL;AAAA,UACA;AAAA,YACI;AAAA,YACA;AAAA,YACA;AAAA,UACJ;AAAA,UACA;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAEA,QAAI,KAAK,QAAQ,GAAG;AAEhB,eAAS;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,IACJ,OAAO;AAEH,eAAS,IAAI,GAAG,IAAI,KAAK,MAAM,GAAG,KAAK;AACnC,YAAI,KAAK,SAAS,WAAW,OAAO;AAChC,mBAAS;AAAA,YACL,EAAE,MAAM,SAAS,QAAQ,KAAK;AAAA,YAC9B;AAAA,YACA;AAAA,UACJ;AAAA,QACJ;AAEA,iBAAS;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAEA,WAAS,wBAAwB,MAAM;AACnC,QAAI,OAAO,SAAS,YAAY;AAC5B,aAAO;AAAA,QACH,MAAM;AAAA,QACN,IAAI;AAAA,MACR;AAAA,IACJ;AAEA,YAAQ,KAAK,MAAM;AAAA,MACf,KAAK,SAAS;AACV,YAAI,SAAS;AAAA,UACT,KAAK;AAAA,UACL,KAAK,MAAM,IAAI,uBAAuB;AAAA,UACtC;AAAA,QACJ;AAEA,YAAI,KAAK,eAAe;AACpB,mBAAS;AAAA,YACL;AAAA,YACA;AAAA,YACA;AAAA,UACJ;AAAA,QACJ;AAEA,eAAO;AAAA,MACX;AAAA,MAEA,KAAK;AACD,eAAO,0BAA0B,IAAI;AAAA,MAEzC,KAAK;AAAA,MACL,KAAK;AACD,eAAO;AAAA,UACH,MAAM,KAAK;AAAA,UACX,MAAM,KAAK;AAAA,UACX,QAAQ;AAAA,QACZ;AAAA,MAEJ,KAAK;AACD,eAAO;AAAA,UACH,MAAM,KAAK;AAAA,UACX,MAAM,KAAK,KAAK,YAAY;AAAA,UAC5B,QAAQ;AAAA,QACZ;AAAA,MAEJ,KAAK;AACD,eAAO;AAAA,UACH,MAAM,KAAK;AAAA,UACX,MAAM,MAAM,KAAK,KAAK,YAAY;AAAA,UAClC,QAAQ;AAAA,QACZ;AAAA,MAEJ,KAAK;AACD,eAAO;AAAA,UACH,MAAM,KAAK;AAAA,UACX,MAAM,KAAK,KAAK,YAAY,IAAI;AAAA,UAChC,QAAQ;AAAA,QACZ;AAAA,MAEJ,KAAK;AAED,YAAI,KAAK,MAAM,WAAW,GAAG;AACzB,iBAAO;AAAA,YACH,MAAM;AAAA,YACN,OAAO,KAAK,MAAM,OAAO,CAAC;AAAA,YAC1B,QAAQ;AAAA,UACZ;AAAA,QACJ;AAGA,eAAO;AAAA,UACH,MAAM,KAAK;AAAA,UACX,OAAO,KAAK,MAAM,OAAO,GAAG,KAAK,MAAM,SAAS,CAAC,EAAE,QAAQ,QAAQ,GAAI;AAAA,UACvE,QAAQ;AAAA,QACZ;AAAA,MAEJ,KAAK;AACD,eAAO;AAAA,UACH,MAAM,KAAK;AAAA,UACX,OAAO,KAAK;AAAA,UACZ,QAAQ;AAAA,QACZ;AAAA,MAEJ,KAAK;AACD,eAAO;AAAA,UACH,MAAM,KAAK;AAAA,UACX,QAAQ;AAAA,QACZ;AAAA,MAEJ;AACI,cAAM,IAAI,MAAM,sBAAsB,KAAK,IAAI;AAAA,IACvD;AAAA,EACJ;AAEO,WAAS,gBAAgB,YAAY,KAAK;AAC7C,QAAI,OAAO,eAAe,UAAU;AAChC,mBAAaE,OAAM,UAAU;AAAA,IACjC;AAEA,WAAO;AAAA,MACH,MAAM;AAAA,MACN,OAAO,wBAAwB,UAAU;AAAA,MACzC,QAAQ,OAAO;AAAA,MACf,QAAQ;AAAA,IACZ;AAAA,EACJ;;;ACpcA,MAAM,EAAE,gBAAAC,gBAAe,IAAI,OAAO;AAClC,MAAM,OAAO;AACb,MAAM,QAAQ;AACd,MAAM,cAAc;AACpB,MAAM,eAAe;AAErB,MAAM,oBAAoB;AAC1B,MAAM,uBAAuB;AAC7B,MAAM,8BAA8B;AAEpC,MAAM,kBAAkB;AACjB,MAAI,sBAAsB;AAEjC,WAAS,YAAY,MAAM;AACvB,QAAI,OAAO;AACX,QAAI,OAAO;AACX,QAAI,OAAO;AAEX,WAAO,SAAS,MAAM;AAClB,aAAO,KAAK;AACZ,WAAK,OAAO;AACZ,aAAO;AACP,aAAO;AAAA,IACX;AAEA,WAAO;AAAA,EACX;AAEA,WAAS,+BAA+B,SAAS,cAAc;AAC3D,QAAI,QAAQ,WAAW,aAAa,QAAQ;AACxC,aAAO;AAAA,IACX;AAEA,aAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACrC,YAAM,gBAAgB,aAAa,WAAW,CAAC;AAC/C,UAAI,WAAW,QAAQ,WAAW,CAAC;AAGnC,UAAI,YAAY,MAAU,YAAY,IAAQ;AAC1C,mBAAW,WAAW;AAAA,MAC1B;AAEA,UAAI,aAAa,eAAe;AAC5B,eAAO;AAAA,MACX;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAEA,WAAS,mBAAmB,OAAO;AAC/B,QAAI,MAAM,SAAc,OAAO;AAC3B,aAAO;AAAA,IACX;AAIA,WAAO,MAAM,UAAU;AAAA,EAC3B;AAEA,WAAS,oBAAoB,OAAO;AAChC,QAAI,UAAU,MAAM;AAChB,aAAO;AAAA,IACX;AAEA,WACI,MAAM,SAAc,SACpB,MAAM,SAAcC,aACpB,MAAM,SAAc,mBACpB,MAAM,SAAc,qBACpB,MAAM,SAAc,oBACpB,mBAAmB,KAAK;AAAA,EAEhC;AAEA,WAAS,kBAAkB,OAAO;AAC9B,QAAI,UAAU,MAAM;AAChB,aAAO;AAAA,IACX;AAEA,WACI,MAAM,SAAc,oBACpB,MAAM,SAAc,sBACpB,MAAM,SAAc,qBACnB,MAAM,SAAc,SAAS,MAAM,UAAU;AAAA,EAEtD;AAEA,WAAS,cAAc,QAAQ,OAAO,UAAU;AAC5C,aAAS,kBAAkB;AACvB,SAAG;AACC;AACA,gBAAQ,aAAa,OAAO,SAAS,OAAO,UAAU,IAAI;AAAA,MAC9D,SAAS,UAAU,SAAS,MAAM,SAAc,cAAc,MAAM,SAAc;AAAA,IACtF;AAEA,aAAS,aAAa,QAAQ;AAC1B,YAAM,YAAY,aAAa;AAE/B,aAAO,YAAY,OAAO,SAAS,OAAO,SAAS,IAAI;AAAA,IAC3D;AAEA,aAAS,wBAAwB,WAAW,MAAM;AAC9C,aAAO;AAAA,QACH;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,IACJ;AAEA,aAAS,cAAc,WAAW;AAC9B,kBAAY;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,QACA,MAAM;AAAA,MACV;AAAA,IACJ;AAEA,aAAS,cAAc,WAAW;AAC9B,kBAAY,wBAAwB,WAAW,SAAS;AAAA,IAC5D;AAEA,aAAS,kBAAkB;AACvB,mBAAa;AAAA,QACT,MAAM;AAAA,QACN,QAAQ,MAAM;AAAA,QACd;AAAA,QACA,MAAM;AAAA,MACV;AAEA,sBAAgB;AAChB,oBAAc;AAEd,UAAI,aAAa,cAAc;AAC3B,uBAAe;AAAA,MACnB;AAAA,IACJ;AAEA,aAAS,aAAa;AAClB,oBAAc;AAAA,QACV,QAAQ,MAAM;AAAA,QACd,MAAM,MAAM,OAAO,QAAS,gBAAgB,QAAQ,YAAY,QAAS;AAAA,QACzE,MAAM;AAAA,MACV;AAEA,mBAAa;AAAA,QACT,MAAM;AAAA,QACN,QAAQ,MAAM;AAAA,QACd,OAAO,WAAW;AAAA,QAClB,MAAM;AAAA,MACV;AAAA,IACJ;AAEA,aAAS,cAAc;AACnB,UAAI,WAAW,SAAS,aAAa;AACjC,qBAAa,WAAW;AAAA,MAC5B,OAAO;AACH,qBAAa;AAAA,UACT,MAAM;AAAA,UACN,QAAQ,YAAY;AAAA,UACpB,OAAO,WAAW;AAAA,UAClB,MAAM;AAAA,QACV;AAAA,MACJ;AAEA,oBAAc,YAAY;AAAA,IAC9B;AAEA,QAAI,cAAc;AAClB,QAAI,YAAY;AAChB,QAAI,YAAY;AAKhB,QAAI,cAAc;AAElB,QAAI,iBAAiB;AACrB,QAAI,aAAa;AAEjB,QAAI,QAAQ;AACZ,QAAI,aAAa;AACjB,QAAI,eAAe;AACnB,QAAI,aAAa;AAAA,MACb,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAEA,oBAAgB;AAEhB,WAAO,eAAe,QAAQ,EAAE,iBAAiB,iBAAiB;AAkB9D,cAAQ,MAAM,MAAM;AAAA,QAChB,KAAK;AACD,cAAI,cAAc,MAAM;AAEpB,gBAAI,UAAU,MAAM;AAEhB,kBAAI,eAAe,OAAO,SAAS,KAAM,MAAM,UAAU,SAAS,MAAM,UAAU,OAAQ;AACtF,wBAAQ;AACR;AAAA,cACJ;AAAA,YACJ;AAGA,yBAAa;AACb;AAAA,UACJ;AAGA,kBAAQ,UAAU;AAGlB,cAAI,UAAU,gBAAgB;AAC1B,gBAAI,UAAU,eAAe,YAAY;AACrC,sBAAQ;AACR;AAAA,YACJ,OAAO;AACH,sBAAQ;AAAA,YACZ;AAAA,UACJ;AAGA,iBAAO,UAAU,gBAAgB,aAAa;AAC1C,wBAAY;AAAA,UAChB;AAGA,sBAAY,UAAU;AACtB;AAAA,QAEJ,KAAK;AAED,cAAI,gBAAgB,QAAQ,gBAAgB,OAAO;AAE/C,gBAAI,cAAc,QAAQ,aAAa,UAAU,YAAY;AAEzD,0BAAY;AACZ,4BAAc;AAAA,YAClB;AAAA,UACJ,WAAW,cAAc,MAAM;AAG3B,yBAAa;AACb;AAAA,UACJ;AAGA,kBAAQ,UAAU;AAGlB,sBAAY,UAAU;AACtB,wBAAc,UAAU;AACxB,uBAAa,UAAU;AACvB,uBAAa,UAAU;AACvB,kBAAQ,aAAa,OAAO,SAAS,OAAO,UAAU,IAAI;AAG1D,sBAAY,UAAU;AACtB;AAAA,QAEJ,KAAK;AACD,kBAAQ,MAAM;AACd;AAAA,QAEJ,KAAK;AAGD,cAAI,MAAM,SAAS,UAAU;AACzB,0BAAc,MAAM,IAAI;AAAA,UAC5B;AAEA,cAAI,MAAM,SAAS,OAAO;AACtB,0BAAc,MAAM,IAAI;AAAA,UAC5B;AAEA,kBAAQ,MAAM;AACd;AAAA,QAEJ,KAAK;AACD,kBAAQ;AAAA,YACJ,MAAM;AAAA,YACN,QAAQ;AAAA,YACR,OAAO;AAAA,YACP,MAAM;AAAA,UACV;AACA;AAAA,QAEJ,KAAK,mBAAmB;AACpB,gBAAM,QAAQ,MAAM,OAAO;AAE3B,cAAI,MAAM,UAAU,MAAM,QAAQ;AAE9B,gBAAI,MAAM,SAAS,KAAK,MAAM,OAAO,KAAK;AACtC,sBAAQ;AACR;AAAA,YACJ;AAGA,oBAAQ;AACR;AAAA,UACJ;AAGA,cAAI,MAAM,UAAU,KAAK,MAAM,UAAU,GAAG;AACxC,oBAAQ;AACR;AAAA,UACJ;AAEA,iBAAO,MAAM,QAAQ,MAAM,QAAQ,MAAM,SAAS;AAC9C,kBAAM,YAAY,KAAK,MAAM;AAE7B,iBAAK,MAAM,OAAO,eAAe,GAAG;AAGhC,4BAAc,KAAK;AACnB,4BAAc;AAAA,gBACV,MAAM;AAAA,gBACN,QAAQ,MAAM;AAAA,gBACd,MAAM,MAAM,OAAO;AAAA,cACvB,CAAC;AAGD,sBAAQ,MAAM,MAAM,OAAO;AAC3B;AAAA,YACJ;AAAA,UACJ;AACA;AAAA,QACJ;AAAA,QAEA,KAAK;AACD,kBAAQ;AAAA,YACJ,MAAM;AAAA,YACN,QAAQ,MAAM;AAAA,YACd,OAAO;AAAA,YACP,MAAM,MAAM;AAAA,UAChB;AACA;AAAA,QAEJ,KAAK;AACD,cAAI,UAAU,MAAM;AAChB,gBAAIC,SAAO,MAAM,MAAM,YAAY;AAGnC,gBAAIA,OAAK,QAAQ,IAAI,MAAM,IAAI;AAC3B,cAAAA,SAAOA,OAAK,QAAQ,aAAa,EAAE;AAAA,YACvC;AAEA,gBAAIF,gBAAe,KAAK,MAAM,KAAKE,MAAI,GAAG;AACtC,sBAAQ,MAAM,IAAIA,MAAI;AACtB;AAAA,YACJ;AAAA,UACJ;AAEA,kBAAQ;AACR;AAAA,QAEJ,KAAK,WAAW;AACZ,gBAAM,OAAO,gBAAgB,OAAO,YAAY,OAAO;AACvD,gBAAMC,kBAAiB,aAAa,KAAK,MAAM,MAAM,GAAG,OAAO,cAAc,IAAI,CAAC;AAElF,cAAI,CAAC,MAAMA,eAAc,KAAKA,kBAAiB,YAAY;AACvD,mBAAO,aAAaA,iBAAgB;AAChC,8BAAgB;AAAA,YACpB;AAEA,oBAAQ;AAAA,UACZ,OAAO;AACH,oBAAQ;AAAA,UACZ;AAEA;AAAA,QACJ;AAAA,QAEA,KAAK;AAAA,QACL,KAAK,YAAY;AACb,gBAAM,aAAa,MAAM,SAAS,SAAS,UAAU;AACrD,gBAAM,aAAaH,gBAAe,KAAK,UAAU,UAAU,IAAI,SAAS,UAAU,EAAE,MAAM,IAAI,IAAI;AAElG,cAAI,CAAC,cAAc,CAAC,WAAW,OAAO;AAClC,kBAAM,IAAI;AAAA,cACN,4BACC,MAAM,SAAS,SACV,MAAM,MAAM,OAAO,MACnB,OAAQ,MAAM,OAAO;AAAA,YAC/B;AAAA,UACJ;AAGA,cAAI,gBAAgB,SAAS,UAAU,QAAQ,MAAM,SAAS,QAAQ;AAClE,kBAAM;AAAA;AAAA;AAAA;AAAA,cAID,MAAM,SAAS,kBAAkB,MAAM,SAAc;AAAA;AAAA;AAAA,cAKrD,MAAM,SAAS,YAAY,MAAM,UAAU;AAAA;AAEhD,gBAAI,qBAAqB;AACrB,kBAAI,gBAAgB,MAAM;AACtB,8BAAc,wBAAwB,OAAO,SAAS;AAAA,cAC1D;AAEA,sBAAQ;AACR;AAAA,YACJ;AAAA,UACJ;AAEA,qBAAW;AACX,kBAAQ,WAAW;AACnB;AAAA,QACJ;AAAA,QAEA,KAAK,WAAW;AACZ,gBAAME,SAAO,MAAM;AAEnB,cAAI,UAAU,MAAM;AAChB,gBAAI,cAAc,MAAM;AAGxB,gBAAI,YAAY,QAAQ,IAAI,MAAM,IAAI;AAClC,4BAAc,YAAY,QAAQ,aAAa,EAAE;AAAA,YACrD;AAEA,gBAAI,+BAA+B,aAAaA,MAAI,GAAG;AACnD,8BAAgB;AAChB,sBAAQ;AACR;AAAA,YACJ;AAAA,UACJ;AAEA,kBAAQ;AACR;AAAA,QACJ;AAAA,QAEA,KAAK;AAAA,QACL,KAAK;AACD,cAAI,UAAU,QAAQ,+BAA+B,MAAM,OAAO,MAAM,IAAI,GAAG;AAC3E,4BAAgB;AAChB,oBAAQ;AACR;AAAA,UACJ;AAEA,kBAAQ;AACR;AAAA,QAEJ,KAAK;AACD,cAAI,UAAU,QAAQ,MAAM,UAAU,MAAM,OAAO;AAC/C,4BAAgB;AAChB,oBAAQ;AACR;AAAA,UACJ;AAEA,kBAAQ;AACR;AAAA,QAEJ,KAAK;AACD,cAAI,UAAU,QAAQ,MAAM,SAAc,OAAO;AAC7C,gBAAI,oBAAoB,WAAW,KAAK,GAAG;AACvC,sBAAQ;AAAA,YACZ,OAAO;AACH,8BAAgB;AAChB,sBAAQ,kBAAkB,KAAK,IAAI,WAAW;AAAA,YAClD;AAAA,UACJ,OAAO;AACH,oBAAQ,oBAAoB,WAAW,KAAK,KAAK,kBAAkB,KAAK,IAAI,QAAQ;AAAA,UACxF;AAEA;AAAA,QAEJ,KAAK;AACD,cAAI,SAAS;AACb,cAAI,iBAAiB;AAErB,iBAAO,iBAAiB,OAAO,UAAU,OAAO,SAAS,MAAM,MAAM,QAAQ,kBAAkB;AAC3F,sBAAU,OAAO,cAAc,EAAE;AAAA,UACrC;AAEA,cAAI,+BAA+B,QAAQ,MAAM,KAAK,GAAG;AACrD,mBAAO,aAAa,gBAAgB;AAChC,8BAAgB;AAAA,YACpB;AAEA,oBAAQ;AAAA,UACZ,OAAO;AACH,oBAAQ;AAAA,UACZ;AAEA;AAAA,QAEJ;AACI,gBAAM,IAAI,MAAM,wBAAwB,MAAM,IAAI;AAAA,MAC1D;AAAA,IACJ;AAEA,2BAAuB;AAEvB,YAAQ,YAAY;AAAA,MAChB,KAAK;AACD,gBAAQ,KAAK,iCAAiC,kBAAkB,aAAa;AAC7E,qBAAa;AACb,qBAAa;AACb;AAAA,MAEJ,KAAK;AACD,eAAO,gBAAgB,MAAM;AACzB,sBAAY;AAAA,QAChB;AACA;AAAA,MAEJ;AACI,qBAAa;AAAA,IACrB;AAEA,WAAO;AAAA,MACH;AAAA,MACA,QAAQ;AAAA,MACR,YAAY;AAAA,MACZ,OAAO;AAAA,MACP;AAAA,IACJ;AAAA,EACJ;AAmCO,WAAS,YAAY,QAAQ,YAAY,UAAU;AACtD,UAAM,cAAc,cAAc,QAAQ,YAAY,YAAY,CAAC,CAAC;AAEpE,QAAI,YAAY,UAAU,MAAM;AAC5B,aAAO;AAAA,IACX;AAEA,QAAI,OAAO,YAAY;AACvB,QAAI,OAAO,YAAY,QAAQ;AAAA,MAC3B,QAAQ,WAAW,UAAU;AAAA,MAC7B,OAAO,CAAC;AAAA,IACZ;AACA,UAAM,YAAY,CAAC,IAAI;AAGvB,WAAO,YAAY,IAAI,EAAE;AAGzB,WAAO,SAAS,MAAM;AAClB,cAAQ,KAAK,MAAM;AAAA,QACf,KAAK;AACD,eAAK,MAAM,KAAK,OAAO;AAAA,YACnB,QAAQ,KAAK;AAAA,YACb,OAAO,CAAC;AAAA,UACZ,CAAC;AACD,oBAAU,KAAK,IAAI;AACnB;AAAA,QAEJ,KAAK;AACD,oBAAU,IAAI;AACd,iBAAO,UAAU,UAAU,SAAS,CAAC;AACrC;AAAA,QAEJ;AACI,eAAK,MAAM,KAAK;AAAA,YACZ,QAAQ,KAAK,UAAU;AAAA,YACvB,OAAO,KAAK,MAAM;AAAA,YAClB,MAAM,KAAK,MAAM;AAAA,UACrB,CAAC;AAAA,MACT;AAEA,aAAO,KAAK;AAAA,IAChB;AAEA,WAAO;AAAA,EACX;;;ACrnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,WAAS,SAAS,MAAM;AAC3B,aAAS,iBAAiB,QAAQ;AAC9B,UAAI,WAAW,MAAM;AACjB,eAAO;AAAA,MACX;AAEA,aACI,OAAO,SAAS,UAChB,OAAO,SAAS,cAChB,OAAO,SAAS;AAAA,IAExB;AAEA,aAAS,SAAS,WAAW;AACzB,UAAI,MAAM,QAAQ,UAAU,KAAK,GAAG;AAEhC,iBAAS,IAAI,GAAG,IAAI,UAAU,MAAM,QAAQ,KAAK;AAC7C,cAAI,SAAS,UAAU,MAAM,CAAC,CAAC,GAAG;AAC9B,gBAAI,iBAAiB,UAAU,MAAM,GAAG;AACpC,qBAAO,QAAQ,UAAU,MAAM;AAAA,YACnC;AAEA,mBAAO;AAAA,UACX;AAAA,QACJ;AAAA,MACJ,WAAW,UAAU,SAAS,MAAM;AAChC,iBAAS,iBAAiB,UAAU,MAAM,IACpC,CAAC,UAAU,MAAM,IACjB,CAAC;AAEP,eAAO;AAAA,MACX;AAEA,aAAO;AAAA,IACX;AAEA,QAAI,SAAS;AAEb,QAAI,KAAK,YAAY,MAAM;AACvB,eAAS,KAAK,OAAO;AAAA,IACzB;AAEA,WAAO;AAAA,EACX;AAEO,WAAS,OAAO,MAAM,MAAM;AAC/B,WAAO,SAAS,MAAM,MAAM,WAAS,MAAM,SAAS,UAAU,MAAM,SAAS,IAAI;AAAA,EACrF;AAEO,WAAS,WAAW,MAAME,WAAU;AACvC,WAAO,SAAS,MAAM,MAAM,WAAS,MAAM,SAAS,cAAc,MAAM,SAASA,SAAQ;AAAA,EAC7F;AAEO,WAAS,UAAU,MAAM;AAC5B,WAAO,SAAS,MAAM,MAAM,WAAS,MAAM,SAAS,SAAS;AAAA,EACjE;AAEA,WAAS,SAAS,OAAO,MAAM,IAAI;AAC/B,UAAM,QAAQ,SAAS,KAAK,OAAO,IAAI;AAEvC,QAAI,UAAU,MAAM;AAChB,aAAO;AAAA,IACX;AAEA,WAAO,MAAM,KAAK,EAAE;AAAA,EACxB;;;AC/DA,WAAS,kBAAkB,WAAW;AAClC,QAAI,UAAU,WAAW;AACrB,aAAO,UAAU;AAAA,IACrB;AAEA,WAAO,kBAAkB,UAAU,MAAM,CAAC,CAAC;AAAA,EAC/C;AAEA,WAAS,iBAAiB,WAAW;AACjC,QAAI,UAAU,WAAW;AACrB,aAAO,UAAU;AAAA,IACrB;AAEA,WAAO,iBAAiB,UAAU,MAAM,UAAU,MAAM,SAAS,CAAC,CAAC;AAAA,EACvE;AAEO,WAAS,eAAeC,QAAO,KAAK,OAAO,MAAMC,QAAM;AAC1D,aAAS,cAAc,WAAW;AAC9B,UAAI,UAAU,WAAW,QACrB,UAAU,OAAO,SAAS,QAC1B,UAAU,OAAO,SAASA,QAAM;AAChC,cAAM,QAAQ,kBAAkB,SAAS;AACzC,cAAM,MAAM,iBAAiB,SAAS;AAEtC,QAAAD,OAAM,OAAO,KAAK,KAAK,SAAS,MAAM,MAAM,MAAM;AAC9C,cAAI,SAAS,OAAO;AAChB,kBAAM,QAAQ,IAAI,KAAK;AAEvB,eAAG;AACC,oBAAM,WAAW,KAAK,IAAI;AAE1B,kBAAI,KAAK,SAAS,KAAK;AACnB;AAAA,cACJ;AAEA,qBAAO,KAAK;AAAA,YAChB,SAAS,SAAS;AAElB,sBAAU,KAAK;AAAA,cACX,QAAQ;AAAA,cACR;AAAA,YACJ,CAAC;AAAA,UACL;AAAA,QACJ,CAAC;AAAA,MACL;AAEA,UAAI,MAAM,QAAQ,UAAU,KAAK,GAAG;AAChC,kBAAU,MAAM,QAAQ,aAAa;AAAA,MACzC;AAAA,IACJ;AAEA,UAAM,YAAY,CAAC;AAEnB,QAAI,MAAM,YAAY,MAAM;AACxB,oBAAc,MAAM,OAAO;AAAA,IAC/B;AAEA,WAAO;AAAA,EACX;;;AC1DA,MAAM,EAAE,gBAAAE,gBAAe,IAAI,OAAO;AAElC,WAAS,cAAc,OAAO;AAE1B,WACI,OAAO,UAAU,YACjB,SAAS,KAAK,KACd,KAAK,MAAM,KAAK,MAAM,SACtB,SAAS;AAAA,EAEjB;AAEA,WAAS,gBAAgB,KAAK;AAC1B,WACI,QAAQ,GAAG,KACX,cAAc,IAAI,MAAM,KACxB,cAAc,IAAI,IAAI,KACtB,cAAc,IAAI,MAAM;AAAA,EAEhC;AAEA,WAAS,2BAA2B,MAAM,QAAQ;AAC9C,WAAO,SAAS,UAAU,MAAM,MAAM;AAClC,UAAI,CAAC,QAAQ,KAAK,gBAAgB,QAAQ;AACtC,eAAO,KAAK,MAAM,kCAAkC;AAAA,MACxD;AAEA,eAAS,OAAO,MAAM;AAClB,YAAI,QAAQ;AAEZ,YAAIA,gBAAe,KAAK,MAAM,GAAG,MAAM,OAAO;AAC1C;AAAA,QACJ;AAEA,YAAI,QAAQ,QAAQ;AAChB,cAAI,KAAK,SAAS,MAAM;AACpB,iBAAK,MAAM,sBAAsB,KAAK,OAAO,kBAAkB,OAAO,GAAG;AAAA,UAC7E;AAAA,QACJ,WAAW,QAAQ,OAAO;AACtB,cAAI,KAAK,QAAQ,MAAM;AACnB;AAAA,UACJ,WAAW,KAAK,OAAO,KAAK,IAAI,gBAAgB,QAAQ;AACpD,gBAAI,OAAO,KAAK,IAAI,WAAW,UAAU;AACrC,qBAAO;AAAA,YACX,WAAW,CAAC,gBAAgB,KAAK,IAAI,KAAK,GAAG;AACzC,qBAAO;AAAA,YACX,WAAW,CAAC,gBAAgB,KAAK,IAAI,GAAG,GAAG;AACvC,qBAAO;AAAA,YACX,OAAO;AACH;AAAA,YACJ;AAAA,UACJ;AAEA,kBAAQ;AAAA,QACZ,WAAW,OAAO,eAAe,GAAG,GAAG;AACnC,kBAAQ;AAER,mBAAS,IAAI,GAAG,CAAC,SAAS,IAAI,OAAO,GAAG,EAAE,QAAQ,KAAK;AACnD,kBAAM,YAAY,OAAO,GAAG,EAAE,CAAC;AAE/B,oBAAQ,WAAW;AAAA,cACf,KAAK;AACD,wBAAQ,OAAO,KAAK,GAAG,MAAM;AAC7B;AAAA,cAEJ,KAAK;AACD,wBAAQ,OAAO,KAAK,GAAG,MAAM;AAC7B;AAAA,cAEJ,KAAK;AACD,wBAAQ,KAAK,GAAG,MAAM;AACtB;AAAA,cAEJ;AACI,oBAAI,OAAO,cAAc,UAAU;AAC/B,0BAAQ,KAAK,GAAG,KAAK,KAAK,GAAG,EAAE,SAAS;AAAA,gBAC5C,WAAW,MAAM,QAAQ,SAAS,GAAG;AACjC,0BAAQ,KAAK,GAAG,aAAa;AAAA,gBACjC;AAAA,YACR;AAAA,UACJ;AAAA,QACJ,OAAO;AACH,eAAK,MAAM,oBAAoB,MAAM,WAAW,OAAO,YAAY;AAAA,QACvE;AAEA,YAAI,CAAC,OAAO;AACR,eAAK,MAAM,oBAAoB,OAAO,MAAM,MAAM,GAAG;AAAA,QACzD;AAAA,MACJ;AAEA,iBAAW,OAAO,QAAQ;AACtB,YAAIA,gBAAe,KAAK,QAAQ,GAAG,KAC/BA,gBAAe,KAAK,MAAM,GAAG,MAAM,OAAO;AAC1C,eAAK,MAAM,YAAY,OAAO,MAAM,MAAM,aAAa;AAAA,QAC3D;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAEA,WAAS,iBAAiBC,QAAM,UAAU;AACtC,UAAMC,cAAY,SAAS;AAC3B,UAAM,SAAS;AAAA,MACX,MAAM;AAAA,MACN,KAAK;AAAA,IACT;AACA,UAAM,OAAO;AAAA,MACT,MAAM,MAAMD,SAAO;AAAA,IACvB;AAEA,eAAW,OAAOC,aAAW;AACzB,UAAIF,gBAAe,KAAKE,aAAW,GAAG,MAAM,OAAO;AAC/C;AAAA,MACJ;AAEA,YAAM,YAAY,CAAC;AACnB,YAAM,aAAa,OAAO,GAAG,IAAI,MAAM,QAAQA,YAAU,GAAG,CAAC,IACvDA,YAAU,GAAG,EAAE,MAAM,IACrB,CAACA,YAAU,GAAG,CAAC;AAErB,eAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AACxC,cAAM,YAAY,WAAW,CAAC;AAC9B,YAAI,cAAc,UAAU,cAAc,SAAS;AAC/C,oBAAU,KAAK,UAAU,IAAI;AAAA,QACjC,WAAW,cAAc,MAAM;AAC3B,oBAAU,KAAK,MAAM;AAAA,QACzB,WAAW,OAAO,cAAc,UAAU;AACtC,oBAAU,KAAK,MAAM,YAAY,GAAG;AAAA,QACxC,WAAW,MAAM,QAAQ,SAAS,GAAG;AACjC,oBAAU,KAAK,MAAM;AAAA,QACzB,OAAO;AACH,gBAAM,IAAI,MAAM,kBAAkB,YAAY,WAAWD,SAAO,MAAM,MAAM,wBAAwB;AAAA,QACxG;AAAA,MACJ;AAEA,WAAK,GAAG,IAAI,UAAU,KAAK,KAAK;AAAA,IACpC;AAEA,WAAO;AAAA,MACH;AAAA,MACA,OAAO,2BAA2BA,QAAM,MAAM;AAAA,IAClD;AAAA,EACJ;AAEO,WAAS,uBAAuB,QAAQ;AAC3C,UAAMC,cAAY,CAAC;AAEnB,QAAI,OAAO,MAAM;AACb,iBAAWD,UAAQ,OAAO,MAAM;AAC5B,YAAID,gBAAe,KAAK,OAAO,MAAMC,MAAI,GAAG;AACxC,gBAAM,WAAW,OAAO,KAAKA,MAAI;AAEjC,cAAI,SAAS,WAAW;AACpB,YAAAC,YAAUD,MAAI,IAAI,iBAAiBA,QAAM,QAAQ;AAAA,UACrD,OAAO;AACH,kBAAM,IAAI,MAAM,kCAAkCA,SAAO,wBAAwB;AAAA,UACrF;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAEA,WAAOC;AAAA,EACX;;;ACtJA,MAAM,wBAAwB,gBAAgB,gBAAgB,KAAK,KAAK,CAAC;AAEzE,WAAS,cAAc,KAAK,SAAS,aAAa;AAC9C,UAAM,SAAS,CAAC;AAEhB,eAAWC,UAAQ,KAAK;AACpB,UAAI,IAAIA,MAAI,EAAE,QAAQ;AAClB,eAAOA,MAAI,IAAI,cACT,IAAIA,MAAI,EAAE,SACV,SAAS,IAAIA,MAAI,EAAE,QAAQ,EAAE,QAAQ,CAAC;AAAA,MAChD;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAEA,WAAS,oBAAoB,KAAK,SAAS,aAAa;AACpD,UAAM,SAAS,CAAC;AAEhB,eAAW,CAACA,QAAM,MAAM,KAAK,OAAO,QAAQ,GAAG,GAAG;AAC9C,aAAOA,MAAI,IAAI;AAAA,QACX,SAAS,OAAO,YACZ,cACM,OAAO,QAAQ,SACf,SAAS,OAAO,QAAQ,QAAQ,EAAE,QAAQ,CAAC;AAAA,QAErD,aAAa,OAAO,eAAe,cAAc,OAAO,aAAa,SAAS,WAAW;AAAA,MAC7F;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAEA,WAAS,YAAY,QAAQ;AACzB,aAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,UAAI,OAAO,CAAC,EAAE,MAAM,YAAY,MAAM,QAAQ;AAC1C,eAAO;AAAA,MACX;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAEA,WAAS,iBAAiB,SAAS,OAAO,YAAY;AAClD,WAAO;AAAA,MACH;AAAA,MACA;AAAA,MACA;AAAA,MACA,GAAG;AAAA,IACP;AAAA,EACJ;AAEA,WAAS,YAAYC,QAAO,QAAQ,OAAO,oBAAoB;AAC3D,UAAM,SAAS,uBAAc,OAAOA,OAAM,MAAM;AAChD,QAAI;AAEJ,QAAI,YAAY,MAAM,GAAG;AACrB,aAAO,iBAAiB,MAAM,IAAI,MAAM,iDAAiD,CAAC;AAAA,IAC9F;AAEA,QAAI,oBAAoB;AACpB,eAAS,YAAY,QAAQA,OAAM,uBAAuBA,MAAK;AAAA,IACnE;AAEA,QAAI,CAAC,sBAAsB,CAAC,OAAO,OAAO;AACtC,eAAS,YAAY,QAAQ,OAAO,OAAOA,MAAK;AAChD,UAAI,CAAC,OAAO,OAAO;AACf,eAAO;AAAA,UACH;AAAA,UACA,IAAI,iBAAiB,OAAO,QAAQ,OAAO,QAAQ,OAAO,MAAM;AAAA,UAChE,OAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO,iBAAiB,OAAO,OAAO,MAAM,OAAO,UAAU;AAAA,EACjE;AAEO,MAAM,QAAN,MAAY;AAAA,IACf,YAAY,QAAQ,QAAQC,aAAW;AACnC,WAAK,wBAAwB;AAC7B,WAAK,SAAS;AACd,WAAK,UAAU;AACf,WAAK,QAAQ,EAAE,GAAG,cAAM;AACxB,WAAK,UAAU,uBAAO,OAAO,IAAI;AACjC,WAAK,aAAa,uBAAO,OAAO,IAAI;AACpC,WAAK,QAAQ,uBAAO,OAAO,IAAI;AAC/B,WAAK,YAAYA,eAAa,uBAAuB,MAAM;AAE3D,UAAI,QAAQ;AACR,YAAI,OAAO,OAAO;AACd,qBAAW,SAAS,OAAO,KAAK,aAAK,GAAG;AACpC,gBAAI,MAAM,QAAQ,OAAO,MAAM,KAAK,CAAC,GAAG;AACpC,mBAAK,MAAM,KAAK,IAAI,OAAO,MAAM,KAAK;AAAA,YAC1C;AAAA,UACJ;AAAA,QACJ;AAEA,YAAI,OAAO,OAAO;AACd,qBAAWF,UAAQ,OAAO,OAAO;AAC7B,iBAAK,SAASA,QAAM,OAAO,MAAMA,MAAI,CAAC;AAAA,UAC1C;AAAA,QACJ;AAEA,YAAI,OAAO,SAAS;AAChB,eAAK,UAAU;AACf,qBAAW,CAACA,QAAM,KAAK,KAAK,OAAO,QAAQ,mBAAmB,KAAK,KAAK,CAAC,GAAG;AACxE,iBAAK,SAASA,QAAM,KAAK;AAAA,UAC7B;AAAA,QACJ;AAEA,YAAI,OAAO,SAAS;AAChB,qBAAWA,UAAQ,OAAO,SAAS;AAC/B,iBAAK,WAAWA,QAAM,OAAO,QAAQA,MAAI,CAAC;AAAA,UAC9C;AAAA,QACJ;AAEA,YAAI,OAAO,YAAY;AACnB,qBAAWA,UAAQ,OAAO,YAAY;AAClC,iBAAK,aAAaA,QAAM,OAAO,WAAWA,MAAI,CAAC;AAAA,UACnD;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA,eAAe,KAAK;AAChB,eAAS,eAAe,MAAM,SAAS;AACnC,cAAM,KAAK,EAAE,MAAM,QAAQ,CAAC;AAAA,MAChC;AAEA,YAAME,cAAY,KAAK;AACvB,YAAM,QAAQ,CAAC;AAEf,WAAK,OAAO,KAAK,KAAK,SAAS,MAAM;AACjC,YAAIA,YAAU,eAAe,KAAK,IAAI,GAAG;AACrC,UAAAA,YAAU,KAAK,IAAI,EAAE,MAAM,MAAM,cAAc;AAAA,QACnD,OAAO;AACH,yBAAe,MAAM,wBAAwB,KAAK,OAAO,GAAG;AAAA,QAChE;AAAA,MACJ,CAAC;AAED,aAAO,MAAM,SAAS,QAAQ;AAAA,IAClC;AAAA,IAEA,iBAAiB,QAAQ,MAAMF,QAAM,SAAS,MAAM;AAChD,YAAM,MAAM;AAAA,QACR;AAAA,QACA,MAAAA;AAAA,MACJ;AACA,YAAM,aAAa;AAAA,QACf;AAAA,QACA,MAAAA;AAAA,QACA;AAAA,QACA,cAAc,OAAO,WAAW,YAAa,UAAU,OAAO,OAAO,SAAS;AAAA,QAC9E,QAAQ;AAAA,QACR,OAAO;AAAA,MACX;AAEA,UAAI,OAAO,WAAW,YAAY;AAC9B,mBAAW,QAAQ,gBAAgB,QAAQ,GAAG;AAAA,MAClD,OAAO;AACH,YAAI,OAAO,WAAW,UAAU;AAE5B,iBAAO,eAAe,YAAY,UAAU;AAAA,YACxC,MAAM;AACF,qBAAO,eAAe,YAAY,UAAU;AAAA,gBACxC,OAAOG,OAAM,MAAM;AAAA,cACvB,CAAC;AAED,qBAAO,WAAW;AAAA,YACtB;AAAA,UACJ,CAAC;AAAA,QACL,OAAO;AACH,qBAAW,SAAS;AAAA,QACxB;AAGA,eAAO,eAAe,YAAY,SAAS;AAAA,UACvC,MAAM;AACF,mBAAO,eAAe,YAAY,SAAS;AAAA,cACvC,OAAO,gBAAgB,WAAW,QAAQ,GAAG;AAAA,YACjD,CAAC;AAED,mBAAO,WAAW;AAAA,UACtB;AAAA,QACJ,CAAC;AAAA,MACL;AAEA,aAAO;AAAA,IACX;AAAA,IACA,WAAWH,QAAM,QAAQ;AACrB,UAAI,CAAC,QAAQ;AACT;AAAA,MACJ;AAEA,WAAK,QAAQA,MAAI,IAAI;AAAA,QACjB,MAAM;AAAA,QACN,MAAMA;AAAA,QACN,SAAS,OAAO,UAAU,KAAK,iBAAiB,OAAO,SAAS,iBAAiBA,MAAI,IAAI;AAAA,QACzF,aAAa,OAAO,cACd,OAAO,KAAK,OAAO,WAAW,EAAE;AAAA,UAC9B,CAAC,KAAK,aAAa;AACf,gBAAI,QAAQ,IAAI,KAAK,iBAAiB,OAAO,YAAY,QAAQ,GAAG,oBAAoB,UAAUA,MAAI;AACtG,mBAAO;AAAA,UACX;AAAA,UACA,uBAAO,OAAO,IAAI;AAAA,QACtB,IACE;AAAA,MACV;AAAA,IACJ;AAAA,IACA,aAAaA,QAAM,QAAQ;AACvB,UAAI,CAAC,QAAQ;AACT;AAAA,MACJ;AAEA,WAAK,WAAWA,MAAI,IAAI,KAAK,iBAAiB,QAAQ,YAAYA,MAAI;AAAA,IAC1E;AAAA,IACA,SAASA,QAAM,QAAQ;AACnB,UAAI,CAAC,QAAQ;AACT;AAAA,MACJ;AAEA,WAAK,MAAMA,MAAI,IAAI,KAAK,iBAAiB,QAAQ,QAAQA,MAAI;AAAA,IACjE;AAAA,IAEA,gBAAgB,YAAY;AACxB,UAAI,CAAC,KAAK,UAAU,UAAU,GAAG;AAC7B,eAAO,IAAI,qBAAqB,mBAAmB,MAAM,UAAU;AAAA,MACvE;AAAA,IACJ;AAAA,IACA,mBAAmB,YAAY,SAAS;AACpC,YAAM,QAAQ,KAAK,gBAAgB,UAAU;AAE7C,UAAI,OAAO;AACP,eAAO;AAAA,MACX;AAEA,YAAM,SAAS,KAAK,UAAU,UAAU;AAExC,UAAI,CAAC,OAAO,WAAW,SAAS;AAC5B,eAAO,IAAI,YAAY,eAAe,aAAa,gCAAgC;AAAA,MACvF;AAEA,UAAI,OAAO,WAAW,CAAC,SAAS;AAC5B,YAAI,CAAC,YAAY,MAAM,OAAO,SAAS,IAAI,KAAK,EAAE,SAAS;AACvD,iBAAO,IAAI,YAAY,eAAe,aAAa,4BAA4B;AAAA,QACnF;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,0BAA0B,YAAY,gBAAgB;AAClD,YAAM,QAAQ,KAAK,gBAAgB,UAAU;AAE7C,UAAI,OAAO;AACP,eAAO;AAAA,MACX;AAEA,YAAM,SAAS,KAAK,UAAU,UAAU;AACxC,YAAM,aAAmB,QAAQ,cAAc;AAE/C,UAAI,CAAC,OAAO,aAAa;AACrB,eAAO,IAAI,YAAY,eAAe,aAAa,4BAA4B;AAAA,MACnF;AAEA,UAAI,CAAC,OAAO,YAAY,WAAW,IAAI,KACnC,CAAC,OAAO,YAAY,WAAW,QAAQ,GAAG;AAC1C,eAAO,IAAI,qBAAqB,8BAA8B,cAAc;AAAA,MAChF;AAAA,IACJ;AAAA,IACA,kBAAkB,cAAc;AAC5B,UAAI,CAAC,KAAK,YAAY,YAAY,GAAG;AACjC,eAAO,IAAI,qBAAqB,oBAAoB,YAAY;AAAA,MACpE;AAAA,IACJ;AAAA,IAEA,mBAAmB,YAAY,SAAS;AACpC,YAAM,QAAQ,KAAK,mBAAmB,YAAY,OAAO;AAEzD,UAAI,OAAO;AACP,eAAO,iBAAiB,MAAM,KAAK;AAAA,MACvC;AAEA,YAAM,SAAS,KAAK,UAAU,UAAU;AAExC,UAAI,CAAC,OAAO,SAAS;AACjB,eAAO,iBAAiB,MAAM,IAAI;AAAA,MACtC;AAEA,aAAO,YAAY,MAAM,OAAO,SAAS,WAAW,IAAI,KAAK;AAAA,IACjE;AAAA,IACA,sBAAsB,YAAY,gBAAgB,OAAO;AACrD,YAAM,QAAQ,KAAK,0BAA0B,YAAY,cAAc;AAEvE,UAAI,OAAO;AACP,eAAO,iBAAiB,MAAM,KAAK;AAAA,MACvC;AAEA,YAAM,SAAS,KAAK,UAAU,UAAU;AACxC,YAAM,aAAmB,QAAQ,cAAc;AAE/C,aAAO,YAAY,MAAM,OAAO,YAAY,WAAW,IAAI,KAAK,OAAO,YAAY,WAAW,QAAQ,GAAG,OAAO,KAAK;AAAA,IACzH;AAAA,IACA,iBAAiB,MAAM;AACnB,UAAI,KAAK,SAAS,eAAe;AAC7B,eAAO,iBAAiB,MAAM,IAAI,MAAM,wBAAwB,CAAC;AAAA,MACrE;AAEA,aAAO,KAAK,cAAc,KAAK,UAAU,KAAK,KAAK;AAAA,IACvD;AAAA,IACA,cAAc,cAAc,OAAO;AAE/B,UAAU,SAAS,YAAY,EAAE,QAAQ;AACrC,eAAO,iBAAiB,MAAM,IAAI,MAAM,yDAA0D,CAAC;AAAA,MACvG;AAEA,YAAM,QAAQ,KAAK,kBAAkB,YAAY;AAEjD,UAAI,OAAO;AACP,eAAO,iBAAiB,MAAM,KAAK;AAAA,MACvC;AAEA,aAAO,YAAY,MAAM,KAAK,YAAY,YAAY,GAAG,OAAO,IAAI;AAAA,IACxE;AAAA,IACA,UAAU,UAAU,OAAO;AACvB,YAAM,aAAa,KAAK,QAAQ,QAAQ;AAExC,UAAI,CAAC,YAAY;AACb,eAAO,iBAAiB,MAAM,IAAI,qBAAqB,gBAAgB,QAAQ,CAAC;AAAA,MACpF;AAEA,aAAO,YAAY,MAAM,YAAY,OAAO,KAAK;AAAA,IACrD;AAAA,IACA,MAAM,QAAQ,OAAO;AACjB,UAAI,OAAO,WAAW,aAAa,CAAC,UAAU,CAAC,OAAO,OAAO;AACzD,eAAO,iBAAiB,MAAM,IAAI,qBAAqB,YAAY,CAAC;AAAA,MACxE;AAEA,UAAI,OAAO,WAAW,YAAY,CAAC,OAAO,OAAO;AAC7C,iBAAS,KAAK,iBAAiB,QAAQ,QAAQ,WAAW;AAAA,MAC9D;AAEA,aAAO,YAAY,MAAM,QAAQ,OAAO,KAAK;AAAA,IACjD;AAAA,IAEA,mBAAmB,cAAc,OAAO,MAAMA,QAAM;AAChD,aAAO,eAAe,MAAM,OAAO,KAAK,cAAc,cAAc,KAAK,GAAG,MAAMA,MAAI;AAAA,IAC1F;AAAA,IACA,8BAA8B,aAAa,MAAMA,QAAM;AACnD,aAAO,eAAe,MAAM,YAAY,OAAO,KAAK,iBAAiB,WAAW,GAAG,MAAMA,MAAI;AAAA,IACjG;AAAA,IACA,iBAAiB,KAAK,MAAMA,QAAM;AAC9B,YAAM,SAAS,CAAC;AAEhB,WAAK,OAAO,KAAK,KAAK;AAAA,QAClB,OAAO;AAAA,QACP,OAAO,CAAC,gBAAgB;AACpB,iBAAO,KAAK,MAAM,QAAQ,KAAK,8BAA8B,aAAa,MAAMA,MAAI,CAAC;AAAA,QACzF;AAAA,MACJ,CAAC;AAED,aAAO;AAAA,IACX;AAAA,IAEA,UAAU,YAAY,mBAAmB,MAAM;AAC3C,YAAM,SAAe,QAAQ,UAAU;AACvC,YAAM,cAAc,OAAO,UAAU,mBAC/B,KAAK,QAAQ,OAAO,IAAI,KAAK,KAAK,QAAQ,OAAO,QAAQ,IACzD,KAAK,QAAQ,OAAO,IAAI;AAE9B,aAAO,eAAe;AAAA,IAC1B;AAAA,IACA,iBAAiB,YAAY,mBAAmB,MAAM;AAClD,YAAM,SAAS,KAAK,UAAU,YAAY,gBAAgB;AAE1D,aAAO,UAAU,OAAO,WAAW;AAAA,IACvC;AAAA,IACA,oBAAoB,YAAYA,QAAM;AAClC,aAAO,KAAK,QAAQ,eAAe,UAAU,KAAK,KAAK,QAAQ,cACzD,KAAK,QAAQ,UAAU,EAAE,YAAYA,MAAI,KAAK,OAC9C;AAAA,IACV;AAAA,IACA,YAAY,cAAc,mBAAmB,MAAM;AAC/C,YAAMI,YAAiB,SAAS,YAAY;AAC5C,YAAM,gBAAgBA,UAAS,UAAU,mBACnC,KAAK,WAAWA,UAAS,IAAI,KAAK,KAAK,WAAWA,UAAS,QAAQ,IACnE,KAAK,WAAWA,UAAS,IAAI;AAEnC,aAAO,iBAAiB;AAAA,IAC5B;AAAA,IACA,QAAQJ,QAAM;AACV,aAAO,eAAe,KAAK,KAAK,OAAOA,MAAI,IAAI,KAAK,MAAMA,MAAI,IAAI;AAAA,IACtE;AAAA,IAEA,WAAW;AACP,eAASK,UAAS,QAAQL,QAAM,QAAQ,YAAY;AAChD,YAAI,OAAO,IAAIA,MAAI,GAAG;AAClB,iBAAO,OAAO,IAAIA,MAAI;AAAA,QAC1B;AAEA,eAAO,IAAIA,QAAM,KAAK;AACtB,YAAI,WAAW,WAAW,MAAM;AAC5B,eAAK,WAAW,QAAQ,SAAS,MAAM;AACnC,gBAAI,KAAK,SAAS,UAAU,KAAK,SAAS,YAAY;AAClD;AAAA,YACJ;AAEA,kBAAM,MAAM,KAAK,SAAS,SAAS,OAAO,QAAQ,OAAO;AACzD,kBAAM,YAAY,KAAK,SAAS,SAAS,cAAc;AAEvD,gBAAI,CAAC,eAAe,KAAK,KAAK,KAAK,IAAI,KAAKK,UAAS,QAAQ,KAAK,MAAM,WAAW,IAAI,KAAK,IAAI,CAAC,GAAG;AAChG,qBAAO,IAAIL,QAAM,IAAI;AAAA,YACzB;AAAA,UACJ,GAAG,IAAI;AAAA,QACX;AAAA,MACJ;AAEA,UAAI,cAAc,oBAAI,IAAI;AAC1B,UAAI,mBAAmB,oBAAI,IAAI;AAE/B,iBAAW,OAAO,KAAK,OAAO;AAC1B,QAAAK,UAAS,MAAM,KAAK,aAAa,KAAK,MAAM,GAAG,CAAC;AAAA,MACpD;AAEA,iBAAW,OAAO,KAAK,YAAY;AAC/B,QAAAA,UAAS,MAAM,KAAK,kBAAkB,KAAK,WAAW,GAAG,CAAC;AAAA,MAC9D;AAEA,oBAAc,CAAC,GAAG,YAAY,KAAK,CAAC,EAAE,OAAO,CAAAL,WAAQ,YAAY,IAAIA,MAAI,CAAC;AAC1E,yBAAmB,CAAC,GAAG,iBAAiB,KAAK,CAAC,EAAE,OAAO,CAAAA,WAAQ,iBAAiB,IAAIA,MAAI,CAAC;AAEzF,UAAI,YAAY,UAAU,iBAAiB,QAAQ;AAC/C,eAAO;AAAA,UACH,OAAO;AAAA,UACP,YAAY;AAAA,QAChB;AAAA,MACJ;AAEA,aAAO;AAAA,IACX;AAAA,IACA,KAAK,aAAa,QAAQ;AACtB,aAAO;AAAA,QACH,SAAS,KAAK;AAAA,QACd,OAAO,KAAK;AAAA,QACZ,OAAO,cAAc,KAAK,OAAO,CAAC,QAAQ,WAAW;AAAA,QACrD,YAAY,cAAc,KAAK,YAAY,CAAC,QAAQ,WAAW;AAAA,QAC/D,SAAS,oBAAoB,KAAK,SAAS,CAAC,QAAQ,WAAW;AAAA,MACnE;AAAA,IACJ;AAAA,IACA,WAAW;AACP,aAAO,KAAK,UAAU,KAAK,KAAK,CAAC;AAAA,IACrC;AAAA,EACJ;;;AC/cA,WAAS,YAAY,GAAG,GAAG;AACvB,QAAI,OAAO,MAAM,YAAY,SAAS,KAAK,CAAC,GAAG;AAC3C,aAAO,OAAO,MAAM,WACd,IAAI,IACJ,EAAE,QAAQ,aAAa,EAAE;AAAA,IACnC;AAEA,WAAO,KAAK;AAAA,EAChB;AAEA,WAAS,WAAW,KAAK,OAAO;AAC5B,UAAM,SAAS,uBAAO,OAAO,IAAI;AAEjC,eAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,GAAG,GAAG;AAC5C,UAAI,OAAO;AACP,eAAO,GAAG,IAAI,CAAC;AACf,mBAAW,QAAQ,OAAO,KAAK,KAAK,GAAG;AACnC,cAAI,MAAM,SAAS,IAAI,GAAG;AACtB,mBAAO,GAAG,EAAE,IAAI,IAAI,MAAM,IAAI;AAAA,UAClC;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAEe,WAAR,IAAqB,MAAM,KAAK;AACnC,UAAM,SAAS,EAAE,GAAG,KAAK;AAEzB,eAAW,CAAC,MAAM,KAAK,KAAK,OAAO,QAAQ,GAAG,GAAG;AAC7C,cAAQ,MAAM;AAAA,QACV,KAAK;AACD,iBAAO,IAAI,IAAI,QAAQ,KAAK;AAC5B;AAAA,QAEJ,KAAK;AACD,iBAAO,IAAI,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE;AAC/B,qBAAW,CAACM,QAAM,KAAK,KAAK,OAAO,QAAQ,KAAK,GAAG;AAC/C,mBAAO,IAAI,EAAEA,MAAI,IAAI,MAAM,QAAQ,KAAK,IAAI,QAAQ,CAAC;AAAA,UACzD;AACA;AAAA,QAEJ,KAAK;AACD,iBAAO,IAAI,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE;AAE/B,qBAAW,CAACA,QAAM,MAAM,KAAK,OAAO,QAAQ,KAAK,GAAG;AAChD,kBAAM,SAAS,OAAO,IAAI,EAAEA,MAAI,KAAK,CAAC;AACtC,kBAAM,UAAU,OAAO,IAAI,EAAEA,MAAI,IAAI;AAAA,cACjC,SAAS,OAAO,WAAW;AAAA,cAC3B,aAAa;AAAA,gBACT,GAAG,OAAO;AAAA,cACd;AAAA,YACJ;AAEA,gBAAI,CAAC,QAAQ;AACT;AAAA,YACJ;AAEA,oBAAQ,UAAU,OAAO,UACnB,YAAY,QAAQ,SAAS,OAAO,OAAO,IAC3C,QAAQ,WAAW;AAEzB,uBAAW,CAAC,gBAAgB,eAAe,KAAK,OAAO,QAAQ,OAAO,eAAe,CAAC,CAAC,GAAG;AACtF,sBAAQ,YAAY,cAAc,IAAI,kBAChC,YAAY,QAAQ,YAAY,cAAc,GAAG,eAAe,IAChE;AAAA,YACV;AAEA,gBAAI,CAAC,OAAO,KAAK,QAAQ,WAAW,EAAE,QAAQ;AAC1C,sBAAQ,cAAc;AAAA,YAC1B;AAAA,UACJ;AACA;AAAA,QAEJ,KAAK;AAAA,QACL,KAAK;AACD,iBAAO,IAAI,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE;AAC/B,qBAAW,CAACA,QAAM,MAAM,KAAK,OAAO,QAAQ,KAAK,GAAG;AAChD,mBAAO,IAAI,EAAEA,MAAI,IAAI,YAAY,OAAO,IAAI,EAAEA,MAAI,GAAG,MAAM;AAAA,UAC/D;AACA;AAAA,QAEJ,KAAK;AACD,iBAAO,IAAI,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE;AAC/B,qBAAW,CAACA,QAAM,KAAK,KAAK,OAAO,QAAQ,KAAK,GAAG;AAC/C,mBAAO,IAAI,EAAEA,MAAI,IAAI,EAAE,GAAG,OAAO,IAAI,EAAEA,MAAI,GAAG,GAAG,MAAM;AAAA,UAC3D;AACA;AAAA,QAEJ,KAAK;AACD,iBAAO,IAAI,IAAI;AAAA,YACX,GAAG,KAAK,IAAI;AAAA,YACZ,GAAG;AAAA,UACP;AACA;AAAA,QAEJ,KAAK;AAAA,QACL,KAAK;AACD,iBAAO,IAAI,IAAI;AAAA,YACX,GAAG,KAAK,IAAI;AAAA,YACZ,GAAG,WAAW,OAAO,CAAC,OAAO,CAAC;AAAA,UAAE;AACpC;AAAA,QAEJ,KAAK;AACD,iBAAO,IAAI,IAAI;AAAA,YACX,GAAG,KAAK,IAAI;AAAA,YACZ,GAAG,WAAW,OAAO,CAAC,QAAQ,aAAa,SAAS,YAAY,aAAa,CAAC;AAAA,UAClF;AACA;AAAA,MACR;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;;;AC1GA,WAAS,aAAa,QAAQ;AAC1B,UAAMC,UAAQ,aAAa,MAAM;AACjC,UAAMC,QAAO,aAAa,MAAM;AAChC,UAAMC,aAAW,gBAAgB,MAAM;AACvC,UAAM,EAAE,iBAAAC,kBAAiB,eAAAC,eAAc,IAAI,gBAAgBH,KAAI;AAE/D,UAAM,SAAS;AAAA,MACX,OAAO;AAAA,MACP,aAAa,CAAAI,YAAU,IAAI,MAAMA,SAAQ,QAAQ,OAAO,MAAM,SAAS;AAAA,MAEvE;AAAA,MACA,OAAAL;AAAA,MACA,UAAAE;AAAA,MAEA,MAAAD;AAAA,MACA,MAAMA,MAAK;AAAA,MACX,UAAUA,MAAK;AAAA,MACf,SAASA,MAAK;AAAA,MAEd,iBAAAE;AAAA,MACA,eAAAC;AAAA,MAEA,KAAKE,YAAW;AACZ,cAAM,OAAO,IAAI,CAAC,GAAG,MAAM;AAE3B,eAAO;AAAA,UACH,OAAOA,eAAc,aACfA,WAAU,MAAM,OAAO,MAAM,IAC7B,IAAI,MAAMA,UAAS;AAAA,QAC7B;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO,QAAQ,IAAI,MAAM;AAAA,MACrB,SAAS;AAAA,MACT,OAAO,OAAO;AAAA,MACd,OAAO,OAAO;AAAA,MACd,SAAS,OAAO;AAAA,MAChB,YAAY,OAAO;AAAA,MACnB,MAAM,OAAO;AAAA,IACjB,GAAG,MAAM;AAET,WAAO;AAAA,EACX;AAEA,MAAO,iBAAQ,YAAU,aAAa,IAAI,CAAC,GAAG,MAAM,CAAC;;;ACrDrD,MAAO,eAAQ;AAAA,IACX,WAAW;AAAA,IACX,SAAS;AAAA,MACL,SAAS;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,WAAW;AAAA,QACP;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,aAAa;AAAA,QACT;AAAA,QACA;AAAA,MACJ;AAAA,MACA,UAAU;AAAA,QACN;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,cAAc;AAAA,QACV;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA,aAAa;AAAA,QACT;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ;AAAA,QACA;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,MACL,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,UAAU;AAAA,MACV,eAAe;AAAA,MACf,oBAAoB;AAAA,MACpB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,2BAA2B;AAAA,MAC3B,uBAAuB;AAAA,MACvB,UAAU;AAAA,MACV,UAAU;AAAA,MACV,WAAW;AAAA,MACX,cAAc;AAAA,MACd,UAAU;AAAA,MACV,gBAAgB;AAAA,MAChB,iBAAiB;AAAA,MACjB,sBAAsB;AAAA,MACtB,eAAe;AAAA,MACf,mBAAmB;AAAA,MACnB,QAAQ;AAAA,MACR,qBAAqB;AAAA,MACrB,eAAe;AAAA,MACf,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,eAAe;AAAA,MACf,WAAW;AAAA,MACX,UAAU;AAAA,MACV,cAAc;AAAA,MACd,OAAO;AAAA,MACP,gBAAgB;AAAA,MAChB,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,iBAAiB;AAAA,MACjB,kBAAkB;AAAA,MAClB,mBAAmB;AAAA,MACnB,YAAY;AAAA,MACZ,WAAW;AAAA,MACX,kBAAkB;AAAA,MAClB,eAAe;AAAA,MACf,SAAS;AAAA,MACT,cAAc;AAAA,MACd,oBAAoB;AAAA,MACpB,qBAAqB;AAAA,MACrB,mBAAmB;AAAA,MACnB,cAAc;AAAA,MACd,qBAAqB;AAAA,MACrB,eAAe;AAAA,MACf,mBAAmB;AAAA,MACnB,wBAAwB;AAAA,MACxB,qBAAqB;AAAA,MACrB,0BAA0B;AAAA,MAC1B,oBAAoB;AAAA,MACpB,yBAAyB;AAAA,MACzB,oBAAoB;AAAA,MACpB,yBAAyB;AAAA,MACzB,wBAAwB;AAAA,MACxB,gBAAgB;AAAA,MAChB,oBAAoB;AAAA,MACpB,uBAAuB;AAAA,MACvB,cAAc;AAAA,MACd,SAAS;AAAA,MACT,WAAW;AAAA,MACX,aAAa;AAAA,MACb,gBAAgB;AAAA,MAChB,iBAAiB;AAAA,MACjB,sBAAsB;AAAA,MACtB,cAAc;AAAA,MACd,gBAAgB;AAAA,MAChB,gCAAgC;AAAA,MAChC,2BAA2B;AAAA,MAC3B,4BAA4B;AAAA,MAC5B,eAAe;AAAA,MACf,kBAAkB;AAAA,MAClB,oBAAoB;AAAA,MACpB,kBAAkB;AAAA,MAClB,oBAAoB;AAAA,MACpB,mBAAmB;AAAA,MACnB,iBAAiB;AAAA,MACjB,6BAA6B;AAAA,MAC7B,2BAA2B;AAAA,MAC3B,aAAa;AAAA,MACb,aAAa;AAAA,MACb,gBAAgB;AAAA,MAChB,SAAS;AAAA,MACT,SAAS;AAAA,MACT,uBAAuB;AAAA,MACvB,eAAe;AAAA,MACf,qBAAqB;AAAA,MACrB,gBAAgB;AAAA,MAChB,uBAAuB;AAAA,MACvB,4BAA4B;AAAA,MAC5B,6BAA6B;AAAA,MAC7B,kCAAkC;AAAA,MAClC,sBAAsB;AAAA,MACtB,aAAa;AAAA,MACb,mBAAmB;AAAA,MACnB,wBAAwB;AAAA,MACxB,kBAAkB;AAAA,MAClB,iBAAiB;AAAA,MACjB,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,yBAAyB;AAAA,MACzB,sBAAsB;AAAA,MACtB,wBAAwB;AAAA,MACxB,wBAAwB;AAAA,MACxB,oBAAoB;AAAA,MACpB,kBAAkB;AAAA,MAClB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,YAAY;AAAA,MACZ,eAAe;AAAA,MACf,aAAa;AAAA,MACb,yBAAyB;AAAA,MACzB,SAAS;AAAA,MACT,UAAU;AAAA,MACV,OAAO;AAAA,MACP,gBAAgB;AAAA,MAChB,SAAS;AAAA,MACT,WAAW;AAAA,MACX,SAAS;AAAA,MACT,WAAW;AAAA,MACX,eAAe;AAAA,MACf,oBAAoB;AAAA,MACpB,aAAa;AAAA,MACb,cAAc;AAAA,MACd,sBAAsB;AAAA,MACtB,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,uBAAuB;AAAA,MACvB,qBAAqB;AAAA,MACrB,SAAS;AAAA,MACT,WAAW;AAAA,MACX,cAAc;AAAA,MACd,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,eAAe;AAAA,MACf,qBAAqB;AAAA,MACrB,cAAc;AAAA,MACd,kBAAkB;AAAA,MAClB,cAAc;AAAA,MACd,cAAc;AAAA,MACd,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,SAAS;AAAA,MACT,cAAc;AAAA,MACd,iBAAiB;AAAA,MACjB,kBAAkB;AAAA,MAClB,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,SAAS;AAAA,MACT,aAAa;AAAA,MACb,mBAAmB;AAAA,MACnB,8BAA8B;AAAA,MAC9B,iBAAiB;AAAA,MACjB,mBAAmB;AAAA,MACnB,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,eAAe;AAAA,MACf,oBAAoB;AAAA,MACpB,cAAc;AAAA,MACd,cAAc;AAAA,MACd,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,eAAe;AAAA,MACf,eAAe;AAAA,MACf,oBAAoB;AAAA,MACpB,aAAa;AAAA,MACb,qBAAqB;AAAA,MACrB,yBAAyB;AAAA,MACzB,2BAA2B;AAAA,MAC3B,0BAA0B;AAAA,MAC1B,OAAO;AAAA,MACP,aAAa;AAAA,MACb,qBAAqB;AAAA,MACrB,kBAAkB;AAAA,MAClB,aAAa;AAAA,MACb,mBAAmB;AAAA,MACnB,wBAAwB;AAAA,MACxB,sBAAsB;AAAA,MACtB,iBAAiB;AAAA,MACjB,aAAa;AAAA,MACb,UAAU;AAAA,MACV,WAAW;AAAA,MACX,iBAAiB;AAAA,MACjB,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,yBAAyB;AAAA,MACzB,2BAA2B;AAAA,MAC3B,eAAe;AAAA,MACf,SAAS;AAAA,MACT,qBAAqB;AAAA,MACrB,SAAS;AAAA,MACT,qBAAqB;AAAA,MACrB,0BAA0B;AAAA,MAC1B,iBAAiB;AAAA,MACjB,SAAS;AAAA,MACT,gBAAgB;AAAA,MAChB,8BAA8B;AAAA,MAC9B,+BAA+B;AAAA,MAC/B,+BAA+B;AAAA,MAC/B,yBAAyB;AAAA,MACzB,SAAS;AAAA,MACT,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb,WAAW;AAAA,MACX,qBAAqB;AAAA,MACrB,cAAc;AAAA,MACd,WAAW;AAAA,MACX,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,iBAAiB;AAAA,MACjB,gBAAgB;AAAA,MAChB,UAAU;AAAA,MACV,UAAU;AAAA,MACV,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,aAAa;AAAA,MACb,kBAAkB;AAAA,MAClB,SAAS;AAAA,MACT,oBAAoB;AAAA,MACpB,8BAA8B;AAAA,MAC9B,8BAA8B;AAAA,MAC9B,oCAAoC;AAAA,MACpC,+BAA+B;AAAA,MAC/B,6BAA6B;AAAA,MAC7B,qBAAqB;AAAA,MACrB,8BAA8B;AAAA,MAC9B,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,iBAAiB;AAAA,MACjB,wBAAwB;AAAA,MACxB,qBAAqB;AAAA,MACrB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,oBAAoB;AAAA,MACpB,iBAAiB;AAAA,MACjB,wBAAwB;AAAA,MACxB,UAAU;AAAA,MACV,SAAS;AAAA,MACT,UAAU;AAAA,MACV,oBAAoB;AAAA,MACpB,qBAAqB;AAAA,MACrB,iBAAiB;AAAA,MACjB,mBAAmB;AAAA,MACnB,iBAAiB;AAAA,MACjB,mBAAmB;AAAA,MACnB,iBAAiB;AAAA,MACjB,cAAc;AAAA,MACd,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,sBAAsB;AAAA,MACtB,kBAAkB;AAAA,MAClB,eAAe;AAAA,MACf,iBAAiB;AAAA,MACjB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,iBAAiB;AAAA,MACjB,SAAS;AAAA,MACT,mBAAmB;AAAA,MACnB,cAAc;AAAA,MACd,WAAW;AAAA,MACX,oBAAoB;AAAA,MACpB,2BAA2B;AAAA,MAC3B,qCAAqC;AAAA,MACrC,qCAAqC;AAAA,MACrC,2BAA2B;AAAA,MAC3B,qCAAqC;AAAA,MACrC,qCAAqC;AAAA,MACrC,gCAAgC;AAAA,MAChC,iCAAiC;AAAA,MACjC,sBAAsB;AAAA,MACtB,uBAAuB;AAAA,MACvB,iCAAiC;AAAA,MACjC,0BAA0B;AAAA,MAC1B,uBAAuB;AAAA,MACvB,sBAAsB;AAAA,MACtB,+BAA+B;AAAA,MAC/B,0BAA0B;AAAA,MAC1B,2BAA2B;AAAA,MAC3B,yBAAyB;AAAA,MACzB,2BAA2B;AAAA,MAC3B,2BAA2B;AAAA,MAC3B,4BAA4B;AAAA,MAC5B,uBAAuB;AAAA,MACvB,8BAA8B;AAAA,MAC9B,8BAA8B;AAAA,MAC9B,cAAc;AAAA,MACd,OAAO;AAAA,MACP,aAAa;AAAA,MACb,iBAAiB;AAAA,MACjB,WAAW;AAAA,MACX,UAAU;AAAA,MACV,iBAAiB;AAAA,MACjB,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,cAAc;AAAA,MACd,SAAS;AAAA,MACT,SAAS;AAAA,MACT,wBAAwB;AAAA,MACxB,wBAAwB;AAAA,MACxB,gCAAgC;AAAA,MAChC,cAAc;AAAA,MACd,oBAAoB;AAAA,MACpB,OAAO;AAAA,MACP,KAAK;AAAA,MACL,KAAK;AAAA,MACL,eAAe;AAAA,MACf,oBAAoB;AAAA,MACpB,OAAO;AAAA,MACP,gBAAgB;AAAA,MAChB,mBAAmB;AAAA,MACnB,yBAAyB;AAAA,MACzB,yBAAyB;AAAA,IAC7B;AAAA,IACA,cAAc;AAAA,MACV,OAAO;AAAA,MACP,mBAAmB;AAAA,MACnB,yBAAyB;AAAA,MACzB,6BAA6B;AAAA,MAC7B,uBAAuB;AAAA,MACvB,0BAA0B;AAAA,MAC1B,8BAA8B;AAAA,MAC9B,8BAA8B;AAAA,MAC9B,yBAAyB;AAAA,MACzB,gCAAgC;AAAA,MAChC,8BAA8B;AAAA,MAC9B,cAAc;AAAA,MACd,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,oBAAoB;AAAA,MACpB,iBAAiB;AAAA,MACjB,4BAA4B;AAAA,MAC5B,6BAA6B;AAAA,MAC7B,6BAA6B;AAAA,MAC7B,4BAA4B;AAAA,MAC5B,iBAAiB;AAAA,MACjB,sBAAsB;AAAA,MACtB,+BAA+B;AAAA,MAC/B,6BAA6B;AAAA,MAC7B,4BAA4B;AAAA,MAC5B,kCAAkC;AAAA,MAClC,4BAA4B;AAAA,MAC5B,iCAAiC;AAAA,MACjC,8BAA8B;AAAA,MAC9B,6BAA6B;AAAA,MAC7B,uBAAuB;AAAA,MACvB,oBAAoB;AAAA,MACpB,0BAA0B;AAAA,MAC1B,0BAA0B;AAAA,MAC1B,0BAA0B;AAAA,MAC1B,0BAA0B;AAAA,MAC1B,oBAAoB;AAAA,MACpB,4BAA4B;AAAA,MAC5B,4BAA4B;AAAA,MAC5B,wBAAwB;AAAA,MACxB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,0BAA0B;AAAA,MAC1B,sBAAsB;AAAA,MACtB,oBAAoB;AAAA,MACpB,mBAAmB;AAAA,MACnB,iBAAiB;AAAA,MACjB,mBAAmB;AAAA,MACnB,oBAAoB;AAAA,MACpB,mBAAmB;AAAA,MACnB,gBAAgB;AAAA,MAChB,6BAA6B;AAAA,MAC7B,2BAA2B;AAAA,MAC3B,4BAA4B;AAAA,MAC5B,0BAA0B;AAAA,MAC1B,2BAA2B;AAAA,MAC3B,mBAAmB;AAAA,MACnB,gCAAgC;AAAA,MAChC,qBAAqB;AAAA,MACrB,eAAe;AAAA,MACf,uBAAuB;AAAA,MACvB,kCAAkC;AAAA,MAClC,mCAAmC;AAAA,MACnC,+BAA+B;AAAA,MAC/B,gCAAgC;AAAA,MAChC,qBAAqB;AAAA,MACrB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,oBAAoB;AAAA,MACpB,wBAAwB;AAAA,MACxB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,yBAAyB;AAAA,MACzB,+BAA+B;AAAA,MAC/B,+BAA+B;AAAA,MAC/B,+BAA+B;AAAA,MAC/B,uBAAuB;AAAA,MACvB,sBAAsB;AAAA,MACtB,gBAAgB;AAAA,MAChB,2BAA2B;AAAA,MAC3B,qBAAqB;AAAA,MACrB,0BAA0B;AAAA,MAC1B,sBAAsB;AAAA,MACtB,uBAAuB;AAAA,MACvB,yBAAyB;AAAA,MACzB,2BAA2B;AAAA,MAC3B,2BAA2B;AAAA,MAC3B,uBAAuB;AAAA,MACvB,yBAAyB;AAAA,MACzB,yBAAyB;AAAA,MACzB,qBAAqB;AAAA,MACrB,8BAA8B;AAAA,MAC9B,+BAA+B;AAAA,MAC/B,2BAA2B;AAAA,MAC3B,uBAAuB;AAAA,MACvB,6BAA6B;AAAA,MAC7B,6BAA6B;AAAA,MAC7B,yBAAyB;AAAA,MACzB,uBAAuB;AAAA,MACvB,gBAAgB;AAAA,MAChB,iBAAiB;AAAA,MACjB,eAAe;AAAA,MACf,cAAc;AAAA,MACd,gBAAgB;AAAA,MAChB,OAAO;AAAA,MACP,aAAa;AAAA,MACb,yBAAyB;AAAA,MACzB,mBAAmB;AAAA,MACnB,uBAAuB;AAAA,MACvB,sBAAsB;AAAA,MACtB,uBAAuB;AAAA,MACvB,6BAA6B;AAAA,MAC7B,kBAAkB;AAAA,MAClB,wBAAwB;AAAA,MACxB,6BAA6B;AAAA,MAC7B,sBAAsB;AAAA,MACtB,cAAc;AAAA,MACd,gBAAgB;AAAA,MAChB,WAAW;AAAA,MACX,mBAAmB;AAAA,MACnB,uBAAuB;AAAA,MACvB,cAAc;AAAA,MACd,yBAAyB;AAAA,MACzB,yBAAyB;AAAA,MACzB,mBAAmB;AAAA,MACnB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,qBAAqB;AAAA,MACrB,uBAAuB;AAAA,MACvB,yBAAyB;AAAA,MACzB,yBAAyB;AAAA,MACzB,qBAAqB;AAAA,MACrB,mBAAmB;AAAA,MACnB,kBAAkB;AAAA,MAClB,cAAc;AAAA,MACd,UAAU;AAAA,MACV,gBAAgB;AAAA,MAChB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,oBAAoB;AAAA,MACpB,0BAA0B;AAAA,MAC1B,0BAA0B;AAAA,MAC1B,0BAA0B;AAAA,MAC1B,sBAAsB;AAAA,MACtB,4BAA4B;AAAA,MAC5B,4BAA4B;AAAA,MAC5B,4BAA4B;AAAA,MAC5B,iBAAiB;AAAA,MACjB,uBAAuB;AAAA,MACvB,6BAA6B;AAAA,MAC7B,8BAA8B;AAAA,MAC9B,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,mBAAmB;AAAA,MACnB,gBAAgB;AAAA,MAChB,yBAAyB;AAAA,MACzB,2BAA2B;AAAA,MAC3B,gBAAgB;AAAA,MAChB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,sBAAsB;AAAA,MACtB,uBAAuB;AAAA,MACvB,sBAAsB;AAAA,MACtB,iBAAiB;AAAA,MACjB,qBAAqB;AAAA,MACrB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,2BAA2B;AAAA,MAC3B,2BAA2B;AAAA,MAC3B,2BAA2B;AAAA,MAC3B,uBAAuB;AAAA,MACvB,6BAA6B;AAAA,MAC7B,6BAA6B;AAAA,MAC7B,6BAA6B;AAAA,MAC7B,eAAe;AAAA,MACf,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,iBAAiB;AAAA,MACjB,gBAAgB;AAAA,MAChB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,kBAAkB;AAAA,MAClB,2BAA2B;AAAA,MAC3B,6BAA6B;AAAA,MAC7B,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,oBAAoB;AAAA,MACpB,0BAA0B;AAAA,MAC1B,2BAA2B;AAAA,MAC3B,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,gBAAgB;AAAA,MAChB,UAAU;AAAA,MACV,aAAa;AAAA,MACb,wBAAwB;AAAA,MACxB,iBAAiB;AAAA,MACjB,YAAY;AAAA,MACZ,kBAAkB;AAAA,MAClB,aAAa;AAAA,MACb,qBAAqB;AAAA,MACrB,cAAc;AAAA,MACd,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,cAAc;AAAA,MACd,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,SAAS;AAAA,MACT,eAAe;AAAA,MACf,eAAe;AAAA,MACf,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,aAAa;AAAA,MACb,SAAS;AAAA,MACT,sBAAsB;AAAA,MACtB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,eAAe;AAAA,MACf,cAAc;AAAA,MACd,eAAe;AAAA,MACf,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,WAAW;AAAA,MACX,WAAW;AAAA,MACX,0BAA0B;AAAA,MAC1B,gCAAgC;AAAA,MAChC,4BAA4B;AAAA,MAC5B,iCAAiC;AAAA,MACjC,2BAA2B;AAAA,MAC3B,WAAW;AAAA,MACX,sBAAsB;AAAA,MACtB,qBAAqB;AAAA,MACrB,iBAAiB;AAAA,MACjB,eAAe;AAAA,MACf,UAAU;AAAA,MACV,aAAa;AAAA,MACb,WAAW;AAAA,MACX,eAAe;AAAA,MACf,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,cAAc;AAAA,MACd,kBAAkB;AAAA,MAClB,aAAa;AAAA,MACb,aAAa;AAAA,MACb,eAAe;AAAA,MACf,aAAa;AAAA,MACb,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,eAAe;AAAA,MACf,yBAAyB;AAAA,MACzB,gBAAgB;AAAA,MAChB,0BAA0B;AAAA,MAC1B,uBAAuB;AAAA,MACvB,2BAA2B;AAAA,MAC3B,aAAa;AAAA,MACb,oBAAoB;AAAA,MACpB,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,kBAAkB;AAAA,MAClB,gBAAgB;AAAA,MAChB,2BAA2B;AAAA,MAC3B,qBAAqB;AAAA,MACrB,2BAA2B;AAAA,MAC3B,0BAA0B;AAAA,MAC1B,wBAAwB;AAAA,MACxB,yBAAyB;AAAA,MACzB,eAAe;AAAA,MACf,uBAAuB;AAAA,MACvB,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,aAAa;AAAA,MACb,qBAAqB;AAAA,MACrB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,eAAe;AAAA,MACf,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,qBAAqB;AAAA,MACrB,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,kBAAkB;AAAA,MAClB,iBAAiB;AAAA,MACjB,uBAAuB;AAAA,MACvB,yBAAyB;AAAA,MACzB,sBAAsB;AAAA,MACtB,uBAAuB;AAAA,MACvB,UAAU;AAAA,MACV,uBAAuB;AAAA,MACvB,WAAW;AAAA,MACX,qBAAqB;AAAA,MACrB,mBAAmB;AAAA,MACnB,oBAAoB;AAAA,MACpB,YAAY;AAAA,MACZ,kBAAkB;AAAA,MAClB,wBAAwB;AAAA,MACxB,eAAe;AAAA,MACf,kBAAkB;AAAA,MAClB,SAAS;AAAA,MACT,eAAe;AAAA,MACf,mBAAmB;AAAA,MACnB,qBAAqB;AAAA,MACrB,gBAAgB;AAAA,MAChB,oBAAoB;AAAA,MACpB,sBAAsB;AAAA,MACtB,aAAa;AAAA,MACb,mBAAmB;AAAA,MACnB,iBAAiB;AAAA,MACjB,gBAAgB;AAAA,MAChB,kBAAkB;AAAA,MAClB,QAAQ;AAAA,MACR,kBAAkB;AAAA,MAClB,cAAc;AAAA,MACd,cAAc;AAAA,MACd,eAAe;AAAA,MACf,oBAAoB;AAAA,MACpB,cAAc;AAAA,MACd,oBAAoB;AAAA,MACpB,uBAAuB;AAAA,MACvB,mBAAmB;AAAA,MACnB,UAAU;AAAA,MACV,gBAAgB;AAAA,MAChB,oBAAoB;AAAA,MACpB,sBAAsB;AAAA,MACtB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,qBAAqB;AAAA,MACrB,uBAAuB;AAAA,MACvB,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,eAAe;AAAA,MACf,QAAQ;AAAA,MACR,eAAe;AAAA,MACf,oBAAoB;AAAA,MACpB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,qBAAqB;AAAA,MACrB,sBAAsB;AAAA,MACtB,qBAAqB;AAAA,MACrB,aAAa;AAAA,MACb,kBAAkB;AAAA,MAClB,cAAc;AAAA,MACd,aAAa;AAAA,MACb,eAAe;AAAA,MACf,iBAAiB;AAAA,MACjB,eAAe;AAAA,MACf,aAAa;AAAA,MACb,aAAa;AAAA,MACb,qBAAqB;AAAA,MACrB,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,kBAAkB;AAAA,MAClB,cAAc;AAAA,MACd,mBAAmB;AAAA,MACnB,aAAa;AAAA,MACb,aAAa;AAAA,MACb,kBAAkB;AAAA,MAClB,cAAc;AAAA,MACd,mBAAmB;AAAA,MACnB,aAAa;AAAA,MACb,kBAAkB;AAAA,MAClB,cAAc;AAAA,MACd,mBAAmB;AAAA,MACnB,UAAU;AAAA,MACV,iBAAiB;AAAA,MACjB,mBAAmB;AAAA,MACnB,eAAe;AAAA,MACf,mBAAmB;AAAA,MACnB,iBAAiB;AAAA,MACjB,WAAW;AAAA,MACX,SAAS;AAAA,MACT,WAAW;AAAA,MACX,WAAW;AAAA,MACX,iBAAiB;AAAA,MACjB,kBAAkB;AAAA,MAClB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,YAAY;AAAA,MACZ,mBAAmB;AAAA,MACnB,kBAAkB;AAAA,MAClB,qBAAqB;AAAA,MACrB,wBAAwB;AAAA,MACxB,mBAAmB;AAAA,MACnB,iBAAiB;AAAA,MACjB,cAAc;AAAA,MACd,cAAc;AAAA,MACd,uBAAuB;AAAA,MACvB,6BAA6B;AAAA,MAC7B,8BAA8B;AAAA,MAC9B,yBAAyB;AAAA,MACzB,yBAAyB;AAAA,MACzB,WAAW;AAAA,MACX,iBAAiB;AAAA,MACjB,qBAAqB;AAAA,MACrB,uBAAuB;AAAA,MACvB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,sBAAsB;AAAA,MACtB,wBAAwB;AAAA,MACxB,gBAAgB;AAAA,MAChB,iBAAiB;AAAA,MACjB,eAAe;AAAA,MACf,oBAAoB;AAAA,MACpB,qBAAqB;AAAA,MACrB,qBAAqB;AAAA,MACrB,eAAe;AAAA,MACf,eAAe;AAAA,MACf,sBAAsB;AAAA,MACtB,iBAAiB;AAAA,MACjB,eAAe;AAAA,MACf,cAAc;AAAA,MACd,kBAAkB;AAAA,MAClB,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,UAAU;AAAA,MACV,SAAS;AAAA,MACT,UAAU;AAAA,MACV,WAAW;AAAA,MACX,cAAc;AAAA,MACd,cAAc;AAAA,MACd,iBAAiB;AAAA,MACjB,SAAS;AAAA,MACT,mBAAmB;AAAA,MACnB,oBAAoB;AAAA,MACpB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,iBAAiB;AAAA,MACjB,uBAAuB;AAAA,MACvB,6BAA6B;AAAA,MAC7B,2BAA2B;AAAA,MAC3B,wBAAwB;AAAA,MACxB,wBAAwB;AAAA,MACxB,8BAA8B;AAAA,MAC9B,4BAA4B;AAAA,MAC5B,sBAAsB;AAAA,MACtB,uBAAuB;AAAA,MACvB,qBAAqB;AAAA,MACrB,kBAAkB;AAAA,MAClB,wBAAwB;AAAA,MACxB,8BAA8B;AAAA,MAC9B,4BAA4B;AAAA,MAC5B,yBAAyB;AAAA,MACzB,yBAAyB;AAAA,MACzB,+BAA+B;AAAA,MAC/B,6BAA6B;AAAA,MAC7B,uBAAuB;AAAA,MACvB,wBAAwB;AAAA,MACxB,sBAAsB;AAAA,MACtB,qBAAqB;AAAA,MACrB,0BAA0B;AAAA,MAC1B,2BAA2B;AAAA,MAC3B,wBAAwB;AAAA,MACxB,wBAAwB;AAAA,MACxB,oBAAoB;AAAA,MACpB,oBAAoB;AAAA,MACpB,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,mBAAmB;AAAA,MACnB,wBAAwB;AAAA,MACxB,wBAAwB;AAAA,MACxB,yBAAyB;AAAA,MACzB,gBAAgB;AAAA,MAChB,iBAAiB;AAAA,MACjB,YAAY;AAAA,MACZ,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,mBAAmB;AAAA,MACnB,wBAAwB;AAAA,MACxB,mBAAmB;AAAA,MACnB,yBAAyB;AAAA,MACzB,wBAAwB;AAAA,MACxB,wBAAwB;AAAA,MACxB,4BAA4B;AAAA,MAC5B,yBAAyB;AAAA,MACzB,6BAA6B;AAAA,MAC7B,iBAAiB;AAAA,MACjB,uBAAuB;AAAA,MACvB,0BAA0B;AAAA,MAC1B,uBAAuB;AAAA,MACvB,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,oBAAoB;AAAA,MACpB,iBAAiB;AAAA,MACjB,kBAAkB;AAAA,MAClB,eAAe;AAAA,MACf,oBAAoB;AAAA,MACpB,kBAAkB;AAAA,MAClB,yBAAyB;AAAA,MACzB,2BAA2B;AAAA,MAC3B,OAAO;AAAA,MACP,gBAAgB;AAAA,MAChB,aAAa;AAAA,MACb,iBAAiB;AAAA,MACjB,oBAAoB;AAAA,MACpB,mBAAmB;AAAA,MACnB,cAAc;AAAA,MACd,oBAAoB;AAAA,MACpB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,8BAA8B;AAAA,MAC9B,aAAa;AAAA,MACb,gBAAgB;AAAA,MAChB,eAAe;AAAA,MACf,kBAAkB;AAAA,MAClB,cAAc;AAAA,MACd,eAAe;AAAA,MACf,UAAU;AAAA,MACV,SAAS;AAAA,MACT,eAAe;AAAA,MACf,cAAc;AAAA,MACd,gBAAgB;AAAA,MAChB,aAAa;AAAA,MACb,gBAAgB;AAAA,MAChB,WAAW;AAAA,MACX,QAAQ;AAAA,MACR,wBAAwB;AAAA,MACxB,iCAAiC;AAAA,MACjC,kCAAkC;AAAA,MAClC,8BAA8B;AAAA,MAC9B,+BAA+B;AAAA,MAC/B,qCAAqC;AAAA,MACrC,2BAA2B;AAAA,MAC3B,oBAAoB;AAAA,MACpB,kBAAkB;AAAA,MAClB,uBAAuB;AAAA,MACvB,sBAAsB;AAAA,MACtB,qBAAqB;AAAA,MACrB,iBAAiB;AAAA,MACjB,kBAAkB;AAAA,MAClB,qBAAqB;AAAA,MACrB,2BAA2B;AAAA,MAC3B,0BAA0B;AAAA,MAC1B,yBAAyB;AAAA,MACzB,sBAAsB;AAAA,MACtB,4BAA4B;AAAA,MAC5B,2BAA2B;AAAA,MAC3B,8BAA8B;AAAA,MAC9B,+BAA+B;AAAA,MAC/B,+BAA+B;AAAA,MAC/B,0BAA0B;AAAA,MAC1B,0BAA0B;AAAA,MAC1B,8BAA8B;AAAA,MAC9B,yBAAyB;AAAA,MACzB,qBAAqB;AAAA,MACrB,uBAAuB;AAAA,MACvB,sBAAsB;AAAA,MACtB,kBAAkB;AAAA,MAClB,YAAY;AAAA,MACZ,aAAa;AAAA,MACb,OAAO;AAAA,MACP,aAAa;AAAA,MACb,cAAc;AAAA,MACd,qBAAqB;AAAA,MACrB,QAAQ;AAAA,MACR,gBAAgB;AAAA,MAChB,aAAa;AAAA,MACb,gCAAgC;AAAA,MAChC,8BAA8B;AAAA,MAC9B,WAAW;AAAA,MACX,UAAU;AAAA,MACV,cAAc;AAAA,MACd,cAAc;AAAA,MACd,gBAAgB;AAAA,MAChB,SAAS;AAAA,MACT,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,QAAQ;AAAA,MACR,cAAc;AAAA,MACd,eAAe;AAAA,MACf,mBAAmB;AAAA,MACnB,OAAO;AAAA,MACP,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,oBAAoB;AAAA,MACpB,qBAAqB;AAAA,MACrB,kBAAkB;AAAA,MAClB,mBAAmB;AAAA,MACnB,qBAAqB;AAAA,MACrB,kBAAkB;AAAA,MAClB,gBAAgB;AAAA,MAChB,eAAe;AAAA,MACf,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,kBAAkB;AAAA,MAClB,gBAAgB;AAAA,MAChB,eAAe;AAAA,MACf,eAAe;AAAA,MACf,cAAc;AAAA,MACd,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,IACpB;AAAA,IACA,WAAW;AAAA,MACP,WAAW;AAAA,QACP,WAAW;AAAA,QACX,eAAe;AAAA,MACnB;AAAA,MACA,iBAAiB;AAAA,QACb,WAAW;AAAA,QACX,eAAe;AAAA,UACX,oBAAoB;AAAA,UACpB,YAAY;AAAA,UACZ,YAAY;AAAA,UACZ,OAAO;AAAA,UACP,UAAU;AAAA,UACV,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,UAAU;AAAA,UACV,WAAW;AAAA,UACX,UAAU;AAAA,QACd;AAAA,MACJ;AAAA,MACA,YAAY;AAAA,QACR,WAAW;AAAA,QACX,eAAe;AAAA,MACnB;AAAA,MACA,aAAa;AAAA,QACT,WAAW;AAAA,QACX,eAAe;AAAA,UACX,mBAAmB;AAAA,UACnB,oBAAoB;AAAA,UACpB,gBAAgB;AAAA,UAChB,eAAe;AAAA,UACf,yBAAyB;AAAA,UACzB,2BAA2B;AAAA,UAC3B,gBAAgB;AAAA,UAChB,cAAc;AAAA,UACd,eAAe;AAAA,UACf,gBAAgB;AAAA,UAChB,qBAAqB;AAAA,UACrB,eAAe;AAAA,UACf,OAAO;AAAA,UACP,iBAAiB;AAAA,QACrB;AAAA,MACJ;AAAA,MACA,uBAAuB;AAAA,QACnB,WAAW;AAAA,QACX,eAAe;AAAA,MACnB;AAAA,MACA,UAAU;AAAA,QACN,WAAW;AAAA,QACX,eAAe;AAAA,MACnB;AAAA,MACA,aAAa;AAAA,QACT,WAAW;AAAA,QACX,eAAe;AAAA,MACnB;AAAA,MACA,SAAS;AAAA,QACL,WAAW;AAAA,QACX,eAAe;AAAA,MACnB;AAAA,MACA,SAAS;AAAA,QACL,WAAW;AAAA,QACX,eAAe;AAAA,MACnB;AAAA,MACA,aAAa;AAAA,QACT,WAAW;AAAA,QACX,eAAe;AAAA,MACnB;AAAA,MACA,QAAQ;AAAA,QACJ,WAAW;AAAA,QACX,eAAe;AAAA,UACX,SAAS;AAAA,UACT,SAAS;AAAA,UACT,QAAQ;AAAA,QACZ;AAAA,MACJ;AAAA,MACA,YAAY;AAAA,QACR,WAAW;AAAA,QACX,eAAe;AAAA,UACX,UAAU;AAAA,UACV,YAAY;AAAA,UACZ,iBAAiB;AAAA,QACrB;AAAA,MACJ;AAAA,MACA,mBAAmB;AAAA,QACf,WAAW;AAAA,QACX,eAAe;AAAA,MACnB;AAAA,MACA,YAAY;AAAA,QACR,WAAW;AAAA,QACX,eAAe;AAAA,MACnB;AAAA,MACA,YAAY;AAAA,QACR,WAAW;AAAA,QACX,eAAe;AAAA,UACX,UAAU;AAAA,UACV,cAAc;AAAA,UACd,aAAa;AAAA,UACb,YAAY;AAAA,UACZ,cAAc;AAAA,UACd,aAAa;AAAA,UACb,YAAY;AAAA,UACZ,eAAe;AAAA,UACf,aAAa;AAAA,UACb,gBAAgB;AAAA,UAChB,SAAS;AAAA,UACT,QAAQ;AAAA,QACZ;AAAA,MACJ;AAAA,MACA,QAAQ;AAAA,QACJ,WAAW;AAAA,QACX,eAAe;AAAA,MACnB;AAAA,IACJ;AAAA,EACJ;;;ACxnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA,oBAAAC;AAAA,IAAA;AAAA,iBAAAC;AAAA,IAAA;AAAA;AASA,MAAMC,YAAW;AACjB,MAAMC,eAAc;AACpB,MAAMC,KAAI;AACV,MAAMC,iBAAgB;AACtB,MAAMC,cAAa;AAEnB,WAASC,cAAa,QAAQ,cAAc;AACxC,QAAI,MAAM,KAAK,aAAa;AAC5B,UAAMC,QAAO,KAAK,WAAW,GAAG;AAEhC,QAAIA,UAASN,aAAYM,UAASL,cAAa;AAC3C,UAAI,cAAc;AACd,aAAK,MAAM,4BAA4B;AAAA,MAC3C;AACA;AAAA,IACJ;AAEA,WAAO,MAAM,KAAK,UAAU,OAAO;AAC/B,UAAI,CAAC,QAAQ,KAAK,WAAW,GAAG,CAAC,GAAG;AAChC,aAAK,MAAM,uBAAuB,GAAG;AAAA,MACzC;AAAA,IACJ;AAAA,EACJ;AAEA,WAAS,oBAAoB,cAAc;AACvC,WAAOI,cAAa,KAAK,MAAM,GAAG,YAAY;AAAA,EAClD;AAEA,WAAS,eAAe,QAAQC,OAAM;AAClC,QAAI,CAAC,KAAK,QAAQ,KAAK,aAAa,QAAQA,KAAI,GAAG;AAC/C,UAAI,MAAM;AAEV,cAAQA,OAAM;AAAA,QACV,KAAKJ;AACD,gBAAM;AACN;AAAA,QACJ,KAAKD;AACD,gBAAM;AACN;AAAA,MACR;AAEA,WAAK,MAAM,KAAK,KAAK,aAAa,MAAM;AAAA,IAC5C;AAAA,EACJ;AAIA,WAASM,YAAW;AAChB,QAAI,SAAS;AACb,QAAI,OAAO;AACX,QAAI,OAAO,KAAK;AAEhB,WAAO,SAAS,cAAc,SAAS,SAAS;AAC5C,aAAO,KAAK,WAAW,EAAE,MAAM;AAAA,IACnC;AAEA,QAAI,SAASC,SAAQ;AACjB,UAAI,KAAK,QAAQR,WAAU,MAAM,KAC7B,KAAK,QAAQC,cAAa,MAAM,GAAG;AACnC,eAAO,KAAK,QAAQD,WAAU,MAAM,IAAIA,YAAWC;AAEnD,WAAG;AACC,iBAAO,KAAK,WAAW,EAAE,MAAM;AAAA,QACnC,SAAS,SAAS,cAAc,SAAS;AAEzC,YAAI,SAASO,SAAQ;AACjB,eAAK,KAAK,MAAM;AAChB,8BAAoB,KAAK,MAAML,cAAa;AAAA,QAChD;AAAA,MACJ,OAAO;AACH,eAAO;AAAA,MACX;AAAA,IACJ;AAEA,QAAI,SAAS,GAAG;AACZ,WAAK,KAAK,MAAM;AAAA,IACpB;AAEA,QAAI,SAAS,GAAG;AACZ,aAAO,KAAK,WAAW,KAAK,UAAU;AACtC,UAAI,SAASH,aAAY,SAASC,cAAa;AAC3C,aAAK,MAAM,yBAAyB;AAAA,MACxC;AAAA,IACJ;AAEA,wBAAoB,KAAK,MAAM,SAAS,CAAC;AACzC,WAAO,SAASA,eAAc,MAAM,KAAK,QAAQO,OAAM,IAAI,KAAK,QAAQA,OAAM;AAAA,EAClF;AAGO,MAAM,OAAO;AACb,MAAM,YAAY;AAAA,IACrB,GAAG,CAAC,QAAQ,IAAI;AAAA,IAChB,GAAG,CAAC,QAAQ,IAAI;AAAA,EACpB;AAEO,WAASC,SAAQ;AAEpB,UAAM,QAAQ,KAAK;AACnB,QAAI,IAAI;AACR,QAAI,IAAI;AAGR,QAAI,KAAK,cAAcD,SAAQ;AAC3B,0BAAoB,KAAK,MAAMJ,WAAU;AACzC,UAAI,KAAK,QAAQI,OAAM;AAAA,IAC3B,WAOS,KAAK,cAAc,SAAS,KAAK,QAAQ,KAAK,YAAYP,YAAW,GAAG;AAC7E,UAAI;AAEJ,qBAAe,KAAK,MAAM,GAAGC,EAAC;AAE9B,cAAQ,KAAK,WAAW,KAAK,YAAY;AAAA,QAIrC,KAAK;AACD,eAAK,KAAK;AACV,cAAIK,UAAS,KAAK,IAAI;AACtB;AAAA,QAGJ,KAAK;AACD,yBAAe,KAAK,MAAM,GAAGN,YAAW;AAExC,eAAK,KAAK;AACV,eAAK,OAAO;AAEZ,8BAAoB,KAAK,MAAME,cAAa;AAE5C,cAAI,MAAM,KAAK,QAAQK,OAAM;AAC7B;AAAA,QAGJ;AACI,yBAAe,KAAK,MAAM,GAAGP,YAAW;AACxC,UAAAI,cAAa,KAAK,MAAM,GAAGF,cAAa;AACxC,eAAK,KAAK;AAEV,cAAI,KAAK,eAAe,QAAQ,CAAC;AAAA,MACzC;AAAA,IACJ,WAOS,KAAK,cAAc,SAAU,KAAK,QAAQH,SAAQ,KAAK,KAAK,WAAW,CAAC,MAAM,OAAQ;AAC3F,UAAI,OAAO;AACX,UAAI;AAGJ,UAAI,KAAK,QAAQA,SAAQ,GAAG;AACxB,eAAO;AACP,aAAK,KAAK;AAAA,MACd;AAEA,qBAAe,KAAK,MAAM,GAAGE,EAAC;AAE9B,cAAQ,KAAK,WAAW,KAAK,YAAY;AAAA,QAIrC,KAAK;AACD,eAAK,KAAK;AACV,cAAIK,UAAS,KAAK,IAAI;AACtB;AAAA,QAGJ,KAAK;AACD,yBAAe,KAAK,MAAM,GAAGN,YAAW;AAExC,eAAK,KAAK;AACV,eAAK,OAAO;AAEZ,8BAAoB,KAAK,MAAME,cAAa;AAE5C,cAAI,MAAM,KAAK,QAAQK,OAAM;AAC7B;AAAA,QAGJ;AACI,yBAAe,KAAK,MAAM,GAAGP,YAAW;AACxC,UAAAI,cAAa,KAAK,MAAM,GAAGF,cAAa;AACxC,eAAK,KAAK;AAEV,cAAI,KAAK,eAAe,QAAQ,OAAO,CAAC;AAAA,MAChD;AAAA,IACJ,WAOS,KAAK,cAAc,WAAW;AACnC,YAAMG,QAAO,KAAK,WAAW,KAAK,UAAU;AAC5C,YAAM,OAAOA,UAASN,aAAYM,UAASL;AAC3C,UAAI,IAAI,KAAK,aAAa;AAE1B,aAAO,IAAI,KAAK,UAAU,KAAK;AAC3B,YAAI,CAAC,QAAQ,KAAK,WAAW,CAAC,CAAC,GAAG;AAC9B;AAAA,QACJ;AAAA,MACJ;AAEA,UAAI,MAAM,KAAK,aAAa,MAAM;AAC9B,aAAK,MAAM,uBAAuB,KAAK,aAAa,IAAI;AAAA,MAC5D;AAEA,qBAAe,KAAK,MAAM,IAAI,KAAK,YAAYC,EAAC;AAChD,UAAI,KAAK,UAAU,OAAO,CAAC;AAK3B,UAAI,IAAI,MAAM,KAAK,UAAU;AACzB,aAAK,KAAK;AACV,YAAIK,UAAS,KAAK,IAAI;AAAA,MAC1B,OAAO;AACH,uBAAe,KAAK,MAAM,IAAI,KAAK,aAAa,GAAGN,YAAW;AAG9D,YAAI,IAAI,MAAM,KAAK,UAAU;AACzB,eAAK,KAAK;AACV,eAAK,OAAO;AACZ,8BAAoB,KAAK,MAAME,cAAa;AAC5C,cAAI,MAAM,KAAK,QAAQK,OAAM;AAAA,QACjC,OAEK;AACD,UAAAH,cAAa,KAAK,MAAM,IAAI,KAAK,aAAa,GAAGF,cAAa;AAC9D,eAAK,KAAK;AACV,cAAI,KAAK,eAAe,IAAI,CAAC;AAAA,QACjC;AAAA,MACJ;AAAA,IACJ,OAAO;AACH,WAAK,MAAM;AAAA,IACf;AAEA,QAAI,MAAM,QAAQ,EAAE,WAAW,CAAC,MAAMH,WAAU;AAC5C,UAAI,EAAE,OAAO,CAAC;AAAA,IAClB;AAEA,QAAI,MAAM,QAAQ,EAAE,WAAW,CAAC,MAAMA,WAAU;AAC5C,UAAI,EAAE,OAAO,CAAC;AAAA,IAClB;AAEA,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,OAAO,KAAK,UAAU;AAAA,MAC5C;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AAEO,WAASU,UAAS,MAAM;AAC3B,QAAI,KAAK,GAAG;AACR,YAAM,IACF,KAAK,MAAM,QAAQ,OACnB,KAAK,MAAO,OAAO,OACnB,KAAK,MAAM,QAAQ,QACnB,KAAK,IAAI;AAEb,UAAI,KAAK,GAAG;AACR,cAAM,IAAI,KAAK,EAAE,CAAC,MAAM,OAAO,KAAK,EAAE,CAAC,MAAM,MACvC,KAAK,IACL,MAAM,KAAK;AACjB,aAAK,SAAS,IAAI,CAAC;AAAA,MACvB,OAAO;AACH,aAAK,SAAS,CAAC;AAAA,MACnB;AAAA,IACJ,OAAO;AACH,WAAK,SAAS,KAAK,CAAC;AAAA,IACxB;AAAA,EACJ;;;ACnSA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA,IAAA;AAAA;AAOA,WAAS,WAAW,YAAY;AAC5B,WAAO,KAAK,IAAI,YAAY,KAAK,yCAAyC,IAAI;AAAA,EAClF;AAEA,WAAS,2BAA2B;AAChC,aAAS,SAAS,GAAG,MAAM,OAAO,KAAK,WAAW,MAAM,GAAG,UAAU;AACjE,UAAI,SAAS,mBAAmB;AAC5B,eAAO;AAAA,MACX;AAEA,UAAI,SAAS,oBACT,SAAS,WAAW;AACpB,eAAO;AAAA,MACX;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAGO,MAAMC,QAAO;AACb,MAAM,cAAc;AACpB,MAAMC,aAAY;AAAA,IACrB,MAAM;AAAA,IACN,SAAS,CAAC,iBAAiB,OAAO,IAAI;AAAA,IACtC,OAAO,CAAC,SAAS,IAAI;AAAA,EACzB;AAEO,WAASC,OAAM,gBAAgB,OAAO;AACzC,UAAM,QAAQ,KAAK;AACnB,QAAIF;AACJ,QAAI;AACJ,QAAI,UAAU;AACd,QAAI,QAAQ;AAEZ,SAAK,IAAI,SAAS;AAElB,IAAAA,SAAO,KAAK,eAAe,QAAQ,CAAC;AACpC,oBAAgBA,OAAK,YAAY;AACjC,SAAK,OAAO;AAGZ,QAAI,KAAK,QAAQ,SACb,KAAK,cAAc,oBACnB,KAAK,cAAc,WAAW;AAC9B,UAAI,KAAK,oBAAoB;AACzB,kBAAU,KAAK,kBAAkB,KAAK,cAAc,KAAK,MAAMA,QAAM,aAAa,GAAG,UAAU;AAAA,MACnG,OAAO;AACH,kBAAU,WAAW,KAAK,MAAM,KAAK,UAAU;AAAA,MACnD;AAEA,WAAK,OAAO;AAAA,IAChB;AAEA,YAAQ,KAAK,WAAW;AAAA,MACpB,KAAK;AACD,aAAK,KAAK;AACV;AAAA,MAEJ,KAAK;AACD,YAAI,eAAe,KAAK,KAAK,QAAQ,aAAa,KAC9C,OAAO,KAAK,OAAO,aAAa,EAAE,UAAU,YAAY;AACxD,kBAAQ,KAAK,OAAO,aAAa,EAAE,MAAM,KAAK,MAAM,aAAa;AAAA,QACrE,OAAO;AAEH,kBAAQ,KAAK,MAAM,yBAAyB,KAAK,IAAI,CAAC;AAAA,QAC1D;AAEA;AAAA,IACR;AAEA,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,OAAO,KAAK,UAAU;AAAA,MAC5C,MAAAA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AAEO,WAASG,UAAS,MAAM;AAC3B,SAAK,MAAM,WAAW,MAAM,KAAK,IAAI;AAErC,QAAI,KAAK,YAAY,MAAM;AACvB,WAAK,KAAK,KAAK,OAAO;AAAA,IAC1B;AAEA,QAAI,KAAK,OAAO;AACZ,WAAK,KAAK,KAAK,KAAK;AAAA,IACxB,OAAO;AACH,WAAK,MAAM,WAAW,GAAG;AAAA,IAC7B;AAAA,EACJ;;;ACnGA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA,IAAA,mBAAAC;AAAA;AAKO,MAAMC,QAAO;AACb,MAAMC,eAAc;AACpB,MAAMC,aAAY;AAAA,IACrB,UAAU,CAAC,CAAC,CAAC;AAAA,EACjB;AAEO,WAASC,OAAMH,QAAM;AACxB,QAAI,WAAW;AAEf,QAAIA,WAAS,MAAM;AACf,MAAAA,SAAOA,OAAK,YAAY;AAAA,IAC5B;AAEA,SAAK,OAAO;AAEZ,QAAI,eAAe,KAAK,KAAK,QAAQA,MAAI,KACrC,OAAO,KAAK,OAAOA,MAAI,EAAE,YAAY,YAAY;AAEjD,iBAAW,KAAK,OAAOA,MAAI,EAAE,QAAQ,KAAK,IAAI;AAAA,IAClD,OAAO;AAEH,iBAAW,KAAK,aAAa,KAAK,MAAM,aAAa;AAAA,IACzD;AAEA,SAAK,OAAO;AAEZ,QAAI,KAAK,QAAQ,QACb,KAAK,cAAc,oBACnB,KAAK,cAAc,WAAW;AAC9B,WAAK,MAAM,gCAAgC;AAAA,IAC/C;AAEA,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,oBAAoB,QAAQ;AAAA,MACtC;AAAA,IACJ;AAAA,EACJ;AAEO,WAASI,UAAS,MAAM;AAC3B,SAAK,SAAS,IAAI;AAAA,EACtB;;;AC9CA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;AAQA,MAAM,aAAa;AACnB,MAAMC,YAAW;AACjB,MAAM,aAAa;AACnB,MAAM,mBAAmB;AACzB,MAAMC,gBAAe;AACrB,MAAM,QAAQ;AAEd,WAAS,mBAAmB;AACxB,QAAI,KAAK,KAAK;AACV,WAAK,MAAM,yBAAyB;AAAA,IACxC;AAEA,UAAM,QAAQ,KAAK;AACnB,QAAI,cAAc;AAElB,QAAI,KAAK,QAAQD,SAAQ,GAAG;AACxB,oBAAc;AACd,WAAK,KAAK;AAAA,IACd,WAAW,CAAC,KAAK,QAAQC,aAAY,GAAG;AACpC,WAAK,IAAI,KAAK;AAAA,IAClB;AAEA,QAAI,KAAK,QAAQA,aAAY,GAAG;AAC5B,UAAI,KAAK,WAAW,KAAK,aAAa,CAAC,MAAM,YAAY;AACrD,aAAK,KAAK;AACV,aAAK,IAAI,KAAK;AAAA,MAClB,WAAW,aAAa;AACpB,aAAK,MAAM,0BAA0B,KAAK,QAAQ;AAAA,MACtD;AAAA,IACJ,WAAW,aAAa;AACpB,WAAK,MAAM,2BAA2B;AAAA,IAC1C;AAEA,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,OAAO,KAAK,UAAU;AAAA,MAC5C,MAAM,KAAK,eAAe,KAAK;AAAA,IACnC;AAAA,EACJ;AAEA,WAAS,cAAc;AACnB,UAAM,QAAQ,KAAK;AACnB,UAAMC,QAAO,KAAK,WAAW,KAAK;AAElC,QAAIA,UAAS;AAAA,IACTA,UAAS;AAAA,IACTA,UAAS;AAAA,IACTA,UAAS;AAAA,IACTA,UAASF;AAAA,IACTE,UAASD,eACX;AACE,WAAK,MAAM,wDAAwD;AAAA,IACvE;AAEA,SAAK,KAAK;AAEV,QAAIC,UAAS,YAAY;AACrB,UAAI,CAAC,KAAK,QAAQ,UAAU,GAAG;AAC3B,aAAK,MAAM,wBAAwB;AAAA,MACvC;AAEA,WAAK,KAAK;AAAA,IACd;AAEA,WAAO,KAAK,eAAe,KAAK;AAAA,EACpC;AAIO,MAAMC,QAAO;AACb,MAAMC,aAAY;AAAA,IACrB,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI;AAAA,IACtB,OAAO,CAAC,UAAU,cAAc,IAAI;AAAA,IACpC,OAAO,CAAC,QAAQ,IAAI;AAAA,EACxB;AAEO,WAASC,SAAQ;AACpB,UAAM,QAAQ,KAAK;AACnB,QAAIF;AACJ,QAAI,UAAU;AACd,QAAI,QAAQ;AACZ,QAAI,QAAQ;AAEZ,SAAK,IAAI,iBAAiB;AAC1B,SAAK,OAAO;AAEZ,IAAAA,SAAO,iBAAiB,KAAK,IAAI;AACjC,SAAK,OAAO;AAEZ,QAAI,KAAK,cAAc,oBAAoB;AAEvC,UAAI,KAAK,cAAc,OAAO;AAC1B,kBAAU,YAAY,KAAK,IAAI;AAE/B,aAAK,OAAO;AAEZ,gBAAQ,KAAK,cAAcG,UACrB,KAAK,OAAO,IACZ,KAAK,WAAW;AAEtB,aAAK,OAAO;AAAA,MAChB;AAGA,UAAI,KAAK,cAAc,OAAO;AAC1B,gBAAQ,KAAK,QAAQ,KAAK;AAE1B,aAAK,OAAO;AAAA,MAChB;AAAA,IACJ;AAEA,SAAK,IAAI,kBAAkB;AAE3B,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,OAAO,KAAK,UAAU;AAAA,MAC5C,MAAAH;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AAEO,WAASI,UAAS,MAAM;AAC3B,SAAK,MAAM,OAAO,GAAG;AACrB,SAAK,KAAK,KAAK,IAAI;AAEnB,QAAI,KAAK,YAAY,MAAM;AACvB,WAAK,SAAS,KAAK,OAAO;AAC1B,WAAK,KAAK,KAAK,KAAK;AAAA,IACxB;AAEA,QAAI,KAAK,UAAU,MAAM;AACrB,WAAK,MAAM,OAAO,KAAK,KAAK;AAAA,IAChC;AAEA,SAAK,MAAM,OAAO,GAAG;AAAA,EACzB;;;AClJA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA,IAAA,mBAAAC;AAAA;AASA,MAAMC,aAAY;AAElB,WAASC,YAAW,YAAY;AAC5B,WAAO,KAAK,IAAI,YAAY,MAAM,IAAI;AAAA,EAC1C;AACA,WAAS,cAAc;AACnB,WAAO,KAAK,kBAAkB,KAAK,MAAMA,WAAU;AAAA,EACvD;AACA,WAAS,sBAAsB,YAAY;AACvC,WAAO,KAAK,IAAI,YAAY,KAAK,+BAA+B,IAAI;AAAA,EACxE;AACA,WAAS,qBAAqB;AAC1B,QAAI,KAAK,cAAc,WAAW;AAC9B,aAAO,sBAAsB,KAAK,MAAM,KAAK,UAAU;AAAA,IAC3D;AAEA,UAAM,OAAO,KAAK,kBAAkB,KAAK,aAAa,qBAAqB;AAE3E,QAAI,KAAK,cAAc,WAAW;AAC9B,WAAK,KAAK;AAAA,IACd;AAEA,WAAO;AAAA,EACX;AAEO,MAAMC,QAAO;AACb,MAAMC,eAAc;AACpB,MAAMC,aAAY;AAAA,IACrB,UAAU,CAAC;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,IACJ,CAAC;AAAA,EACL;AAEO,WAASC,OAAM,cAAc;AAChC,UAAM,WAAW,eAAe,qBAAqB;AACrD,UAAM,QAAQ,KAAK;AACnB,QAAI,WAAW,KAAK,WAAW;AAE/B,SAAK,IAAI,gBAAgB;AAEzB;AACA,aAAO,CAAC,KAAK,KAAK;AACd,gBAAQ,KAAK,WAAW;AAAA,UACpB,KAAK;AACD,kBAAM;AAAA,UAEV,KAAK;AAAA,UACL,KAAK;AACD,iBAAK,KAAK;AACV;AAAA,UAEJ,KAAK;AACD,qBAAS,KAAK,KAAK,kBAAkB,KAAK,OAAO,KAAK,MAAM,YAAY,GAAGJ,WAAU,CAAC;AACtF;AAAA,UAEJ;AACI,gBAAI,gBAAgB,KAAK,QAAQD,UAAS,GAAI;AAC1C,uBAAS,KAAK,YAAY,KAAK,IAAI,CAAC;AAAA,YACxC,OAAO;AACH,uBAAS,KAAK,SAAS,KAAK,IAAI,CAAC;AAAA,YACrC;AAAA,QACR;AAAA,MACJ;AAEA,QAAI,CAAC,KAAK,KAAK;AACX,WAAK,IAAI,iBAAiB;AAAA,IAC9B;AAEA,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,OAAO,KAAK,UAAU;AAAA,MAC5C;AAAA,IACJ;AAAA,EACJ;AAEO,WAASM,UAAS,MAAM;AAC3B,SAAK,MAAM,kBAAkB,GAAG;AAChC,SAAK,SAAS,MAAM,UAAQ;AACxB,UAAI,KAAK,SAAS,eAAe;AAC7B,aAAK,MAAM,WAAW,GAAG;AAAA,MAC7B;AAAA,IACJ,CAAC;AACD,SAAK,MAAM,mBAAmB,GAAG;AAAA,EACrC;;;AC9FA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;AAMO,MAAMC,QAAO;AACb,MAAMC,aAAY;AAAA,IACrB,UAAU,CAAC,CAAC,CAAC;AAAA,EACjB;AAEO,WAASC,OAAMC,eAAc,YAAY;AAC5C,UAAM,QAAQ,KAAK;AACnB,QAAI,WAAW;AAEf,SAAK,IAAI,iBAAiB;AAE1B,eAAWA,cAAa,KAAK,MAAM,UAAU;AAE7C,QAAI,CAAC,KAAK,KAAK;AACX,WAAK,IAAI,kBAAkB;AAAA,IAC/B;AAEA,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,OAAO,KAAK,UAAU;AAAA,MAC5C;AAAA,IACJ;AAAA,EACJ;AAEO,WAASC,UAAS,MAAM;AAC3B,SAAK,MAAM,OAAO,GAAG;AACrB,SAAK,SAAS,IAAI;AAClB,SAAK,MAAM,OAAO,GAAG;AAAA,EACzB;;;AClCA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;AAEO,MAAMC,QAAO;AACb,MAAMC,aAAY,CAAC;AAEnB,WAASC,SAAQ;AACpB,UAAM,QAAQ,KAAK;AAEnB,SAAK,IAAI,GAAG;AAEZ,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,OAAO,KAAK,UAAU;AAAA,IAChD;AAAA,EACJ;AAEO,WAASC,YAAW;AACvB,SAAK,MAAM,KAAK,KAAK;AAAA,EACzB;;;AClBA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;AAEO,MAAMC,QAAO;AACb,MAAMC,aAAY,CAAC;AAEnB,WAASC,UAAQ;AACpB,UAAM,QAAQ,KAAK;AAEnB,SAAK,IAAI,GAAG;AAEZ,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,OAAO,KAAK,UAAU;AAAA,IAChD;AAAA,EACJ;AAEO,WAASC,YAAW;AACvB,SAAK,MAAM,KAAK,MAAM;AAAA,EAC1B;;;AClBA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;AAEA,MAAM,WAAW;AAGV,MAAMC,QAAO;AACb,MAAMC,aAAY;AAAA,IACrB,MAAM;AAAA,EACV;AAEO,WAASC,UAAQ;AACpB,SAAK,SAAS,QAAQ;AAEtB,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,KAAK,aAAa,GAAG,KAAK,QAAQ;AAAA,MACxD,MAAM,KAAK,QAAQ,KAAK;AAAA,IAC5B;AAAA,EACJ;AAEO,WAASC,WAAS,MAAM;AAC3B,SAAK,MAAM,OAAO,GAAG;AACrB,SAAK,MAAM,OAAO,KAAK,IAAI;AAAA,EAC/B;;;ACvBA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;AAEA,MAAMC,YAAW;AACjB,MAAM,UAAU;AAChB,MAAMC,mBAAkB;AACxB,MAAMC,SAAQ;AAEP,MAAMC,SAAO;AACb,MAAMC,cAAY;AAAA,IACrB,MAAM;AAAA,EACV;AAGO,WAASC,UAAQ;AACpB,UAAM,QAAQ,KAAK;AACnB,QAAIF;AAEJ,YAAQ,KAAK,WAAW;AAAA,MACpB,KAAK;AACD,QAAAA,SAAO;AACP;AAAA,MAEJ,KAAK;AACD,gBAAQ,KAAK,WAAW,KAAK,UAAU,GAAG;AAAA,UACtC,KAAKF;AAAA,UACL,KAAKD;AAAA,UACL,KAAKE;AACD,iBAAK,KAAK;AACV;AAAA,UAEJ,KAAK;AACD,iBAAK,KAAK;AACV,iBAAK,SAAS,MAAM;AACpB,iBAAK,SAAS,OAAO;AACrB;AAAA,UAEJ;AACI,iBAAK,MAAM,wBAAwB;AAAA,QAC3C;AAEA,QAAAC,SAAO,KAAK,eAAe,KAAK;AAChC;AAAA,IACR;AAEA,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,OAAO,KAAK,UAAU;AAAA,MAC5C,MAAAA;AAAA,IACJ;AAAA,EACJ;AAEO,WAASG,WAAS,MAAM;AAC3B,SAAK,SAAS,KAAK,IAAI;AAAA,EAC3B;;;ACrDA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;AAEA,MAAMC,YAAW;AACjB,MAAMC,WAAU;AAGT,MAAMC,SAAO;AACb,MAAMC,cAAY;AAAA,IACrB,OAAO;AAAA,EACX;AAEO,WAASC,UAAQ;AACpB,UAAM,QAAQ,KAAK;AACnB,QAAI,MAAM,KAAK;AAEf,SAAK,IAAI,OAAO;AAEhB,QAAK,MAAM,QAAQ,KAAM,KACrB,KAAK,WAAW,MAAM,CAAC,MAAMJ,aAC7B,KAAK,WAAW,MAAM,CAAC,MAAMC,UAAS;AACtC,aAAO;AAAA,IACX;AAEA,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,OAAO,KAAK,UAAU;AAAA,MAC5C,OAAO,KAAK,UAAU,QAAQ,GAAG,GAAG;AAAA,IACxC;AAAA,EACJ;AAEO,WAASI,WAAS,MAAM;AAC3B,SAAK,MAAM,SAAS,OAAO,KAAK,QAAQ,IAAI;AAAA,EAChD;;;AChCA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA,IAAA,mBAAAC;AAAA;AAUA,MAAMC,mBAAkB;AACxB,MAAMC,cAAa;AACnB,MAAMC,cAAa;AACnB,MAAMC,aAAY;AAClB,MAAMC,YAAW;AACjB,MAAMC,YAAW;AACjB,MAAMC,WAAU;AAEhB,WAAS,gBAAgB,YAAY;AACjC,WAAO,KAAK,IAAI,YAAY,KAAK,wCAAwC,IAAI;AAAA,EACjF;AAEA,WAAS,yBAAyB,YAAY;AAC1C,WAAO,KAAK,IAAI,YAAY,KAAK,wCAAwC,KAAK;AAAA,EAClF;AAEA,WAAS,eAAe;AACpB,UAAM,kBAAkB,KAAK;AAC7B,UAAM,QAAQ,KAAK,MAAM;AAEzB,QAAI,MAAM,SAAS,SACf,KAAK,QAAQ,SACb,KAAK,cAAc,aACnB,KAAK,QAAQN,gBAAe,MAAM,SAClC,KAAK,cAAc,eAAe,MAAM,OAAO;AAC/C,WAAK,MAAM;AAAA,IACf;AAEA,WAAO;AAAA,EACX;AAEO,MAAMO,SAAO;AACb,MAAMC,eAAc;AACpB,MAAMC,cAAY;AAAA,IACrB,WAAW,CAAC,SAAS,MAAM;AAAA,IAC3B,UAAU;AAAA,IACV,OAAO,CAAC,SAAS,KAAK;AAAA,EAC1B;AAEO,WAASC,UAAQ;AACpB,UAAM,QAAQ,KAAK;AACnB,UAAM,aAAa,KAAK;AACxB,UAAMC,YAAWC,cAAa,KAAK,IAAI;AACvC,UAAM,iBAAiB,iBAAiBD,SAAQ;AAChD,UAAM,aAAa,iBAAiB,KAAK,sBAAsB,KAAK;AACpE,UAAME,cAAa,iBAAiB,2BAA2B;AAC/D,QAAI,YAAY;AAChB,QAAI;AAEJ,SAAK,OAAO;AACZ,SAAK,IAAI,KAAK;AAEd,UAAM,aAAa,KAAK;AAExB,QAAI,CAAC,gBAAgB;AACjB,WAAK,OAAO;AAAA,IAChB;AAEA,QAAI,YAAY;AACZ,cAAQ,KAAK,kBAAkB,cAAcA,WAAU;AAAA,IAC3D,OAAO;AACH,cAAQA,YAAW,KAAK,MAAM,KAAK,UAAU;AAAA,IACjD;AAEA,QAAI,kBAAkB,MAAM,SAAS,WAAW,MAAM,SAAS,SAAS;AACpE,eAAS,SAAS,aAAa,KAAK,YAAY,UAAU,GAAG,UAAU;AACnE,YAAI,KAAK,WAAW,MAAM,MAAM,YAAY;AACxC,gBAAM,SAAS,WAAW;AAAA,YACtB,MAAM;AAAA,YACN,KAAK;AAAA,YACL,OAAO;AAAA,UACX,CAAC;AACD;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAEA,QAAI,KAAK,QAAQb,gBAAe,GAAG;AAC/B,kBAAY,aAAa,KAAK,IAAI;AAClC,WAAK,OAAO;AAAA,IAChB;AAKA,QAAI,KAAK,QAAQ,SACb,KAAK,cAAc,aACnB,KAAK,cAAc,UAAU,MAAM,OAAO;AAC1C,WAAK,MAAM;AAAA,IACf;AAEA,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,OAAO,KAAK,UAAU;AAAA,MAC5C;AAAA,MACA,UAAAW;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AAEO,WAASG,WAAS,MAAM;AAC3B,SAAK,MAAM,OAAO,KAAK,QAAQ;AAC/B,SAAK,MAAM,OAAO,GAAG;AACrB,SAAK,KAAK,KAAK,KAAK;AAEpB,QAAI,KAAK,WAAW;AAChB,WAAK,MAAM,OAAO,GAAG;AACrB,WAAK,MAAM,OAAO,KAAK,cAAc,OAAO,cAAc,KAAK,SAAS;AAAA,IAC5E;AAAA,EACJ;AAEA,WAASF,gBAAe;AACpB,UAAM,QAAQ,KAAK;AAGnB,QAAI,KAAK,cAAc,OAAO;AAC1B,cAAQ,KAAK,WAAW,KAAK,UAAU,GAAG;AAAA,QACtC,KAAKR;AAAA,QACL,KAAKF;AAAA,QACL,KAAKG;AAAA,QACL,KAAKJ;AAAA,QACL,KAAKE;AACD,eAAK,KAAK;AACV;AAAA,QAGJ,KAAKG;AACD,eAAK,KAAK;AACV,cAAI,KAAK,QAAQA,QAAO,GAAG;AACvB,iBAAK,KAAK;AAAA,UACd;AACA;AAAA,MACR;AAAA,IACJ;AAEA,QAAI,KAAK,cAAc,MAAM;AACzB,WAAK,IAAI,IAAI;AAAA,IACjB,OAAO;AACH,WAAK,IAAI,KAAK;AAAA,IAClB;AAEA,WAAO,KAAK,eAAe,KAAK;AAAA,EACpC;AAGA,WAAS,eAAe;AACpB,SAAK,IAAI,KAAK;AACd,SAAK,OAAO;AAEZ,UAAM,YAAY,KAAK,QAAQ,KAAK;AAIpC,WAAO,cAAc,cAAc,OAAO;AAAA,EAC9C;;;ACpKA;AAAA;AAAA,oBAAAS;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;AAOA,MAAMC,aAAY;AAElB,WAASC,YAAW,YAAY;AAC5B,WAAO,KAAK,IAAI,YAAY,KAAK,+BAA+B,IAAI;AAAA,EACxE;AAEO,MAAMC,SAAO;AACb,MAAMC,cAAY;AAAA,IACrB,UAAU,CAAC;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,IACJ,CAAC;AAAA,EACL;AAEO,WAASC,UAAQ;AACpB,UAAM,WAAW,KAAK,WAAW;AAEjC;AACA,aAAO,CAAC,KAAK,KAAK;AACd,gBAAQ,KAAK,WAAW;AAAA,UACpB,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACD,iBAAK,KAAK;AACV;AAAA,UAEJ,KAAK;AACD,qBAAS,KAAK,KAAK,kBAAkB,KAAK,OAAO,KAAK,MAAM,IAAI,GAAGH,WAAU,CAAC;AAC9E;AAAA,UAEJ;AACI,gBAAI,KAAK,QAAQD,UAAS,GAAI;AAC1B,uBAAS,KAAK,KAAK,kBAAkB,KAAK,MAAMC,WAAU,CAAC;AAAA,YAC/D,OAAO;AACH,uBAAS,KAAK,KAAK,kBAAkB,KAAK,aAAaA,WAAU,CAAC;AAAA,YACtE;AAAA,QACR;AAAA,MACJ;AAEA,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,oBAAoB,QAAQ;AAAA,MACtC;AAAA,IACJ;AAAA,EACJ;AAEO,WAASI,WAAS,MAAM;AAC3B,SAAK,SAAS,MAAM,UAAQ;AACxB,UAAI,KAAK,SAAS,eAAe;AAC7B,aAAK,MAAM,WAAW,GAAG;AAAA,MAC7B;AAAA,IACJ,CAAC;AAAA,EACL;;;AC5DA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;AAEO,MAAMC,SAAO;AACb,MAAMC,cAAY;AAAA,IACrB,OAAO;AAAA,IACP,MAAM;AAAA,EACV;AAEO,WAASC,UAAQ;AACpB,UAAM,QAAQ,KAAK;AACnB,UAAM,QAAQ,KAAK,cAAc,SAAS;AAE1C,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,OAAO,KAAK,UAAU;AAAA,MAC5C;AAAA,MACA,MAAM,KAAK,UAAU,QAAQ,MAAM,QAAQ,KAAK,UAAU;AAAA,IAC9D;AAAA,EACJ;AAEO,WAASC,WAAS,MAAM;AAC3B,SAAK,MAAM,WAAW,KAAK,QAAQ,KAAK,IAAI;AAAA,EAChD;;;ACtBA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA,IAAA,mBAAAC;AAAA;AAMO,MAAMC,SAAO;AACb,MAAMC,eAAc;AACpB,MAAMC,cAAY;AAAA,IACrB,MAAM;AAAA,IACN,UAAU,CAAC,CAAC,CAAC;AAAA,EACjB;AAGO,WAASC,QAAMC,eAAc,YAAY;AAC5C,UAAM,QAAQ,KAAK;AACnB,UAAMJ,SAAO,KAAK,oBAAoB;AACtC,UAAM,gBAAgBA,OAAK,YAAY;AACvC,QAAI;AAEJ,eAAW,WAAW,eAAe,aAAa,IAC5C,WAAW,aAAa,EAAE,KAAK,MAAM,UAAU,IAC/CI,cAAa,KAAK,MAAM,UAAU;AAExC,QAAI,CAAC,KAAK,KAAK;AACX,WAAK,IAAI,gBAAgB;AAAA,IAC7B;AAEA,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,OAAO,KAAK,UAAU;AAAA,MAC5C,MAAAJ;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AAEO,WAASK,WAAS,MAAM;AAC3B,SAAK,MAAMC,WAAe,KAAK,OAAO,GAAG;AACzC,SAAK,SAAS,IAAI;AAClB,SAAK,MAAM,kBAAkB,GAAG;AAAA,EACpC;;;ACxCA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA,IAAA;AAAA;AAGO,MAAM,MAAM;AACZ,MAAMC,SAAO;AACb,MAAMC,cAAY;AAAA,IACrB,OAAO;AAAA,EACX;AACO,WAASC,UAAQ;AACpB,UAAM,QAAQ,KAAK;AAEnB,SAAK,IAAI,IAAI;AAEb,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,OAAO,KAAK,UAAU;AAAA,MAC5C,OAAO,KAAK,eAAe,QAAQ,CAAC;AAAA,IACxC;AAAA,EACJ;AACO,WAASC,WAAS,MAAM;AAC3B,SAAK,MAAM,MAAM,MAAM,KAAK,KAAK;AAAA,EACrC;;;ACrBA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;AAEO,MAAMC,SAAO;AACb,MAAMC,cAAY;AAAA,IACrB,MAAM;AAAA,EACV;AAEO,WAASC,UAAQ;AACpB,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,KAAK,YAAY,KAAK,QAAQ;AAAA,MACpD,MAAM,KAAK,QAAQ,KAAK;AAAA,IAC5B;AAAA,EACJ;AAEO,WAASC,WAAS,MAAM;AAC3B,SAAK,MAAM,OAAO,KAAK,IAAI;AAAA,EAC/B;;;ACjBA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;AAEO,MAAMC,SAAO;AACb,MAAMC,cAAY;AAAA,IACrB,MAAM;AAAA,EACV;AAEO,WAASC,UAAQ;AACpB,UAAM,QAAQ,KAAK;AAGnB,SAAK,IAAI,IAAI;AAEb,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,OAAO,KAAK,UAAU;AAAA,MAC5C,MAAM,KAAK,eAAe,QAAQ,CAAC;AAAA,IACvC;AAAA,EACJ;AAEO,WAASC,WAAS,MAAM;AAI3B,SAAK,MAAM,OAAO,MAAM,KAAK,IAAI;AAAA,EACrC;;;ACzBA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;AAUO,MAAMC,SAAO;AACb,MAAMC,cAAY;AAAA,IACrB,MAAM;AAAA,IACN,OAAO,CAAC,cAAc,UAAU,aAAa,SAAS,IAAI;AAAA,EAC9D;AAEO,WAASC,UAAQ;AACpB,UAAM,QAAQ,KAAK;AACnB,QAAIF;AACJ,QAAI,QAAQ;AAEZ,SAAK,IAAI,eAAe;AACxB,SAAK,OAAO;AAEZ,IAAAA,SAAO,KAAK,QAAQ,KAAK;AACzB,SAAK,OAAO;AAEZ,QAAI,KAAK,cAAc,kBAAkB;AACrC,WAAK,IAAI,KAAK;AACd,WAAK,OAAO;AAEZ,cAAQ,KAAK,WAAW;AAAA,QACpB,KAAKG;AACD,cAAI,KAAK,gBAAgB,CAAC,MAAM,OAAO;AACnC,oBAAQ,KAAK,MAAM;AAAA,UACvB,OAAO;AACH,oBAAQ,KAAK,OAAO;AAAA,UACxB;AAEA;AAAA,QAEJ,KAAK;AACD,kBAAQ,KAAK,UAAU;AACvB;AAAA,QAEJ,KAAK;AACD,kBAAQ,KAAK,WAAW;AACxB;AAAA,QAEJ;AACI,eAAK,MAAM,oDAAoD;AAAA,MACvE;AAEA,WAAK,OAAO;AAAA,IAChB;AAEA,SAAK,IAAI,gBAAgB;AAEzB,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,OAAO,KAAK,UAAU;AAAA,MAC5C,MAAAH;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AAEO,WAASI,WAAS,MAAM;AAC3B,SAAK,MAAM,iBAAiB,GAAG;AAC/B,SAAK,MAAM,OAAO,KAAK,IAAI;AAE3B,QAAI,KAAK,UAAU,MAAM;AACrB,WAAK,MAAM,OAAO,GAAG;AACrB,WAAK,KAAK,KAAK,KAAK;AAAA,IACxB;AAEA,SAAK,MAAM,kBAAkB,GAAG;AAAA,EACpC;;;AC5EA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;AAOO,MAAMC,SAAO;AACb,MAAMC,cAAY;AAAA,IACrB,UAAU,CAAC;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,IACJ,CAAC;AAAA,EACL;AAEO,WAASC,UAAQ;AACpB,UAAM,WAAW,KAAK,WAAW;AACjC,QAAI,QAAQ;AAEZ,SAAK,OAAO;AAEZ;AACA,aAAO,CAAC,KAAK,KAAK;AACd,gBAAQ,KAAK,WAAW;AAAA,UACpB,KAAK;AAAA,UACL,KAAK;AACD,iBAAK,KAAK;AACV;AAAA,UAEJ,KAAK;AACD,oBAAQ,KAAK,WAAW;AACxB;AAAA,UAEJ,KAAK;AACD,oBAAQ,KAAK,aAAa;AAC1B;AAAA,UAEJ;AACI,kBAAM;AAAA,QACd;AAEA,iBAAS,KAAK,KAAK;AAAA,MACvB;AAEA,QAAI,UAAU,MAAM;AAChB,WAAK,MAAM,uCAAuC;AAAA,IACtD;AAEA,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,oBAAoB,QAAQ;AAAA,MACtC;AAAA,IACJ;AAAA,EACJ;AAEO,WAASC,WAAS,MAAM;AAC3B,SAAK,SAAS,IAAI;AAAA,EACtB;;;AC1DA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;AAEO,MAAMC,SAAO;AACb,MAAMC,cAAY;AAAA,IACrB,UAAU,CAAC;AAAA,MACP;AAAA,IACJ,CAAC;AAAA,EACL;AAEO,WAASC,UAAQ;AACpB,UAAM,WAAW,KAAK,WAAW;AAEjC,SAAK,OAAO;AAEZ,WAAO,CAAC,KAAK,KAAK;AACd,eAAS,KAAK,KAAK,WAAW,CAAC;AAE/B,UAAI,KAAK,cAAc,OAAO;AAC1B;AAAA,MACJ;AAEA,WAAK,KAAK;AAAA,IACd;AAEA,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,oBAAoB,QAAQ;AAAA,MACtC;AAAA,IACJ;AAAA,EACJ;AAEO,WAASC,WAAS,MAAM;AAC3B,SAAK,SAAS,MAAM,MAAM,KAAK,MAAM,OAAO,GAAG,CAAC;AAAA,EACpD;;;ACjCA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;AAEA,MAAMC,aAAY;AAEX,MAAMC,SAAO;AACb,MAAMC,cAAY,CACzB;AAEO,WAASC,UAAQ;AACpB,UAAM,QAAQ,KAAK;AAEnB,SAAK,SAASH,UAAS;AAEvB,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,OAAO,KAAK,UAAU;AAAA,IAChD;AAAA,EACJ;AAEO,WAASI,aAAW;AACvB,SAAK,MAAM,OAAO,GAAG;AAAA,EACzB;;;ACrBA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;AAEO,MAAMC,SAAO;AACb,MAAMC,cAAY;AAAA,IACrB,KAAK,CAAC,WAAW,YAAY;AAAA,IAC7B,UAAU,CAAC,gBAAgB,IAAI;AAAA,EACnC;AAEO,WAASC,UAAQ;AACpB,SAAK,OAAO;AAEZ,UAAM,QAAQ,KAAK;AACnB,QAAI,MAAM;AACV,QAAIC,YAAW;AACf,QAAIC;AAEJ,QAAI,KAAK,YAAY,GAAG,KAAK,KAAK,KAAK,YAAY,GAAG,MAAM,GAAG;AAC3D,MAAAA,OAAM,KAAK,WAAW;AAAA,IAC1B,OAAO;AACH,MAAAA,OAAM,KAAK,QAAQ;AAAA,IACvB;AAEA,UAAM,KAAK;AACX,SAAK,OAAO;AAEZ,QAAI,KAAK,YAAY,GAAG,IAAI,GAAG;AAC3B,WAAK,KAAK;AAEV,MAAAD,YAAW,KAAK,aAAa;AAC7B,YAAM,KAAK;AAAA,IACf;AAEA,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,OAAO,GAAG;AAAA,MAChC,KAAAC;AAAA,MACA,UAAAD;AAAA,IACJ;AAAA,EACJ;AAEO,WAASE,WAAS,MAAM;AAC3B,SAAK,KAAK,KAAK,GAAG;AAClB,QAAI,KAAK,aAAa,MAAM;AACxB,WAAK,MAAM,OAAO,IAAI;AACtB,WAAK,KAAK,KAAK,QAAQ;AAAA,IAC3B;AAAA,EACJ;;;AC9CA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;AAEO,MAAMC,SAAO;AACb,MAAMC,cAAY;AAAA,IACrB,OAAO;AAAA,EACX;AAEO,WAASC,UAAQ;AACpB,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,KAAK,YAAY,KAAK,QAAQ;AAAA,MACpD,OAAO,KAAK,QAAQC,OAAW;AAAA,IACnC;AAAA,EACJ;AAEO,WAASC,WAAS,MAAM;AAC3B,SAAK,MAAMD,SAAa,KAAK,KAAK;AAAA,EACtC;;;ACjBA;AAAA;AAAA,oBAAAE;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;AACO,MAAMF,SAAO;AACb,MAAME,cAAY;AAAA,IACrB,OAAO;AAAA,EACX;AAEO,WAASD,UAAQ;AACpB,UAAM,QAAQ,KAAK;AAEnB,SAAK,KAAK;AAEV,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,OAAO,KAAK,UAAU;AAAA,MAC5C,OAAO,KAAK,eAAe,KAAK;AAAA,IACpC;AAAA,EACJ;AAEO,WAASF,WAAS,MAAM;AAC3B,SAAK,SAAS,KAAK,KAAK;AAAA,EAC5B;;;ACpBA;AAAA;AAAA,oBAAAI;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;AAKO,MAAMC,SAAO;AACb,MAAMC,cAAY;AAAA,IACrB,UAAU,CAAC,CAAC,CAAC;AAAA,EACjB;AAEO,WAASC,QAAMC,eAAc,YAAY;AAC5C,UAAM,QAAQ,KAAK;AACnB,QAAI,WAAW;AAEf,SAAK,IAAI,eAAe;AAExB,eAAWA,cAAa,KAAK,MAAM,UAAU;AAE7C,QAAI,CAAC,KAAK,KAAK;AACX,WAAK,IAAI,gBAAgB;AAAA,IAC7B;AAEA,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,OAAO,KAAK,UAAU;AAAA,MAC5C;AAAA,IACJ;AAAA,EACJ;AAEO,WAASC,WAAS,MAAM;AAC3B,SAAK,MAAM,iBAAiB,GAAG;AAC/B,SAAK,SAAS,IAAI;AAClB,SAAK,MAAM,kBAAkB,GAAG;AAAA,EACpC;;;ACjCA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;AAEO,MAAMC,SAAO;AACb,MAAMC,cAAY;AAAA,IACrB,OAAO;AAAA,EACX;AAEO,WAASC,UAAQ;AACpB,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,KAAK,YAAY,KAAK,QAAQ;AAAA,MACpD,OAAO,KAAK,cAAc,UAAU;AAAA,IACxC;AAAA,EACJ;AAEO,WAASC,WAAS,MAAM;AAC3B,SAAK,MAAM,YAAY,KAAK,QAAQ,GAAG;AAAA,EAC3C;;;ACjBA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA,IAAA,mBAAAC;AAAA;AAQO,MAAMC,SAAO;AACb,MAAMC,eAAc;AACpB,MAAMC,cAAY;AAAA,IACrB,MAAM;AAAA,IACN,UAAU,CAAC,CAAC,KAAK,GAAG,IAAI;AAAA,EAC5B;AAGO,WAASC,UAAQ;AACpB,UAAM,QAAQ,KAAK;AACnB,QAAI,WAAW;AACf,QAAIH;AACJ,QAAI;AAEJ,SAAK,IAAI,KAAK;AAEd,QAAI,KAAK,cAAcI,WAAe;AAClC,MAAAJ,SAAO,KAAK,oBAAoB;AAChC,sBAAgBA,OAAK,YAAY;AAEjC,UAAI,eAAe,KAAK,KAAK,QAAQ,aAAa,GAAG;AACjD,aAAK,OAAO;AACZ,mBAAW,KAAK,OAAO,aAAa,EAAE,KAAK,IAAI;AAC/C,aAAK,OAAO;AAAA,MAChB,OAAO;AACH,mBAAW,KAAK,WAAW;AAC3B,iBAAS;AAAA,UACL,KAAK,IAAI,KAAK,YAAY,MAAM,KAAK;AAAA,QACzC;AAAA,MACJ;AAEA,WAAK,IAAI,gBAAgB;AAAA,IAC7B,OAAO;AACH,MAAAA,SAAO,KAAK,QAAQ,KAAK;AAAA,IAC7B;AAEA,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,OAAO,KAAK,UAAU;AAAA,MAC5C,MAAAA;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AAEO,WAASK,WAAS,MAAM;AAC3B,SAAK,MAAM,OAAO,GAAG;AAErB,QAAI,KAAK,aAAa,MAAM;AACxB,WAAK,MAAM,OAAO,KAAK,IAAI;AAAA,IAC/B,OAAO;AACH,WAAK,MAAMD,WAAe,KAAK,OAAO,GAAG;AACzC,WAAK,SAAS,IAAI;AAClB,WAAK,MAAM,kBAAkB,GAAG;AAAA,IACpC;AAAA,EACJ;;;AC9DA;AAAA;AAAA,oBAAAE;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA,IAAA,mBAAAC;AAAA;AAOO,MAAMC,SAAO;AACb,MAAMC,eAAc;AACpB,MAAMC,cAAY;AAAA,IACrB,MAAM;AAAA,IACN,UAAU,CAAC,CAAC,KAAK,GAAG,IAAI;AAAA,EAC5B;AAGO,WAASC,UAAQ;AACpB,UAAM,QAAQ,KAAK;AACnB,QAAI,WAAW;AACf,QAAIH;AACJ,QAAI;AAEJ,SAAK,IAAI,KAAK;AACd,SAAK,IAAI,KAAK;AAEd,QAAI,KAAK,cAAcI,WAAe;AAClC,MAAAJ,SAAO,KAAK,oBAAoB;AAChC,sBAAgBA,OAAK,YAAY;AAEjC,UAAI,eAAe,KAAK,KAAK,QAAQ,aAAa,GAAG;AACjD,aAAK,OAAO;AACZ,mBAAW,KAAK,OAAO,aAAa,EAAE,KAAK,IAAI;AAC/C,aAAK,OAAO;AAAA,MAChB,OAAO;AACH,mBAAW,KAAK,WAAW;AAC3B,iBAAS;AAAA,UACL,KAAK,IAAI,KAAK,YAAY,MAAM,KAAK;AAAA,QACzC;AAAA,MACJ;AAEA,WAAK,IAAI,gBAAgB;AAAA,IAC7B,OAAO;AACH,MAAAA,SAAO,KAAK,QAAQ,KAAK;AAAA,IAC7B;AAEA,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,OAAO,KAAK,UAAU;AAAA,MAC5C,MAAAA;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AAEO,WAASK,WAAS,MAAM;AAC3B,SAAK,MAAM,OAAO,GAAG;AACrB,SAAK,MAAM,OAAO,GAAG;AAErB,QAAI,KAAK,aAAa,MAAM;AACxB,WAAK,MAAM,OAAO,KAAK,IAAI;AAAA,IAC/B,OAAO;AACH,WAAK,MAAMD,WAAe,KAAK,OAAO,GAAG;AACzC,WAAK,SAAS,IAAI;AAClB,WAAK,MAAM,kBAAkB,GAAG;AAAA,IACpC;AAAA,EACJ;;;AC/DA;AAAA;AAAA,oBAAAE;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;AAEA,MAAMC,WAAU;AAChB,MAAMC,YAAW;AAQjB,WAASC,iBAAgB;AACrB,SAAK,OAAO;AAEZ,UAAM,QAAQ,KAAK,QAAQC,OAAW;AAEtC,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,YAAMC,QAAO,MAAM,WAAW,CAAC;AAC/B,UAAI,CAAC,QAAQA,KAAI,KAAKA,UAASH,WAAU;AACrC,aAAK,MAAM,+BAA+B,KAAK,aAAa,MAAM,SAAS,CAAC;AAAA,MAChF;AAAA,IACJ;AAEA,QAAI,OAAO,KAAK,MAAM,GAAG;AACrB,WAAK,MAAM,8BAA8B,KAAK,aAAa,MAAM,MAAM;AAAA,IAC3E;AAEA,WAAO;AAAA,EACX;AAEO,MAAMI,SAAO;AACb,MAAMC,cAAY;AAAA,IACrB,MAAM;AAAA,IACN,OAAO;AAAA,EACX;AAGO,WAASC,UAAQ;AACpB,UAAM,QAAQ,KAAK;AACnB,UAAM,OAAOL,eAAc,KAAK,IAAI;AACpC,QAAI;AAEJ,SAAK,OAAO;AACZ,SAAK,SAASF,QAAO;AACrB,YAAQE,eAAc,KAAK,IAAI;AAE/B,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,OAAO,KAAK,UAAU;AAAA,MAC5C;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AAEO,WAASM,WAAS,MAAM;AAC3B,SAAK,MAAML,SAAa,KAAK,IAAI;AACjC,SAAK,MAAM,OAAO,GAAG;AACrB,SAAK,MAAMA,SAAa,KAAK,KAAK;AAAA,EACtC;;;AC1DA;AAAA;AAAA,oBAAAM;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;AAEA,WAAS,qBAAqB;AAC1B,QAAI,KAAK,aAAa,GAAG;AACrB,UAAI,KAAK,WAAW,EAAE,MAAM,YAAY;AACpC,eAAO,KAAK,aAAa,IACnB,KAAK,cAAc,KAAK,aAAa,CAAC,IACtC,KAAK;AAAA,MACf;AAAA,IACJ;AAEA,WAAO,KAAK;AAAA,EAChB;AAEO,MAAMC,SAAO;AACb,MAAMC,cAAY;AAAA,IACrB,OAAO;AAAA,EACX;AAEO,WAASC,QAAM,YAAY,cAAc,mBAAmB;AAC/D,UAAM,cAAc,KAAK,cAAc,UAAU;AACjD,QAAI;AAEJ,SAAK,kBAAkB,YAAY,gBAAgB,KAAK,sBAAsB;AAE9E,QAAI,qBAAqB,KAAK,aAAa,aAAa;AACpD,kBAAY,mBAAmB,KAAK,IAAI;AAAA,IAC5C,OAAO;AACH,kBAAY,KAAK;AAAA,IACrB;AAEA,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,aAAa,SAAS;AAAA,MAC5C,OAAO,KAAK,UAAU,aAAa,SAAS;AAAA,IAChD;AAAA,EACJ;AAEO,WAASC,WAAS,MAAM;AAC3B,SAAK,SAAS,KAAK,KAAK;AAAA,EAC5B;;;ACxCA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA,IAAA,mBAAAC;AAAA;AAEA,WAASC,YAAW,YAAY;AAC5B,WAAO,KAAK,IAAI,YAAY,KAAK,8BAA8B,IAAI;AAAA,EACvE;AAEA,WAAS,iBAAiB;AACtB,UAAM,UAAU,KAAK,aAAa;AAElC,QAAI,QAAQ,SAAS,SACjB,KAAK,QAAQ,SACb,KAAK,cAAc,kBAAkB;AACrC,WAAK,MAAM;AAAA,IACf;AAEA,WAAO;AAAA,EACX;AAEO,MAAMC,SAAO;AACb,MAAMC,eAAc;AACpB,MAAMC,cAAY;AAAA,IACrB,SAAS,CAAC,gBAAgB,KAAK;AAAA,IAC/B,OAAO,CAAC,OAAO;AAAA,EACnB;AAEO,WAASC,UAAQ;AACpB,UAAM,aAAa,KAAK;AACxB,UAAM,cAAc,KAAK;AACzB,QAAI;AACJ,QAAI;AAEJ,QAAI,KAAK,kBAAkB;AACvB,gBAAU,KAAK,kBAAkB,gBAAgBJ,WAAU;AAAA,IAC/D,OAAO;AACH,gBAAUA,YAAW,KAAK,MAAM,UAAU;AAAA,IAC9C;AAEA,YAAQ,KAAK,MAAM,IAAI;AAEvB,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,aAAa,KAAK,UAAU;AAAA,MAClD;AAAA,MACA;AAAA,IACJ;AAAA,EACJ;AACO,WAASK,WAAS,MAAM;AAC3B,SAAK,KAAK,KAAK,OAAO;AACtB,SAAK,KAAK,KAAK,KAAK;AAAA,EACxB;;;ACjDA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;AAAO,MAAMF,SAAO;AACb,MAAME,cAAY;AAAA,IACrB,UAAU,CAAC;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,CAAC;AAAA,EACL;AAEO,WAASD,UAAQ;AACpB,UAAM,WAAW,KAAK,aAAa,KAAK,MAAM,QAAQ;AAGtD,QAAI,KAAK,iBAAiB,QAAQ,MAAM,MAAM;AAC1C,WAAK,MAAM,sBAAsB;AAAA,IACrC;AAEA,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,oBAAoB,QAAQ;AAAA,MACtC;AAAA,IACJ;AAAA,EACJ;AAEO,WAASF,WAAS,MAAM;AAC3B,SAAK,SAAS,IAAI;AAAA,EACtB;;;AC/BA;AAAA;AAAA,oBAAAI;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA,IAAA,mBAAAC;AAAA;AAEO,MAAMC,SAAO;AACb,MAAMC,eAAc;AACpB,MAAMC,cAAY;AAAA,IACrB,UAAU,CAAC;AAAA,MACP;AAAA,MACA;AAAA,IACJ,CAAC;AAAA,EACL;AAEO,WAASC,UAAQ;AACpB,UAAM,WAAW,KAAK,WAAW;AAEjC,WAAO,CAAC,KAAK,KAAK;AACd,eAAS,KAAK,KAAK,SAAS,CAAC;AAE7B,UAAI,KAAK,cAAc,OAAO;AAC1B,aAAK,KAAK;AACV;AAAA,MACJ;AAEA;AAAA,IACJ;AAEA,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,oBAAoB,QAAQ;AAAA,MACtC;AAAA,IACJ;AAAA,EACJ;AAEO,WAASC,WAAS,MAAM;AAC3B,SAAK,SAAS,MAAM,MAAM,KAAK,MAAM,OAAO,GAAG,CAAC;AAAA,EACpD;;;AClCA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;;;ACQA,MAAM,kBAAkB;AACxB,MAAM,iBAAiB;AACvB,MAAMC,cAAa;AAEZ,WAAS,OAAO,KAAK;AACxB,UAAM,MAAM,IAAI;AAChB,UAAM,YAAY,IAAI,WAAW,CAAC;AAClC,UAAM,QAAQ,cAAc,kBAAkB,cAAcA,cAAa,IAAI;AAC7E,UAAM,MAAM,UAAU,KAAK,MAAM,KAAK,IAAI,WAAW,MAAM,CAAC,MAAM,YAAY,MAAM,IAAI,MAAM;AAC9F,QAAI,UAAU;AAEd,aAAS,IAAI,OAAO,KAAK,KAAK,KAAK;AAC/B,UAAIC,QAAO,IAAI,WAAW,CAAC;AAE3B,UAAIA,UAAS,iBAAiB;AAE1B,YAAI,MAAM,KAAK;AAGX,cAAI,MAAM,MAAM,GAAG;AACf,sBAAU,IAAI,OAAO,IAAI,CAAC;AAAA,UAC9B;AACA;AAAA,QACJ;AAEA,QAAAA,QAAO,IAAI,WAAW,EAAE,CAAC;AAGzB,YAAI,cAAc,iBAAiBA,KAAI,GAAG;AACtC,gBAAM,cAAc,IAAI;AACxB,gBAAM,YAAY,eAAe,KAAK,WAAW;AAEjD,cAAI,YAAY;AAChB,qBAAW,cAAc,IAAI,UAAU,cAAc,GAAG,SAAS,CAAC;AAAA,QACtE,OAAO;AAEH,cAAIA,UAAS,MAAU,IAAI,WAAW,IAAI,CAAC,MAAM,IAAQ;AACrD;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ,OAAO;AACH,mBAAW,IAAI,CAAC;AAAA,MACpB;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAIO,WAAS,OAAO,KAAK,YAAY;AACpC,UAAM,QAAQ,aAAa,MAAO;AAClC,UAAM,YAAY,aAAaD,cAAa;AAC5C,QAAI,UAAU;AACd,QAAI,sBAAsB;AAE1B,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACjC,YAAMC,QAAO,IAAI,WAAW,CAAC;AAG7B,UAAIA,UAAS,GAAQ;AACjB,mBAAW;AACX;AAAA,MACJ;AAKA,UAAIA,SAAQ,MAAUA,UAAS,KAAQ;AACnC,mBAAW,OAAOA,MAAK,SAAS,EAAE;AAClC,8BAAsB;AACtB;AAAA,MACJ;AAGA,UAAIA,UAAS,aAAaA,UAAS,iBAAiB;AAChD,mBAAW,OAAO,IAAI,OAAO,CAAC;AAC9B,8BAAsB;AAAA,MAC1B,OAAO;AACH,YAAI,wBAAwB,WAAWA,KAAI,KAAK,aAAaA,KAAI,IAAI;AACjE,qBAAW;AAAA,QACf;AAGA,mBAAW,IAAI,OAAO,CAAC;AACvB,8BAAsB;AAAA,MAC1B;AAAA,IACJ;AAEA,WAAO,QAAQ,UAAU;AAAA,EAC7B;;;AD/FO,MAAMC,SAAO;AACb,MAAMC,cAAY;AAAA,IACrB,OAAO;AAAA,EACX;AAEO,WAASC,UAAQ;AACpB,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,KAAK,YAAY,KAAK,QAAQ;AAAA,MACpD,OAAO,OAAO,KAAK,QAAQC,OAAW,CAAC;AAAA,IAC3C;AAAA,EACJ;AAEO,WAASC,WAAS,MAAM;AAC3B,SAAK,MAAMD,SAAa,OAAO,KAAK,KAAK,CAAC;AAAA,EAC9C;;;AElBA;AAAA;AAAA,oBAAAE;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA,IAAA,mBAAAC;AAAA;AAQA,MAAMC,mBAAkB;AAExB,WAASC,YAAW,YAAY;AAC5B,WAAO,KAAK,IAAI,YAAY,MAAM,KAAK;AAAA,EAC3C;AAEO,MAAMC,SAAO;AACb,MAAMC,gBAAc;AACpB,MAAMC,cAAY;AAAA,IACrB,UAAU,CAAC;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,CAAC;AAAA,EACL;AAEO,WAASC,UAAQ;AACpB,UAAM,QAAQ,KAAK;AACnB,UAAM,WAAW,KAAK,WAAW;AACjC,QAAI;AAEJ;AACA,aAAO,CAAC,KAAK,KAAK;AACd,gBAAQ,KAAK,WAAW;AAAA,UACpB,KAAK;AACD,iBAAK,KAAK;AACV;AAAA,UAEJ,KAAK;AAED,gBAAI,KAAK,WAAW,KAAK,aAAa,CAAC,MAAML,kBAAiB;AAC1D,mBAAK,KAAK;AACV;AAAA,YACJ;AAEA,oBAAQ,KAAK,QAAQ;AACrB;AAAA,UAEJ,KAAK;AACD,oBAAQ,KAAK,IAAI;AACjB;AAAA,UAEJ,KAAK;AACD,oBAAQ,KAAK,IAAI;AACjB;AAAA,UAKJ,KAAK;AACD,oBAAQ,KAAK,kBAAkB,KAAK,QAAQC,WAAU;AACtD;AAAA,UAGJ;AACI,oBAAQ,KAAK,kBAAkB,KAAK,MAAMA,WAAU;AAAA,QAC5D;AAEA,iBAAS,KAAK,KAAK;AAAA,MACvB;AAEA,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,OAAO,KAAK,UAAU;AAAA,MAC5C;AAAA,IACJ;AAAA,EACJ;AAEO,WAASK,WAAS,MAAM;AAC3B,SAAK,SAAS,IAAI;AAAA,EACtB;;;ACjFA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;AAEA,MAAMC,YAAW;AACjB,MAAMC,gBAAe;AAErB,WAAS,0BAA0B;AAC/B,QAAI,KAAK,cAAc,SACnB,KAAK,QAAQD,SAAQ,MAAM,OAAO;AAClC,WAAK,MAAM,oCAAoC;AAAA,IACnD;AAEA,SAAK,KAAK;AAAA,EACd;AAEO,MAAME,SAAO;AACb,MAAMC,cAAY;AAAA,IACrB,MAAM;AAAA,EACV;AAUO,WAASC,UAAQ;AACpB,UAAM,QAAQ,KAAK;AAEnB,QAAI,KAAK,QAAQH,aAAY,GAAG;AAC5B,WAAK,KAAK;AACV,8BAAwB,KAAK,IAAI;AAAA,IACrC,OAAO;AACH,8BAAwB,KAAK,IAAI;AAEjC,UAAI,KAAK,QAAQA,aAAY,GAAG;AAC5B,aAAK,KAAK;AACV,gCAAwB,KAAK,IAAI;AAAA,MACrC;AAAA,IACJ;AAEA,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,OAAO,KAAK,UAAU;AAAA,MAC5C,MAAM,KAAK,eAAe,KAAK;AAAA,IACnC;AAAA,EACJ;AAEO,WAASI,WAAS,MAAM;AAC3B,SAAK,SAAS,KAAK,IAAI;AAAA,EAC3B;;;ACnDA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;AAOA,MAAMC,YAAW;AACjB,MAAMC,eAAc;AACpB,MAAMC,gBAAe;AAErB,WAAS,eAAe,QAAQ,WAAW;AACvC,QAAI,MAAM;AAEV,aAAS,MAAM,KAAK,aAAa,QAAQ,MAAM,KAAK,UAAU,OAAO;AACjE,YAAMC,QAAO,KAAK,WAAW,GAAG;AAEhC,UAAIA,UAASF,gBAAe,aAAa,QAAQ,GAAG;AAChD,uBAAe,KAAK,MAAM,SAAS,MAAM,GAAG,KAAK;AACjD,eAAO;AAAA,MACX;AAEA,UAAI,CAAC,WAAWE,KAAI,GAAG;AACnB,aAAK;AAAA,UACD,aAAa,QAAQ,IACf,kBAAkB,MAAM,IAAI,kBAAkB,MAAM,iBACnD,MAAM,IAAI,0BAA0B;AAAA,UAC3C;AAAA,QACJ;AAAA,MACJ;AAEA,UAAI,EAAE,MAAM,GAAG;AACX,aAAK,MAAM,uBAAuB,GAAG;AAAA,MACzC;AAAC;AAAA,IACL;AAEA,SAAK,KAAK;AACV,WAAO;AAAA,EACX;AAEA,WAAS,wBAAwB,KAAK;AAClC,QAAI,QAAQ;AAEZ,WAAO,KAAK,QAAQD,aAAY,GAAG;AAC/B,UAAI,EAAE,QAAQ,KAAK;AACf,aAAK,MAAM,yBAAyB;AAAA,MACxC;AAEA,WAAK,KAAK;AAAA,IACd;AAAA,EACJ;AAEA,WAASE,YAAWD,OAAM;AACtB,QAAI,KAAK,WAAW,KAAK,UAAU,MAAMA,OAAM;AAC3C,WAAK,OAAOA,UAASH,YAAW,cAAc,kBAAkB,cAAc;AAAA,IAClF;AAAA,EACJ;AAqBA,WAAS,mBAAmB;AACxB,QAAI,YAAY;AAEhB,YAAQ,KAAK,WAAW;AAAA,MACpB,KAAKK;AAID,oBAAY,eAAe,KAAK,MAAM,GAAG,IAAI;AAE7C,YAAI,KAAK,QAAQH,aAAY,GAAG;AAC5B,kCAAwB,KAAK,MAAM,IAAI,SAAS;AAChD;AAAA,QACJ;AAEA,YAAI,KAAK,cAAc,aACnB,KAAK,cAAcG,SAAQ;AAC3B,UAAAD,YAAW,KAAK,MAAMH,YAAW;AACjC,yBAAe,KAAK,MAAM,GAAG,KAAK;AAClC;AAAA,QACJ;AAEA;AAAA,MAEJ,KAAK;AAED,oBAAY,eAAe,KAAK,MAAM,GAAG,IAAI;AAE7C,YAAI,YAAY,GAAG;AACf,kCAAwB,KAAK,MAAM,IAAI,SAAS;AAAA,QACpD;AAEA;AAAA,MAEJ;AAGI,aAAK,SAASD,SAAQ;AAEtB,YAAI,KAAK,cAAc,OAAO;AAC1B,sBAAY,eAAe,KAAK,MAAM,GAAG,IAAI;AAC7C,cAAI,YAAY,GAAG;AACf,oCAAwB,KAAK,MAAM,IAAI,SAAS;AAAA,UACpD;AACA;AAAA,QACJ;AAEA,YAAI,KAAK,QAAQE,aAAY,GAAG;AAC5B,eAAK,KAAK;AACV,kCAAwB,KAAK,MAAM,CAAC;AACpC;AAAA,QACJ;AAEA,aAAK,MAAM,wCAAwC;AAAA,IAC3D;AAAA,EACJ;AAEO,MAAMI,SAAO;AACb,MAAMC,cAAY;AAAA,IACrB,OAAO;AAAA,EACX;AAEO,WAASC,UAAQ;AACpB,UAAM,QAAQ,KAAK;AAGnB,SAAK,SAAS,GAAG;AACjB,qBAAiB,KAAK,IAAI;AAE1B,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,OAAO,KAAK,UAAU;AAAA,MAC5C,OAAO,KAAK,eAAe,KAAK;AAAA,IACpC;AAAA,EACJ;AAEO,WAASC,WAAS,MAAM;AAC3B,SAAK,SAAS,KAAK,KAAK;AAAA,EAC5B;;;AC3JA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;;;ACQA,MAAMC,SAAQ;AACd,MAAMC,mBAAkB;AACxB,MAAMC,kBAAiB;AACvB,MAAMC,cAAa;AACnB,MAAMC,mBAAkB;AACxB,MAAMC,oBAAmB;AAElB,WAASC,QAAO,KAAK;AACxB,UAAM,MAAM,IAAI;AAChB,QAAI,QAAQ;AACZ,QAAI,MAAM,IAAI,WAAW,MAAM,CAAC,MAAMD,oBAAmB,MAAM,IAAI,MAAM;AACzE,QAAI,UAAU;AAEd,WAAO,QAAQ,OAAO,aAAa,IAAI,WAAW,KAAK,CAAC,GAAG;AACvD;AAAA,IACJ;AAEA,WAAO,QAAQ,OAAO,aAAa,IAAI,WAAW,GAAG,CAAC,GAAG;AACrD;AAAA,IACJ;AAEA,aAAS,IAAI,OAAO,KAAK,KAAK,KAAK;AAC/B,UAAIE,QAAO,IAAI,WAAW,CAAC;AAE3B,UAAIA,UAASN,kBAAiB;AAE1B,YAAI,MAAM,KAAK;AAGX,cAAI,MAAM,MAAM,GAAG;AACf,sBAAU,IAAI,OAAO,IAAI,CAAC;AAAA,UAC9B;AACA;AAAA,QACJ;AAEA,QAAAM,QAAO,IAAI,WAAW,EAAE,CAAC;AAGzB,YAAI,cAAcN,kBAAiBM,KAAI,GAAG;AACtC,gBAAM,cAAc,IAAI;AACxB,gBAAM,YAAY,eAAe,KAAK,WAAW;AAEjD,cAAI,YAAY;AAChB,qBAAW,cAAc,IAAI,UAAU,cAAc,GAAG,SAAS,CAAC;AAAA,QACtE,OAAO;AAEH,cAAIA,UAAS,MAAU,IAAI,WAAW,IAAI,CAAC,MAAM,IAAQ;AACrD;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ,OAAO;AACH,mBAAW,IAAI,CAAC;AAAA,MACpB;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AAEO,WAASC,QAAO,KAAK;AACxB,QAAI,UAAU;AACd,QAAI,sBAAsB;AAE1B,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACjC,YAAMD,QAAO,IAAI,WAAW,CAAC;AAG7B,UAAIA,UAAS,GAAQ;AACjB,mBAAW;AACX;AAAA,MACJ;AAKA,UAAIA,SAAQ,MAAUA,UAAS,KAAQ;AACnC,mBAAW,OAAOA,MAAK,SAAS,EAAE;AAClC,8BAAsB;AACtB;AAAA,MACJ;AAEA,UAAIA,UAASP,UACTO,UAASN,oBACTM,UAASL,mBACTK,UAASJ,eACTI,UAASH,oBACTG,UAASF,mBAAkB;AAC3B,mBAAW,OAAO,IAAI,OAAO,CAAC;AAC9B,8BAAsB;AAAA,MAC1B,OAAO;AACH,YAAI,uBAAuB,WAAWE,KAAI,GAAG;AACzC,qBAAW;AAAA,QACf;AAEA,mBAAW,IAAI,OAAO,CAAC;AACvB,8BAAsB;AAAA,MAC1B;AAAA,IACJ;AAEA,WAAO,SAAS,UAAU;AAAA,EAC9B;;;ADlGO,MAAME,SAAO;AACb,MAAMC,cAAY;AAAA,IACrB,OAAO;AAAA,EACX;AAGO,WAASC,UAAQ;AACpB,UAAM,QAAQ,KAAK;AACnB,QAAI;AAEJ,YAAQ,KAAK,WAAW;AAAA,MACpB,KAAK;AACD,gBAAYC,QAAO,KAAK,QAAQ,GAAG,CAAC;AACpC;AAAA,MAEJ,KAAKC;AACD,YAAI,CAAC,KAAK,OAAO,KAAK,YAAY,KAAK,UAAU,MAAM,GAAG;AACtD,eAAK,MAAM,6BAA6B;AAAA,QAC5C;AAEA,aAAK,IAAIA,SAAa;AACtB,aAAK,OAAO;AACZ,gBAAe,OAAO,KAAK,QAAQC,OAAW,CAAC;AAC/C,aAAK,OAAO;AACZ,YAAI,CAAC,KAAK,KAAK;AACX,eAAK,IAAI,gBAAgB;AAAA,QAC7B;AACA;AAAA,MAEJ;AACI,aAAK,MAAM,6BAA6B;AAAA,IAChD;AAEA,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,OAAO,KAAK,UAAU;AAAA,MAC5C;AAAA,IACJ;AAAA,EACJ;AAEO,WAASC,WAAS,MAAM;AAC3B,SAAK,MAAM,KAASC,QAAO,KAAK,KAAK,CAAC;AAAA,EAC1C;;;AEnDA;AAAA;AAAA,oBAAAC;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;AAAO,MAAMF,SAAO;AACb,MAAME,cAAY;AAAA,IACrB,UAAU,CAAC,CAAC,CAAC;AAAA,EACjB;AAEO,WAASD,UAAQ;AACpB,UAAM,QAAQ,KAAK;AACnB,UAAM,WAAW,KAAK,aAAa,KAAK,MAAM,KAAK;AAEnD,WAAO;AAAA,MACH,MAAM;AAAA,MACN,KAAK,KAAK,YAAY,OAAO,KAAK,UAAU;AAAA,MAC5C;AAAA,IACJ;AAAA,EACJ;AAEO,WAASF,WAAS,MAAM;AAC3B,SAAK,SAAS,IAAI;AAAA,EACtB;;;AClBA;AAAA;AAAA,oBAAAI;AAAA,IAAA,YAAAC;AAAA,IAAA,aAAAC;AAAA,IAAA,iBAAAC;AAAA;AAEA,MAAMC,SAAQ,OAAO,OAAO;AAAA,IACxB,MAAM;AAAA,IACN,KAAK;AAAA,IACL,OAAO;AAAA,EACX,CAAC;AAEM,MAAMC,SAAO;AACb,MAAMC,cAAY;AAAA,IACrB,OAAO;AAAA,EACX;AAEO,WAASC,UAAQ;AACpB,SAAK,IAAI,UAAU;AACnB,WAAOH;AAAA,EAOX;AAEO,WAASI,WAAS,MAAM;AAC3B,SAAK,MAAM,YAAY,KAAK,KAAK;AAAA,EACrC;;;ACvBA,MAAO,gBAAQ;AAAA,IACX,SAAS;AAAA,IACT,GAAG;AAAA,IACH;AAAA,EACJ;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACeA,MAAMC,cAAa;AACnB,MAAMC,YAAW;AACjB,MAAMC,YAAW;AACjB,MAAMC,eAAc;AACpB,MAAMC,WAAU;AAChB,MAAMC,KAAI;AAEK,WAAR,kBAAmC,SAAS;AAC/C,YAAQ,KAAK,WAAW;AAAA,MACpB,KAAK;AACD,eAAO,KAAK,KAAK;AAAA,MAErB,KAAK;AACD,eAAO,KAAK,SAAS;AAAA,MAEzB,KAAK;AACD,eAAO,KAAK,YAAY,KAAK,cAAc,QAAQ,UAAU;AAAA,MAEjE,KAAK;AACD,eAAO,KAAK,SAAS,KAAK,cAAc,QAAQ,UAAU;AAAA,MAE9D,KAAKC;AACD,eAAO,KAAK,OAAO;AAAA,MAEvB,KAAK;AACD,eAAO,KAAK,UAAU;AAAA,MAE1B,KAAK;AACD,eAAO,KAAK,WAAW;AAAA,MAE3B,KAAKC;AACD,eAAO,KAAK,OAAO;AAAA,MAEvB,KAAKC;AACD,eAAO,KAAK,OAAO,KAAK,YAAY,KAAK,UAAU,MAAM,IACnD,KAAK,IAAI,IACT,KAAK,SAAS,KAAK,cAAc,QAAQ,UAAU;AAAA,MAE7D,KAAK;AACD,eAAO,KAAK,IAAI;AAAA,MAEpB,KAAK;AAED,YAAI,KAAK,QAAQ,KAAK,YAAYH,EAAC,KAC/B,KAAK,QAAQ,KAAK,aAAa,GAAGH,SAAQ,GAAG;AAC7C,iBAAO,KAAK,aAAa;AAAA,QAC7B,OAAO;AACH,iBAAO,KAAK,WAAW;AAAA,QAC3B;AAAA,MAEJ,KAAK,OAAO;AACR,cAAMO,QAAO,KAAK,WAAW,KAAK,UAAU;AAE5C,YAAIA,UAASL,YACTK,UAASR,aACTQ,UAASP,aACTO,UAASN,cAAa;AACtB,iBAAO,KAAK,SAAS;AAAA,QACzB;AAIA,YAAIM,UAAST,aAAY;AACrB,eAAK,MAAM,iCAAiC,KAAK,aAAa,CAAC;AAAA,QACnE;AAEA;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;;;AClFA,MAAO,wBAAQ;AAAA,IACX;AAAA,EACJ;;;ACOA,MAAMU,cAAa;AACnB,MAAMC,aAAY;AAClB,MAAMC,YAAW;AACjB,MAAMC,aAAW;AACjB,MAAMC,WAAU;AAChB,MAAMC,YAAW;AACjB,MAAMC,mBAAkB;AACxB,MAAMC,gBAAe;AACrB,MAAMC,SAAQ;AAEd,WAAS,aAAa,MAAM,UAAU;AAClC,QAAI,SAAS,SAAS,QAAQ,SAAS,KAAK,SAAS,gBACjD,SAAS,QAAQ,KAAK,SAAS,cAAc;AAC7C,eAAS,KAAK;AAAA;AAAA,QACV,MAAM;AAAA,QACN,KAAK;AAAA,QACL,MAAM;AAAA,MACV,CAAC;AAAA,IACL;AAAA,EACJ;AAEA,WAAS,UAAU;AACf,YAAQ,KAAK,WAAW;AAAA,MACpB,KAAK;AACD,eAAO,KAAK,kBAAkB;AAAA,MAElC,KAAK;AACD,eAAO,KAAK,WAAW;AAAA,MAE3B,KAAK;AACD,YAAI,KAAK,WAAW,CAAC,MAAM,OAAO;AAC9B,iBAAO,KAAK,sBAAsB;AAAA,QACtC,OAAO;AACH,iBAAO,KAAK,oBAAoB;AAAA,QACpC;AAAA,MAEJ,KAAK;AACD,eAAO,KAAK,aAAa;AAAA,MAE7B,KAAKC;AAAA,MACL,KAAK;AACD,eAAO,KAAK,WAAW;AAAA,MAE3B,KAAK;AAED,YAAI,KAAK,WAAW,KAAK,UAAU,MAAMJ,WAAU;AAC/C,eAAK,MAAM,0BAA0B,KAAK,aAAa,CAAC;AAAA,QAC5D;AACA;AAAA,MAEJ,KAAK,OAAO;AACR,cAAMK,QAAO,KAAK,WAAW,KAAK,UAAU;AAE5C,gBAAQA,OAAM;AAAA,UACV,KAAKP;AAAA,UACL,KAAKG;AAAA,UACL,KAAKE;AAAA,UACL,KAAKJ;AACD,mBAAO,KAAK,WAAW;AAAA,UAE3B,KAAKC;AACD,mBAAO,KAAK,cAAc;AAAA,UAE9B,KAAKH;AAAA,UACL,KAAKK;AACD,mBAAO,KAAK,aAAa;AAAA,UAE7B,KAAKP;AACD,mBAAO,KAAK,WAAW;AAAA,UAE3B,KAAKC;AACD,mBAAO,KAAK,gBAAgB;AAAA,QACpC;AAEA;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAEA,MAAO,mBAAQ;AAAA,IACX;AAAA,IACA;AAAA,EACJ;;;AC3Fe,WAAR,qBAAmB;AACtB,WAAO,KAAK;AAAA,MACR,KAAK,IAAI,KAAK,YAAY,MAAM,KAAK;AAAA,IACzC;AAAA,EACJ;;;ACHe,WAAR,cAAmB;AACtB,UAAM,WAAW,KAAK,WAAW;AAEjC,SAAK,OAAO;AAGZ,aAAS,KAAK,KAAK,WAAW,CAAC;AAE/B,SAAK,OAAO;AAEZ,QAAI,KAAK,cAAc,OAAO;AAC1B,eAAS,KAAK,KAAK,SAAS,CAAC;AAE7B,YAAM,aAAa,KAAK;AACxB,YAAM,QAAQ,KAAK,sBACb,KAAK,MAAM,IAAI,IACf,KAAK,IAAI,KAAK,YAAY,KAAK,wCAAwC,KAAK;AAElF,UAAI,MAAM,SAAS,WAAW,MAAM,SAAS,SAAS;AAClD,iBAAS,SAAS,aAAa,KAAK,YAAY,UAAU,GAAG,UAAU;AACnE,cAAI,KAAK,WAAW,MAAM,MAAM,YAAY;AACxC,kBAAM,SAAS,WAAW;AAAA,cACtB,MAAM;AAAA,cACN,KAAK;AAAA,cACL,OAAO;AAAA,YACX,CAAC;AACD;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAEA,eAAS,KAAK,KAAK;AAAA,IACvB;AAEA,WAAO;AAAA,EACX;;;AClCA,WAAS,oBAAoB,MAAM;AAC/B,WACI,SAAS,QACT,KAAK,SAAS,eACb,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC,MAAM,OAAO,KAAK,MAAM,KAAK,MAAM,SAAS,CAAC,MAAM;AAAA,EAE5F;AAEA,MAAO,gBAAQ;AAAA,IACX;AAAA,IACA,aAAa,MAAM,UAAU;AACzB,UAAI,oBAAoB,IAAI,GAAG;AAC3B,aAAK,QAAQ,MAAM,KAAK;AAAA,MAC5B;AACA,UAAI,oBAAoB,SAAS,IAAI,GAAG;AACpC,iBAAS,KAAK,SAAS;AAAA,MAC3B;AAAA,IACJ;AAAA,IACA,cAAc;AAAA,IACd,OAAO;AAAA,EACX;;;ACxBA,MAAO,oBAAQ;AAAA,IACX,OAAO;AAAA,MACH,SAAS;AAAA,MACT,QAAQ;AACJ,eAAO,KAAK,MAAM,IAAI;AAAA,MAC1B;AAAA,IACJ;AAAA,EACJ;;;ACCA,MAAOU,kBAAQ;AAAA,IACX,OAAO;AAAA,MACH,UAAU;AACN,cAAM,WAAW,KAAK,WAAW;AAEjC,aAAK,OAAO;AAEZ,gBAAQ,KAAK,WAAW;AAAA,UACpB,KAAKC;AACD,qBAAS,KAAK,KAAK,OAAO,CAAC;AAC3B;AAAA,UAEJ,KAAK;AAAA,UACL,KAAKC;AACD,qBAAS,KAAK,KAAK,IAAI,CAAC;AACxB;AAAA,UAEJ;AACI,iBAAK,MAAM,6BAA6B;AAAA,QAChD;AAEA,YAAI,KAAK,gBAAgB,CAAC,MAAM,SAC5B,KAAK,gBAAgB,CAAC,MAAM,iBAAiB;AAC7C,mBAAS,KAAK,KAAK,eAAe,CAAC;AAAA,QACvC;AAEA,eAAO;AAAA,MACX;AAAA,MACA,OAAO;AAAA,IACX;AAAA,EACJ;;;ACtCA,MAAO,gBAAQ;AAAA,IACX,OAAO;AAAA,MACH,UAAU;AACN,eAAO,KAAK;AAAA,UACR,KAAK,eAAe;AAAA,QACxB;AAAA,MACJ;AAAA,MACA,MAAM,eAAe,OAAO;AACxB,eAAO,KAAK,MAAM,YAAY;AAAA,MAClC;AAAA,IACJ;AAAA,EACJ;;;ACXA,MAAO,eAAQ;AAAA,IACX,OAAO;AAAA,MACH,UAAU;AACN,eAAO,KAAK;AAAA,UACR,KAAK,aAAa;AAAA,QACtB;AAAA,MACJ;AAAA,MACA,QAAQ;AACJ,eAAO,KAAK,MAAM,IAAI;AAAA,MAC1B;AAAA,IACJ;AAAA,EACJ;;;ACXA,MAAO,eAAQ;AAAA,IACX,OAAO;AAAA,MACH,UAAU;AACN,eAAO,KAAK;AAAA,UACR,KAAK,aAAa;AAAA,QACtB;AAAA,MACJ;AAAA,MACA,QAAQ;AACJ,eAAO,KAAK,MAAM,IAAI;AAAA,MAC1B;AAAA,IACJ;AAAA,EACJ;;;ACFA,WAASC,cAAa;AAClB,WAAO,KAAK;AAAA,MACR,KAAK,IAAI,KAAK,YAAY,MAAM,KAAK;AAAA,IACzC;AAAA,EACJ;AAEA,WAAS,cAAc;AACnB,SAAK,OAAO;AAEZ,QAAI,KAAK,cAAc,SACnB,KAAK,gBAAgB,CAAC,MAAM,OAAO;AACnC,aAAO,KAAK;AAAA,QACR,KAAK,YAAY;AAAA,MACrB;AAAA,IACJ;AAEA,WAAOC,cAAa,KAAK,IAAI;AAAA,EACjC;AAEA,WAASA,gBAAe;AACpB,UAAM,WAAW,KAAK,WAAW;AACjC,QAAI;AAEJ,SAAK,OAAO;AAEZ;AACA,aAAO,CAAC,KAAK,KAAK;AACd,gBAAQ,KAAK,WAAW;AAAA,UACpB,KAAK;AAAA,UACL,KAAK;AACD,iBAAK,KAAK;AACV;AAAA,UAEJ,KAAKC;AACD,oBAAQ,KAAK,SAASF,aAAY,KAAK,MAAM,aAAa;AAC1D;AAAA,UAEJ,KAAK;AACD,oBAAQ,KAAK,WAAW;AACxB;AAAA,UAEJ,KAAK;AACD,oBAAQ,KAAK,YAAY,aAAa,KAAK,MAAM,aAAa;AAC9D;AAAA,UAEJ;AACI,kBAAM;AAAA,QACd;AAEA,iBAAS,KAAK,KAAK;AAAA,MACvB;AAEA,WAAO;AAAA,EACX;AAEA,MAAO,mBAAQ;AAAA,IACX,OAAO;AAAA,MACH,UAAU;AACN,cAAM,WAAWC,cAAa,KAAK,IAAI;AAEvC,YAAI,KAAK,iBAAiB,QAAQ,MAAM,MAAM;AAC1C,eAAK,MAAM,uBAAuB;AAAA,QACtC;AAEA,eAAO;AAAA,MACX;AAAA,MACA,MAAM,eAAe,OAAO;AACxB,eAAO,KAAK,MAAM,YAAY;AAAA,MAClC;AAAA,IACJ;AAAA,EACJ;;;ACxEA,MAAO,iBAAQ;AAAA,IACX,aAAa;AAAA,IACb,UAAUE;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;;;ACdA,MAAM,eAAe;AAAA,IACjB,QAAQ;AACJ,aAAO,KAAK;AAAA,QACR,KAAK,aAAa;AAAA,MACtB;AAAA,IACJ;AAAA,EACJ;AAEA,MAAM,WAAW;AAAA,IACb,QAAQ;AACJ,aAAO,KAAK;AAAA,QACR,KAAK,SAAS;AAAA,MAClB;AAAA,IACJ;AAAA,EACJ;AAEA,MAAM,YAAY;AAAA,IACd,QAAQ;AACJ,aAAO,KAAK;AAAA,QACR,KAAK,WAAW;AAAA,MACpB;AAAA,IACJ;AAAA,EACJ;AAEA,MAAM,MAAM;AAAA,IACR,QAAQ;AACJ,aAAO,KAAK;AAAA,QACR,KAAK,IAAI;AAAA,MACb;AAAA,IACJ;AAAA,EACJ;AAEA,MAAO,iBAAQ;AAAA,IACX,OAAO;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,eAAe;AAAA,IACf,SAAS;AAAA,IACT,OAAO;AAAA,IACP,aAAa;AAAA,IACb,kBAAkB;AAAA,IAClB,oBAAoB;AAAA,IACpB,eAAe;AAAA,IACf,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACpB;;;ACjDA;AAAA;AAAA,mBAAAC;AAAA,IAAA,cAAAA;AAAA,IAAA,qBAAAA;AAAA,IAAA,yBAAAA;AAAA,IAAA,aAAAA;AAAA,IAAA,gBAAAA;AAAA,IAAA,WAAAA;AAAA,IAAA,WAAAA;AAAA,IAAA,qBAAAA;AAAA,IAAA,kBAAAA;AAAA,IAAA,eAAAA;AAAA,IAAA,mBAAAA;AAAA,IAAA,uBAAAA;AAAA,IAAA,iBAAAA;AAAA,IAAA,gBAAAA;AAAA,IAAA,YAAAA;AAAA,IAAA,kBAAAA;AAAA,IAAA,kBAAAA;AAAA,IAAA,oBAAAA;AAAA,IAAA,kBAAAA;AAAA,IAAA,sBAAAA;AAAA,IAAA,uBAAAA;AAAA,IAAA,WAAAA;AAAA,IAAA,cAAAA;AAAA,IAAA,gBAAAA;AAAA,IAAA,mBAAAA;AAAA,IAAA,kBAAAA;AAAA,IAAA,2BAAAA;AAAA,IAAA,6BAAAA;AAAA,IAAA,aAAAA;AAAA,IAAA,WAAAA;AAAA,IAAA,YAAAA;AAAA,IAAA,gBAAAA;AAAA,IAAA,oBAAAA;AAAA,IAAA,cAAAA;AAAA,IAAA,kBAAAA;AAAA,IAAA,oBAAAA;AAAA,IAAA,oBAAAA;AAAA,IAAA,WAAAA;AAAA,IAAA,aAAAA;AAAA,IAAA,kBAAAA;AAAA;;;ACKA,MAAO,iBAAQ;AAAA,IACX,cAAc;AAAA,MACV,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,cAAc,SAAS;AACnB,eAAO,KAAK,cAAc,QAAQ,SAAS,OAAO,QAAQ,MAAM,IAAI,IAAI;AAAA,MAC5E;AAAA,MACA,gBAAgB;AAAA,MAChB,YAAY;AAAA,MACZ,MAAM;AAAA,MACN,cAAc;AAAA,MACd,UAAU;AAAA,MACV,QAAQ;AACJ,eAAO,KAAK,MAAM,IAAI;AAAA,MAC1B;AAAA,MACA,iBAAiB;AAAA,MACjB,aAAa;AAAA,MACb,OAAO;AAAA,IACX;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;;;AC3BA,MAAO,iBAAQ;AAAA,IACX;AAAA,EACJ;;;ACCA,MAAO,iBAAQ,eAAa;AAAA,IACxB,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,EACP,CAAC;;;ACIM,MAAM;AAAA,IACT,UAAAC;AAAA,IACA,OAAAC;AAAA,IACA,UAAAC;AAAA,IACA;AAAA,IACA;AAAA,IAEA,MAAAC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IAEA;AAAA,IACA;AAAA,IAEA;AAAA,EACJ,IAAI;;;AC5BJ,MAAAC,iBAAyB;AAEzB,MAAM,MAAN,cAAkB,eAAAC,QAAa;AAAA,IAC3B,YAAY,KAAK;AACb,YAAM;AACN,WAAK,MAAM;AACX,WAAK,OAAO,IAAI;AAChB,WAAK,QAAQC;AACb,WAAK,OAAOC;AACZ,WAAK,WAAWC;AAAA,IACpB;AAAA,IACA,QAAQ,KAAK,SAAS;AAClB,aAAO,KAAK,OAAO,KAAK,SAAS,SAAS;AAAA,IAC9C;AAAA,IACA,OAAO,KAAK,SAAS;AACjB,aAAO,KAAK,OAAO,KAAK,SAAS,QAAQ;AAAA,IAC7C;AAAA,IACA,OAAO,KAAK,SAAS,MAAM;AACvB,UAAI,CAAC;AAAK,eAAO;AACjB,YAAM,IAAI,OAAO,GAAG,EAAE,SAAS;AAC/B,UAAI;AACA,cAAM,MAAM,KAAK,MAAM,KAAK;AAAA,UACxB,GAAG;AAAA,UACH,qBAAqB;AAAA,QACzB,CAAC;AACD,aAAK,KAAK,KAAK,CAAC,SAAS;AACrB,eAAK,KAAK,KAAK,MAAM,MAAM,SAAS,IAAI;AAAA,QAC5C,CAAC;AACD,eAAO,KAAK,SAAS,GAAG;AAAA,MAC5B,SAAS,GAAG;AACR,eAAO;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;AAEA,MAAO,cAAQ;;;ACpCf,MAAM,gBAAgB;AAAA,IAClB,CAAC,CAAC,GAAG;AAAA,IACL,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,CAAC,GAAG;AAAA,IACL,CAAC,CAAC,GAAG;AAAA,IACL,CAAC,CAAC,GAAG;AAAA,IACL,CAAC,CAAC,GAAG;AAAA,IACL,CAAC,CAAC,GAAG;AAAA,IACL,CAAC,CAAC,GAAG;AAAA,IACL,CAAC,CAAC,GAAG;AAAA,IACL,CAAC,CAAC,GAAG;AAAA,IACL,CAAC,CAAC,GAAG;AAAA,IACL,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;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",
  "names": ["R", "ReflectApply", "ReflectOwnKeys", "NumberIsNaN", "EventEmitter", "once", "unwrap", "name", "number", "zero", "base64", "url", "normalize", "length", "SourceMapGenerator", "name", "sourceFile", "parentheses", "parse", "Syntax", "isWhitespace", "isArray", "target", "code", "settings", "name", "value", "parse", "cookies", "CODE_POINTS", "ERR", "code", "TokenType", "_a", "CharCodes", "BinTrieFlags", "NS", "ATTRS", "DOCUMENT_MODE", "TAG_NAMES", "TAG_ID", "_a", "State", "code", "_a", "EntryType", "entry", "name", "text", "name", "InsertionMode", "code", "_a", "name", "EventEmitter", "name", "attr", "Function", "String", "Number", "EOF", "code", "code", "code", "Function", "tokenize", "code", "getCharCode", "offset", "Number", "Function", "String", "code", "name", "line", "SyntaxError", "name", "code", "tokenType", "Function", "number", "Number", "SyntaxError", "parse", "Function", "Number", "String", "node", "types", "name", "walk", "hasOwnProperty", "name", "structure", "types", "walk", "noop", "HYPHENMINUS", "HYPHENMINUS", "keyword", "name", "property", "descriptor", "PLUSSIGN", "HYPHENMINUS", "N", "code", "Number", "PLUSSIGN", "HYPHENMINUS", "isDelim", "code", "length", "Number", "balancePair", "Function", "length", "name", "Number", "String", "angle", "decibel", "frequency", "flex", "length", "resolution", "semitones", "time", "SyntaxError", "N", "F", "R", "Tokenizer", "code", "SyntaxError", "TAB", "N", "F", "R", "SPACE", "EXCLAMATIONMARK", "NUMBERSIGN", "PLUSSIGN", "QUESTIONMARK", "LEFTCURLYBRACKET", "code", "name", "terms", "combinator", "parse", "Tokenizer", "noop", "ensureFunction", "walk", "node", "LEFTPARENTHESIS", "RIGHTPARENTHESIS", "name", "parse", "hasOwnProperty", "Function", "name", "lastTokenIndex", "property", "lexer", "name", "hasOwnProperty", "name", "structure", "name", "lexer", "structure", "parse", "property", "validate", "name", "parse", "walk", "generate", "fromPlainObject", "toPlainObject", "config", "extension", "generate", "parse", "PLUSSIGN", "HYPHENMINUS", "N", "DISALLOW_SIGN", "ALLOW_SIGN", "checkInteger", "code", "consumeB", "Number", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "walkContext", "name", "walkContext", "structure", "parse", "generate", "generate", "name", "parse", "structure", "ASTERISK", "VERTICALLINE", "code", "name", "structure", "parse", "String", "generate", "generate", "name", "parse", "structure", "walkContext", "AMPERSAND", "consumeRaw", "name", "walkContext", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "readSequence", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "PLUSSIGN", "GREATERTHANSIGN", "TILDE", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "ASTERISK", "SOLIDUS", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "walkContext", "EXCLAMATIONMARK", "NUMBERSIGN", "DOLLARSIGN", "AMPERSAND", "ASTERISK", "PLUSSIGN", "SOLIDUS", "name", "walkContext", "structure", "parse", "property", "readProperty", "consumeRaw", "generate", "generate", "name", "parse", "structure", "AMPERSAND", "consumeRaw", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "walkContext", "name", "walkContext", "structure", "parse", "readSequence", "generate", "Function", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "Number", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "AMPERSAND", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "selector", "nth", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "Number", "generate", "generate", "name", "parse", "structure", "generate", "name", "parse", "structure", "name", "structure", "parse", "readSequence", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "walkContext", "name", "walkContext", "structure", "parse", "Function", "generate", "generate", "name", "parse", "structure", "walkContext", "name", "walkContext", "structure", "parse", "Function", "generate", "generate", "name", "parse", "structure", "SOLIDUS", "FULLSTOP", "consumeNumber", "Number", "code", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "walkContext", "consumeRaw", "name", "walkContext", "structure", "parse", "generate", "generate", "name", "parse", "structure", "generate", "name", "parse", "structure", "walkContext", "name", "walkContext", "structure", "parse", "generate", "generate", "name", "parse", "structure", "APOSTROPHE", "code", "name", "structure", "parse", "String", "generate", "generate", "name", "parse", "structure", "walkContext", "EXCLAMATIONMARK", "consumeRaw", "name", "walkContext", "structure", "parse", "generate", "generate", "name", "parse", "structure", "ASTERISK", "VERTICALLINE", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "PLUSSIGN", "HYPHENMINUS", "QUESTIONMARK", "code", "startsWith", "Number", "name", "structure", "parse", "generate", "generate", "name", "parse", "structure", "SPACE", "REVERSE_SOLIDUS", "QUOTATION_MARK", "APOSTROPHE", "LEFTPARENTHESIS", "RIGHTPARENTHESIS", "decode", "code", "encode", "name", "structure", "parse", "decode", "Function", "String", "generate", "encode", "generate", "name", "parse", "structure", "generate", "name", "parse", "structure", "SPACE", "name", "structure", "parse", "generate", "NUMBERSIGN", "ASTERISK", "PLUSSIGN", "HYPHENMINUS", "SOLIDUS", "U", "String", "Number", "Function", "code", "NUMBERSIGN", "AMPERSAND", "ASTERISK", "PLUSSIGN", "SOLIDUS", "FULLSTOP", "GREATERTHANSIGN", "VERTICALLINE", "TILDE", "Number", "code", "import_default", "String", "Function", "consumeRaw", "readSequence", "Function", "import_default", "parse", "tokenize", "parse", "generate", "walk", "import_events", "EventEmitter", "parse", "walk", "generate", "lookup", "code", "fromCodePoint", "isIdentifierStart", "e", "scanString", "next", "scanNumber", "length", "ch", "decodeMap", "text", "decodeCodePoint", "properties", "name", "scope", "body", "tokenPos", "linePos", "colPos", "property", "tokenValue", "tokenRaw", "token", "line", "attributes", "import_events", "EventEmitter", "walk", "handler", "import_set_cookie_parser", "db", "extension", "extensions", "types", "db", "openDB", "serialize", "setCookie", "text", "name", "url", "import_esotope_hammerhead", "property", "unwrap", "name", "db", "target", "response", "result", "url", "import_events", "db", "serialize", "setCookie", "property", "EventEmitter"]
}
