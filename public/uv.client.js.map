{
  "version": 3,
  "sources": ["../node_modules/events/events.js", "../src/client/dom/document.js", "../src/client/hook.js", "../src/client/dom/element.js", "../src/client/dom/node.js", "../src/client/dom/attr.js", "../src/client/native/function.js", "../src/client/native/object.js", "../src/client/requests/fetch.js", "../src/client/requests/xhr.js", "../src/client/requests/eventsource.js", "../src/client/history.js", "../src/client/location.js", "../src/client/message.js", "../src/client/navigator.js", "../src/client/worker.js", "../src/client/url.js", "../src/client/index.js", "../src/client/storage.js", "../src/client/dom/style.js", "../src/client/idb.js", "../src/client/requests/websocket.js"],
  "sourcesContent": ["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n", "import EventEmitter from 'events';\nimport HookEvent from '../hook.js';\n\n/**\n * @typedef {import('../index').default} UVClient\n */\n\nclass DocumentHook extends EventEmitter {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.document = this.window.document;\n        this.Document = this.window.Document || {};\n        this.DOMParser = this.window.DOMParser || {};\n        this.docProto = this.Document.prototype || {};\n        this.domProto = this.DOMParser.prototype || {};\n        this.title = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.docProto,\n            'title'\n        );\n        this.cookie = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.docProto,\n            'cookie'\n        );\n        this.referrer = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.docProto,\n            'referrer'\n        );\n        this.domain = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.docProto,\n            'domain'\n        );\n        this.documentURI = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.docProto,\n            'documentURI'\n        );\n        this.write = this.docProto.write;\n        this.writeln = this.docProto.writeln;\n        this.querySelector = this.docProto.querySelector;\n        this.querySelectorAll = this.docProto.querySelectorAll;\n        this.parseFromString = this.domProto.parseFromString;\n        this.URL = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.docProto,\n            'URL'\n        );\n    }\n    overrideParseFromString() {\n        this.ctx.override(\n            this.domProto,\n            'parseFromString',\n            (target, that, args) => {\n                if (2 > args.length) return target.apply(that, args);\n                let [string, type] = args;\n\n                const event = new HookEvent({ string, type }, target, that);\n                this.emit('parseFromString', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    event.data.string,\n                    event.data.type\n                );\n            }\n        );\n    }\n    overrideQuerySelector() {\n        this.ctx.override(\n            this.docProto,\n            'querySelector',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [selectors] = args;\n\n                const event = new HookEvent({ selectors }, target, that);\n                this.emit('querySelector', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.selectors);\n            }\n        );\n    }\n    overrideDomain() {\n        this.ctx.overrideDescriptor(this.docProto, 'domain', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('getDomain', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n            set: (target, that, [val]) => {\n                const event = new HookEvent({ value: val }, target, that);\n                this.emit('setDomain', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.value);\n            },\n        });\n    }\n    overrideReferrer() {\n        this.ctx.overrideDescriptor(this.docProto, 'referrer', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('referrer', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n        });\n    }\n    overrideCreateTreeWalker() {\n        this.ctx.override(\n            this.docProto,\n            'createTreeWalker',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [root, show = 0xffffffff, filter, expandEntityReferences] =\n                    args;\n\n                const event = new HookEvent(\n                    { root, show, filter, expandEntityReferences },\n                    target,\n                    that\n                );\n                this.emit('createTreeWalker', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    event.data.root,\n                    event.data.show,\n                    event.data.filter,\n                    event.data.expandEntityReferences\n                );\n            }\n        );\n    }\n    overrideWrite() {\n        this.ctx.override(this.docProto, 'write', (target, that, args) => {\n            if (!args.length) return target.apply(that, args);\n            let [...html] = args;\n\n            const event = new HookEvent({ html }, target, that);\n            this.emit('write', event);\n\n            if (event.intercepted) return event.returnValue;\n            return event.target.apply(event.that, event.data.html);\n        });\n        this.ctx.override(this.docProto, 'writeln', (target, that, args) => {\n            if (!args.length) return target.apply(that, args);\n            let [...html] = args;\n\n            const event = new HookEvent({ html }, target, that);\n            this.emit('writeln', event);\n\n            if (event.intercepted) return event.returnValue;\n            return event.target.apply(event.that, event.data.html);\n        });\n    }\n    overrideDocumentURI() {\n        this.ctx.overrideDescriptor(this.docProto, 'documentURI', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('documentURI', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n        });\n    }\n    overrideURL() {\n        this.ctx.overrideDescriptor(this.docProto, 'URL', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('url', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n        });\n    }\n    overrideCookie() {\n        this.ctx.overrideDescriptor(this.docProto, 'cookie', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('getCookie', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n            set: (target, that, [value]) => {\n                const event = new HookEvent({ value }, target, that);\n                this.emit('setCookie', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.value);\n            },\n        });\n    }\n    overrideTitle() {\n        this.ctx.overrideDescriptor(this.docProto, 'title', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('getTitle', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n            set: (target, that, [value]) => {\n                const event = new HookEvent({ value }, target, that);\n                this.emit('setTitle', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.value);\n            },\n        });\n    }\n}\n\nexport default DocumentHook;\n", "/**\n *\n * @template Data\n * @template Target\n * @template That\n * @property {Data} data\n * @property {Target} target\n * @property {That} that\n */\nclass HookEvent {\n    #intercepted;\n    #returnValue;\n    /**\n     *\n     * @param {Data} data\n     * @param {Target} target\n     * @param {That} that\n     */\n    constructor(data = {}, target = null, that = null) {\n        this.#intercepted = false;\n        this.#returnValue = null;\n        /**\n         * @type {Data}\n         */\n        this.data = data;\n        /**\n         * @type {Target}\n         */\n        this.target = target;\n        /**\n         * @type {That}\n         */\n        this.that = that;\n    }\n    get intercepted() {\n        return this.#intercepted;\n    }\n    get returnValue() {\n        return this.#returnValue;\n    }\n    respondWith(input) {\n        this.#returnValue = input;\n        this.#intercepted = true;\n    }\n}\n\nexport default HookEvent;\n", "import EventEmitter from 'events';\nimport HookEvent from '../hook.js';\n\n/**\n * @typedef {import('../index').default} UVClient\n */\n\nclass ElementApi extends EventEmitter {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.Audio = this.window.Audio;\n        this.Element = this.window.Element;\n        this.elemProto = this.Element ? this.Element.prototype : {};\n        this.innerHTML = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.elemProto,\n            'innerHTML'\n        );\n        this.outerHTML = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.elemProto,\n            'outerHTML'\n        );\n        this.setAttribute = this.elemProto.setAttribute;\n        this.getAttribute = this.elemProto.getAttribute;\n        this.removeAttribute = this.elemProto.removeAttribute;\n        this.hasAttribute = this.elemProto.hasAttribute;\n        this.querySelector = this.elemProto.querySelector;\n        this.querySelectorAll = this.elemProto.querySelectorAll;\n        this.insertAdjacentHTML = this.elemProto.insertAdjacentHTML;\n        this.insertAdjacentText = this.elemProto.insertAdjacentText;\n    }\n    overrideQuerySelector() {\n        this.ctx.override(\n            this.elemProto,\n            'querySelector',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [selectors] = args;\n\n                const event = new HookEvent({ selectors }, target, that);\n                this.emit('querySelector', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.selectors);\n            }\n        );\n    }\n    overrideAttribute() {\n        this.ctx.override(\n            this.elemProto,\n            'getAttribute',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [name] = args;\n\n                const event = new HookEvent({ name }, target, that);\n                this.emit('getAttribute', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.name);\n            }\n        );\n        this.ctx.override(\n            this.elemProto,\n            'setAttribute',\n            (target, that, args) => {\n                if (2 > args.length) return target.apply(that, args);\n                let [name, value] = args;\n\n                const event = new HookEvent({ name, value }, target, that);\n                this.emit('setAttribute', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    event.data.name,\n                    event.data.value\n                );\n            }\n        );\n        this.ctx.override(\n            this.elemProto,\n            'hasAttribute',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [name] = args;\n\n                const event = new HookEvent({ name }, target, that);\n                this.emit('hasAttribute', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.name);\n            }\n        );\n        this.ctx.override(\n            this.elemProto,\n            'removeAttribute',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [name] = args;\n\n                const event = new HookEvent({ name }, target, that);\n                this.emit('removeAttribute', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.name);\n            }\n        );\n    }\n    overrideAudio() {\n        this.ctx.override(\n            this.window,\n            'Audio',\n            (target, that, args) => {\n                if (!args.length) return new target(...args);\n                let [url] = args;\n\n                const event = new HookEvent({ url }, target, that);\n                this.emit('audio', event);\n\n                if (event.intercepted) return event.returnValue;\n                return new event.target(event.data.url);\n            },\n            true\n        );\n    }\n    overrideHtml() {\n        this.hookProperty(this.Element, 'innerHTML', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('getInnerHTML', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n            set: (target, that, [val]) => {\n                const event = new HookEvent({ value: val }, target, that);\n                this.emit('setInnerHTML', event);\n\n                if (event.intercepted) return event.returnValue;\n                target.call(that, event.data.value);\n            },\n        });\n        this.hookProperty(this.Element, 'outerHTML', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('getOuterHTML', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n            set: (target, that, [val]) => {\n                const event = new HookEvent({ value: val }, target, that);\n                this.emit('setOuterHTML', event);\n\n                if (event.intercepted) return event.returnValue;\n                target.call(that, event.data.value);\n            },\n        });\n    }\n    overrideInsertAdjacentHTML() {\n        this.ctx.override(\n            this.elemProto,\n            'insertAdjacentHTML',\n            (target, that, args) => {\n                if (2 > args.length) return target.apply(that, args);\n                let [position, html] = args;\n\n                const event = new HookEvent({ position, html }, target, that);\n                this.emit('insertAdjacentHTML', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    event.data.position,\n                    event.data.html\n                );\n            }\n        );\n    }\n    overrideInsertAdjacentText() {\n        this.ctx.override(\n            this.elemProto,\n            'insertAdjacentText',\n            (target, that, args) => {\n                if (2 > args.length) return target.apply(that, args);\n                let [position, text] = args;\n\n                const event = new HookEvent({ position, text }, target, that);\n                this.emit('insertAdjacentText', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    event.data.position,\n                    event.data.text\n                );\n            }\n        );\n    }\n    hookProperty(element, prop, handler) {\n        // if (!element || !(prop in element)) return false;\n        if (!element) return false;\n\n        if (this.ctx.nativeMethods.isArray(element)) {\n            for (const elem of element) {\n                this.hookProperty(elem, prop, handler);\n            }\n            return true;\n        }\n\n        const proto = element.prototype;\n\n        this.ctx.overrideDescriptor(proto, prop, handler);\n\n        return true;\n    }\n}\n\nexport default ElementApi;\n", "import EventEmitter from 'events';\nimport HookEvent from '../hook.js';\n\n/**\n * @typedef {import('../index').default} UVClient\n */\n\nclass NodeApi extends EventEmitter {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.Node = ctx.window.Node || {};\n        this.nodeProto = this.Node.prototype || {};\n        this.compareDocumentPosition = this.nodeProto.compareDocumentPosition;\n        this.contains = this.nodeProto.contains;\n        this.insertBefore = this.nodeProto.insertBefore;\n        this.replaceChild = this.nodeProto.replaceChild;\n        this.append = this.nodeProto.append;\n        this.appendChild = this.nodeProto.appendChild;\n        this.removeChild = this.nodeProto.removeChild;\n\n        this.textContent = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.nodeProto,\n            'textContent'\n        );\n        this.parentNode = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.nodeProto,\n            'parentNode'\n        );\n        this.parentElement = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.nodeProto,\n            'parentElement'\n        );\n        this.childNodes = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.nodeProto,\n            'childNodes'\n        );\n        this.baseURI = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.nodeProto,\n            'baseURI'\n        );\n        this.previousSibling = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.nodeProto,\n            'previousSibling'\n        );\n        this.ownerDocument = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.nodeProto,\n            'ownerDocument'\n        );\n    }\n    overrideTextContent() {\n        this.ctx.overrideDescriptor(this.nodeProto, 'textContent', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('getTextContent', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n            set: (target, that, [val]) => {\n                const event = new HookEvent({ value: val }, target, that);\n                this.emit('setTextContent', event);\n\n                if (event.intercepted) return event.returnValue;\n                target.call(that, event.data.value);\n            },\n        });\n    }\n    overrideAppend() {\n        this.ctx.override(\n            this.nodeProto,\n            'append',\n            (target, that, [...nodes]) => {\n                const event = new HookEvent({ nodes }, target, that);\n                this.emit('append', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.nodes);\n            }\n        );\n        this.ctx.override(\n            this.nodeProto,\n            'appendChild',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [node] = args;\n\n                const event = new HookEvent({ node }, target, that);\n                this.emit('appendChild', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.node);\n            }\n        );\n    }\n    overrideBaseURI() {\n        this.ctx.overrideDescriptor(this.nodeProto, 'baseURI', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('baseURI', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n        });\n    }\n    overrideParent() {\n        this.ctx.overrideDescriptor(this.nodeProto, 'parentNode', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    { node: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('parentNode', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.node;\n            },\n        });\n        this.ctx.overrideDescriptor(this.nodeProto, 'parentElement', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    { element: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('parentElement', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.node;\n            },\n        });\n    }\n    overrideOwnerDocument() {\n        this.ctx.overrideDescriptor(this.nodeProto, 'ownerDocument', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    { document: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('ownerDocument', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.document;\n            },\n        });\n    }\n    overrideCompareDocumentPosit1ion() {\n        this.ctx.override(\n            this.nodeProto,\n            'compareDocumentPosition',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [node] = args;\n                const event = new HookEvent({ node }, target, that);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.node);\n            }\n        );\n    }\n    overrideChildMethods() {\n        this.ctx.override(this.nodeProto, 'removeChild');\n    }\n}\n\nexport default NodeApi;\n", "import EventEmitter from 'events';\nimport HookEvent from '../hook.js';\n\n/**\n * @typedef {import('../index').default} UVClient\n */\n\nclass AttrApi extends EventEmitter {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.Attr = this.window.Attr || {};\n        this.attrProto = this.Attr.prototype || {};\n        this.value = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.attrProto,\n            'value'\n        );\n        this.name = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.attrProto,\n            'name'\n        );\n        this.getNamedItem = this.attrProto.getNamedItem || null;\n        this.setNamedItem = this.attrProto.setNamedItem || null;\n        this.removeNamedItem = this.attrProto.removeNamedItem || null;\n        this.getNamedItemNS = this.attrProto.getNamedItemNS || null;\n        this.setNamedItemNS = this.attrProto.setNamedItemNS || null;\n        this.removeNamedItemNS = this.attrProto.removeNamedItemNS || null;\n        this.item = this.attrProto.item || null;\n    }\n    overrideNameValue() {\n        this.ctx.overrideDescriptor(this.attrProto, 'name', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('name', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n        });\n\n        this.ctx.overrideDescriptor(this.attrProto, 'value', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    {\n                        name: this.name.get.call(that),\n                        value: target.call(that),\n                    },\n                    target,\n                    that\n                );\n                this.emit('getValue', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n            set: (target, that, [val]) => {\n                const event = new HookEvent(\n                    { name: this.name.get.call(that), value: val },\n                    target,\n                    that\n                );\n                this.emit('setValue', event);\n\n                if (event.intercepted) return event.returnValue;\n                event.target.call(event.that, event.data.value);\n            },\n        });\n    }\n    overrideItemMethods() {\n        this.ctx.override(\n            this.attrProto,\n            'getNamedItem',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [name] = args;\n\n                const event = new HookEvent({ name }, target, that);\n                this.emit('getNamedItem', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.name);\n            }\n        );\n        this.ctx.override(\n            this.attrProto,\n            'setNamedItem',\n            (target, that, args) => {\n                if (2 > args.length) return target.apply(that, args);\n                let [name, value] = args;\n\n                const event = new HookEvent({ name, value }, target, that);\n                this.emit('setNamedItem', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    event.data.name,\n                    event.data.value\n                );\n            }\n        );\n        this.ctx.override(\n            this.attrProto,\n            'removeNamedItem',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [name] = args;\n\n                const event = new HookEvent({ name }, target, that);\n                this.emit('removeNamedItem', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.name);\n            }\n        );\n        this.ctx.override(this.attrProto, 'item', (target, that, args) => {\n            if (!args.length) return target.apply(that, args);\n            let [index] = args;\n\n            const event = new HookEvent({ index }, target, that);\n            this.emit('item', event);\n\n            if (event.intercepted) return event.returnValue;\n            return event.target.call(event.that, event.data.name);\n        });\n        this.ctx.override(\n            this.attrProto,\n            'getNamedItemNS',\n            (target, that, args) => {\n                if (2 > args.length) return target.apply(that, args);\n                let [namespace, localName] = args;\n\n                const event = new HookEvent(\n                    { namespace, localName },\n                    target,\n                    that\n                );\n                this.emit('getNamedItemNS', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    event.data.namespace,\n                    event.data.localName\n                );\n            }\n        );\n        this.ctx.override(\n            this.attrProto,\n            'setNamedItemNS',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [attr] = args;\n\n                const event = new HookEvent({ attr }, target, that);\n                this.emit('setNamedItemNS', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.name);\n            }\n        );\n        this.ctx.override(\n            this.attrProto,\n            'removeNamedItemNS',\n            (target, that, args) => {\n                if (2 > args.length) return target.apply(that, args);\n                let [namespace, localName] = args;\n\n                const event = new HookEvent(\n                    { namespace, localName },\n                    target,\n                    that\n                );\n                this.emit('removeNamedItemNS', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    event.data.namespace,\n                    event.data.localName\n                );\n            }\n        );\n    }\n}\n\nexport default AttrApi;\n", "import EventEmitter from 'events';\nimport HookEvent from '../hook.js';\n\n/**\n * @typedef {import('../index').default} UVClient\n */\n\nclass FunctionHook extends EventEmitter {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.Function = this.window.Function;\n        this.fnProto = this.Function.prototype;\n        this.toString = this.fnProto.toString;\n        this.fnStrings = ctx.fnStrings;\n        this.call = this.fnProto.call;\n        this.apply = this.fnProto.apply;\n        this.bind = this.fnProto.bind;\n    }\n    overrideFunction() {\n        this.ctx.override(\n            this.window,\n            'Function',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n\n                let script = args[args.length - 1];\n                let fnArgs = [];\n\n                for (let i = 0; i < args.length - 1; i++) {\n                    fnArgs.push(args[i]);\n                }\n\n                const event = new HookEvent(\n                    { script, args: fnArgs },\n                    target,\n                    that\n                );\n                this.emit('function', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    ...event.data.args,\n                    event.data.script\n                );\n            },\n            true\n        );\n    }\n    overrideToString() {\n        this.ctx.override(this.fnProto, 'toString', (target, that) => {\n            const event = new HookEvent({ fn: that }, target, that);\n            this.emit('toString', event);\n\n            if (event.intercepted) return event.returnValue;\n            return event.target.call(event.data.fn);\n        });\n    }\n}\n\nexport default FunctionHook;\n", "import EventEmitter from 'events';\nimport HookEvent from '../hook.js';\n\n/**\n * @typedef {import('../index').default} UVClient\n */\n\nclass ObjectHook extends EventEmitter {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.Object = this.window.Object;\n        this.getOwnPropertyDescriptors = this.Object.getOwnPropertyDescriptors;\n        this.getOwnPropertyDescriptor = this.Object.getOwnPropertyDescriptor;\n        this.getOwnPropertyNames = this.Object.getOwnPropertyNames;\n    }\n    overrideGetPropertyNames() {\n        this.ctx.override(\n            this.Object,\n            'getOwnPropertyNames',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [object] = args;\n\n                const event = new HookEvent(\n                    { names: target.call(that, object) },\n                    target,\n                    that\n                );\n                this.emit('getOwnPropertyNames', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.names;\n            }\n        );\n    }\n    overrideGetOwnPropertyDescriptors() {\n        this.ctx.override(\n            this.Object,\n            'getOwnPropertyDescriptors',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [object] = args;\n\n                const event = new HookEvent(\n                    { descriptors: target.call(that, object) },\n                    target,\n                    that\n                );\n                this.emit('getOwnPropertyDescriptors', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.descriptors;\n            }\n        );\n    }\n}\n\nexport default ObjectHook;\n", "import EventEmitter from 'events';\nimport HookEvent from '../hook.js';\n\n/**\n * @typedef {import('../index').default} UVClient\n */\n\nclass Fetch extends EventEmitter {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.fetch = this.window.fetch;\n        this.Request = this.window.Request;\n        this.Response = this.window.Response;\n        this.Headers = this.window.Headers;\n        this.reqProto = this.Request ? this.Request.prototype : {};\n        this.resProto = this.Response ? this.Response.prototype : {};\n        this.headersProto = this.Headers ? this.Headers.prototype : {};\n        this.reqUrl = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.reqProto,\n            'url'\n        );\n        this.resUrl = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.resProto,\n            'url'\n        );\n        this.reqHeaders = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.reqProto,\n            'headers'\n        );\n        this.resHeaders = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.resProto,\n            'headers'\n        );\n    }\n    override() {\n        this.overrideRequest();\n        this.overrideUrl();\n        this.overrideHeaders();\n        return true;\n    }\n    overrideRequest() {\n        if (!this.fetch) return false;\n\n        this.ctx.override(this.window, 'fetch', (target, that, args) => {\n            if (!args.length || args[0] instanceof this.Request)\n                return target.apply(that, args);\n\n            let [input, options = {}] = args;\n            const event = new HookEvent({ input, options }, target, that);\n\n            this.emit('request', event);\n            if (event.intercepted) return event.returnValue;\n\n            return event.target.call(\n                event.that,\n                event.data.input,\n                event.data.options\n            );\n        });\n\n        this.ctx.override(\n            this.window,\n            'Request',\n            (target, that, args) => {\n                if (!args.length) return new target(...args);\n\n                let [input, options = {}] = args;\n                const event = new HookEvent({ input, options }, target);\n\n                this.emit('request', event);\n                if (event.intercepted) return event.returnValue;\n\n                return new event.target(event.data.input, event.data.options);\n            },\n            true\n        );\n        return true;\n    }\n    overrideUrl() {\n        this.ctx.overrideDescriptor(this.reqProto, 'url', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n\n                this.emit('requestUrl', event);\n                if (event.intercepted) return event.returnValue;\n\n                return event.data.value;\n            },\n        });\n\n        this.ctx.overrideDescriptor(this.resProto, 'url', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n\n                this.emit('responseUrl', event);\n                if (event.intercepted) return event.returnValue;\n\n                return event.data.value;\n            },\n        });\n        return true;\n    }\n    overrideHeaders() {\n        if (!this.Headers) return false;\n\n        this.ctx.overrideDescriptor(this.reqProto, 'headers', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n\n                this.emit('requestHeaders', event);\n                if (event.intercepted) return event.returnValue;\n\n                return event.data.value;\n            },\n        });\n\n        this.ctx.overrideDescriptor(this.resProto, 'headers', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n\n                this.emit('responseHeaders', event);\n                if (event.intercepted) return event.returnValue;\n\n                return event.data.value;\n            },\n        });\n\n        this.ctx.override(this.headersProto, 'get', (target, that, [name]) => {\n            if (!name) return target.call(that);\n            const event = new HookEvent(\n                { name, value: target.call(that, name) },\n                target,\n                that\n            );\n\n            this.emit('getHeader', event);\n            if (event.intercepted) return event.returnValue;\n\n            return event.data.value;\n        });\n\n        this.ctx.override(this.headersProto, 'set', (target, that, args) => {\n            if (2 > args.length) return target.apply(that, args);\n\n            let [name, value] = args;\n            const event = new HookEvent({ name, value }, target, that);\n\n            this.emit('setHeader', event);\n            if (event.intercepted) return event.returnValue;\n\n            return event.target.call(\n                event.that,\n                event.data.name,\n                event.data.value\n            );\n        });\n\n        this.ctx.override(this.headersProto, 'has', (target, that, args) => {\n            if (!args.length) return target.call(that);\n            let [name] = args;\n\n            const event = new HookEvent(\n                { name, value: target.call(that, name) },\n                target,\n                that\n            );\n\n            this.emit('hasHeader', event);\n            if (event.intercepted) return event.returnValue;\n\n            return event.data;\n        });\n\n        this.ctx.override(this.headersProto, 'append', (target, that, args) => {\n            if (2 > args.length) return target.apply(that, args);\n\n            let [name, value] = args;\n            const event = new HookEvent({ name, value }, target, that);\n\n            this.emit('appendHeader', event);\n            if (event.intercepted) return event.returnValue;\n\n            return event.target.call(\n                event.that,\n                event.data.name,\n                event.data.value\n            );\n        });\n\n        this.ctx.override(this.headersProto, 'delete', (target, that, args) => {\n            if (!args.length) return target.apply(that, args);\n\n            let [name] = args;\n            const event = new HookEvent({ name }, target, that);\n\n            this.emit('deleteHeader', event);\n            if (event.intercepted) return event.returnValue;\n\n            return event.target.call(event.that, event.data.name);\n        });\n\n        return true;\n    }\n}\n\nexport default Fetch;\n", "import EventEmitter from 'events';\nimport HookEvent from '../hook.js';\n\n/**\n * @typedef {import('../index').default} UVClient\n */\n\nclass Xhr extends EventEmitter {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.XMLHttpRequest = this.window.XMLHttpRequest;\n        this.xhrProto = this.window.XMLHttpRequest\n            ? this.window.XMLHttpRequest.prototype\n            : {};\n        this.open = this.xhrProto.open;\n        this.abort = this.xhrProto.abort;\n        this.send = this.xhrProto.send;\n        this.overrideMimeType = this.xhrProto.overrideMimeType;\n        this.getAllResponseHeaders = this.xhrProto.getAllResponseHeaders;\n        this.getResponseHeader = this.xhrProto.getResponseHeader;\n        this.setRequestHeader = this.xhrProto.setRequestHeader;\n        this.responseURL = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.xhrProto,\n            'responseURL'\n        );\n        this.responseText = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.xhrProto,\n            'responseText'\n        );\n    }\n    override() {\n        this.overrideOpen();\n        this.overrideSend();\n        this.overrideMimeType();\n        this.overrideGetResHeader();\n        this.overrideGetResHeaders();\n        this.overrideSetReqHeader();\n    }\n    overrideOpen() {\n        this.ctx.override(this.xhrProto, 'open', (target, that, args) => {\n            if (2 > args.length) return target.apply(that, args);\n\n            let [method, input, async = true, user = null, password = null] =\n                args;\n            const event = new HookEvent(\n                { method, input, async, user, password },\n                target,\n                that\n            );\n\n            this.emit('open', event);\n            if (event.intercepted) return event.returnValue;\n\n            return event.target.call(\n                event.that,\n                event.data.method,\n                event.data.input,\n                event.data.async,\n                event.data.user,\n                event.data.password\n            );\n        });\n    }\n    overrideResponseUrl() {\n        this.ctx.overrideDescriptor(this.xhrProto, 'responseURL', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('responseUrl', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n        });\n    }\n    overrideSend() {\n        this.ctx.override(\n            this.xhrProto,\n            'send',\n            (target, that, [body = null]) => {\n                const event = new HookEvent({ body }, target, that);\n\n                this.emit('send', event);\n                if (event.intercepted) return event.returnValue;\n\n                return event.target.call(event.that, event.data.body);\n            }\n        );\n    }\n    overrideSetReqHeader() {\n        this.ctx.override(\n            this.xhrProto,\n            'setRequestHeader',\n            (target, that, args) => {\n                if (2 > args.length) return target.apply(that, args);\n\n                let [name, value] = args;\n                const event = new HookEvent({ name, value }, target, that);\n\n                this.emit('setReqHeader', event);\n                if (event.intercepted) return event.returnValue;\n\n                return event.target.call(\n                    event.that,\n                    event.data.name,\n                    event.data.value\n                );\n            }\n        );\n    }\n    overrideGetResHeaders() {\n        this.ctx.override(\n            this.xhrProto,\n            'getAllResponseHeaders',\n            (target, that) => {\n                const event = new HookEvent(\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n\n                this.emit('getAllResponseHeaders', event);\n                if (event.intercepted) return event.returnValue;\n\n                return event.data.value;\n            }\n        );\n    }\n    overrideGetResHeader() {\n        this.ctx.override(\n            this.xhrProto,\n            'getResponseHeader',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [name] = args;\n\n                const event = new HookEvent(\n                    { name, value: target.call(that, name) },\n                    target,\n                    that\n                );\n                if (event.intercepted) return event.returnValue;\n\n                return event.data.value;\n            }\n        );\n    }\n}\n\nexport default Xhr;\n", "import EventEmitter from 'events';\nimport HookEvent from '../hook.js';\n\n/**\n * @typedef {import('../index').default} UVClient\n */\n\nclass EventSourceApi extends EventEmitter {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.EventSource = this.window.EventSource || {};\n        this.esProto = this.EventSource.prototype || {};\n        this.url = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.esProto,\n            'url'\n        );\n        this.CONNECTING = 0;\n        this.OPEN = 1;\n        this.CLOSED = 2;\n    }\n    overrideConstruct() {\n        this.ctx.override(\n            this.window,\n            'EventSource',\n            (target, that, args) => {\n                if (!args.length) return new target(...args);\n                let [url, config = {}] = args;\n\n                const event = new HookEvent({ url, config }, target, that);\n                this.emit('construct', event);\n\n                if (event.intercepted) return event.returnValue;\n                return new event.target(event.data.url, event.data.config);\n            },\n            true\n        );\n\n        if ('EventSource' in this.window) {\n            this.window.EventSource.CONNECTING = this.CONNECTING;\n            this.window.EventSource.OPEN = this.OPEN;\n            this.window.EventSource.CLOSED = this.CLOSED;\n        }\n    }\n    overrideUrl() {\n        this.ctx.overrideDescriptor(this.esProto, 'url', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('url', event);\n                return event.data.value;\n            },\n        });\n    }\n}\n\nexport default EventSourceApi;\n", "import EventEmitter from 'events';\nimport HookEvent from './hook.js';\n\n/**\n * @typedef {import('./index').default} UVClient\n */\n\nclass History extends EventEmitter {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = this.ctx.window;\n        this.History = this.window.History;\n        this.history = this.window.history;\n        this.historyProto = this.History ? this.History.prototype : {};\n        this.pushState = this.historyProto.pushState;\n        this.replaceState = this.historyProto.replaceState;\n        this.go = this.historyProto.go;\n        this.back = this.historyProto.back;\n        this.forward = this.historyProto.forward;\n    }\n    override() {\n        this.overridePushState();\n        this.overrideReplaceState();\n        this.overrideGo();\n        this.overrideForward();\n        this.overrideBack();\n    }\n    overridePushState() {\n        this.ctx.override(\n            this.historyProto,\n            'pushState',\n            (target, that, args) => {\n                if (2 > args.length) return target.apply(that, args);\n                let [state, title, url = ''] = args;\n\n                const event = new HookEvent(\n                    { state, title, url },\n                    target,\n                    that\n                );\n                this.emit('pushState', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    event.data.state,\n                    event.data.title,\n                    event.data.url\n                );\n            }\n        );\n    }\n    overrideReplaceState() {\n        this.ctx.override(\n            this.historyProto,\n            'replaceState',\n            (target, that, args) => {\n                if (2 > args.length) return target.apply(that, args);\n                let [state, title, url = ''] = args;\n\n                const event = new HookEvent(\n                    { state, title, url },\n                    target,\n                    that\n                );\n                this.emit('replaceState', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    event.data.state,\n                    event.data.title,\n                    event.data.url\n                );\n            }\n        );\n    }\n    overrideGo() {\n        this.ctx.override(this.historyProto, 'go', (target, that, [delta]) => {\n            const event = new HookEvent({ delta }, target, that);\n            this.emit('go', event);\n\n            if (event.intercepted) return event.returnValue;\n            return event.target.call(event.that, event.data.delta);\n        });\n    }\n    overrideForward() {\n        this.ctx.override(this.historyProto, 'forward', (target, that) => {\n            const event = new HookEvent(null, target, that);\n            this.emit('forward', event);\n\n            if (event.intercepted) return event.returnValue;\n            return event.target.call(event.that);\n        });\n    }\n    overrideBack() {\n        this.ctx.override(this.historyProto, 'back', (target, that) => {\n            const event = new HookEvent(null, target, that);\n            this.emit('back', event);\n\n            if (event.intercepted) return event.returnValue;\n            return event.target.call(event.that);\n        });\n    }\n}\n\nexport default History;\n", "import EventEmitter from 'events';\n\n/**\n * @typedef {import('./index').default} UVClient\n */\n\nclass LocationApi extends EventEmitter {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.location = this.window.location;\n        this.WorkerLocation = this.ctx.worker\n            ? this.window.WorkerLocation\n            : null;\n        this.workerLocProto = this.WorkerLocation\n            ? this.WorkerLocation.prototype\n            : {};\n        this.keys = [\n            'href',\n            'protocol',\n            'host',\n            'hostname',\n            'port',\n            'pathname',\n            'search',\n            'hash',\n            'origin',\n        ];\n        this.HashChangeEvent = this.window.HashChangeEvent || null;\n        this.href = this.WorkerLocation\n            ? ctx.nativeMethods.getOwnPropertyDescriptor(\n                  this.workerLocProto,\n                  'href'\n              )\n            : ctx.nativeMethods.getOwnPropertyDescriptor(this.location, 'href');\n    }\n    overrideWorkerLocation(parse) {\n        if (!this.WorkerLocation) return false;\n        const uv = this;\n\n        for (const key of this.keys) {\n            this.ctx.overrideDescriptor(this.workerLocProto, key, {\n                get: () => {\n                    return parse(uv.href.get.call(this.location))[key];\n                },\n            });\n        }\n\n        return true;\n    }\n    emulate(parse, wrap) {\n        const emulation = {};\n        const that = this;\n\n        for (const key of that.keys) {\n            this.ctx.nativeMethods.defineProperty(emulation, key, {\n                get() {\n                    return parse(that.href.get.call(that.location))[key];\n                },\n                set:\n                    key !== 'origin'\n                        ? function (val) {\n                              switch (key) {\n                                  case 'href':\n                                      that.location.href = wrap(val);\n                                      break;\n                                  case 'hash':\n                                      that.emit(\n                                          'hashchange',\n                                          emulation.href,\n                                          val.trim().startsWith('#')\n                                              ? new URL(\n                                                    val.trim(),\n                                                    emulation.href\n                                                ).href\n                                              : new URL(\n                                                    '#' + val.trim(),\n                                                    emulation.href\n                                                ).href,\n                                          that\n                                      );\n                                      break;\n                                  default:\n                                      {\n                                          const url = new URL(emulation.href);\n                                          url[key] = val;\n                                          that.location.href = wrap(url.href);\n                                      }\n                                      break;\n                              }\n                          }\n                        : undefined,\n                configurable: false,\n                enumerable: true,\n            });\n        }\n\n        if ('reload' in this.location) {\n            this.ctx.nativeMethods.defineProperty(emulation, 'reload', {\n                value: this.ctx.wrap(\n                    this.location,\n                    'reload',\n                    (target, that) => {\n                        return target.call(\n                            that === emulation ? this.location : that\n                        );\n                    }\n                ),\n                writable: false,\n                enumerable: true,\n            });\n        }\n\n        if ('replace' in this.location) {\n            this.ctx.nativeMethods.defineProperty(emulation, 'replace', {\n                value: this.ctx.wrap(\n                    this.location,\n                    'assign',\n                    (target, that, args) => {\n                        if (!args.length || that !== emulation)\n                            target.call(that);\n                        that = this.location;\n                        let [input] = args;\n\n                        const url = new URL(input, emulation.href);\n                        return target.call(\n                            that === emulation ? this.location : that,\n                            wrap(url.href)\n                        );\n                    }\n                ),\n                writable: false,\n                enumerable: true,\n            });\n        }\n\n        if ('assign' in this.location) {\n            this.ctx.nativeMethods.defineProperty(emulation, 'assign', {\n                value: this.ctx.wrap(\n                    this.location,\n                    'assign',\n                    (target, that, args) => {\n                        if (!args.length || that !== emulation)\n                            target.call(that);\n                        that = this.location;\n                        let [input] = args;\n\n                        const url = new URL(input, emulation.href);\n                        return target.call(\n                            that === emulation ? this.location : that,\n                            wrap(url.href)\n                        );\n                    }\n                ),\n                writable: false,\n                enumerable: true,\n            });\n        }\n\n        if ('ancestorOrigins' in this.location) {\n            this.ctx.nativeMethods.defineProperty(\n                emulation,\n                'ancestorOrigins',\n                {\n                    get() {\n                        const arr = [];\n                        if (that.window.DOMStringList)\n                            that.ctx.nativeMethods.setPrototypeOf(\n                                arr,\n                                that.window.DOMStringList.prototype\n                            );\n                        return arr;\n                    },\n                    set: undefined,\n                    enumerable: true,\n                }\n            );\n        }\n\n        this.ctx.nativeMethods.defineProperty(emulation, 'toString', {\n            value: this.ctx.wrap(this.location, 'toString', () => {\n                return emulation.href;\n            }),\n            enumerable: true,\n            writable: false,\n        });\n\n        this.ctx.nativeMethods.defineProperty(emulation, Symbol.toPrimitive, {\n            value: () => emulation.href,\n            writable: false,\n            enumerable: false,\n        });\n\n        if (this.ctx.window.Location)\n            this.ctx.nativeMethods.setPrototypeOf(\n                emulation,\n                this.ctx.window.Location.prototype\n            );\n\n        return emulation;\n    }\n}\n\nexport default LocationApi;\n", "import EventEmitter from 'events';\nimport HookEvent from './hook.js';\n\n/**\n * @typedef {import('./index').default} Ultraviolet\n */\n\nclass MessageApi extends EventEmitter {\n    /**\n     *\n     * @param {Ultraviolet} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = this.ctx.window;\n        this.postMessage = this.window.postMessage;\n        this.MessageEvent = this.window.MessageEvent || {};\n        this.MessagePort = this.window.MessagePort || {};\n        this.mpProto = this.MessagePort.prototype || {};\n        this.mpPostMessage = this.mpProto.postMessage;\n        this.messageProto = this.MessageEvent.prototype || {};\n        this.messageData = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.messageProto,\n            'data'\n        );\n        this.messageOrigin = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.messageProto,\n            'origin'\n        );\n    }\n    overridePostMessage() {\n        this.ctx.override(this.window, 'postMessage', (target, that, args) => {\n            if (!args.length) return target.apply(that, args);\n\n            let message;\n            let origin;\n            let transfer;\n\n            if (!this.ctx.worker) {\n                [message, origin, transfer = []] = args;\n            } else {\n                [message, transfer = []] = args;\n            }\n\n            const event = new HookEvent(\n                { message, origin, transfer, worker: this.ctx.worker },\n                target,\n                that\n            );\n            this.emit('postMessage', event);\n\n            if (event.intercepted) return event.returnValue;\n            return this.ctx.worker\n                ? event.target.call(\n                      event.that,\n                      event.data.message,\n                      event.data.transfer\n                  )\n                : event.target.call(\n                      event.that,\n                      event.data.message,\n                      event.data.origin,\n                      event.data.transfer\n                  );\n        });\n    }\n    wrapPostMessage(obj, prop, noOrigin = false) {\n        return this.ctx.wrap(obj, prop, (target, that, args) => {\n            if (this.ctx.worker ? !args.length : 2 > args)\n                return target.apply(that, args);\n            let message;\n            let origin;\n            let transfer;\n\n            if (!noOrigin) {\n                [message, origin, transfer = []] = args;\n            } else {\n                [message, transfer = []] = args;\n                origin = null;\n            }\n\n            const event = new HookEvent(\n                { message, origin, transfer, worker: this.ctx.worker },\n                target,\n                obj\n            );\n            this.emit('postMessage', event);\n\n            if (event.intercepted) return event.returnValue;\n            return noOrigin\n                ? event.target.call(\n                      event.that,\n                      event.data.message,\n                      event.data.transfer\n                  )\n                : event.target.call(\n                      event.that,\n                      event.data.message,\n                      event.data.origin,\n                      event.data.transfer\n                  );\n        });\n    }\n    overrideMessageOrigin() {\n        this.ctx.overrideDescriptor(this.messageProto, 'origin', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('origin', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n        });\n    }\n    overrideMessageData() {\n        this.ctx.overrideDescriptor(this.messageProto, 'data', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('data', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n        });\n    }\n}\n\nexport default MessageApi;\n", "import EventEmitter from 'events';\nimport HookEvent from './hook.js';\n\n/**\n * @typedef {import('./index').default} UVClient\n */\n\nclass NavigatorApi extends EventEmitter {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.navigator = this.window.navigator;\n        this.Navigator = this.window.Navigator || {};\n        this.navProto = this.Navigator.prototype || {};\n        this.sendBeacon = this.navProto.sendBeacon;\n    }\n    overrideSendBeacon() {\n        this.ctx.override(this.navProto, 'sendBeacon', (target, that, args) => {\n            if (!args.length) return target.apply(that, args);\n            let [url, data = ''] = args;\n\n            const event = new HookEvent({ url, data }, target, that);\n            this.emit('sendBeacon', event);\n\n            if (event.intercepted) return event.returnValue;\n            return event.target.call(\n                event.that,\n                event.data.url,\n                event.data.data\n            );\n        });\n    }\n}\n\nexport default NavigatorApi;\n", "import EventEmitter from 'events';\nimport HookEvent from './hook.js';\n\n/**\n * @typedef {import('./index').default} UVClient\n */\n\nclass Workers extends EventEmitter {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.Worker = this.window.Worker || {};\n        this.Worklet = this.window.Worklet || {};\n        this.workletProto = this.Worklet.prototype || {};\n        this.workerProto = this.Worker.prototype || {};\n        this.postMessage = this.workerProto.postMessage;\n        this.terminate = this.workerProto.terminate;\n        this.addModule = this.workletProto.addModule;\n    }\n    overrideWorker() {\n        this.ctx.override(\n            this.window,\n            'Worker',\n            (target, that, args) => {\n                if (!args.length) return new target(...args);\n                let [url, options = {}] = args;\n\n                const event = new HookEvent({ url, options }, target, that);\n                this.emit('worker', event);\n\n                if (event.intercepted) return event.returnValue;\n                return new event.target(\n                    ...[event.data.url, event.data.options]\n                );\n            },\n            true\n        );\n    }\n    overrideAddModule() {\n        this.ctx.override(\n            this.workletProto,\n            'addModule',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [url, options = {}] = args;\n\n                const event = new HookEvent({ url, options }, target, that);\n                this.emit('addModule', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    event.data.url,\n                    event.data.options\n                );\n            }\n        );\n    }\n    overridePostMessage() {\n        this.ctx.override(\n            this.workerProto,\n            'postMessage',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [message, transfer = []] = args;\n\n                const event = new HookEvent(\n                    { message, transfer },\n                    target,\n                    that\n                );\n                this.emit('postMessage', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    event.data.message,\n                    event.data.transfer\n                );\n            }\n        );\n    }\n    overrideImportScripts() {\n        this.ctx.override(\n            this.window,\n            'importScripts',\n            (target, that, scripts) => {\n                if (!scripts.length) return target.apply(that, scripts);\n\n                const event = new HookEvent({ scripts }, target, that);\n                this.emit('importScripts', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.apply(event.that, event.data.scripts);\n            }\n        );\n    }\n}\n\nexport default Workers;\n", "import EventEmitter from 'events';\nimport HookEvent from './hook.js';\n\n/**\n * @typedef {import('./index').default} UVClient\n */\n\nclass URLApi extends EventEmitter {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = this.ctx.window;\n        this.URL = this.window.URL || {};\n        this.createObjectURL = this.URL.createObjectURL;\n        this.revokeObjectURL = this.URL.revokeObjectURL;\n    }\n    overrideObjectURL() {\n        this.ctx.override(this.URL, 'createObjectURL', (target, that, args) => {\n            if (!args.length) return target.apply(that, args);\n            let [object] = args;\n\n            const event = new HookEvent({ object }, target, that);\n            this.emit('createObjectURL', event);\n\n            if (event.intercepted) return event.returnValue;\n            return event.target.call(event.that, event.data.object);\n        });\n        this.ctx.override(this.URL, 'revokeObjectURL', (target, that, args) => {\n            if (!args.length) return target.apply(that, args);\n            let [url] = args;\n\n            const event = new HookEvent({ url }, target, that);\n            this.emit('revokeObjectURL', event);\n\n            if (event.intercepted) return event.returnValue;\n            return event.target.call(event.that, event.data.url);\n        });\n    }\n}\n\nexport default URLApi;\n", "import DocumentHook from './dom/document.js';\nimport ElementApi from './dom/element.js';\nimport NodeApi from './dom/node.js';\nimport AttrApi from './dom/attr.js';\nimport FunctionHook from './native/function.js';\nimport ObjectHook from './native/object.js';\nimport Fetch from './requests/fetch.js';\nimport Xhr from './requests/xhr.js';\nimport EventSourceApi from './requests/eventsource.js';\nimport History from './history.js';\nimport LocationApi from './location.js';\nimport MessageApi from './message.js';\nimport NavigatorApi from './navigator.js';\nimport Workers from './worker.js';\nimport URLApi from './url.js';\nimport EventEmitter from 'events';\nimport StorageApi from './storage.js';\nimport StyleApi from './dom/style.js';\nimport IDBApi from './idb.js';\nimport WebSocketApi from './requests/websocket.js';\n\n/**\n * @template {Function} [T=Function]\n * @typedef {(fn: T, that: any, args: any[]) => {}} WrapFun\n */\n\n/**\n * @typedef {object} WrapPropertyDescriptor\n * @property {WrapFun} [get]\n * @property {WrapFun} [set]\n */\n\nclass UVClient extends EventEmitter {\n    /**\n     *\n     * @param {typeof globalThis} window\n     * @param {import('@tomphttp/bare-client').BareClient} bareClient\n     * @param {boolean} worker\n     */\n    constructor(window = self, bareClient, worker = !window.window) {\n        super();\n        /**\n         * @type {typeof globalThis}\n         */\n        this.window = window;\n        this.nativeMethods = {\n            fnToString: this.window.Function.prototype.toString,\n            defineProperty: this.window.Object.defineProperty,\n            getOwnPropertyDescriptor:\n                this.window.Object.getOwnPropertyDescriptor,\n            getOwnPropertyDescriptors:\n                this.window.Object.getOwnPropertyDescriptors,\n            getOwnPropertyNames: this.window.Object.getOwnPropertyNames,\n            keys: this.window.Object.keys,\n            getOwnPropertySymbols: this.window.Object.getOwnPropertySymbols,\n            isArray: this.window.Array.isArray,\n            setPrototypeOf: this.window.Object.setPrototypeOf,\n            isExtensible: this.window.Object.isExtensible,\n            Map: this.window.Map,\n            Proxy: this.window.Proxy,\n        };\n        this.worker = worker;\n        this.bareClient = bareClient;\n        this.fetch = new Fetch(this);\n        this.xhr = new Xhr(this);\n        this.idb = new IDBApi(this);\n        this.history = new History(this);\n        this.element = new ElementApi(this);\n        this.node = new NodeApi(this);\n        this.document = new DocumentHook(this);\n        this.function = new FunctionHook(this);\n        this.object = new ObjectHook(this);\n        this.websocket = new WebSocketApi(this);\n        this.message = new MessageApi(this);\n        this.navigator = new NavigatorApi(this);\n        this.eventSource = new EventSourceApi(this);\n        this.attribute = new AttrApi(this);\n        this.url = new URLApi(this);\n        this.workers = new Workers(this);\n        this.location = new LocationApi(this);\n        this.storage = new StorageApi(this);\n        this.style = new StyleApi(this);\n    }\n    /**\n     *\n     * @param {*} obj\n     * @param {PropertyKey} prop\n     * @param {WrapFun} wrapper\n     * @param {boolean} [construct]\n     * @returns\n     */\n    override(obj, prop, wrapper, construct) {\n        // if (!(prop in obj)) return false;\n        const wrapped = this.wrap(obj, prop, wrapper, construct);\n        obj[prop] = wrapped;\n        return wrapped;\n    }\n    /**\n     *\n     * @param {*} obj\n     * @param {PropertyKey} prop\n     * @param {WrapPropertyDescriptor} [wrapObj]\n     * @returns\n     */\n    overrideDescriptor(obj, prop, wrapObj = {}) {\n        const wrapped = this.wrapDescriptor(obj, prop, wrapObj);\n        if (!wrapped) return {};\n        this.nativeMethods.defineProperty(obj, prop, wrapped);\n        return wrapped;\n    }\n\n    /**\n     *\n     * @template T\n     * @param {*} obj\n     * @param {PropertyKey} prop\n     * @param {WrapFun<T>} wrap\n     * @param {boolean} [construct]\n     * @returns {T}\n     */\n    wrap(obj, prop, wrap, construct = false) {\n        const fn = obj[prop];\n        if (!fn) return fn;\n        const wrapped =\n            'prototype' in fn\n                ? function attach() {\n                      return wrap(fn, this, [...arguments]);\n                  }\n                : {\n                      attach() {\n                          return wrap(fn, this, [...arguments]);\n                      },\n                  }.attach;\n\n        if (construct) {\n            wrapped.prototype = fn.prototype;\n            wrapped.prototype.constructor = wrapped;\n        }\n\n        this.emit('wrap', fn, wrapped, construct);\n\n        return wrapped;\n    }\n    /**\n     *\n     * @param {*} obj\n     * @param {PropertyKey} prop\n     * @param {WrapPropertyDescriptor} [wrapObj]\n     * @returns\n     */\n    wrapDescriptor(obj, prop, wrapObj = {}) {\n        const descriptor = this.nativeMethods.getOwnPropertyDescriptor(\n            obj,\n            prop\n        );\n        if (!descriptor) return false;\n        for (let key in wrapObj) {\n            if (key in descriptor) {\n                if (key === 'get' || key === 'set') {\n                    descriptor[key] = this.wrap(descriptor, key, wrapObj[key]);\n                } else {\n                    descriptor[key] =\n                        typeof wrapObj[key] == 'function'\n                            ? wrapObj[key](descriptor[key])\n                            : wrapObj[key];\n                }\n            }\n        }\n        return descriptor;\n    }\n}\n\nexport default UVClient;\nif (typeof self === 'object') self.UVClient = UVClient;\n", "import EventEmitter from 'events';\nimport HookEvent from './hook.js';\n\n/**\n * @typedef {import('./index').default} UVClient\n */\n\nclass StorageApi extends EventEmitter {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.localStorage = this.window.localStorage || null;\n        this.sessionStorage = this.window.sessionStorage || null;\n        this.Storage = this.window.Storage || {};\n        this.storeProto = this.Storage.prototype || {};\n        this.getItem = this.storeProto.getItem || null;\n        this.setItem = this.storeProto.setItem || null;\n        this.removeItem = this.storeProto.removeItem || null;\n        this.clear = this.storeProto.clear || null;\n        this.key = this.storeProto.key || null;\n        this.methods = ['key', 'getItem', 'setItem', 'removeItem', 'clear'];\n        this.wrappers = new ctx.nativeMethods.Map();\n    }\n    overrideMethods() {\n        this.ctx.override(this.storeProto, 'getItem', (target, that, args) => {\n            if (!args.length)\n                return target.apply(this.wrappers.get(that) || that, args);\n            let [name] = args;\n\n            const event = new HookEvent(\n                { name },\n                target,\n                this.wrappers.get(that) || that\n            );\n            this.emit('getItem', event);\n\n            if (event.intercepted) return event.returnValue;\n            return event.target.call(event.that, event.data.name);\n        });\n        this.ctx.override(this.storeProto, 'setItem', (target, that, args) => {\n            if (2 > args.length)\n                return target.apply(this.wrappers.get(that) || that, args);\n            let [name, value] = args;\n\n            const event = new HookEvent(\n                { name, value },\n                target,\n                this.wrappers.get(that) || that\n            );\n            this.emit('setItem', event);\n\n            if (event.intercepted) return event.returnValue;\n            return event.target.call(\n                event.that,\n                event.data.name,\n                event.data.value\n            );\n        });\n        this.ctx.override(\n            this.storeProto,\n            'removeItem',\n            (target, that, args) => {\n                if (!args.length)\n                    return target.apply(this.wrappers.get(that) || that, args);\n                let [name] = args;\n\n                const event = new HookEvent(\n                    { name },\n                    target,\n                    this.wrappers.get(that) || that\n                );\n                this.emit('removeItem', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.name);\n            }\n        );\n        this.ctx.override(this.storeProto, 'clear', (target, that) => {\n            const event = new HookEvent(\n                null,\n                target,\n                this.wrappers.get(that) || that\n            );\n            this.emit('clear', event);\n\n            if (event.intercepted) return event.returnValue;\n            return event.target.call(event.that);\n        });\n        this.ctx.override(this.storeProto, 'key', (target, that, args) => {\n            if (!args.length)\n                return target.apply(this.wrappers.get(that) || that, args);\n            let [index] = args;\n\n            const event = new HookEvent(\n                { index },\n                target,\n                this.wrappers.get(that) || that\n            );\n            this.emit('key', event);\n\n            if (event.intercepted) return event.returnValue;\n            return event.target.call(event.that, event.data.index);\n        });\n    }\n    overrideLength() {\n        this.ctx.overrideDescriptor(this.storeProto, 'length', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    { length: target.call(this.wrappers.get(that) || that) },\n                    target,\n                    this.wrappers.get(that) || that\n                );\n                this.emit('length', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.length;\n            },\n        });\n    }\n    emulate(storage, obj = {}) {\n        this.ctx.nativeMethods.setPrototypeOf(obj, this.storeProto);\n\n        const proxy = new this.ctx.window.Proxy(obj, {\n            get: (target, prop) => {\n                if (prop in this.storeProto || typeof prop === 'symbol')\n                    return storage[prop];\n\n                const event = new HookEvent({ name: prop }, null, storage);\n                this.emit('get', event);\n\n                if (event.intercepted) return event.returnValue;\n                return storage[event.data.name];\n            },\n            set: (target, prop, value) => {\n                if (prop in this.storeProto || typeof prop === 'symbol')\n                    return (storage[prop] = value);\n\n                const event = new HookEvent(\n                    { name: prop, value },\n                    null,\n                    storage\n                );\n                this.emit('set', event);\n\n                if (event.intercepted) return event.returnValue;\n\n                return (storage[event.data.name] = event.data.value);\n            },\n            deleteProperty: (target, prop) => {\n                if (typeof prop === 'symbol') return delete storage[prop];\n\n                const event = new HookEvent({ name: prop }, null, storage);\n                this.emit('delete', event);\n\n                if (event.intercepted) return event.returnValue;\n\n                return delete storage[event.data.name];\n            },\n        });\n\n        this.wrappers.set(proxy, storage);\n        this.ctx.nativeMethods.setPrototypeOf(proxy, this.storeProto);\n\n        return proxy;\n    }\n}\n\nexport default StorageApi;\n", "import EventEmitter from 'events';\nimport HookEvent from '../hook.js';\n\n/**\n * @typedef {import('../index').default} UVClient\n */\n\nclass StyleApi extends EventEmitter {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.CSSStyleDeclaration = this.window.CSSStyleDeclaration || {};\n        this.cssStyleProto = this.CSSStyleDeclaration.prototype || {};\n        this.getPropertyValue = this.cssStyleProto.getPropertyValue || null;\n        this.setProperty = this.cssStyleProto.setProperty || null;\n        this.cssText -\n            ctx.nativeMethods.getOwnPropertyDescriptors(\n                this.cssStyleProto,\n                'cssText'\n            );\n        this.urlProps = [\n            'background',\n            'backgroundImage',\n            'borderImage',\n            'borderImageSource',\n            'listStyle',\n            'listStyleImage',\n            'cursor',\n        ];\n        this.dashedUrlProps = [\n            'background',\n            'background-image',\n            'border-image',\n            'border-image-source',\n            'list-style',\n            'list-style-image',\n            'cursor',\n        ];\n        this.propToDashed = {\n            background: 'background',\n            backgroundImage: 'background-image',\n            borderImage: 'border-image',\n            borderImageSource: 'border-image-source',\n            listStyle: 'list-style',\n            listStyleImage: 'list-style-image',\n            cursor: 'cursor',\n        };\n    }\n    overrideSetGetProperty() {\n        this.ctx.override(\n            this.cssStyleProto,\n            'getPropertyValue',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n\n                let [property] = args;\n\n                const event = new HookEvent({ property }, target, that);\n                this.emit('getPropertyValue', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.property);\n            }\n        );\n        this.ctx.override(\n            this.cssStyleProto,\n            'setProperty',\n            (target, that, args) => {\n                if (2 > args.length) return target.apply(that, args);\n                let [property, value] = args;\n\n                const event = new HookEvent({ property, value }, target, that);\n                this.emit('setProperty', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    event.data.property,\n                    event.data.value\n                );\n            }\n        );\n    }\n    overrideCssText() {\n        this.ctx.overrideDescriptor(this.cssStyleProto, 'cssText', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('getCssText', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n            set: (target, that, [val]) => {\n                const event = new HookEvent({ value: val }, target, that);\n                this.emit('setCssText', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.value);\n            },\n        });\n    }\n}\n\nexport default StyleApi;\n", "import EventEmitter from 'events';\nimport HookEvent from './hook.js';\n\n/**\n * @typedef {import('./index').default} Ultraviolet\n */\n\nclass IDBApi extends EventEmitter {\n    /**\n     *\n     * @param {Ultraviolet} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = this.ctx.window;\n        this.IDBDatabase = this.window.IDBDatabase || {};\n        this.idbDatabaseProto = this.IDBDatabase.prototype || {};\n        this.IDBFactory = this.window.IDBFactory || {};\n        this.idbFactoryProto = this.IDBFactory.prototype || {};\n        this.open = this.idbFactoryProto.open;\n    }\n    overrideOpen() {\n        this.ctx.override(\n            this.IDBFactory.prototype,\n            'open',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n\n                if (!args.length) return target.apply(that, args);\n                const [name, version] = args;\n\n                const event = new HookEvent({ name, version }, target, that);\n                this.emit('idbFactoryOpen', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    event.data.name,\n                    event.data.version\n                );\n            }\n        );\n    }\n    overrideName() {\n        this.ctx.overrideDescriptor(this.idbDatabaseProto, 'name', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('idbFactoryName', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n        });\n    }\n}\n\nexport default IDBApi;\n", "import EventEmitter from 'events';\nimport HookEvent from '../hook.js';\n\n/**\n * @typedef {import('../index').default} UVClient\n */\n\nclass WebSocketApi extends EventEmitter {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.WebSocket = this.window.WebSocket || {};\n        this.wsProto = this.WebSocket.prototype || {};\n        this.url = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.wsProto,\n            'url'\n        );\n        this.protocol = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.wsProto,\n            'protocol'\n        );\n        this.readyState = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.wsProto,\n            'readyState'\n        );\n        this.send = this.wsProto.send;\n        this.CONNECTING = WebSocket.CONNECTING;\n        this.OPEN = WebSocket.OPEN;\n        this.CLOSING = WebSocket.CLOSING;\n        this.CLOSED = WebSocket.CLOSED;\n    }\n    overrideWebSocket() {\n        this.ctx.override(\n            this.window,\n            'WebSocket',\n            (target, that, args) => {\n                if (!args.length) return new target(...args);\n                // just give the listeners direct access to the arguments\n                // an error occurs with too little arguments, listeners should be able to catch that\n                const event = new HookEvent({ args }, target, that);\n                this.emit('websocket', event);\n\n                if (event.intercepted) return event.returnValue;\n                return new event.target(event.data.url, event.data.protocols);\n            },\n            true\n        );\n\n        this.window.WebSocket.CONNECTING = this.CONNECTING;\n        this.window.WebSocket.OPEN = this.OPEN;\n        this.window.WebSocket.CLOSING = this.CLOSING;\n        this.window.WebSocket.CLOSED = this.CLOSED;\n    }\n    overrideURL() {\n        this.ctx.overrideDescriptor(this.wsProto, 'url', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('url', event);\n                return event.data.value;\n            },\n        });\n    }\n    overrideProtocol() {\n        this.ctx.overrideDescriptor(this.wsProto, 'protocol', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('protocol', event);\n                return event.data.value;\n            },\n        });\n    }\n    overrideReadyState() {\n        this.ctx.overrideDescriptor(this.wsProto, 'readyState', {\n            get: (target, that) => {\n                const event = new HookEvent(\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('readyState', event);\n                return event.data.value;\n            },\n        });\n    }\n    overrideSend() {\n        this.ctx.override(this.wsProto, 'send', (target, that, args) => {\n            const event = new HookEvent({ args }, target, that);\n            this.emit('send', event);\n            if (event.intercepted) return event.returnValue;\n            return event.target.call(event.that, event.data.args);\n        });\n    }\n}\n\nexport default WebSocketApi;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAuBA,UAAI,IAAI,OAAO,YAAY,WAAW,UAAU;AAChD,UAAI,eAAe,KAAK,OAAO,EAAE,UAAU,aACvC,EAAE,QACF,SAASA,cAAa,QAAQ,UAAU,MAAM;AAC9C,eAAO,SAAS,UAAU,MAAM,KAAK,QAAQ,UAAU,IAAI;AAAA,MAC7D;AAEF,UAAI;AACJ,UAAI,KAAK,OAAO,EAAE,YAAY,YAAY;AACxC,yBAAiB,EAAE;AAAA,MACrB,WAAW,OAAO,uBAAuB;AACvC,yBAAiB,SAASC,gBAAe,QAAQ;AAC/C,iBAAO,OAAO,oBAAoB,MAAM,EACrC,OAAO,OAAO,sBAAsB,MAAM,CAAC;AAAA,QAChD;AAAA,MACF,OAAO;AACL,yBAAiB,SAASA,gBAAe,QAAQ;AAC/C,iBAAO,OAAO,oBAAoB,MAAM;AAAA,QAC1C;AAAA,MACF;AAEA,eAAS,mBAAmB,SAAS;AACnC,YAAI,WAAW,QAAQ;AAAM,kBAAQ,KAAK,OAAO;AAAA,MACnD;AAEA,UAAI,cAAc,OAAO,SAAS,SAASC,aAAY,OAAO;AAC5D,eAAO,UAAU;AAAA,MACnB;AAEA,eAASC,iBAAe;AACtB,QAAAA,eAAa,KAAK,KAAK,IAAI;AAAA,MAC7B;AACA,aAAO,UAAUA;AACjB,aAAO,QAAQ,OAAO;AAGtB,MAAAA,eAAa,eAAeA;AAE5B,MAAAA,eAAa,UAAU,UAAU;AACjC,MAAAA,eAAa,UAAU,eAAe;AACtC,MAAAA,eAAa,UAAU,gBAAgB;AAIvC,UAAI,sBAAsB;AAE1B,eAAS,cAAc,UAAU;AAC/B,YAAI,OAAO,aAAa,YAAY;AAClC,gBAAM,IAAI,UAAU,qEAAqE,OAAO,QAAQ;AAAA,QAC1G;AAAA,MACF;AAEA,aAAO,eAAeA,gBAAc,uBAAuB;AAAA,QACzD,YAAY;AAAA,QACZ,KAAK,WAAW;AACd,iBAAO;AAAA,QACT;AAAA,QACA,KAAK,SAAS,KAAK;AACjB,cAAI,OAAO,QAAQ,YAAY,MAAM,KAAK,YAAY,GAAG,GAAG;AAC1D,kBAAM,IAAI,WAAW,oGAAoG,MAAM,GAAG;AAAA,UACpI;AACA,gCAAsB;AAAA,QACxB;AAAA,MACF,CAAC;AAED,MAAAA,eAAa,OAAO,WAAW;AAE7B,YAAI,KAAK,YAAY,UACjB,KAAK,YAAY,OAAO,eAAe,IAAI,EAAE,SAAS;AACxD,eAAK,UAAU,uBAAO,OAAO,IAAI;AACjC,eAAK,eAAe;AAAA,QACtB;AAEA,aAAK,gBAAgB,KAAK,iBAAiB;AAAA,MAC7C;AAIA,MAAAA,eAAa,UAAU,kBAAkB,SAAS,gBAAgB,GAAG;AACnE,YAAI,OAAO,MAAM,YAAY,IAAI,KAAK,YAAY,CAAC,GAAG;AACpD,gBAAM,IAAI,WAAW,kFAAkF,IAAI,GAAG;AAAA,QAChH;AACA,aAAK,gBAAgB;AACrB,eAAO;AAAA,MACT;AAEA,eAAS,iBAAiB,MAAM;AAC9B,YAAI,KAAK,kBAAkB;AACzB,iBAAOA,eAAa;AACtB,eAAO,KAAK;AAAA,MACd;AAEA,MAAAA,eAAa,UAAU,kBAAkB,SAAS,kBAAkB;AAClE,eAAO,iBAAiB,IAAI;AAAA,MAC9B;AAEA,MAAAA,eAAa,UAAU,OAAO,SAAS,KAAK,MAAM;AAChD,YAAI,OAAO,CAAC;AACZ,iBAAS,IAAI,GAAG,IAAI,UAAU,QAAQ;AAAK,eAAK,KAAK,UAAU,CAAC,CAAC;AACjE,YAAI,UAAW,SAAS;AAExB,YAAI,SAAS,KAAK;AAClB,YAAI,WAAW;AACb,oBAAW,WAAW,OAAO,UAAU;AAAA,iBAChC,CAAC;AACR,iBAAO;AAGT,YAAI,SAAS;AACX,cAAI;AACJ,cAAI,KAAK,SAAS;AAChB,iBAAK,KAAK,CAAC;AACb,cAAI,cAAc,OAAO;AAGvB,kBAAM;AAAA,UACR;AAEA,cAAI,MAAM,IAAI,MAAM,sBAAsB,KAAK,OAAO,GAAG,UAAU,MAAM,GAAG;AAC5E,cAAI,UAAU;AACd,gBAAM;AAAA,QACR;AAEA,YAAI,UAAU,OAAO,IAAI;AAEzB,YAAI,YAAY;AACd,iBAAO;AAET,YAAI,OAAO,YAAY,YAAY;AACjC,uBAAa,SAAS,MAAM,IAAI;AAAA,QAClC,OAAO;AACL,cAAI,MAAM,QAAQ;AAClB,cAAI,YAAY,WAAW,SAAS,GAAG;AACvC,mBAAS,IAAI,GAAG,IAAI,KAAK,EAAE;AACzB,yBAAa,UAAU,CAAC,GAAG,MAAM,IAAI;AAAA,QACzC;AAEA,eAAO;AAAA,MACT;AAEA,eAAS,aAAa,QAAQ,MAAM,UAAU,SAAS;AACrD,YAAI;AACJ,YAAI;AACJ,YAAI;AAEJ,sBAAc,QAAQ;AAEtB,iBAAS,OAAO;AAChB,YAAI,WAAW,QAAW;AACxB,mBAAS,OAAO,UAAU,uBAAO,OAAO,IAAI;AAC5C,iBAAO,eAAe;AAAA,QACxB,OAAO;AAGL,cAAI,OAAO,gBAAgB,QAAW;AACpC,mBAAO;AAAA,cAAK;AAAA,cAAe;AAAA,cACf,SAAS,WAAW,SAAS,WAAW;AAAA,YAAQ;AAI5D,qBAAS,OAAO;AAAA,UAClB;AACA,qBAAW,OAAO,IAAI;AAAA,QACxB;AAEA,YAAI,aAAa,QAAW;AAE1B,qBAAW,OAAO,IAAI,IAAI;AAC1B,YAAE,OAAO;AAAA,QACX,OAAO;AACL,cAAI,OAAO,aAAa,YAAY;AAElC,uBAAW,OAAO,IAAI,IACpB,UAAU,CAAC,UAAU,QAAQ,IAAI,CAAC,UAAU,QAAQ;AAAA,UAExD,WAAW,SAAS;AAClB,qBAAS,QAAQ,QAAQ;AAAA,UAC3B,OAAO;AACL,qBAAS,KAAK,QAAQ;AAAA,UACxB;AAGA,cAAI,iBAAiB,MAAM;AAC3B,cAAI,IAAI,KAAK,SAAS,SAAS,KAAK,CAAC,SAAS,QAAQ;AACpD,qBAAS,SAAS;AAGlB,gBAAI,IAAI,IAAI,MAAM,iDACE,SAAS,SAAS,MAAM,OAAO,IAAI,IAAI,mEAEvB;AACpC,cAAE,OAAO;AACT,cAAE,UAAU;AACZ,cAAE,OAAO;AACT,cAAE,QAAQ,SAAS;AACnB,+BAAmB,CAAC;AAAA,UACtB;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEA,MAAAA,eAAa,UAAU,cAAc,SAAS,YAAY,MAAM,UAAU;AACxE,eAAO,aAAa,MAAM,MAAM,UAAU,KAAK;AAAA,MACjD;AAEA,MAAAA,eAAa,UAAU,KAAKA,eAAa,UAAU;AAEnD,MAAAA,eAAa,UAAU,kBACnB,SAAS,gBAAgB,MAAM,UAAU;AACvC,eAAO,aAAa,MAAM,MAAM,UAAU,IAAI;AAAA,MAChD;AAEJ,eAAS,cAAc;AACrB,YAAI,CAAC,KAAK,OAAO;AACf,eAAK,OAAO,eAAe,KAAK,MAAM,KAAK,MAAM;AACjD,eAAK,QAAQ;AACb,cAAI,UAAU,WAAW;AACvB,mBAAO,KAAK,SAAS,KAAK,KAAK,MAAM;AACvC,iBAAO,KAAK,SAAS,MAAM,KAAK,QAAQ,SAAS;AAAA,QACnD;AAAA,MACF;AAEA,eAAS,UAAU,QAAQ,MAAM,UAAU;AACzC,YAAI,QAAQ,EAAE,OAAO,OAAO,QAAQ,QAAW,QAAgB,MAAY,SAAmB;AAC9F,YAAI,UAAU,YAAY,KAAK,KAAK;AACpC,gBAAQ,WAAW;AACnB,cAAM,SAAS;AACf,eAAO;AAAA,MACT;AAEA,MAAAA,eAAa,UAAU,OAAO,SAASC,MAAK,MAAM,UAAU;AAC1D,sBAAc,QAAQ;AACtB,aAAK,GAAG,MAAM,UAAU,MAAM,MAAM,QAAQ,CAAC;AAC7C,eAAO;AAAA,MACT;AAEA,MAAAD,eAAa,UAAU,sBACnB,SAAS,oBAAoB,MAAM,UAAU;AAC3C,sBAAc,QAAQ;AACtB,aAAK,gBAAgB,MAAM,UAAU,MAAM,MAAM,QAAQ,CAAC;AAC1D,eAAO;AAAA,MACT;AAGJ,MAAAA,eAAa,UAAU,iBACnB,SAAS,eAAe,MAAM,UAAU;AACtC,YAAI,MAAM,QAAQ,UAAU,GAAG;AAE/B,sBAAc,QAAQ;AAEtB,iBAAS,KAAK;AACd,YAAI,WAAW;AACb,iBAAO;AAET,eAAO,OAAO,IAAI;AAClB,YAAI,SAAS;AACX,iBAAO;AAET,YAAI,SAAS,YAAY,KAAK,aAAa,UAAU;AACnD,cAAI,EAAE,KAAK,iBAAiB;AAC1B,iBAAK,UAAU,uBAAO,OAAO,IAAI;AAAA,eAC9B;AACH,mBAAO,OAAO,IAAI;AAClB,gBAAI,OAAO;AACT,mBAAK,KAAK,kBAAkB,MAAM,KAAK,YAAY,QAAQ;AAAA,UAC/D;AAAA,QACF,WAAW,OAAO,SAAS,YAAY;AACrC,qBAAW;AAEX,eAAK,IAAI,KAAK,SAAS,GAAG,KAAK,GAAG,KAAK;AACrC,gBAAI,KAAK,CAAC,MAAM,YAAY,KAAK,CAAC,EAAE,aAAa,UAAU;AACzD,iCAAmB,KAAK,CAAC,EAAE;AAC3B,yBAAW;AACX;AAAA,YACF;AAAA,UACF;AAEA,cAAI,WAAW;AACb,mBAAO;AAET,cAAI,aAAa;AACf,iBAAK,MAAM;AAAA,eACR;AACH,sBAAU,MAAM,QAAQ;AAAA,UAC1B;AAEA,cAAI,KAAK,WAAW;AAClB,mBAAO,IAAI,IAAI,KAAK,CAAC;AAEvB,cAAI,OAAO,mBAAmB;AAC5B,iBAAK,KAAK,kBAAkB,MAAM,oBAAoB,QAAQ;AAAA,QAClE;AAEA,eAAO;AAAA,MACT;AAEJ,MAAAA,eAAa,UAAU,MAAMA,eAAa,UAAU;AAEpD,MAAAA,eAAa,UAAU,qBACnB,SAAS,mBAAmB,MAAM;AAChC,YAAI,WAAW,QAAQ;AAEvB,iBAAS,KAAK;AACd,YAAI,WAAW;AACb,iBAAO;AAGT,YAAI,OAAO,mBAAmB,QAAW;AACvC,cAAI,UAAU,WAAW,GAAG;AAC1B,iBAAK,UAAU,uBAAO,OAAO,IAAI;AACjC,iBAAK,eAAe;AAAA,UACtB,WAAW,OAAO,IAAI,MAAM,QAAW;AACrC,gBAAI,EAAE,KAAK,iBAAiB;AAC1B,mBAAK,UAAU,uBAAO,OAAO,IAAI;AAAA;AAEjC,qBAAO,OAAO,IAAI;AAAA,UACtB;AACA,iBAAO;AAAA,QACT;AAGA,YAAI,UAAU,WAAW,GAAG;AAC1B,cAAI,OAAO,OAAO,KAAK,MAAM;AAC7B,cAAI;AACJ,eAAK,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AAChC,kBAAM,KAAK,CAAC;AACZ,gBAAI,QAAQ;AAAkB;AAC9B,iBAAK,mBAAmB,GAAG;AAAA,UAC7B;AACA,eAAK,mBAAmB,gBAAgB;AACxC,eAAK,UAAU,uBAAO,OAAO,IAAI;AACjC,eAAK,eAAe;AACpB,iBAAO;AAAA,QACT;AAEA,oBAAY,OAAO,IAAI;AAEvB,YAAI,OAAO,cAAc,YAAY;AACnC,eAAK,eAAe,MAAM,SAAS;AAAA,QACrC,WAAW,cAAc,QAAW;AAElC,eAAK,IAAI,UAAU,SAAS,GAAG,KAAK,GAAG,KAAK;AAC1C,iBAAK,eAAe,MAAM,UAAU,CAAC,CAAC;AAAA,UACxC;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEJ,eAAS,WAAW,QAAQ,MAAM,QAAQ;AACxC,YAAI,SAAS,OAAO;AAEpB,YAAI,WAAW;AACb,iBAAO,CAAC;AAEV,YAAI,aAAa,OAAO,IAAI;AAC5B,YAAI,eAAe;AACjB,iBAAO,CAAC;AAEV,YAAI,OAAO,eAAe;AACxB,iBAAO,SAAS,CAAC,WAAW,YAAY,UAAU,IAAI,CAAC,UAAU;AAEnE,eAAO,SACL,gBAAgB,UAAU,IAAI,WAAW,YAAY,WAAW,MAAM;AAAA,MAC1E;AAEA,MAAAA,eAAa,UAAU,YAAY,SAAS,UAAU,MAAM;AAC1D,eAAO,WAAW,MAAM,MAAM,IAAI;AAAA,MACpC;AAEA,MAAAA,eAAa,UAAU,eAAe,SAAS,aAAa,MAAM;AAChE,eAAO,WAAW,MAAM,MAAM,KAAK;AAAA,MACrC;AAEA,MAAAA,eAAa,gBAAgB,SAAS,SAAS,MAAM;AACnD,YAAI,OAAO,QAAQ,kBAAkB,YAAY;AAC/C,iBAAO,QAAQ,cAAc,IAAI;AAAA,QACnC,OAAO;AACL,iBAAO,cAAc,KAAK,SAAS,IAAI;AAAA,QACzC;AAAA,MACF;AAEA,MAAAA,eAAa,UAAU,gBAAgB;AACvC,eAAS,cAAc,MAAM;AAC3B,YAAI,SAAS,KAAK;AAElB,YAAI,WAAW,QAAW;AACxB,cAAI,aAAa,OAAO,IAAI;AAE5B,cAAI,OAAO,eAAe,YAAY;AACpC,mBAAO;AAAA,UACT,WAAW,eAAe,QAAW;AACnC,mBAAO,WAAW;AAAA,UACpB;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEA,MAAAA,eAAa,UAAU,aAAa,SAAS,aAAa;AACxD,eAAO,KAAK,eAAe,IAAI,eAAe,KAAK,OAAO,IAAI,CAAC;AAAA,MACjE;AAEA,eAAS,WAAW,KAAK,GAAG;AAC1B,YAAI,OAAO,IAAI,MAAM,CAAC;AACtB,iBAAS,IAAI,GAAG,IAAI,GAAG,EAAE;AACvB,eAAK,CAAC,IAAI,IAAI,CAAC;AACjB,eAAO;AAAA,MACT;AAEA,eAAS,UAAU,MAAM,OAAO;AAC9B,eAAO,QAAQ,IAAI,KAAK,QAAQ;AAC9B,eAAK,KAAK,IAAI,KAAK,QAAQ,CAAC;AAC9B,aAAK,IAAI;AAAA,MACX;AAEA,eAAS,gBAAgB,KAAK;AAC5B,YAAI,MAAM,IAAI,MAAM,IAAI,MAAM;AAC9B,iBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG;AACnC,cAAI,CAAC,IAAI,IAAI,CAAC,EAAE,YAAY,IAAI,CAAC;AAAA,QACnC;AACA,eAAO;AAAA,MACT;AAEA,eAAS,KAAK,SAAS,MAAM;AAC3B,eAAO,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAC5C,mBAAS,cAAc,KAAK;AAC1B,oBAAQ,eAAe,MAAM,QAAQ;AACrC,mBAAO,GAAG;AAAA,UACZ;AAEA,mBAAS,WAAW;AAClB,gBAAI,OAAO,QAAQ,mBAAmB,YAAY;AAChD,sBAAQ,eAAe,SAAS,aAAa;AAAA,YAC/C;AACA,oBAAQ,CAAC,EAAE,MAAM,KAAK,SAAS,CAAC;AAAA,UAClC;AAAC;AAED,yCAA+B,SAAS,MAAM,UAAU,EAAE,MAAM,KAAK,CAAC;AACtE,cAAI,SAAS,SAAS;AACpB,0CAA8B,SAAS,eAAe,EAAE,MAAM,KAAK,CAAC;AAAA,UACtE;AAAA,QACF,CAAC;AAAA,MACH;AAEA,eAAS,8BAA8B,SAAS,SAAS,OAAO;AAC9D,YAAI,OAAO,QAAQ,OAAO,YAAY;AACpC,yCAA+B,SAAS,SAAS,SAAS,KAAK;AAAA,QACjE;AAAA,MACF;AAEA,eAAS,+BAA+B,SAAS,MAAM,UAAU,OAAO;AACtE,YAAI,OAAO,QAAQ,OAAO,YAAY;AACpC,cAAI,MAAM,MAAM;AACd,oBAAQ,KAAK,MAAM,QAAQ;AAAA,UAC7B,OAAO;AACL,oBAAQ,GAAG,MAAM,QAAQ;AAAA,UAC3B;AAAA,QACF,WAAW,OAAO,QAAQ,qBAAqB,YAAY;AAGzD,kBAAQ,iBAAiB,MAAM,SAAS,aAAa,KAAK;AAGxD,gBAAI,MAAM,MAAM;AACd,sBAAQ,oBAAoB,MAAM,YAAY;AAAA,YAChD;AACA,qBAAS,GAAG;AAAA,UACd,CAAC;AAAA,QACH,OAAO;AACL,gBAAM,IAAI,UAAU,wEAAwE,OAAO,OAAO;AAAA,QAC5G;AAAA,MACF;AAAA;AAAA;;;AChfA,sBAAyB;;;ACSzB,MAAM,YAAN,MAAgB;AAAA,IACZ;AAAA,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,YAAY,OAAO,CAAC,GAAG,SAAS,MAAM,OAAO,MAAM;AAC/C,WAAK,eAAe;AACpB,WAAK,eAAe;AAIpB,WAAK,OAAO;AAIZ,WAAK,SAAS;AAId,WAAK,OAAO;AAAA,IAChB;AAAA,IACA,IAAI,cAAc;AACd,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,IAAI,cAAc;AACd,aAAO,KAAK;AAAA,IAChB;AAAA,IACA,YAAY,OAAO;AACf,WAAK,eAAe;AACpB,WAAK,eAAe;AAAA,IACxB;AAAA,EACJ;AAEA,MAAO,eAAQ;;;ADvCf,MAAM,eAAN,cAA2B,cAAAE,QAAa;AAAA;AAAA;AAAA;AAAA;AAAA,IAKpC,YAAY,KAAK;AACb,YAAM;AACN,WAAK,MAAM;AACX,WAAK,SAAS,IAAI;AAClB,WAAK,WAAW,KAAK,OAAO;AAC5B,WAAK,WAAW,KAAK,OAAO,YAAY,CAAC;AACzC,WAAK,YAAY,KAAK,OAAO,aAAa,CAAC;AAC3C,WAAK,WAAW,KAAK,SAAS,aAAa,CAAC;AAC5C,WAAK,WAAW,KAAK,UAAU,aAAa,CAAC;AAC7C,WAAK,QAAQ,IAAI,cAAc;AAAA,QAC3B,KAAK;AAAA,QACL;AAAA,MACJ;AACA,WAAK,SAAS,IAAI,cAAc;AAAA,QAC5B,KAAK;AAAA,QACL;AAAA,MACJ;AACA,WAAK,WAAW,IAAI,cAAc;AAAA,QAC9B,KAAK;AAAA,QACL;AAAA,MACJ;AACA,WAAK,SAAS,IAAI,cAAc;AAAA,QAC5B,KAAK;AAAA,QACL;AAAA,MACJ;AACA,WAAK,cAAc,IAAI,cAAc;AAAA,QACjC,KAAK;AAAA,QACL;AAAA,MACJ;AACA,WAAK,QAAQ,KAAK,SAAS;AAC3B,WAAK,UAAU,KAAK,SAAS;AAC7B,WAAK,gBAAgB,KAAK,SAAS;AACnC,WAAK,mBAAmB,KAAK,SAAS;AACtC,WAAK,kBAAkB,KAAK,SAAS;AACrC,WAAK,MAAM,IAAI,cAAc;AAAA,QACzB,KAAK;AAAA,QACL;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,0BAA0B;AACtB,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,IAAI,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AACnD,cAAI,CAAC,QAAQ,IAAI,IAAI;AAErB,gBAAM,QAAQ,IAAI,aAAU,EAAE,QAAQ,KAAK,GAAG,QAAQ,IAAI;AAC1D,eAAK,KAAK,mBAAmB,KAAK;AAElC,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO;AAAA,YAChB,MAAM;AAAA,YACN,MAAM,KAAK;AAAA,YACX,MAAM,KAAK;AAAA,UACf;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,wBAAwB;AACpB,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,CAAC,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AAChD,cAAI,CAAC,SAAS,IAAI;AAElB,gBAAM,QAAQ,IAAI,aAAU,EAAE,UAAU,GAAG,QAAQ,IAAI;AACvD,eAAK,KAAK,iBAAiB,KAAK;AAEhC,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO,KAAK,MAAM,MAAM,MAAM,KAAK,SAAS;AAAA,QAC7D;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,iBAAiB;AACb,WAAK,IAAI,mBAAmB,KAAK,UAAU,UAAU;AAAA,QACjD,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,OAAO,OAAO,KAAK,IAAI,EAAE;AAAA,YAC3B;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,aAAa,KAAK;AAE5B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,QACA,KAAK,CAAC,QAAQ,MAAM,CAAC,GAAG,MAAM;AAC1B,gBAAM,QAAQ,IAAI,aAAU,EAAE,OAAO,IAAI,GAAG,QAAQ,IAAI;AACxD,eAAK,KAAK,aAAa,KAAK;AAE5B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO,KAAK,MAAM,MAAM,MAAM,KAAK,KAAK;AAAA,QACzD;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,IACA,mBAAmB;AACf,WAAK,IAAI,mBAAmB,KAAK,UAAU,YAAY;AAAA,QACnD,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,OAAO,OAAO,KAAK,IAAI,EAAE;AAAA,YAC3B;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,YAAY,KAAK;AAE3B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,IACA,2BAA2B;AACvB,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,CAAC,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AAChD,cAAI,CAAC,MAAM,OAAO,YAAY,QAAQ,sBAAsB,IACxD;AAEJ,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,MAAM,MAAM,QAAQ,uBAAuB;AAAA,YAC7C;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,oBAAoB,KAAK;AAEnC,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO;AAAA,YAChB,MAAM;AAAA,YACN,MAAM,KAAK;AAAA,YACX,MAAM,KAAK;AAAA,YACX,MAAM,KAAK;AAAA,YACX,MAAM,KAAK;AAAA,UACf;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,gBAAgB;AACZ,WAAK,IAAI,SAAS,KAAK,UAAU,SAAS,CAAC,QAAQ,MAAM,SAAS;AAC9D,YAAI,CAAC,KAAK;AAAQ,iBAAO,OAAO,MAAM,MAAM,IAAI;AAChD,YAAI,CAAC,GAAG,IAAI,IAAI;AAEhB,cAAM,QAAQ,IAAI,aAAU,EAAE,KAAK,GAAG,QAAQ,IAAI;AAClD,aAAK,KAAK,SAAS,KAAK;AAExB,YAAI,MAAM;AAAa,iBAAO,MAAM;AACpC,eAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,KAAK,IAAI;AAAA,MACzD,CAAC;AACD,WAAK,IAAI,SAAS,KAAK,UAAU,WAAW,CAAC,QAAQ,MAAM,SAAS;AAChE,YAAI,CAAC,KAAK;AAAQ,iBAAO,OAAO,MAAM,MAAM,IAAI;AAChD,YAAI,CAAC,GAAG,IAAI,IAAI;AAEhB,cAAM,QAAQ,IAAI,aAAU,EAAE,KAAK,GAAG,QAAQ,IAAI;AAClD,aAAK,KAAK,WAAW,KAAK;AAE1B,YAAI,MAAM;AAAa,iBAAO,MAAM;AACpC,eAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,KAAK,IAAI;AAAA,MACzD,CAAC;AAAA,IACL;AAAA,IACA,sBAAsB;AAClB,WAAK,IAAI,mBAAmB,KAAK,UAAU,eAAe;AAAA,QACtD,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,OAAO,OAAO,KAAK,IAAI,EAAE;AAAA,YAC3B;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,eAAe,KAAK;AAE9B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,IACA,cAAc;AACV,WAAK,IAAI,mBAAmB,KAAK,UAAU,OAAO;AAAA,QAC9C,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,OAAO,OAAO,KAAK,IAAI,EAAE;AAAA,YAC3B;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,OAAO,KAAK;AAEtB,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,IACA,iBAAiB;AACb,WAAK,IAAI,mBAAmB,KAAK,UAAU,UAAU;AAAA,QACjD,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,OAAO,OAAO,KAAK,IAAI,EAAE;AAAA,YAC3B;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,aAAa,KAAK;AAE5B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,QACA,KAAK,CAAC,QAAQ,MAAM,CAAC,KAAK,MAAM;AAC5B,gBAAM,QAAQ,IAAI,aAAU,EAAE,MAAM,GAAG,QAAQ,IAAI;AACnD,eAAK,KAAK,aAAa,KAAK;AAE5B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO,KAAK,MAAM,MAAM,MAAM,KAAK,KAAK;AAAA,QACzD;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,IACA,gBAAgB;AACZ,WAAK,IAAI,mBAAmB,KAAK,UAAU,SAAS;AAAA,QAChD,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,OAAO,OAAO,KAAK,IAAI,EAAE;AAAA,YAC3B;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,YAAY,KAAK;AAE3B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,QACA,KAAK,CAAC,QAAQ,MAAM,CAAC,KAAK,MAAM;AAC5B,gBAAM,QAAQ,IAAI,aAAU,EAAE,MAAM,GAAG,QAAQ,IAAI;AACnD,eAAK,KAAK,YAAY,KAAK;AAE3B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO,KAAK,MAAM,MAAM,MAAM,KAAK,KAAK;AAAA,QACzD;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,EACJ;AAEA,MAAO,mBAAQ;;;AEzPf,MAAAC,iBAAyB;AAOzB,MAAM,aAAN,cAAyB,eAAAC,QAAa;AAAA;AAAA;AAAA;AAAA;AAAA,IAKlC,YAAY,KAAK;AACb,YAAM;AACN,WAAK,MAAM;AACX,WAAK,SAAS,IAAI;AAClB,WAAK,QAAQ,KAAK,OAAO;AACzB,WAAK,UAAU,KAAK,OAAO;AAC3B,WAAK,YAAY,KAAK,UAAU,KAAK,QAAQ,YAAY,CAAC;AAC1D,WAAK,YAAY,IAAI,cAAc;AAAA,QAC/B,KAAK;AAAA,QACL;AAAA,MACJ;AACA,WAAK,YAAY,IAAI,cAAc;AAAA,QAC/B,KAAK;AAAA,QACL;AAAA,MACJ;AACA,WAAK,eAAe,KAAK,UAAU;AACnC,WAAK,eAAe,KAAK,UAAU;AACnC,WAAK,kBAAkB,KAAK,UAAU;AACtC,WAAK,eAAe,KAAK,UAAU;AACnC,WAAK,gBAAgB,KAAK,UAAU;AACpC,WAAK,mBAAmB,KAAK,UAAU;AACvC,WAAK,qBAAqB,KAAK,UAAU;AACzC,WAAK,qBAAqB,KAAK,UAAU;AAAA,IAC7C;AAAA,IACA,wBAAwB;AACpB,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,CAAC,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AAChD,cAAI,CAAC,SAAS,IAAI;AAElB,gBAAM,QAAQ,IAAI,aAAU,EAAE,UAAU,GAAG,QAAQ,IAAI;AACvD,eAAK,KAAK,iBAAiB,KAAK;AAEhC,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO,KAAK,MAAM,MAAM,MAAM,KAAK,SAAS;AAAA,QAC7D;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,oBAAoB;AAChB,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,CAAC,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AAChD,cAAI,CAAC,IAAI,IAAI;AAEb,gBAAM,QAAQ,IAAI,aAAU,EAAE,KAAK,GAAG,QAAQ,IAAI;AAClD,eAAK,KAAK,gBAAgB,KAAK;AAE/B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO,KAAK,MAAM,MAAM,MAAM,KAAK,IAAI;AAAA,QACxD;AAAA,MACJ;AACA,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,IAAI,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AACnD,cAAI,CAAC,MAAM,KAAK,IAAI;AAEpB,gBAAM,QAAQ,IAAI,aAAU,EAAE,MAAM,MAAM,GAAG,QAAQ,IAAI;AACzD,eAAK,KAAK,gBAAgB,KAAK;AAE/B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO;AAAA,YAChB,MAAM;AAAA,YACN,MAAM,KAAK;AAAA,YACX,MAAM,KAAK;AAAA,UACf;AAAA,QACJ;AAAA,MACJ;AACA,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,CAAC,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AAChD,cAAI,CAAC,IAAI,IAAI;AAEb,gBAAM,QAAQ,IAAI,aAAU,EAAE,KAAK,GAAG,QAAQ,IAAI;AAClD,eAAK,KAAK,gBAAgB,KAAK;AAE/B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO,KAAK,MAAM,MAAM,MAAM,KAAK,IAAI;AAAA,QACxD;AAAA,MACJ;AACA,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,CAAC,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AAChD,cAAI,CAAC,IAAI,IAAI;AAEb,gBAAM,QAAQ,IAAI,aAAU,EAAE,KAAK,GAAG,QAAQ,IAAI;AAClD,eAAK,KAAK,mBAAmB,KAAK;AAElC,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO,KAAK,MAAM,MAAM,MAAM,KAAK,IAAI;AAAA,QACxD;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,gBAAgB;AACZ,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,CAAC,KAAK;AAAQ,mBAAO,IAAI,OAAO,GAAG,IAAI;AAC3C,cAAI,CAAC,GAAG,IAAI;AAEZ,gBAAM,QAAQ,IAAI,aAAU,EAAE,IAAI,GAAG,QAAQ,IAAI;AACjD,eAAK,KAAK,SAAS,KAAK;AAExB,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,IAAI,MAAM,OAAO,MAAM,KAAK,GAAG;AAAA,QAC1C;AAAA,QACA;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,eAAe;AACX,WAAK,aAAa,KAAK,SAAS,aAAa;AAAA,QACzC,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,OAAO,OAAO,KAAK,IAAI,EAAE;AAAA,YAC3B;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,gBAAgB,KAAK;AAE/B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,QACA,KAAK,CAAC,QAAQ,MAAM,CAAC,GAAG,MAAM;AAC1B,gBAAM,QAAQ,IAAI,aAAU,EAAE,OAAO,IAAI,GAAG,QAAQ,IAAI;AACxD,eAAK,KAAK,gBAAgB,KAAK;AAE/B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,KAAK,MAAM,MAAM,KAAK,KAAK;AAAA,QACtC;AAAA,MACJ,CAAC;AACD,WAAK,aAAa,KAAK,SAAS,aAAa;AAAA,QACzC,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,OAAO,OAAO,KAAK,IAAI,EAAE;AAAA,YAC3B;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,gBAAgB,KAAK;AAE/B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,QACA,KAAK,CAAC,QAAQ,MAAM,CAAC,GAAG,MAAM;AAC1B,gBAAM,QAAQ,IAAI,aAAU,EAAE,OAAO,IAAI,GAAG,QAAQ,IAAI;AACxD,eAAK,KAAK,gBAAgB,KAAK;AAE/B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,KAAK,MAAM,MAAM,KAAK,KAAK;AAAA,QACtC;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,IACA,6BAA6B;AACzB,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,IAAI,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AACnD,cAAI,CAAC,UAAU,IAAI,IAAI;AAEvB,gBAAM,QAAQ,IAAI,aAAU,EAAE,UAAU,KAAK,GAAG,QAAQ,IAAI;AAC5D,eAAK,KAAK,sBAAsB,KAAK;AAErC,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO;AAAA,YAChB,MAAM;AAAA,YACN,MAAM,KAAK;AAAA,YACX,MAAM,KAAK;AAAA,UACf;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,6BAA6B;AACzB,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,IAAI,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AACnD,cAAI,CAAC,UAAU,IAAI,IAAI;AAEvB,gBAAM,QAAQ,IAAI,aAAU,EAAE,UAAU,KAAK,GAAG,QAAQ,IAAI;AAC5D,eAAK,KAAK,sBAAsB,KAAK;AAErC,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO;AAAA,YAChB,MAAM;AAAA,YACN,MAAM,KAAK;AAAA,YACX,MAAM,KAAK;AAAA,UACf;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,aAAa,SAAS,MAAM,SAAS;AAEjC,UAAI,CAAC;AAAS,eAAO;AAErB,UAAI,KAAK,IAAI,cAAc,QAAQ,OAAO,GAAG;AACzC,mBAAW,QAAQ,SAAS;AACxB,eAAK,aAAa,MAAM,MAAM,OAAO;AAAA,QACzC;AACA,eAAO;AAAA,MACX;AAEA,YAAM,QAAQ,QAAQ;AAEtB,WAAK,IAAI,mBAAmB,OAAO,MAAM,OAAO;AAEhD,aAAO;AAAA,IACX;AAAA,EACJ;AAEA,MAAO,kBAAQ;;;ACxOf,MAAAC,iBAAyB;AAOzB,MAAM,UAAN,cAAsB,eAAAC,QAAa;AAAA;AAAA;AAAA;AAAA;AAAA,IAK/B,YAAY,KAAK;AACb,YAAM;AACN,WAAK,MAAM;AACX,WAAK,SAAS,IAAI;AAClB,WAAK,OAAO,IAAI,OAAO,QAAQ,CAAC;AAChC,WAAK,YAAY,KAAK,KAAK,aAAa,CAAC;AACzC,WAAK,0BAA0B,KAAK,UAAU;AAC9C,WAAK,WAAW,KAAK,UAAU;AAC/B,WAAK,eAAe,KAAK,UAAU;AACnC,WAAK,eAAe,KAAK,UAAU;AACnC,WAAK,SAAS,KAAK,UAAU;AAC7B,WAAK,cAAc,KAAK,UAAU;AAClC,WAAK,cAAc,KAAK,UAAU;AAElC,WAAK,cAAc,IAAI,cAAc;AAAA,QACjC,KAAK;AAAA,QACL;AAAA,MACJ;AACA,WAAK,aAAa,IAAI,cAAc;AAAA,QAChC,KAAK;AAAA,QACL;AAAA,MACJ;AACA,WAAK,gBAAgB,IAAI,cAAc;AAAA,QACnC,KAAK;AAAA,QACL;AAAA,MACJ;AACA,WAAK,aAAa,IAAI,cAAc;AAAA,QAChC,KAAK;AAAA,QACL;AAAA,MACJ;AACA,WAAK,UAAU,IAAI,cAAc;AAAA,QAC7B,KAAK;AAAA,QACL;AAAA,MACJ;AACA,WAAK,kBAAkB,IAAI,cAAc;AAAA,QACrC,KAAK;AAAA,QACL;AAAA,MACJ;AACA,WAAK,gBAAgB,IAAI,cAAc;AAAA,QACnC,KAAK;AAAA,QACL;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,sBAAsB;AAClB,WAAK,IAAI,mBAAmB,KAAK,WAAW,eAAe;AAAA,QACvD,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,OAAO,OAAO,KAAK,IAAI,EAAE;AAAA,YAC3B;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,kBAAkB,KAAK;AAEjC,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,QACA,KAAK,CAAC,QAAQ,MAAM,CAAC,GAAG,MAAM;AAC1B,gBAAM,QAAQ,IAAI,aAAU,EAAE,OAAO,IAAI,GAAG,QAAQ,IAAI;AACxD,eAAK,KAAK,kBAAkB,KAAK;AAEjC,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,KAAK,MAAM,MAAM,KAAK,KAAK;AAAA,QACtC;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,IACA,iBAAiB;AACb,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,CAAI,QAAK,MAAM;AAC1B,gBAAM,QAAQ,IAAI,aAAU,EAAE,MAAM,GAAG,QAAQ,IAAI;AACnD,eAAK,KAAK,UAAU,KAAK;AAEzB,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO,KAAK,MAAM,MAAM,MAAM,KAAK,KAAK;AAAA,QACzD;AAAA,MACJ;AACA,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,CAAC,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AAChD,cAAI,CAAC,IAAI,IAAI;AAEb,gBAAM,QAAQ,IAAI,aAAU,EAAE,KAAK,GAAG,QAAQ,IAAI;AAClD,eAAK,KAAK,eAAe,KAAK;AAE9B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO,KAAK,MAAM,MAAM,MAAM,KAAK,IAAI;AAAA,QACxD;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,kBAAkB;AACd,WAAK,IAAI,mBAAmB,KAAK,WAAW,WAAW;AAAA,QACnD,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,OAAO,OAAO,KAAK,IAAI,EAAE;AAAA,YAC3B;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,WAAW,KAAK;AAE1B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,IACA,iBAAiB;AACb,WAAK,IAAI,mBAAmB,KAAK,WAAW,cAAc;AAAA,QACtD,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,MAAM,OAAO,KAAK,IAAI,EAAE;AAAA,YAC1B;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,cAAc,KAAK;AAE7B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,MACJ,CAAC;AACD,WAAK,IAAI,mBAAmB,KAAK,WAAW,iBAAiB;AAAA,QACzD,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,SAAS,OAAO,KAAK,IAAI,EAAE;AAAA,YAC7B;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,iBAAiB,KAAK;AAEhC,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,IACA,wBAAwB;AACpB,WAAK,IAAI,mBAAmB,KAAK,WAAW,iBAAiB;AAAA,QACzD,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,UAAU,OAAO,KAAK,IAAI,EAAE;AAAA,YAC9B;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,iBAAiB,KAAK;AAEhC,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,IACA,mCAAmC;AAC/B,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,CAAC,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AAChD,cAAI,CAAC,IAAI,IAAI;AACb,gBAAM,QAAQ,IAAI,aAAU,EAAE,KAAK,GAAG,QAAQ,IAAI;AAElD,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO,KAAK,MAAM,MAAM,MAAM,KAAK,IAAI;AAAA,QACxD;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,uBAAuB;AACnB,WAAK,IAAI,SAAS,KAAK,WAAW,aAAa;AAAA,IACnD;AAAA,EACJ;AAEA,MAAO,eAAQ;;;ACrLf,MAAAC,iBAAyB;AAOzB,MAAM,UAAN,cAAsB,eAAAC,QAAa;AAAA;AAAA;AAAA;AAAA;AAAA,IAK/B,YAAY,KAAK;AACb,YAAM;AACN,WAAK,MAAM;AACX,WAAK,SAAS,IAAI;AAClB,WAAK,OAAO,KAAK,OAAO,QAAQ,CAAC;AACjC,WAAK,YAAY,KAAK,KAAK,aAAa,CAAC;AACzC,WAAK,QAAQ,IAAI,cAAc;AAAA,QAC3B,KAAK;AAAA,QACL;AAAA,MACJ;AACA,WAAK,OAAO,IAAI,cAAc;AAAA,QAC1B,KAAK;AAAA,QACL;AAAA,MACJ;AACA,WAAK,eAAe,KAAK,UAAU,gBAAgB;AACnD,WAAK,eAAe,KAAK,UAAU,gBAAgB;AACnD,WAAK,kBAAkB,KAAK,UAAU,mBAAmB;AACzD,WAAK,iBAAiB,KAAK,UAAU,kBAAkB;AACvD,WAAK,iBAAiB,KAAK,UAAU,kBAAkB;AACvD,WAAK,oBAAoB,KAAK,UAAU,qBAAqB;AAC7D,WAAK,OAAO,KAAK,UAAU,QAAQ;AAAA,IACvC;AAAA,IACA,oBAAoB;AAChB,WAAK,IAAI,mBAAmB,KAAK,WAAW,QAAQ;AAAA,QAChD,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,OAAO,OAAO,KAAK,IAAI,EAAE;AAAA,YAC3B;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,QAAQ,KAAK;AAEvB,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,MACJ,CAAC;AAED,WAAK,IAAI,mBAAmB,KAAK,WAAW,SAAS;AAAA,QACjD,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd;AAAA,cACI,MAAM,KAAK,KAAK,IAAI,KAAK,IAAI;AAAA,cAC7B,OAAO,OAAO,KAAK,IAAI;AAAA,YAC3B;AAAA,YACA;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,YAAY,KAAK;AAE3B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,QACA,KAAK,CAAC,QAAQ,MAAM,CAAC,GAAG,MAAM;AAC1B,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,MAAM,KAAK,KAAK,IAAI,KAAK,IAAI,GAAG,OAAO,IAAI;AAAA,YAC7C;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,YAAY,KAAK;AAE3B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,gBAAM,OAAO,KAAK,MAAM,MAAM,MAAM,KAAK,KAAK;AAAA,QAClD;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,IACA,sBAAsB;AAClB,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,CAAC,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AAChD,cAAI,CAAC,IAAI,IAAI;AAEb,gBAAM,QAAQ,IAAI,aAAU,EAAE,KAAK,GAAG,QAAQ,IAAI;AAClD,eAAK,KAAK,gBAAgB,KAAK;AAE/B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO,KAAK,MAAM,MAAM,MAAM,KAAK,IAAI;AAAA,QACxD;AAAA,MACJ;AACA,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,IAAI,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AACnD,cAAI,CAAC,MAAM,KAAK,IAAI;AAEpB,gBAAM,QAAQ,IAAI,aAAU,EAAE,MAAM,MAAM,GAAG,QAAQ,IAAI;AACzD,eAAK,KAAK,gBAAgB,KAAK;AAE/B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO;AAAA,YAChB,MAAM;AAAA,YACN,MAAM,KAAK;AAAA,YACX,MAAM,KAAK;AAAA,UACf;AAAA,QACJ;AAAA,MACJ;AACA,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,CAAC,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AAChD,cAAI,CAAC,IAAI,IAAI;AAEb,gBAAM,QAAQ,IAAI,aAAU,EAAE,KAAK,GAAG,QAAQ,IAAI;AAClD,eAAK,KAAK,mBAAmB,KAAK;AAElC,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO,KAAK,MAAM,MAAM,MAAM,KAAK,IAAI;AAAA,QACxD;AAAA,MACJ;AACA,WAAK,IAAI,SAAS,KAAK,WAAW,QAAQ,CAAC,QAAQ,MAAM,SAAS;AAC9D,YAAI,CAAC,KAAK;AAAQ,iBAAO,OAAO,MAAM,MAAM,IAAI;AAChD,YAAI,CAAC,KAAK,IAAI;AAEd,cAAM,QAAQ,IAAI,aAAU,EAAE,MAAM,GAAG,QAAQ,IAAI;AACnD,aAAK,KAAK,QAAQ,KAAK;AAEvB,YAAI,MAAM;AAAa,iBAAO,MAAM;AACpC,eAAO,MAAM,OAAO,KAAK,MAAM,MAAM,MAAM,KAAK,IAAI;AAAA,MACxD,CAAC;AACD,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,IAAI,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AACnD,cAAI,CAAC,WAAW,SAAS,IAAI;AAE7B,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,WAAW,UAAU;AAAA,YACvB;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,kBAAkB,KAAK;AAEjC,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO;AAAA,YAChB,MAAM;AAAA,YACN,MAAM,KAAK;AAAA,YACX,MAAM,KAAK;AAAA,UACf;AAAA,QACJ;AAAA,MACJ;AACA,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,CAAC,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AAChD,cAAI,CAAC,IAAI,IAAI;AAEb,gBAAM,QAAQ,IAAI,aAAU,EAAE,KAAK,GAAG,QAAQ,IAAI;AAClD,eAAK,KAAK,kBAAkB,KAAK;AAEjC,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO,KAAK,MAAM,MAAM,MAAM,KAAK,IAAI;AAAA,QACxD;AAAA,MACJ;AACA,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,IAAI,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AACnD,cAAI,CAAC,WAAW,SAAS,IAAI;AAE7B,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,WAAW,UAAU;AAAA,YACvB;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,qBAAqB,KAAK;AAEpC,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO;AAAA,YAChB,MAAM;AAAA,YACN,MAAM,KAAK;AAAA,YACX,MAAM,KAAK;AAAA,UACf;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAEA,MAAO,eAAQ;;;ACnMf,MAAAC,iBAAyB;AAOzB,MAAM,eAAN,cAA2B,eAAAC,QAAa;AAAA;AAAA;AAAA;AAAA;AAAA,IAKpC,YAAY,KAAK;AACb,YAAM;AACN,WAAK,MAAM;AACX,WAAK,SAAS,IAAI;AAClB,WAAK,WAAW,KAAK,OAAO;AAC5B,WAAK,UAAU,KAAK,SAAS;AAC7B,WAAK,WAAW,KAAK,QAAQ;AAC7B,WAAK,YAAY,IAAI;AACrB,WAAK,OAAO,KAAK,QAAQ;AACzB,WAAK,QAAQ,KAAK,QAAQ;AAC1B,WAAK,OAAO,KAAK,QAAQ;AAAA,IAC7B;AAAA,IACA,mBAAmB;AACf,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,CAAC,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AAEhD,cAAI,SAAS,KAAK,KAAK,SAAS,CAAC;AACjC,cAAI,SAAS,CAAC;AAEd,mBAAS,IAAI,GAAG,IAAI,KAAK,SAAS,GAAG,KAAK;AACtC,mBAAO,KAAK,KAAK,CAAC,CAAC;AAAA,UACvB;AAEA,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,QAAQ,MAAM,OAAO;AAAA,YACvB;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,YAAY,KAAK;AAE3B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO;AAAA,YAChB,MAAM;AAAA,YACN,GAAG,MAAM,KAAK;AAAA,YACd,MAAM,KAAK;AAAA,UACf;AAAA,QACJ;AAAA,QACA;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,mBAAmB;AACf,WAAK,IAAI,SAAS,KAAK,SAAS,YAAY,CAAC,QAAQ,SAAS;AAC1D,cAAM,QAAQ,IAAI,aAAU,EAAE,IAAI,KAAK,GAAG,QAAQ,IAAI;AACtD,aAAK,KAAK,YAAY,KAAK;AAE3B,YAAI,MAAM;AAAa,iBAAO,MAAM;AACpC,eAAO,MAAM,OAAO,KAAK,MAAM,KAAK,EAAE;AAAA,MAC1C,CAAC;AAAA,IACL;AAAA,EACJ;AAEA,MAAO,mBAAQ;;;AClEf,MAAAC,iBAAyB;AAOzB,MAAM,aAAN,cAAyB,eAAAC,QAAa;AAAA;AAAA;AAAA;AAAA;AAAA,IAKlC,YAAY,KAAK;AACb,YAAM;AACN,WAAK,MAAM;AACX,WAAK,SAAS,IAAI;AAClB,WAAK,SAAS,KAAK,OAAO;AAC1B,WAAK,4BAA4B,KAAK,OAAO;AAC7C,WAAK,2BAA2B,KAAK,OAAO;AAC5C,WAAK,sBAAsB,KAAK,OAAO;AAAA,IAC3C;AAAA,IACA,2BAA2B;AACvB,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,CAAC,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AAChD,cAAI,CAAC,MAAM,IAAI;AAEf,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,OAAO,OAAO,KAAK,MAAM,MAAM,EAAE;AAAA,YACnC;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,uBAAuB,KAAK;AAEtC,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,oCAAoC;AAChC,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,CAAC,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AAChD,cAAI,CAAC,MAAM,IAAI;AAEf,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,aAAa,OAAO,KAAK,MAAM,MAAM,EAAE;AAAA,YACzC;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,6BAA6B,KAAK;AAE5C,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAEA,MAAO,iBAAQ;;;AC/Df,MAAAC,iBAAyB;AAOzB,MAAM,QAAN,cAAoB,eAAAC,QAAa;AAAA;AAAA;AAAA;AAAA;AAAA,IAK7B,YAAY,KAAK;AACb,YAAM;AACN,WAAK,MAAM;AACX,WAAK,SAAS,IAAI;AAClB,WAAK,QAAQ,KAAK,OAAO;AACzB,WAAK,UAAU,KAAK,OAAO;AAC3B,WAAK,WAAW,KAAK,OAAO;AAC5B,WAAK,UAAU,KAAK,OAAO;AAC3B,WAAK,WAAW,KAAK,UAAU,KAAK,QAAQ,YAAY,CAAC;AACzD,WAAK,WAAW,KAAK,WAAW,KAAK,SAAS,YAAY,CAAC;AAC3D,WAAK,eAAe,KAAK,UAAU,KAAK,QAAQ,YAAY,CAAC;AAC7D,WAAK,SAAS,IAAI,cAAc;AAAA,QAC5B,KAAK;AAAA,QACL;AAAA,MACJ;AACA,WAAK,SAAS,IAAI,cAAc;AAAA,QAC5B,KAAK;AAAA,QACL;AAAA,MACJ;AACA,WAAK,aAAa,IAAI,cAAc;AAAA,QAChC,KAAK;AAAA,QACL;AAAA,MACJ;AACA,WAAK,aAAa,IAAI,cAAc;AAAA,QAChC,KAAK;AAAA,QACL;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,WAAW;AACP,WAAK,gBAAgB;AACrB,WAAK,YAAY;AACjB,WAAK,gBAAgB;AACrB,aAAO;AAAA,IACX;AAAA,IACA,kBAAkB;AACd,UAAI,CAAC,KAAK;AAAO,eAAO;AAExB,WAAK,IAAI,SAAS,KAAK,QAAQ,SAAS,CAAC,QAAQ,MAAM,SAAS;AAC5D,YAAI,CAAC,KAAK,UAAU,KAAK,CAAC,aAAa,KAAK;AACxC,iBAAO,OAAO,MAAM,MAAM,IAAI;AAElC,YAAI,CAAC,OAAO,UAAU,CAAC,CAAC,IAAI;AAC5B,cAAM,QAAQ,IAAI,aAAU,EAAE,OAAO,QAAQ,GAAG,QAAQ,IAAI;AAE5D,aAAK,KAAK,WAAW,KAAK;AAC1B,YAAI,MAAM;AAAa,iBAAO,MAAM;AAEpC,eAAO,MAAM,OAAO;AAAA,UAChB,MAAM;AAAA,UACN,MAAM,KAAK;AAAA,UACX,MAAM,KAAK;AAAA,QACf;AAAA,MACJ,CAAC;AAED,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,CAAC,KAAK;AAAQ,mBAAO,IAAI,OAAO,GAAG,IAAI;AAE3C,cAAI,CAAC,OAAO,UAAU,CAAC,CAAC,IAAI;AAC5B,gBAAM,QAAQ,IAAI,aAAU,EAAE,OAAO,QAAQ,GAAG,MAAM;AAEtD,eAAK,KAAK,WAAW,KAAK;AAC1B,cAAI,MAAM;AAAa,mBAAO,MAAM;AAEpC,iBAAO,IAAI,MAAM,OAAO,MAAM,KAAK,OAAO,MAAM,KAAK,OAAO;AAAA,QAChE;AAAA,QACA;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAAA,IACA,cAAc;AACV,WAAK,IAAI,mBAAmB,KAAK,UAAU,OAAO;AAAA,QAC9C,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,OAAO,OAAO,KAAK,IAAI,EAAE;AAAA,YAC3B;AAAA,YACA;AAAA,UACJ;AAEA,eAAK,KAAK,cAAc,KAAK;AAC7B,cAAI,MAAM;AAAa,mBAAO,MAAM;AAEpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,MACJ,CAAC;AAED,WAAK,IAAI,mBAAmB,KAAK,UAAU,OAAO;AAAA,QAC9C,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,OAAO,OAAO,KAAK,IAAI,EAAE;AAAA,YAC3B;AAAA,YACA;AAAA,UACJ;AAEA,eAAK,KAAK,eAAe,KAAK;AAC9B,cAAI,MAAM;AAAa,mBAAO,MAAM;AAEpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,MACJ,CAAC;AACD,aAAO;AAAA,IACX;AAAA,IACA,kBAAkB;AACd,UAAI,CAAC,KAAK;AAAS,eAAO;AAE1B,WAAK,IAAI,mBAAmB,KAAK,UAAU,WAAW;AAAA,QAClD,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,OAAO,OAAO,KAAK,IAAI,EAAE;AAAA,YAC3B;AAAA,YACA;AAAA,UACJ;AAEA,eAAK,KAAK,kBAAkB,KAAK;AACjC,cAAI,MAAM;AAAa,mBAAO,MAAM;AAEpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,MACJ,CAAC;AAED,WAAK,IAAI,mBAAmB,KAAK,UAAU,WAAW;AAAA,QAClD,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,OAAO,OAAO,KAAK,IAAI,EAAE;AAAA,YAC3B;AAAA,YACA;AAAA,UACJ;AAEA,eAAK,KAAK,mBAAmB,KAAK;AAClC,cAAI,MAAM;AAAa,mBAAO,MAAM;AAEpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,MACJ,CAAC;AAED,WAAK,IAAI,SAAS,KAAK,cAAc,OAAO,CAAC,QAAQ,MAAM,CAAC,IAAI,MAAM;AAClE,YAAI,CAAC;AAAM,iBAAO,OAAO,KAAK,IAAI;AAClC,cAAM,QAAQ,IAAI;AAAA,UACd,EAAE,MAAM,OAAO,OAAO,KAAK,MAAM,IAAI,EAAE;AAAA,UACvC;AAAA,UACA;AAAA,QACJ;AAEA,aAAK,KAAK,aAAa,KAAK;AAC5B,YAAI,MAAM;AAAa,iBAAO,MAAM;AAEpC,eAAO,MAAM,KAAK;AAAA,MACtB,CAAC;AAED,WAAK,IAAI,SAAS,KAAK,cAAc,OAAO,CAAC,QAAQ,MAAM,SAAS;AAChE,YAAI,IAAI,KAAK;AAAQ,iBAAO,OAAO,MAAM,MAAM,IAAI;AAEnD,YAAI,CAAC,MAAM,KAAK,IAAI;AACpB,cAAM,QAAQ,IAAI,aAAU,EAAE,MAAM,MAAM,GAAG,QAAQ,IAAI;AAEzD,aAAK,KAAK,aAAa,KAAK;AAC5B,YAAI,MAAM;AAAa,iBAAO,MAAM;AAEpC,eAAO,MAAM,OAAO;AAAA,UAChB,MAAM;AAAA,UACN,MAAM,KAAK;AAAA,UACX,MAAM,KAAK;AAAA,QACf;AAAA,MACJ,CAAC;AAED,WAAK,IAAI,SAAS,KAAK,cAAc,OAAO,CAAC,QAAQ,MAAM,SAAS;AAChE,YAAI,CAAC,KAAK;AAAQ,iBAAO,OAAO,KAAK,IAAI;AACzC,YAAI,CAAC,IAAI,IAAI;AAEb,cAAM,QAAQ,IAAI;AAAA,UACd,EAAE,MAAM,OAAO,OAAO,KAAK,MAAM,IAAI,EAAE;AAAA,UACvC;AAAA,UACA;AAAA,QACJ;AAEA,aAAK,KAAK,aAAa,KAAK;AAC5B,YAAI,MAAM;AAAa,iBAAO,MAAM;AAEpC,eAAO,MAAM;AAAA,MACjB,CAAC;AAED,WAAK,IAAI,SAAS,KAAK,cAAc,UAAU,CAAC,QAAQ,MAAM,SAAS;AACnE,YAAI,IAAI,KAAK;AAAQ,iBAAO,OAAO,MAAM,MAAM,IAAI;AAEnD,YAAI,CAAC,MAAM,KAAK,IAAI;AACpB,cAAM,QAAQ,IAAI,aAAU,EAAE,MAAM,MAAM,GAAG,QAAQ,IAAI;AAEzD,aAAK,KAAK,gBAAgB,KAAK;AAC/B,YAAI,MAAM;AAAa,iBAAO,MAAM;AAEpC,eAAO,MAAM,OAAO;AAAA,UAChB,MAAM;AAAA,UACN,MAAM,KAAK;AAAA,UACX,MAAM,KAAK;AAAA,QACf;AAAA,MACJ,CAAC;AAED,WAAK,IAAI,SAAS,KAAK,cAAc,UAAU,CAAC,QAAQ,MAAM,SAAS;AACnE,YAAI,CAAC,KAAK;AAAQ,iBAAO,OAAO,MAAM,MAAM,IAAI;AAEhD,YAAI,CAAC,IAAI,IAAI;AACb,cAAM,QAAQ,IAAI,aAAU,EAAE,KAAK,GAAG,QAAQ,IAAI;AAElD,aAAK,KAAK,gBAAgB,KAAK;AAC/B,YAAI,MAAM;AAAa,iBAAO,MAAM;AAEpC,eAAO,MAAM,OAAO,KAAK,MAAM,MAAM,MAAM,KAAK,IAAI;AAAA,MACxD,CAAC;AAED,aAAO;AAAA,IACX;AAAA,EACJ;AAEA,MAAO,gBAAQ;;;ACnOf,MAAAC,iBAAyB;AAOzB,MAAM,MAAN,cAAkB,eAAAC,QAAa;AAAA;AAAA;AAAA;AAAA;AAAA,IAK3B,YAAY,KAAK;AACb,YAAM;AACN,WAAK,MAAM;AACX,WAAK,SAAS,IAAI;AAClB,WAAK,iBAAiB,KAAK,OAAO;AAClC,WAAK,WAAW,KAAK,OAAO,iBACtB,KAAK,OAAO,eAAe,YAC3B,CAAC;AACP,WAAK,OAAO,KAAK,SAAS;AAC1B,WAAK,QAAQ,KAAK,SAAS;AAC3B,WAAK,OAAO,KAAK,SAAS;AAC1B,WAAK,mBAAmB,KAAK,SAAS;AACtC,WAAK,wBAAwB,KAAK,SAAS;AAC3C,WAAK,oBAAoB,KAAK,SAAS;AACvC,WAAK,mBAAmB,KAAK,SAAS;AACtC,WAAK,cAAc,IAAI,cAAc;AAAA,QACjC,KAAK;AAAA,QACL;AAAA,MACJ;AACA,WAAK,eAAe,IAAI,cAAc;AAAA,QAClC,KAAK;AAAA,QACL;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,WAAW;AACP,WAAK,aAAa;AAClB,WAAK,aAAa;AAClB,WAAK,iBAAiB;AACtB,WAAK,qBAAqB;AAC1B,WAAK,sBAAsB;AAC3B,WAAK,qBAAqB;AAAA,IAC9B;AAAA,IACA,eAAe;AACX,WAAK,IAAI,SAAS,KAAK,UAAU,QAAQ,CAAC,QAAQ,MAAM,SAAS;AAC7D,YAAI,IAAI,KAAK;AAAQ,iBAAO,OAAO,MAAM,MAAM,IAAI;AAEnD,YAAI,CAAC,QAAQ,OAAO,QAAQ,MAAM,OAAO,MAAM,WAAW,IAAI,IAC1D;AACJ,cAAM,QAAQ,IAAI;AAAA,UACd,EAAE,QAAQ,OAAO,OAAO,MAAM,SAAS;AAAA,UACvC;AAAA,UACA;AAAA,QACJ;AAEA,aAAK,KAAK,QAAQ,KAAK;AACvB,YAAI,MAAM;AAAa,iBAAO,MAAM;AAEpC,eAAO,MAAM,OAAO;AAAA,UAChB,MAAM;AAAA,UACN,MAAM,KAAK;AAAA,UACX,MAAM,KAAK;AAAA,UACX,MAAM,KAAK;AAAA,UACX,MAAM,KAAK;AAAA,UACX,MAAM,KAAK;AAAA,QACf;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,IACA,sBAAsB;AAClB,WAAK,IAAI,mBAAmB,KAAK,UAAU,eAAe;AAAA,QACtD,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,OAAO,OAAO,KAAK,IAAI,EAAE;AAAA,YAC3B;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,eAAe,KAAK;AAE9B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,IACA,eAAe;AACX,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,CAAC,OAAO,IAAI,MAAM;AAC7B,gBAAM,QAAQ,IAAI,aAAU,EAAE,KAAK,GAAG,QAAQ,IAAI;AAElD,eAAK,KAAK,QAAQ,KAAK;AACvB,cAAI,MAAM;AAAa,mBAAO,MAAM;AAEpC,iBAAO,MAAM,OAAO,KAAK,MAAM,MAAM,MAAM,KAAK,IAAI;AAAA,QACxD;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,uBAAuB;AACnB,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,IAAI,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AAEnD,cAAI,CAAC,MAAM,KAAK,IAAI;AACpB,gBAAM,QAAQ,IAAI,aAAU,EAAE,MAAM,MAAM,GAAG,QAAQ,IAAI;AAEzD,eAAK,KAAK,gBAAgB,KAAK;AAC/B,cAAI,MAAM;AAAa,mBAAO,MAAM;AAEpC,iBAAO,MAAM,OAAO;AAAA,YAChB,MAAM;AAAA,YACN,MAAM,KAAK;AAAA,YACX,MAAM,KAAK;AAAA,UACf;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,wBAAwB;AACpB,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,SAAS;AACd,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,OAAO,OAAO,KAAK,IAAI,EAAE;AAAA,YAC3B;AAAA,YACA;AAAA,UACJ;AAEA,eAAK,KAAK,yBAAyB,KAAK;AACxC,cAAI,MAAM;AAAa,mBAAO,MAAM;AAEpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,uBAAuB;AACnB,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,CAAC,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AAChD,cAAI,CAAC,IAAI,IAAI;AAEb,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,MAAM,OAAO,OAAO,KAAK,MAAM,IAAI,EAAE;AAAA,YACvC;AAAA,YACA;AAAA,UACJ;AACA,cAAI,MAAM;AAAa,mBAAO,MAAM;AAEpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAEA,MAAO,cAAQ;;;AC9Jf,MAAAC,iBAAyB;AAOzB,MAAM,iBAAN,cAA6B,eAAAC,QAAa;AAAA;AAAA;AAAA;AAAA;AAAA,IAKtC,YAAY,KAAK;AACb,YAAM;AACN,WAAK,MAAM;AACX,WAAK,SAAS,IAAI;AAClB,WAAK,cAAc,KAAK,OAAO,eAAe,CAAC;AAC/C,WAAK,UAAU,KAAK,YAAY,aAAa,CAAC;AAC9C,WAAK,MAAM,IAAI,cAAc;AAAA,QACzB,KAAK;AAAA,QACL;AAAA,MACJ;AACA,WAAK,aAAa;AAClB,WAAK,OAAO;AACZ,WAAK,SAAS;AAAA,IAClB;AAAA,IACA,oBAAoB;AAChB,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,CAAC,KAAK;AAAQ,mBAAO,IAAI,OAAO,GAAG,IAAI;AAC3C,cAAI,CAAC,KAAK,SAAS,CAAC,CAAC,IAAI;AAEzB,gBAAM,QAAQ,IAAI,aAAU,EAAE,KAAK,OAAO,GAAG,QAAQ,IAAI;AACzD,eAAK,KAAK,aAAa,KAAK;AAE5B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,IAAI,MAAM,OAAO,MAAM,KAAK,KAAK,MAAM,KAAK,MAAM;AAAA,QAC7D;AAAA,QACA;AAAA,MACJ;AAEA,UAAI,iBAAiB,KAAK,QAAQ;AAC9B,aAAK,OAAO,YAAY,aAAa,KAAK;AAC1C,aAAK,OAAO,YAAY,OAAO,KAAK;AACpC,aAAK,OAAO,YAAY,SAAS,KAAK;AAAA,MAC1C;AAAA,IACJ;AAAA,IACA,cAAc;AACV,WAAK,IAAI,mBAAmB,KAAK,SAAS,OAAO;AAAA,QAC7C,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,OAAO,OAAO,KAAK,IAAI,EAAE;AAAA,YAC3B;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,OAAO,KAAK;AACtB,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,EACJ;AAEA,MAAO,sBAAQ;;;AChEf,MAAAC,kBAAyB;AAOzB,MAAM,UAAN,cAAsB,gBAAAC,QAAa;AAAA;AAAA;AAAA;AAAA;AAAA,IAK/B,YAAY,KAAK;AACb,YAAM;AACN,WAAK,MAAM;AACX,WAAK,SAAS,KAAK,IAAI;AACvB,WAAK,UAAU,KAAK,OAAO;AAC3B,WAAK,UAAU,KAAK,OAAO;AAC3B,WAAK,eAAe,KAAK,UAAU,KAAK,QAAQ,YAAY,CAAC;AAC7D,WAAK,YAAY,KAAK,aAAa;AACnC,WAAK,eAAe,KAAK,aAAa;AACtC,WAAK,KAAK,KAAK,aAAa;AAC5B,WAAK,OAAO,KAAK,aAAa;AAC9B,WAAK,UAAU,KAAK,aAAa;AAAA,IACrC;AAAA,IACA,WAAW;AACP,WAAK,kBAAkB;AACvB,WAAK,qBAAqB;AAC1B,WAAK,WAAW;AAChB,WAAK,gBAAgB;AACrB,WAAK,aAAa;AAAA,IACtB;AAAA,IACA,oBAAoB;AAChB,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,IAAI,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AACnD,cAAI,CAAC,OAAO,OAAO,MAAM,EAAE,IAAI;AAE/B,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,OAAO,OAAO,IAAI;AAAA,YACpB;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,aAAa,KAAK;AAE5B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO;AAAA,YAChB,MAAM;AAAA,YACN,MAAM,KAAK;AAAA,YACX,MAAM,KAAK;AAAA,YACX,MAAM,KAAK;AAAA,UACf;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,uBAAuB;AACnB,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,IAAI,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AACnD,cAAI,CAAC,OAAO,OAAO,MAAM,EAAE,IAAI;AAE/B,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,OAAO,OAAO,IAAI;AAAA,YACpB;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,gBAAgB,KAAK;AAE/B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO;AAAA,YAChB,MAAM;AAAA,YACN,MAAM,KAAK;AAAA,YACX,MAAM,KAAK;AAAA,YACX,MAAM,KAAK;AAAA,UACf;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,aAAa;AACT,WAAK,IAAI,SAAS,KAAK,cAAc,MAAM,CAAC,QAAQ,MAAM,CAAC,KAAK,MAAM;AAClE,cAAM,QAAQ,IAAI,aAAU,EAAE,MAAM,GAAG,QAAQ,IAAI;AACnD,aAAK,KAAK,MAAM,KAAK;AAErB,YAAI,MAAM;AAAa,iBAAO,MAAM;AACpC,eAAO,MAAM,OAAO,KAAK,MAAM,MAAM,MAAM,KAAK,KAAK;AAAA,MACzD,CAAC;AAAA,IACL;AAAA,IACA,kBAAkB;AACd,WAAK,IAAI,SAAS,KAAK,cAAc,WAAW,CAAC,QAAQ,SAAS;AAC9D,cAAM,QAAQ,IAAI,aAAU,MAAM,QAAQ,IAAI;AAC9C,aAAK,KAAK,WAAW,KAAK;AAE1B,YAAI,MAAM;AAAa,iBAAO,MAAM;AACpC,eAAO,MAAM,OAAO,KAAK,MAAM,IAAI;AAAA,MACvC,CAAC;AAAA,IACL;AAAA,IACA,eAAe;AACX,WAAK,IAAI,SAAS,KAAK,cAAc,QAAQ,CAAC,QAAQ,SAAS;AAC3D,cAAM,QAAQ,IAAI,aAAU,MAAM,QAAQ,IAAI;AAC9C,aAAK,KAAK,QAAQ,KAAK;AAEvB,YAAI,MAAM;AAAa,iBAAO,MAAM;AACpC,eAAO,MAAM,OAAO,KAAK,MAAM,IAAI;AAAA,MACvC,CAAC;AAAA,IACL;AAAA,EACJ;AAEA,MAAO,kBAAQ;;;AC/Gf,MAAAC,kBAAyB;AAMzB,MAAM,cAAN,cAA0B,gBAAAC,QAAa;AAAA;AAAA;AAAA;AAAA;AAAA,IAKnC,YAAY,KAAK;AACb,YAAM;AACN,WAAK,MAAM;AACX,WAAK,SAAS,IAAI;AAClB,WAAK,WAAW,KAAK,OAAO;AAC5B,WAAK,iBAAiB,KAAK,IAAI,SACzB,KAAK,OAAO,iBACZ;AACN,WAAK,iBAAiB,KAAK,iBACrB,KAAK,eAAe,YACpB,CAAC;AACP,WAAK,OAAO;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AACA,WAAK,kBAAkB,KAAK,OAAO,mBAAmB;AACtD,WAAK,OAAO,KAAK,iBACX,IAAI,cAAc;AAAA,QACd,KAAK;AAAA,QACL;AAAA,MACJ,IACA,IAAI,cAAc,yBAAyB,KAAK,UAAU,MAAM;AAAA,IAC1E;AAAA,IACA,uBAAuB,OAAO;AAC1B,UAAI,CAAC,KAAK;AAAgB,eAAO;AACjC,YAAM,KAAK;AAEX,iBAAW,OAAO,KAAK,MAAM;AACzB,aAAK,IAAI,mBAAmB,KAAK,gBAAgB,KAAK;AAAA,UAClD,KAAK,MAAM;AACP,mBAAO,MAAM,GAAG,KAAK,IAAI,KAAK,KAAK,QAAQ,CAAC,EAAE,GAAG;AAAA,UACrD;AAAA,QACJ,CAAC;AAAA,MACL;AAEA,aAAO;AAAA,IACX;AAAA,IACA,QAAQ,OAAO,MAAM;AACjB,YAAM,YAAY,CAAC;AACnB,YAAM,OAAO;AAEb,iBAAW,OAAO,KAAK,MAAM;AACzB,aAAK,IAAI,cAAc,eAAe,WAAW,KAAK;AAAA,UAClD,MAAM;AACF,mBAAO,MAAM,KAAK,KAAK,IAAI,KAAK,KAAK,QAAQ,CAAC,EAAE,GAAG;AAAA,UACvD;AAAA,UACA,KACI,QAAQ,WACF,SAAU,KAAK;AACX,oBAAQ,KAAK;AAAA,cACT,KAAK;AACD,qBAAK,SAAS,OAAO,KAAK,GAAG;AAC7B;AAAA,cACJ,KAAK;AACD,qBAAK;AAAA,kBACD;AAAA,kBACA,UAAU;AAAA,kBACV,IAAI,KAAK,EAAE,WAAW,GAAG,IACnB,IAAI;AAAA,oBACA,IAAI,KAAK;AAAA,oBACT,UAAU;AAAA,kBACd,EAAE,OACF,IAAI;AAAA,oBACA,MAAM,IAAI,KAAK;AAAA,oBACf,UAAU;AAAA,kBACd,EAAE;AAAA,kBACR;AAAA,gBACJ;AACA;AAAA,cACJ;AACI;AACI,wBAAM,MAAM,IAAI,IAAI,UAAU,IAAI;AAClC,sBAAI,GAAG,IAAI;AACX,uBAAK,SAAS,OAAO,KAAK,IAAI,IAAI;AAAA,gBACtC;AACA;AAAA,YACR;AAAA,UACJ,IACA;AAAA,UACV,cAAc;AAAA,UACd,YAAY;AAAA,QAChB,CAAC;AAAA,MACL;AAEA,UAAI,YAAY,KAAK,UAAU;AAC3B,aAAK,IAAI,cAAc,eAAe,WAAW,UAAU;AAAA,UACvD,OAAO,KAAK,IAAI;AAAA,YACZ,KAAK;AAAA,YACL;AAAA,YACA,CAAC,QAAQC,UAAS;AACd,qBAAO,OAAO;AAAA,gBACVA,UAAS,YAAY,KAAK,WAAWA;AAAA,cACzC;AAAA,YACJ;AAAA,UACJ;AAAA,UACA,UAAU;AAAA,UACV,YAAY;AAAA,QAChB,CAAC;AAAA,MACL;AAEA,UAAI,aAAa,KAAK,UAAU;AAC5B,aAAK,IAAI,cAAc,eAAe,WAAW,WAAW;AAAA,UACxD,OAAO,KAAK,IAAI;AAAA,YACZ,KAAK;AAAA,YACL;AAAA,YACA,CAAC,QAAQA,OAAM,SAAS;AACpB,kBAAI,CAAC,KAAK,UAAUA,UAAS;AACzB,uBAAO,KAAKA,KAAI;AACpB,cAAAA,QAAO,KAAK;AACZ,kBAAI,CAAC,KAAK,IAAI;AAEd,oBAAM,MAAM,IAAI,IAAI,OAAO,UAAU,IAAI;AACzC,qBAAO,OAAO;AAAA,gBACVA,UAAS,YAAY,KAAK,WAAWA;AAAA,gBACrC,KAAK,IAAI,IAAI;AAAA,cACjB;AAAA,YACJ;AAAA,UACJ;AAAA,UACA,UAAU;AAAA,UACV,YAAY;AAAA,QAChB,CAAC;AAAA,MACL;AAEA,UAAI,YAAY,KAAK,UAAU;AAC3B,aAAK,IAAI,cAAc,eAAe,WAAW,UAAU;AAAA,UACvD,OAAO,KAAK,IAAI;AAAA,YACZ,KAAK;AAAA,YACL;AAAA,YACA,CAAC,QAAQA,OAAM,SAAS;AACpB,kBAAI,CAAC,KAAK,UAAUA,UAAS;AACzB,uBAAO,KAAKA,KAAI;AACpB,cAAAA,QAAO,KAAK;AACZ,kBAAI,CAAC,KAAK,IAAI;AAEd,oBAAM,MAAM,IAAI,IAAI,OAAO,UAAU,IAAI;AACzC,qBAAO,OAAO;AAAA,gBACVA,UAAS,YAAY,KAAK,WAAWA;AAAA,gBACrC,KAAK,IAAI,IAAI;AAAA,cACjB;AAAA,YACJ;AAAA,UACJ;AAAA,UACA,UAAU;AAAA,UACV,YAAY;AAAA,QAChB,CAAC;AAAA,MACL;AAEA,UAAI,qBAAqB,KAAK,UAAU;AACpC,aAAK,IAAI,cAAc;AAAA,UACnB;AAAA,UACA;AAAA,UACA;AAAA,YACI,MAAM;AACF,oBAAM,MAAM,CAAC;AACb,kBAAI,KAAK,OAAO;AACZ,qBAAK,IAAI,cAAc;AAAA,kBACnB;AAAA,kBACA,KAAK,OAAO,cAAc;AAAA,gBAC9B;AACJ,qBAAO;AAAA,YACX;AAAA,YACA,KAAK;AAAA,YACL,YAAY;AAAA,UAChB;AAAA,QACJ;AAAA,MACJ;AAEA,WAAK,IAAI,cAAc,eAAe,WAAW,YAAY;AAAA,QACzD,OAAO,KAAK,IAAI,KAAK,KAAK,UAAU,YAAY,MAAM;AAClD,iBAAO,UAAU;AAAA,QACrB,CAAC;AAAA,QACD,YAAY;AAAA,QACZ,UAAU;AAAA,MACd,CAAC;AAED,WAAK,IAAI,cAAc,eAAe,WAAW,OAAO,aAAa;AAAA,QACjE,OAAO,MAAM,UAAU;AAAA,QACvB,UAAU;AAAA,QACV,YAAY;AAAA,MAChB,CAAC;AAED,UAAI,KAAK,IAAI,OAAO;AAChB,aAAK,IAAI,cAAc;AAAA,UACnB;AAAA,UACA,KAAK,IAAI,OAAO,SAAS;AAAA,QAC7B;AAEJ,aAAO;AAAA,IACX;AAAA,EACJ;AAEA,MAAO,mBAAQ;;;AChNf,MAAAC,kBAAyB;AAOzB,MAAM,aAAN,cAAyB,gBAAAC,QAAa;AAAA;AAAA;AAAA;AAAA;AAAA,IAKlC,YAAY,KAAK;AACb,YAAM;AACN,WAAK,MAAM;AACX,WAAK,SAAS,KAAK,IAAI;AACvB,WAAK,cAAc,KAAK,OAAO;AAC/B,WAAK,eAAe,KAAK,OAAO,gBAAgB,CAAC;AACjD,WAAK,cAAc,KAAK,OAAO,eAAe,CAAC;AAC/C,WAAK,UAAU,KAAK,YAAY,aAAa,CAAC;AAC9C,WAAK,gBAAgB,KAAK,QAAQ;AAClC,WAAK,eAAe,KAAK,aAAa,aAAa,CAAC;AACpD,WAAK,cAAc,IAAI,cAAc;AAAA,QACjC,KAAK;AAAA,QACL;AAAA,MACJ;AACA,WAAK,gBAAgB,IAAI,cAAc;AAAA,QACnC,KAAK;AAAA,QACL;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,sBAAsB;AAClB,WAAK,IAAI,SAAS,KAAK,QAAQ,eAAe,CAAC,QAAQ,MAAM,SAAS;AAClE,YAAI,CAAC,KAAK;AAAQ,iBAAO,OAAO,MAAM,MAAM,IAAI;AAEhD,YAAI;AACJ,YAAI;AACJ,YAAI;AAEJ,YAAI,CAAC,KAAK,IAAI,QAAQ;AAClB,WAAC,SAAS,QAAQ,WAAW,CAAC,CAAC,IAAI;AAAA,QACvC,OAAO;AACH,WAAC,SAAS,WAAW,CAAC,CAAC,IAAI;AAAA,QAC/B;AAEA,cAAM,QAAQ,IAAI;AAAA,UACd,EAAE,SAAS,QAAQ,UAAU,QAAQ,KAAK,IAAI,OAAO;AAAA,UACrD;AAAA,UACA;AAAA,QACJ;AACA,aAAK,KAAK,eAAe,KAAK;AAE9B,YAAI,MAAM;AAAa,iBAAO,MAAM;AACpC,eAAO,KAAK,IAAI,SACV,MAAM,OAAO;AAAA,UACT,MAAM;AAAA,UACN,MAAM,KAAK;AAAA,UACX,MAAM,KAAK;AAAA,QACf,IACA,MAAM,OAAO;AAAA,UACT,MAAM;AAAA,UACN,MAAM,KAAK;AAAA,UACX,MAAM,KAAK;AAAA,UACX,MAAM,KAAK;AAAA,QACf;AAAA,MACV,CAAC;AAAA,IACL;AAAA,IACA,gBAAgB,KAAK,MAAM,WAAW,OAAO;AACzC,aAAO,KAAK,IAAI,KAAK,KAAK,MAAM,CAAC,QAAQ,MAAM,SAAS;AACpD,YAAI,KAAK,IAAI,SAAS,CAAC,KAAK,SAAS,IAAI;AACrC,iBAAO,OAAO,MAAM,MAAM,IAAI;AAClC,YAAI;AACJ,YAAI;AACJ,YAAI;AAEJ,YAAI,CAAC,UAAU;AACX,WAAC,SAAS,QAAQ,WAAW,CAAC,CAAC,IAAI;AAAA,QACvC,OAAO;AACH,WAAC,SAAS,WAAW,CAAC,CAAC,IAAI;AAC3B,mBAAS;AAAA,QACb;AAEA,cAAM,QAAQ,IAAI;AAAA,UACd,EAAE,SAAS,QAAQ,UAAU,QAAQ,KAAK,IAAI,OAAO;AAAA,UACrD;AAAA,UACA;AAAA,QACJ;AACA,aAAK,KAAK,eAAe,KAAK;AAE9B,YAAI,MAAM;AAAa,iBAAO,MAAM;AACpC,eAAO,WACD,MAAM,OAAO;AAAA,UACT,MAAM;AAAA,UACN,MAAM,KAAK;AAAA,UACX,MAAM,KAAK;AAAA,QACf,IACA,MAAM,OAAO;AAAA,UACT,MAAM;AAAA,UACN,MAAM,KAAK;AAAA,UACX,MAAM,KAAK;AAAA,UACX,MAAM,KAAK;AAAA,QACf;AAAA,MACV,CAAC;AAAA,IACL;AAAA,IACA,wBAAwB;AACpB,WAAK,IAAI,mBAAmB,KAAK,cAAc,UAAU;AAAA,QACrD,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,OAAO,OAAO,KAAK,IAAI,EAAE;AAAA,YAC3B;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,UAAU,KAAK;AAEzB,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,IACA,sBAAsB;AAClB,WAAK,IAAI,mBAAmB,KAAK,cAAc,QAAQ;AAAA,QACnD,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,OAAO,OAAO,KAAK,IAAI,EAAE;AAAA,YAC3B;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,QAAQ,KAAK;AAEvB,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,EACJ;AAEA,MAAO,kBAAQ;;;ACxIf,MAAAC,kBAAyB;AAOzB,MAAM,eAAN,cAA2B,gBAAAC,QAAa;AAAA;AAAA;AAAA;AAAA;AAAA,IAKpC,YAAY,KAAK;AACb,YAAM;AACN,WAAK,MAAM;AACX,WAAK,SAAS,IAAI;AAClB,WAAK,YAAY,KAAK,OAAO;AAC7B,WAAK,YAAY,KAAK,OAAO,aAAa,CAAC;AAC3C,WAAK,WAAW,KAAK,UAAU,aAAa,CAAC;AAC7C,WAAK,aAAa,KAAK,SAAS;AAAA,IACpC;AAAA,IACA,qBAAqB;AACjB,WAAK,IAAI,SAAS,KAAK,UAAU,cAAc,CAAC,QAAQ,MAAM,SAAS;AACnE,YAAI,CAAC,KAAK;AAAQ,iBAAO,OAAO,MAAM,MAAM,IAAI;AAChD,YAAI,CAAC,KAAK,OAAO,EAAE,IAAI;AAEvB,cAAM,QAAQ,IAAI,aAAU,EAAE,KAAK,KAAK,GAAG,QAAQ,IAAI;AACvD,aAAK,KAAK,cAAc,KAAK;AAE7B,YAAI,MAAM;AAAa,iBAAO,MAAM;AACpC,eAAO,MAAM,OAAO;AAAA,UAChB,MAAM;AAAA,UACN,MAAM,KAAK;AAAA,UACX,MAAM,KAAK;AAAA,QACf;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,EACJ;AAEA,MAAO,oBAAQ;;;ACvCf,MAAAC,kBAAyB;AAOzB,MAAM,UAAN,cAAsB,gBAAAC,QAAa;AAAA;AAAA;AAAA;AAAA;AAAA,IAK/B,YAAY,KAAK;AACb,YAAM;AACN,WAAK,MAAM;AACX,WAAK,SAAS,IAAI;AAClB,WAAK,SAAS,KAAK,OAAO,UAAU,CAAC;AACrC,WAAK,UAAU,KAAK,OAAO,WAAW,CAAC;AACvC,WAAK,eAAe,KAAK,QAAQ,aAAa,CAAC;AAC/C,WAAK,cAAc,KAAK,OAAO,aAAa,CAAC;AAC7C,WAAK,cAAc,KAAK,YAAY;AACpC,WAAK,YAAY,KAAK,YAAY;AAClC,WAAK,YAAY,KAAK,aAAa;AAAA,IACvC;AAAA,IACA,iBAAiB;AACb,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,CAAC,KAAK;AAAQ,mBAAO,IAAI,OAAO,GAAG,IAAI;AAC3C,cAAI,CAAC,KAAK,UAAU,CAAC,CAAC,IAAI;AAE1B,gBAAM,QAAQ,IAAI,aAAU,EAAE,KAAK,QAAQ,GAAG,QAAQ,IAAI;AAC1D,eAAK,KAAK,UAAU,KAAK;AAEzB,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,IAAI,MAAM;AAAA,YACb,GAAG,CAAC,MAAM,KAAK,KAAK,MAAM,KAAK,OAAO;AAAA,UAC1C;AAAA,QACJ;AAAA,QACA;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,oBAAoB;AAChB,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,CAAC,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AAChD,cAAI,CAAC,KAAK,UAAU,CAAC,CAAC,IAAI;AAE1B,gBAAM,QAAQ,IAAI,aAAU,EAAE,KAAK,QAAQ,GAAG,QAAQ,IAAI;AAC1D,eAAK,KAAK,aAAa,KAAK;AAE5B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO;AAAA,YAChB,MAAM;AAAA,YACN,MAAM,KAAK;AAAA,YACX,MAAM,KAAK;AAAA,UACf;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,sBAAsB;AAClB,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,CAAC,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AAChD,cAAI,CAAC,SAAS,WAAW,CAAC,CAAC,IAAI;AAE/B,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,SAAS,SAAS;AAAA,YACpB;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,eAAe,KAAK;AAE9B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO;AAAA,YAChB,MAAM;AAAA,YACN,MAAM,KAAK;AAAA,YACX,MAAM,KAAK;AAAA,UACf;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,wBAAwB;AACpB,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,YAAY;AACvB,cAAI,CAAC,QAAQ;AAAQ,mBAAO,OAAO,MAAM,MAAM,OAAO;AAEtD,gBAAM,QAAQ,IAAI,aAAU,EAAE,QAAQ,GAAG,QAAQ,IAAI;AACrD,eAAK,KAAK,iBAAiB,KAAK;AAEhC,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO,MAAM,MAAM,MAAM,MAAM,KAAK,OAAO;AAAA,QAC5D;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAEA,MAAO,iBAAQ;;;ACxGf,MAAAC,kBAAyB;AAOzB,MAAM,SAAN,cAAqB,gBAAAC,QAAa;AAAA;AAAA;AAAA;AAAA;AAAA,IAK9B,YAAY,KAAK;AACb,YAAM;AACN,WAAK,MAAM;AACX,WAAK,SAAS,KAAK,IAAI;AACvB,WAAK,MAAM,KAAK,OAAO,OAAO,CAAC;AAC/B,WAAK,kBAAkB,KAAK,IAAI;AAChC,WAAK,kBAAkB,KAAK,IAAI;AAAA,IACpC;AAAA,IACA,oBAAoB;AAChB,WAAK,IAAI,SAAS,KAAK,KAAK,mBAAmB,CAAC,QAAQ,MAAM,SAAS;AACnE,YAAI,CAAC,KAAK;AAAQ,iBAAO,OAAO,MAAM,MAAM,IAAI;AAChD,YAAI,CAAC,MAAM,IAAI;AAEf,cAAM,QAAQ,IAAI,aAAU,EAAE,OAAO,GAAG,QAAQ,IAAI;AACpD,aAAK,KAAK,mBAAmB,KAAK;AAElC,YAAI,MAAM;AAAa,iBAAO,MAAM;AACpC,eAAO,MAAM,OAAO,KAAK,MAAM,MAAM,MAAM,KAAK,MAAM;AAAA,MAC1D,CAAC;AACD,WAAK,IAAI,SAAS,KAAK,KAAK,mBAAmB,CAAC,QAAQ,MAAM,SAAS;AACnE,YAAI,CAAC,KAAK;AAAQ,iBAAO,OAAO,MAAM,MAAM,IAAI;AAChD,YAAI,CAAC,GAAG,IAAI;AAEZ,cAAM,QAAQ,IAAI,aAAU,EAAE,IAAI,GAAG,QAAQ,IAAI;AACjD,aAAK,KAAK,mBAAmB,KAAK;AAElC,YAAI,MAAM;AAAa,iBAAO,MAAM;AACpC,eAAO,MAAM,OAAO,KAAK,MAAM,MAAM,MAAM,KAAK,GAAG;AAAA,MACvD,CAAC;AAAA,IACL;AAAA,EACJ;AAEA,MAAO,cAAQ;;;AC7Bf,MAAAC,kBAAyB;;;ACfzB,MAAAC,kBAAyB;AAOzB,MAAM,aAAN,cAAyB,gBAAAC,QAAa;AAAA;AAAA;AAAA;AAAA;AAAA,IAKlC,YAAY,KAAK;AACb,YAAM;AACN,WAAK,MAAM;AACX,WAAK,SAAS,IAAI;AAClB,WAAK,eAAe,KAAK,OAAO,gBAAgB;AAChD,WAAK,iBAAiB,KAAK,OAAO,kBAAkB;AACpD,WAAK,UAAU,KAAK,OAAO,WAAW,CAAC;AACvC,WAAK,aAAa,KAAK,QAAQ,aAAa,CAAC;AAC7C,WAAK,UAAU,KAAK,WAAW,WAAW;AAC1C,WAAK,UAAU,KAAK,WAAW,WAAW;AAC1C,WAAK,aAAa,KAAK,WAAW,cAAc;AAChD,WAAK,QAAQ,KAAK,WAAW,SAAS;AACtC,WAAK,MAAM,KAAK,WAAW,OAAO;AAClC,WAAK,UAAU,CAAC,OAAO,WAAW,WAAW,cAAc,OAAO;AAClE,WAAK,WAAW,IAAI,IAAI,cAAc,IAAI;AAAA,IAC9C;AAAA,IACA,kBAAkB;AACd,WAAK,IAAI,SAAS,KAAK,YAAY,WAAW,CAAC,QAAQ,MAAM,SAAS;AAClE,YAAI,CAAC,KAAK;AACN,iBAAO,OAAO,MAAM,KAAK,SAAS,IAAI,IAAI,KAAK,MAAM,IAAI;AAC7D,YAAI,CAAC,IAAI,IAAI;AAEb,cAAM,QAAQ,IAAI;AAAA,UACd,EAAE,KAAK;AAAA,UACP;AAAA,UACA,KAAK,SAAS,IAAI,IAAI,KAAK;AAAA,QAC/B;AACA,aAAK,KAAK,WAAW,KAAK;AAE1B,YAAI,MAAM;AAAa,iBAAO,MAAM;AACpC,eAAO,MAAM,OAAO,KAAK,MAAM,MAAM,MAAM,KAAK,IAAI;AAAA,MACxD,CAAC;AACD,WAAK,IAAI,SAAS,KAAK,YAAY,WAAW,CAAC,QAAQ,MAAM,SAAS;AAClE,YAAI,IAAI,KAAK;AACT,iBAAO,OAAO,MAAM,KAAK,SAAS,IAAI,IAAI,KAAK,MAAM,IAAI;AAC7D,YAAI,CAAC,MAAM,KAAK,IAAI;AAEpB,cAAM,QAAQ,IAAI;AAAA,UACd,EAAE,MAAM,MAAM;AAAA,UACd;AAAA,UACA,KAAK,SAAS,IAAI,IAAI,KAAK;AAAA,QAC/B;AACA,aAAK,KAAK,WAAW,KAAK;AAE1B,YAAI,MAAM;AAAa,iBAAO,MAAM;AACpC,eAAO,MAAM,OAAO;AAAA,UAChB,MAAM;AAAA,UACN,MAAM,KAAK;AAAA,UACX,MAAM,KAAK;AAAA,QACf;AAAA,MACJ,CAAC;AACD,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,CAAC,KAAK;AACN,mBAAO,OAAO,MAAM,KAAK,SAAS,IAAI,IAAI,KAAK,MAAM,IAAI;AAC7D,cAAI,CAAC,IAAI,IAAI;AAEb,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,KAAK;AAAA,YACP;AAAA,YACA,KAAK,SAAS,IAAI,IAAI,KAAK;AAAA,UAC/B;AACA,eAAK,KAAK,cAAc,KAAK;AAE7B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO,KAAK,MAAM,MAAM,MAAM,KAAK,IAAI;AAAA,QACxD;AAAA,MACJ;AACA,WAAK,IAAI,SAAS,KAAK,YAAY,SAAS,CAAC,QAAQ,SAAS;AAC1D,cAAM,QAAQ,IAAI;AAAA,UACd;AAAA,UACA;AAAA,UACA,KAAK,SAAS,IAAI,IAAI,KAAK;AAAA,QAC/B;AACA,aAAK,KAAK,SAAS,KAAK;AAExB,YAAI,MAAM;AAAa,iBAAO,MAAM;AACpC,eAAO,MAAM,OAAO,KAAK,MAAM,IAAI;AAAA,MACvC,CAAC;AACD,WAAK,IAAI,SAAS,KAAK,YAAY,OAAO,CAAC,QAAQ,MAAM,SAAS;AAC9D,YAAI,CAAC,KAAK;AACN,iBAAO,OAAO,MAAM,KAAK,SAAS,IAAI,IAAI,KAAK,MAAM,IAAI;AAC7D,YAAI,CAAC,KAAK,IAAI;AAEd,cAAM,QAAQ,IAAI;AAAA,UACd,EAAE,MAAM;AAAA,UACR;AAAA,UACA,KAAK,SAAS,IAAI,IAAI,KAAK;AAAA,QAC/B;AACA,aAAK,KAAK,OAAO,KAAK;AAEtB,YAAI,MAAM;AAAa,iBAAO,MAAM;AACpC,eAAO,MAAM,OAAO,KAAK,MAAM,MAAM,MAAM,KAAK,KAAK;AAAA,MACzD,CAAC;AAAA,IACL;AAAA,IACA,iBAAiB;AACb,WAAK,IAAI,mBAAmB,KAAK,YAAY,UAAU;AAAA,QACnD,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,QAAQ,OAAO,KAAK,KAAK,SAAS,IAAI,IAAI,KAAK,IAAI,EAAE;AAAA,YACvD;AAAA,YACA,KAAK,SAAS,IAAI,IAAI,KAAK;AAAA,UAC/B;AACA,eAAK,KAAK,UAAU,KAAK;AAEzB,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,IACA,QAAQ,SAAS,MAAM,CAAC,GAAG;AACvB,WAAK,IAAI,cAAc,eAAe,KAAK,KAAK,UAAU;AAE1D,YAAM,QAAQ,IAAI,KAAK,IAAI,OAAO,MAAM,KAAK;AAAA,QACzC,KAAK,CAAC,QAAQ,SAAS;AACnB,cAAI,QAAQ,KAAK,cAAc,OAAO,SAAS;AAC3C,mBAAO,QAAQ,IAAI;AAEvB,gBAAM,QAAQ,IAAI,aAAU,EAAE,MAAM,KAAK,GAAG,MAAM,OAAO;AACzD,eAAK,KAAK,OAAO,KAAK;AAEtB,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,QAAQ,MAAM,KAAK,IAAI;AAAA,QAClC;AAAA,QACA,KAAK,CAAC,QAAQ,MAAM,UAAU;AAC1B,cAAI,QAAQ,KAAK,cAAc,OAAO,SAAS;AAC3C,mBAAQ,QAAQ,IAAI,IAAI;AAE5B,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,MAAM,MAAM,MAAM;AAAA,YACpB;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,OAAO,KAAK;AAEtB,cAAI,MAAM;AAAa,mBAAO,MAAM;AAEpC,iBAAQ,QAAQ,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK;AAAA,QAClD;AAAA,QACA,gBAAgB,CAAC,QAAQ,SAAS;AAC9B,cAAI,OAAO,SAAS;AAAU,mBAAO,OAAO,QAAQ,IAAI;AAExD,gBAAM,QAAQ,IAAI,aAAU,EAAE,MAAM,KAAK,GAAG,MAAM,OAAO;AACzD,eAAK,KAAK,UAAU,KAAK;AAEzB,cAAI,MAAM;AAAa,mBAAO,MAAM;AAEpC,iBAAO,OAAO,QAAQ,MAAM,KAAK,IAAI;AAAA,QACzC;AAAA,MACJ,CAAC;AAED,WAAK,SAAS,IAAI,OAAO,OAAO;AAChC,WAAK,IAAI,cAAc,eAAe,OAAO,KAAK,UAAU;AAE5D,aAAO;AAAA,IACX;AAAA,EACJ;AAEA,MAAO,kBAAQ;;;AC5Kf,MAAAC,kBAAyB;AAOzB,MAAM,WAAN,cAAuB,gBAAAC,QAAa;AAAA;AAAA;AAAA;AAAA;AAAA,IAKhC,YAAY,KAAK;AACb,YAAM;AACN,WAAK,MAAM;AACX,WAAK,SAAS,IAAI;AAClB,WAAK,sBAAsB,KAAK,OAAO,uBAAuB,CAAC;AAC/D,WAAK,gBAAgB,KAAK,oBAAoB,aAAa,CAAC;AAC5D,WAAK,mBAAmB,KAAK,cAAc,oBAAoB;AAC/D,WAAK,cAAc,KAAK,cAAc,eAAe;AACrD,WAAK,UACD,IAAI,cAAc;AAAA,QACd,KAAK;AAAA,QACL;AAAA,MACJ;AACJ,WAAK,WAAW;AAAA,QACZ;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AACA,WAAK,iBAAiB;AAAA,QAClB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AACA,WAAK,eAAe;AAAA,QAChB,YAAY;AAAA,QACZ,iBAAiB;AAAA,QACjB,aAAa;AAAA,QACb,mBAAmB;AAAA,QACnB,WAAW;AAAA,QACX,gBAAgB;AAAA,QAChB,QAAQ;AAAA,MACZ;AAAA,IACJ;AAAA,IACA,yBAAyB;AACrB,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,CAAC,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AAEhD,cAAI,CAAC,QAAQ,IAAI;AAEjB,gBAAM,QAAQ,IAAI,aAAU,EAAE,SAAS,GAAG,QAAQ,IAAI;AACtD,eAAK,KAAK,oBAAoB,KAAK;AAEnC,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO,KAAK,MAAM,MAAM,MAAM,KAAK,QAAQ;AAAA,QAC5D;AAAA,MACJ;AACA,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,IAAI,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AACnD,cAAI,CAAC,UAAU,KAAK,IAAI;AAExB,gBAAM,QAAQ,IAAI,aAAU,EAAE,UAAU,MAAM,GAAG,QAAQ,IAAI;AAC7D,eAAK,KAAK,eAAe,KAAK;AAE9B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO;AAAA,YAChB,MAAM;AAAA,YACN,MAAM,KAAK;AAAA,YACX,MAAM,KAAK;AAAA,UACf;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,kBAAkB;AACd,WAAK,IAAI,mBAAmB,KAAK,eAAe,WAAW;AAAA,QACvD,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,OAAO,OAAO,KAAK,IAAI,EAAE;AAAA,YAC3B;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,cAAc,KAAK;AAE7B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,QACA,KAAK,CAAC,QAAQ,MAAM,CAAC,GAAG,MAAM;AAC1B,gBAAM,QAAQ,IAAI,aAAU,EAAE,OAAO,IAAI,GAAG,QAAQ,IAAI;AACxD,eAAK,KAAK,cAAc,KAAK;AAE7B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO,KAAK,MAAM,MAAM,MAAM,KAAK,KAAK;AAAA,QACzD;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,EACJ;AAEA,MAAO,gBAAQ;;;AChHf,MAAAC,kBAAyB;AAOzB,MAAM,SAAN,cAAqB,gBAAAC,QAAa;AAAA;AAAA;AAAA;AAAA;AAAA,IAK9B,YAAY,KAAK;AACb,YAAM;AACN,WAAK,MAAM;AACX,WAAK,SAAS,KAAK,IAAI;AACvB,WAAK,cAAc,KAAK,OAAO,eAAe,CAAC;AAC/C,WAAK,mBAAmB,KAAK,YAAY,aAAa,CAAC;AACvD,WAAK,aAAa,KAAK,OAAO,cAAc,CAAC;AAC7C,WAAK,kBAAkB,KAAK,WAAW,aAAa,CAAC;AACrD,WAAK,OAAO,KAAK,gBAAgB;AAAA,IACrC;AAAA,IACA,eAAe;AACX,WAAK,IAAI;AAAA,QACL,KAAK,WAAW;AAAA,QAChB;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,CAAC,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AAEhD,cAAI,CAAC,KAAK;AAAQ,mBAAO,OAAO,MAAM,MAAM,IAAI;AAChD,gBAAM,CAAC,MAAM,OAAO,IAAI;AAExB,gBAAM,QAAQ,IAAI,aAAU,EAAE,MAAM,QAAQ,GAAG,QAAQ,IAAI;AAC3D,eAAK,KAAK,kBAAkB,KAAK;AAEjC,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,OAAO;AAAA,YAChB,MAAM;AAAA,YACN,MAAM,KAAK;AAAA,YACX,MAAM,KAAK;AAAA,UACf;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,eAAe;AACX,WAAK,IAAI,mBAAmB,KAAK,kBAAkB,QAAQ;AAAA,QACvD,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,OAAO,OAAO,KAAK,IAAI,EAAE;AAAA,YAC3B;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,kBAAkB,KAAK;AAEjC,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,EACJ;AAEA,MAAO,cAAQ;;;AC7Df,MAAAC,kBAAyB;AAOzB,MAAM,eAAN,cAA2B,gBAAAC,QAAa;AAAA;AAAA;AAAA;AAAA;AAAA,IAKpC,YAAY,KAAK;AACb,YAAM;AACN,WAAK,MAAM;AACX,WAAK,SAAS,IAAI;AAClB,WAAK,YAAY,KAAK,OAAO,aAAa,CAAC;AAC3C,WAAK,UAAU,KAAK,UAAU,aAAa,CAAC;AAC5C,WAAK,MAAM,IAAI,cAAc;AAAA,QACzB,KAAK;AAAA,QACL;AAAA,MACJ;AACA,WAAK,WAAW,IAAI,cAAc;AAAA,QAC9B,KAAK;AAAA,QACL;AAAA,MACJ;AACA,WAAK,aAAa,IAAI,cAAc;AAAA,QAChC,KAAK;AAAA,QACL;AAAA,MACJ;AACA,WAAK,OAAO,KAAK,QAAQ;AACzB,WAAK,aAAa,UAAU;AAC5B,WAAK,OAAO,UAAU;AACtB,WAAK,UAAU,UAAU;AACzB,WAAK,SAAS,UAAU;AAAA,IAC5B;AAAA,IACA,oBAAoB;AAChB,WAAK,IAAI;AAAA,QACL,KAAK;AAAA,QACL;AAAA,QACA,CAAC,QAAQ,MAAM,SAAS;AACpB,cAAI,CAAC,KAAK;AAAQ,mBAAO,IAAI,OAAO,GAAG,IAAI;AAG3C,gBAAM,QAAQ,IAAI,aAAU,EAAE,KAAK,GAAG,QAAQ,IAAI;AAClD,eAAK,KAAK,aAAa,KAAK;AAE5B,cAAI,MAAM;AAAa,mBAAO,MAAM;AACpC,iBAAO,IAAI,MAAM,OAAO,MAAM,KAAK,KAAK,MAAM,KAAK,SAAS;AAAA,QAChE;AAAA,QACA;AAAA,MACJ;AAEA,WAAK,OAAO,UAAU,aAAa,KAAK;AACxC,WAAK,OAAO,UAAU,OAAO,KAAK;AAClC,WAAK,OAAO,UAAU,UAAU,KAAK;AACrC,WAAK,OAAO,UAAU,SAAS,KAAK;AAAA,IACxC;AAAA,IACA,cAAc;AACV,WAAK,IAAI,mBAAmB,KAAK,SAAS,OAAO;AAAA,QAC7C,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,OAAO,OAAO,KAAK,IAAI,EAAE;AAAA,YAC3B;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,OAAO,KAAK;AACtB,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,IACA,mBAAmB;AACf,WAAK,IAAI,mBAAmB,KAAK,SAAS,YAAY;AAAA,QAClD,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,OAAO,OAAO,KAAK,IAAI,EAAE;AAAA,YAC3B;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,YAAY,KAAK;AAC3B,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,IACA,qBAAqB;AACjB,WAAK,IAAI,mBAAmB,KAAK,SAAS,cAAc;AAAA,QACpD,KAAK,CAAC,QAAQ,SAAS;AACnB,gBAAM,QAAQ,IAAI;AAAA,YACd,EAAE,OAAO,OAAO,KAAK,IAAI,EAAE;AAAA,YAC3B;AAAA,YACA;AAAA,UACJ;AACA,eAAK,KAAK,cAAc,KAAK;AAC7B,iBAAO,MAAM,KAAK;AAAA,QACtB;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,IACA,eAAe;AACX,WAAK,IAAI,SAAS,KAAK,SAAS,QAAQ,CAAC,QAAQ,MAAM,SAAS;AAC5D,cAAM,QAAQ,IAAI,aAAU,EAAE,KAAK,GAAG,QAAQ,IAAI;AAClD,aAAK,KAAK,QAAQ,KAAK;AACvB,YAAI,MAAM;AAAa,iBAAO,MAAM;AACpC,eAAO,MAAM,OAAO,KAAK,MAAM,MAAM,MAAM,KAAK,IAAI;AAAA,MACxD,CAAC;AAAA,IACL;AAAA,EACJ;AAEA,MAAO,oBAAQ;;;AJ3Ef,MAAM,WAAN,cAAuB,gBAAAC,QAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOhC,YAAY,SAAS,MAAM,YAAY,SAAS,CAAC,OAAO,QAAQ;AAC5D,YAAM;AAIN,WAAK,SAAS;AACd,WAAK,gBAAgB;AAAA,QACjB,YAAY,KAAK,OAAO,SAAS,UAAU;AAAA,QAC3C,gBAAgB,KAAK,OAAO,OAAO;AAAA,QACnC,0BACI,KAAK,OAAO,OAAO;AAAA,QACvB,2BACI,KAAK,OAAO,OAAO;AAAA,QACvB,qBAAqB,KAAK,OAAO,OAAO;AAAA,QACxC,MAAM,KAAK,OAAO,OAAO;AAAA,QACzB,uBAAuB,KAAK,OAAO,OAAO;AAAA,QAC1C,SAAS,KAAK,OAAO,MAAM;AAAA,QAC3B,gBAAgB,KAAK,OAAO,OAAO;AAAA,QACnC,cAAc,KAAK,OAAO,OAAO;AAAA,QACjC,KAAK,KAAK,OAAO;AAAA,QACjB,OAAO,KAAK,OAAO;AAAA,MACvB;AACA,WAAK,SAAS;AACd,WAAK,aAAa;AAClB,WAAK,QAAQ,IAAI,cAAM,IAAI;AAC3B,WAAK,MAAM,IAAI,YAAI,IAAI;AACvB,WAAK,MAAM,IAAI,YAAO,IAAI;AAC1B,WAAK,UAAU,IAAI,gBAAQ,IAAI;AAC/B,WAAK,UAAU,IAAI,gBAAW,IAAI;AAClC,WAAK,OAAO,IAAI,aAAQ,IAAI;AAC5B,WAAK,WAAW,IAAI,iBAAa,IAAI;AACrC,WAAK,WAAW,IAAI,iBAAa,IAAI;AACrC,WAAK,SAAS,IAAI,eAAW,IAAI;AACjC,WAAK,YAAY,IAAI,kBAAa,IAAI;AACtC,WAAK,UAAU,IAAI,gBAAW,IAAI;AAClC,WAAK,YAAY,IAAI,kBAAa,IAAI;AACtC,WAAK,cAAc,IAAI,oBAAe,IAAI;AAC1C,WAAK,YAAY,IAAI,aAAQ,IAAI;AACjC,WAAK,MAAM,IAAI,YAAO,IAAI;AAC1B,WAAK,UAAU,IAAI,eAAQ,IAAI;AAC/B,WAAK,WAAW,IAAI,iBAAY,IAAI;AACpC,WAAK,UAAU,IAAI,gBAAW,IAAI;AAClC,WAAK,QAAQ,IAAI,cAAS,IAAI;AAAA,IAClC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,SAAS,KAAK,MAAM,SAAS,WAAW;AAEpC,YAAM,UAAU,KAAK,KAAK,KAAK,MAAM,SAAS,SAAS;AACvD,UAAI,IAAI,IAAI;AACZ,aAAO;AAAA,IACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,mBAAmB,KAAK,MAAM,UAAU,CAAC,GAAG;AACxC,YAAM,UAAU,KAAK,eAAe,KAAK,MAAM,OAAO;AACtD,UAAI,CAAC;AAAS,eAAO,CAAC;AACtB,WAAK,cAAc,eAAe,KAAK,MAAM,OAAO;AACpD,aAAO;AAAA,IACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAWA,KAAK,KAAK,MAAM,MAAM,YAAY,OAAO;AACrC,YAAM,KAAK,IAAI,IAAI;AACnB,UAAI,CAAC;AAAI,eAAO;AAChB,YAAM,UACF,eAAe,KACT,SAAS,SAAS;AACd,eAAO,KAAK,IAAI,MAAM,CAAC,GAAG,SAAS,CAAC;AAAA,MACxC,IACA;AAAA,QACI,SAAS;AACL,iBAAO,KAAK,IAAI,MAAM,CAAC,GAAG,SAAS,CAAC;AAAA,QACxC;AAAA,MACJ,EAAE;AAEZ,UAAI,WAAW;AACX,gBAAQ,YAAY,GAAG;AACvB,gBAAQ,UAAU,cAAc;AAAA,MACpC;AAEA,WAAK,KAAK,QAAQ,IAAI,SAAS,SAAS;AAExC,aAAO;AAAA,IACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,eAAe,KAAK,MAAM,UAAU,CAAC,GAAG;AACpC,YAAM,aAAa,KAAK,cAAc;AAAA,QAClC;AAAA,QACA;AAAA,MACJ;AACA,UAAI,CAAC;AAAY,eAAO;AACxB,eAAS,OAAO,SAAS;AACrB,YAAI,OAAO,YAAY;AACnB,cAAI,QAAQ,SAAS,QAAQ,OAAO;AAChC,uBAAW,GAAG,IAAI,KAAK,KAAK,YAAY,KAAK,QAAQ,GAAG,CAAC;AAAA,UAC7D,OAAO;AACH,uBAAW,GAAG,IACV,OAAO,QAAQ,GAAG,KAAK,aACjB,QAAQ,GAAG,EAAE,WAAW,GAAG,CAAC,IAC5B,QAAQ,GAAG;AAAA,UACzB;AAAA,QACJ;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAAA,EACJ;AAEA,MAAO,iBAAQ;AACf,MAAI,OAAO,SAAS;AAAU,SAAK,WAAW;",
  "names": ["ReflectApply", "ReflectOwnKeys", "NumberIsNaN", "EventEmitter", "once", "EventEmitter", "import_events", "EventEmitter", "import_events", "EventEmitter", "import_events", "EventEmitter", "import_events", "EventEmitter", "import_events", "EventEmitter", "import_events", "EventEmitter", "import_events", "EventEmitter", "import_events", "EventEmitter", "import_events", "EventEmitter", "import_events", "EventEmitter", "that", "import_events", "EventEmitter", "import_events", "EventEmitter", "import_events", "EventEmitter", "import_events", "EventEmitter", "import_events", "import_events", "EventEmitter", "import_events", "EventEmitter", "import_events", "EventEmitter", "import_events", "EventEmitter", "EventEmitter"]
}
